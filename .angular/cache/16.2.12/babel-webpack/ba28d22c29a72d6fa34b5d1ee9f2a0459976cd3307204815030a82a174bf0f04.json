{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { Memo } from '../../memomodal/memo.model';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/service/memo.service\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"../../service/shared.service\";\nimport * as i7 from \"@angular/platform-browser\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"ngx-summernote\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/core\";\nimport * as i15 from \"@angular/material/autocomplete\";\nimport * as i16 from \"@angular/material/chips\";\nconst _c0 = [\"categoryInput\"];\nconst _c1 = [\"subcategoryInput\"];\nconst _c2 = [\"employeeToInput\"];\nconst _c3 = [\"employeeBToInput\"];\nconst _c4 = [\"autoto\"];\nconst _c5 = [\"autobto\"];\nconst _c6 = [\"employeeccInput\"];\nconst _c7 = [\"autocc\"];\nconst _c8 = [\"employeeApproverInput\"];\nconst _c9 = [\"autoapprover\"];\nconst _c10 = [\"employeeDeptInput\"];\nconst _c11 = [\"autodept\"];\nconst _c12 = [\"takeInput\"];\nconst _c13 = [\"employeeRecommenderInput\"];\nfunction MemoForwardComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoForwardComponent_ng_container_18_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r36 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r36);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r36.name, \" \");\n  }\n}\nfunction MemoForwardComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoForwardComponent_ng_container_18_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.senderListData);\n  }\n}\nfunction MemoForwardComponent_tr_26_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_tr_26_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r44);\n      const employeedept_r42 = restoredCtx.$implicit;\n      const ctx_r43 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r43.removeEmployeeDept(employeedept_r42));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeedept_r42 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeedept_r42.name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_26_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeedept_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeedept_r45);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeedept_r45.name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To Department\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 62);\n    i0.ɵɵtemplate(8, MemoForwardComponent_tr_26_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 64);\n    i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_tr_26_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.employeeDeptSelected($event));\n    })(\"opened\", function MemoForwardComponent_tr_26_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.autocompleteDeptScroll());\n    });\n    i0.ɵɵtemplate(13, MemoForwardComponent_tr_26_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r37 = i0.ɵɵreference(7);\n    const _r40 = i0.ɵɵreference(12);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.chipSelectedEmployeeDept);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.employeeDeptControl)(\"matAutocomplete\", _r40)(\"matChipInputFor\", _r37)(\"matChipInputSeparatorKeyCodes\", ctx_r4.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.departmentList);\n  }\n}\nfunction MemoForwardComponent_tr_27_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_tr_27_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r56);\n      const employeeto_r54 = restoredCtx.$implicit;\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r55.removeEmployeeTo(employeeto_r54));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeto_r54 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeto_r54.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_27_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r57 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r57);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r57.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 67);\n    i0.ɵɵtemplate(8, MemoForwardComponent_tr_27_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 68);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 69);\n    i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_tr_27_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r58 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r58.employeeToSelected($event));\n    })(\"opened\", function MemoForwardComponent_tr_27_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r60 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r60.autocompleteToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoForwardComponent_tr_27_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r49 = i0.ɵɵreference(7);\n    const _r52 = i0.ɵɵreference(12);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.chipSelectedEmployeeTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.to_emp)(\"matAutocomplete\", _r52)(\"matChipInputFor\", _r49)(\"matChipInputSeparatorKeyCodes\", ctx_r5.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.allEmployeeList);\n  }\n}\nfunction MemoForwardComponent_tr_28_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r68 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_tr_28_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r68);\n      const employeebto_r66 = restoredCtx.$implicit;\n      const ctx_r67 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r67.removeEmployeeBTo(employeebto_r66));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeebto_r66 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeebto_r66.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_28_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r69 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r69);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r69.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"BTo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 70);\n    i0.ɵɵtemplate(8, MemoForwardComponent_tr_28_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 71);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 72);\n    i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_tr_28_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r70.employeeBToSelected($event));\n    })(\"opened\", function MemoForwardComponent_tr_28_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r72 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r72.autocompleteBToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoForwardComponent_tr_28_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r61 = i0.ɵɵreference(7);\n    const _r64 = i0.ɵɵreference(12);\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.chipSelectedEmployeeBTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.bto_emp)(\"matAutocomplete\", _r64)(\"matChipInputFor\", _r61)(\"matChipInputSeparatorKeyCodes\", ctx_r6.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.allEmployeeList);\n  }\n}\nfunction MemoForwardComponent_tr_29_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r80 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_tr_29_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r80);\n      const employeecc_r78 = restoredCtx.$implicit;\n      const ctx_r79 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r79.removeEmployeeCC(employeecc_r78));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeecc_r78 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeecc_r78.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_29_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r81 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r81);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r81.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r83 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"CC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 73);\n    i0.ɵɵtemplate(8, MemoForwardComponent_tr_29_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 74);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 75);\n    i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_tr_29_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r83);\n      const ctx_r82 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r82.employeeccSelected($event));\n    })(\"opened\", function MemoForwardComponent_tr_29_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r83);\n      const ctx_r84 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r84.autocompleteCCScroll());\n    });\n    i0.ɵɵtemplate(13, MemoForwardComponent_tr_29_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r73 = i0.ɵɵreference(7);\n    const _r76 = i0.ɵɵreference(12);\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.chipSelectedEmployeeCC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r7.employeeccControl)(\"matAutocomplete\", _r76)(\"matChipInputFor\", _r73)(\"matChipInputSeparatorKeyCodes\", ctx_r7.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.allEmployeeList);\n  }\n}\nfunction MemoForwardComponent_td_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Signee\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoForwardComponent_td_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Approver\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoForwardComponent_mat_chip_row_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_mat_chip_row_37_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r87);\n      const employeeapprover_r85 = restoredCtx.$implicit;\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.removeEmployeeApprover(employeeapprover_r85));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeapprover_r85 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeapprover_r85.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r88 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r88);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r88.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_mat_chip_row_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r91 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoForwardComponent_mat_chip_row_51_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r91);\n      const employeerecommender_r89 = restoredCtx.$implicit;\n      const ctx_r90 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r90.removeEmployeeRecommender(employeerecommender_r89));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeerecommender_r89 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeerecommender_r89.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_mat_option_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r92 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r92);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r92.full_name, \" \");\n  }\n}\nfunction MemoForwardComponent_mat_option_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoForwardComponent_ng_container_77_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r96 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 77);\n    i0.ɵɵlistener(\"onSelectionChange\", function MemoForwardComponent_ng_container_77_mat_option_1_Template_mat_option_onSelectionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r96);\n      const ctx_r95 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r95.OnCategoryChange($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r94 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r94);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", cat_r94.name, \" \");\n  }\n}\nfunction MemoForwardComponent_ng_container_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoForwardComponent_ng_container_77_mat_option_1_Template, 2, 2, \"mat-option\", 76);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.categoryList);\n  }\n}\nfunction MemoForwardComponent_mat_option_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoForwardComponent_ng_container_85_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sub_r98 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sub_r98);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", sub_r98.name, \" \");\n  }\n}\nfunction MemoForwardComponent_ng_container_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoForwardComponent_ng_container_85_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r27.sub_categoryList);\n  }\n}\nfunction MemoForwardComponent_mat_option_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoForwardComponent_ng_container_93_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r100 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r100);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r100.name, \" \");\n  }\n}\nfunction MemoForwardComponent_ng_container_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoForwardComponent_ng_container_93_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r31.priorityList);\n  }\n}\nfunction MemoForwardComponent_span_107_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r104 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 78);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 79)(3, \"mat-icon\", 80);\n    i0.ɵɵlistener(\"click\", function MemoForwardComponent_span_107_Template_mat_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r104);\n      const upload_r101 = restoredCtx.$implicit;\n      const i_r102 = restoredCtx.index;\n      const ctx_r103 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r103.deleteUpload(upload_r101, i_r102));\n    });\n    i0.ɵɵtext(4, \" delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const upload_r101 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", upload_r101, \" \");\n  }\n}\nfunction MemoForwardComponent_div_147_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 81);\n    i0.ɵɵelement(1, \"img\", 82);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r34.jpgUrls, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class MemoForwardComponent {\n  formBuilder;\n  dataService;\n  router;\n  memoService;\n  toastr;\n  sharedService;\n  sanitizer;\n  route;\n  forwardForm;\n  // html: string;\n  config = {\n    airMode: false,\n    tabDisable: true,\n    popover: {\n      table: [['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']], ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]],\n      link: [['link', ['linkDialogShow', 'unlink']]],\n      air: [['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']]]\n    },\n    height: '200px',\n    // uploadImagePath: '/api/upload',\n    toolbar: [['misc', ['codeview', 'undo', 'redo', 'codeBlock']], ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']], ['fontsize', ['fontname', 'fontsize', 'color']], ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']], ['insert', ['table', 'picture', 'link', 'hr']]],\n    codeviewFilter: true,\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\n    codeviewIframeFilter: true\n  };\n  editorDisabled = false;\n  // get sanitizedHtml() {\n  //   return this.sanitizer.bypassSecurityTrustHtml(this.forwardForm.get('html').value);\n  // }\n  isLoading = false;\n  contentName;\n  separatorKeysCodes = [ENTER, COMMA];\n  allEmployeeList;\n  departmentList;\n  chipSelectedEmployeeTo = [];\n  chipSelectedEmployeeToid = [];\n  to_emp = new FormControl();\n  chipSelectedEmployeeBTo = [];\n  chipSelectedEmployeeBToid = [];\n  bto_emp = new FormControl();\n  chipSelectedEmployeeCC = [];\n  chipSelectedEmployeeCCid = [];\n  employeeccControl = new FormControl();\n  // public chipSelectedDeptid = [];\n  allEmployeeApprover;\n  chipSelectedEmployeeApprover = [];\n  chipSelectedEmployeeApproverid = [];\n  employeeApproverControl = new FormControl();\n  Confidential = false;\n  memoFrom_rf;\n  images = [];\n  source_id;\n  has_next = true;\n  has_previous = true;\n  currentpage = 1;\n  isSender;\n  categoryInput;\n  subcategoryInput;\n  employeeToInput;\n  employeeBToInput;\n  matToAutocomplete;\n  matBToAutocomplete;\n  employeeccInput;\n  matAutocompleteCC;\n  employeeApproverInput;\n  matAutocompleteApp;\n  employeeDeptInput;\n  matAutocompleteDept;\n  // @ViewChild('htmlInput') htmlInput:any;\n  autocompleteTrigger;\n  // departmentID: any;\n  categoryID;\n  // to_dept = new FormControl();\n  datas = [];\n  senderListData = [];\n  categoryList = [];\n  sub_categoryList = [];\n  toListData;\n  chipSelectedEmployeeDept = [];\n  chipSelectedEmployeeDeptid = [];\n  employeeDeptControl = new FormControl();\n  // departmentList: Array<any>;\n  priorityList;\n  rdoIOMnfa;\n  idValue;\n  pdfUrls;\n  jpgUrls;\n  refId;\n  uploadList = [];\n  InputVar;\n  // documentList: any;\n  employeeRecommenderControl = new FormControl();\n  chipSelectedRecommender = [];\n  employeeRecommenderInput;\n  chipSelectedRecommenderId = [];\n  constructor(formBuilder, dataService, router, memoService, toastr, sharedService, sanitizer, route) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.memoService = memoService;\n    this.toastr = toastr;\n    this.sharedService = sharedService;\n    this.sanitizer = sanitizer;\n    this.route = route;\n  }\n  ngOnInit() {\n    this.forwardForm = this.formBuilder.group({\n      subject: ['', Validators.required],\n      sender: ['', Validators.required],\n      manual_reference: [''],\n      watermarktext: [''],\n      to_emp: [''],\n      bto_emp: [''],\n      to_dept: [''],\n      approver: [''],\n      cc: [''],\n      category: [''],\n      sub_category: [''],\n      priority: [''],\n      images: ['']\n    });\n    this.route.queryParams.subscribe(params => {\n      this.memoFrom_rf = params.memofrom_rf;\n    });\n    this.forwardForm.get('category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getCategory_Dept(value, this.forwardForm.value.sender.id).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.categoryList = datas;\n      this.subcategoryInput.nativeElement.value = '';\n    });\n    this.forwardForm.get('sub_category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getSubCategory1(value, this.categoryID).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.sub_categoryList = datas;\n    });\n    if (this.to_emp !== null) {\n      this.to_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.bto_emp !== null) {\n      this.bto_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeccControl !== null) {\n      this.employeeccControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.allEmployeeList = datas;\n        let datapagination = results[\"pagination\"];\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeApproverControl !== null) {\n      this.employeeApproverControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.allEmployeeList = datas;\n        let datapagination = results[\"pagination\"];\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeDeptControl !== null) {\n      this.employeeDeptControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.getDepartmentPage(value, 1, '').pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.departmentList = datas;\n        let todeptlist = datas;\n        const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\");\n        if (index !== -1) {\n          todeptlist.splice(index, 1);\n        }\n        if (this.departmentList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n      if (this.employeeRecommenderControl !== null) {\n        this.employeeRecommenderControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n          this.isLoading = true;\n        }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n          this.isLoading = false;\n        })))).subscribe(results => {\n          let datas = results[\"data\"];\n          let datapagination = results[\"pagination\"];\n          this.allEmployeeList = datas;\n          if (this.allEmployeeList.length >= 0) {\n            this.has_next = datapagination.has_next;\n            this.has_previous = datapagination.has_previous;\n            this.currentpage = datapagination.index;\n          }\n        });\n      }\n    }\n    // this.getSender();\n    this.getForwardFetchData();\n    // this.getPriority();\n  } ///end of oninit\n  enableEditor() {\n    this.editorDisabled = false;\n  }\n  disableEditor() {\n    this.editorDisabled = true;\n  }\n  onBlur() {\n    // console.log('Blur');\n  }\n  onDelete(file) {\n    // console.log('Delete file', file.url);\n  }\n  summernoteInit(event) {\n    // console.log(event);\n  }\n  autocompleteToScroll() {\n    setTimeout(() => {\n      if (this.matToAutocomplete && this.autocompleteTrigger && this.matToAutocomplete.panel) {\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeTo\n  autocompleteBToScroll() {\n    setTimeout(() => {\n      if (this.matBToAutocomplete && this.autocompleteTrigger && this.matBToAutocomplete.panel) {\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeBTo\n  autocompleteCCScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteCC && this.autocompleteTrigger && this.matAutocompleteCC.panel) {\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof autocomplete CC\n  autocompleteAppScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteApp && this.autocompleteTrigger && this.matAutocompleteApp.panel) {\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeApproval\n  autocompleteDeptScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteDept && this.autocompleteTrigger && this.matAutocompleteDept.panel) {\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '').subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.departmentList = this.departmentList.concat(datas);\n                if (this.departmentList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto matAutocompleteDept\n  // getSender() {\n  //   this.memoService.get_empTodeptMapping1('memo')\n  //     .subscribe((results: any[]) => {\n  //       let datas = results[\"data\"];\n  //       this.senderListData = datas;\n  //     })\n  // }\n  getSenderList() {\n    this.memoService.get_empTodeptMapping1('memo').subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderListData = datas;\n      const index = this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      if (index !== -1) {\n        this.senderListData.splice(index, 1);\n      }\n    });\n  }\n  getSender() {\n    this.getSenderList();\n    this.forwardForm.get('sender').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_empTodeptMapping1('memo').pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderListData = datas;\n      const index = this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      if (index !== -1) {\n        this.senderListData.splice(index, 1);\n      }\n      this.categoryInput.nativeElement.value = '';\n      this.subcategoryInput.nativeElement.value = '';\n    });\n  }\n  displayFnSender(senderValue) {\n    return senderValue ? senderValue.name : undefined;\n  }\n  get senderValue() {\n    return this.forwardForm.value.get('sender');\n  }\n  getMemoIdValue(id) {\n    id = this.sharedService.fetchData.value;\n    return id;\n  }\n  getForwardFetchData() {\n    let id = this.getMemoIdValue(this.idValue);\n    this.dataService.getFetch(id).subscribe(data => {\n      this.Confidential = data.confidential;\n      this.isSender = data.is_sender;\n      // this.uploadList = data.document_arr\n      // console.log('uplist1',this.uploadList)\n      this.source_id = data.source_id;\n      let priority = data[\"priority\"];\n      let id = priority['id'];\n      let name = priority['name'];\n      let ids = id;\n      this.forwardForm.patchValue({\n        \"priority\": priority\n      });\n      let memoClass = new Memo();\n      memoClass.subject = data['subject'];\n      memoClass.watermark_txt = data['watermark_txt'];\n      if (data['type'] === 'iom') {\n        this.rdoIOMnfa = 'Inter-Office Memo';\n        this.sharedService.Memofrom = 'IOMEMO';\n      }\n      if (data['type'] === 'nfa') {\n        this.rdoIOMnfa = 'Note for Approval';\n        this.sharedService.Memofrom = 'NFA-MEMO';\n      }\n      this.contentName = data['content'];\n      if (this.memoFrom_rf !== 'FORWARD') {\n        let senderValue = data['sender'];\n        let senderId = senderValue['id'];\n        if (senderValue['name']) {\n          let deptValues = {\n            \"name\": senderValue.name,\n            \"id\": senderId\n          };\n          this.chipSelectedEmployeeDept.push(deptValues);\n          this.chipSelectedEmployeeDeptid.push(senderId);\n        } else {\n          var sendValue = {\n            \"full_name\": senderValue.full_name,\n            \"id\": senderId\n          };\n          this.chipSelectedEmployeeTo.push(sendValue);\n          this.chipSelectedEmployeeToid.push(senderId);\n        }\n      }\n      let categoryValue = data['category'];\n      let categoryId = categoryValue['id'];\n      let categoryName = categoryValue['name'];\n      let cat = categoryId;\n      if (cat !== -1) {\n        let cats = {\n          \"name\": categoryName,\n          \"id\": categoryId\n        };\n        memoClass.category = cats;\n        this.categoryID = cat;\n        this.categoryList.push(cats);\n      }\n      let subCategoryValue = data['sub_category'];\n      let subcategoryId = subCategoryValue['id'];\n      let subcategoryName = subCategoryValue['name'];\n      let subCategory = subcategoryId;\n      if (subCategory !== -1) {\n        let subCategoryValues = {\n          \"name\": subcategoryName,\n          \"id\": subcategoryId\n        };\n        memoClass.sub_category = subCategoryValues;\n        this.sub_categoryList.push(subCategoryValues);\n      }\n      data.cc.forEach(element => {\n        this.chipSelectedEmployeeCC.push(element);\n        this.chipSelectedEmployeeCCid.push(element.id);\n      });\n      this.datas = data;\n      this.refId = data.id;\n      this.forwardForm.patchValue({\n        subject: memoClass.subject,\n        watermarktext: memoClass.watermark_txt,\n        to_emp: this.chipSelectedEmployeeToid,\n        to_dept: this.chipSelectedEmployeeDeptid,\n        approver: this.chipSelectedEmployeeApproverid,\n        category: memoClass.category,\n        sub_category: memoClass.sub_category,\n        cc: this.chipSelectedEmployeeCCid,\n        ref_id: this.refId\n      }, {\n        emitEvent: false\n      });\n      return memoClass;\n    });\n  }\n  createMemoInput() {\n    let data = this.forwardForm.controls;\n    let memoclass1 = new Memo();\n    memoclass1.confidential = this.Confidential;\n    memoclass1.priority = data.priority.value.id;\n    let orderno = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        \"id\": eachitem,\n        \"order\": orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass1.approver = finalappArray;\n    memoclass1.cc = this.chipSelectedEmployeeCCid;\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass1.subject = this.forwardForm.value.subject;\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\n      memoclass1.type = 'iom';\n    }\n    if (this.rdoIOMnfa === 'Note for Approval') {\n      memoclass1.type = 'nfa';\n    }\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\n    if (this.forwardForm.value.category === undefined) {\n      memoclass1.category = null;\n    } else {\n      memoclass1.category = this.forwardForm.value.category.id;\n    }\n    if (this.forwardForm.value.sub_category === undefined) {\n      memoclass1.sub_category = null;\n    } else {\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\n    }\n    memoclass1.content = this.contentName;\n    if (this.memoFrom_rf === 'REPLY' || this.memoFrom_rf === 'FORWARD') {\n      memoclass1.source_id = this.source_id;\n      memoclass1.source_type = this.memoFrom_rf.toLowerCase();\n    }\n    let finalrecArray = [];\n    let ordernos = 0;\n    this.chipSelectedRecommenderId.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    memoclass1.recommender = finalrecArray;\n    return memoclass1;\n  }\n  forwardMemoForm() {\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.toastr.error('Memo Add', 'Invalid From value', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n    }\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', {\n          timeOut: 1500\n        });\n        return false;\n      }\n    }\n    if (this.forwardForm.value.priority.id === undefined) {\n      this.toastr.error('Memo Add', 'Invalid Priority', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.forwardForm.value.subject === \"\") {\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.forwardForm.value.watermarktext === \"\") {\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    var answer = window.confirm(\"Save Memo?\");\n    if (answer) {\n      //some code\n    } else {\n      return false;\n    }\n    this.dataService.createForwardForm(this.createMemoInput(), this.images, this.refId).subscribe(res => {\n      let id = res.id;\n      this.sharedService.fetchData.next(id);\n      this.router.navigate([\"/ememo/memoView\"], {\n        queryParams: {\n          mid: id,\n          from: 'forward',\n          MemoView: \"YES\"\n        },\n        skipLocationChange: true\n      });\n      return true;\n    });\n  }\n  cancelClick() {\n    let id = this.getMemoIdValue(this.idValue);\n    this.router.navigate([\"/ememo/memoView\"], {\n      queryParams: {\n        mid: id,\n        from: 'forward',\n        MemoView: \"YES\"\n      },\n      skipLocationChange: true\n    });\n  }\n  // attachmentDelete(s, index) {\n  //   this.documentList.forEach((s, i) => {\n  //     if (index === i)\n  //       this.documentList.splice(index, 1)\n  //     this.images.splice(index, 1)\n  //   })\n  // }\n  fileChange(event) {\n    let imagesList = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    this.InputVar.nativeElement.value = \"\";\n    imagesList.push(this.images);\n    this.uploadList = [];\n    imagesList.forEach(item => {\n      let s = item;\n      s.forEach(it => {\n        let io = it.name;\n        this.uploadList.push(io);\n      });\n    });\n    // console.log('uplist2',this.uploadList)\n  }\n  OnCategoryChange(e) {\n    this.categoryID = e.source.value.id;\n  }\n  OnSenderChange(e) {\n    this.categoryInput.nativeElement.value = '';\n    this.subcategoryInput.nativeElement.value = '';\n  }\n  focusCategory(e) {\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.categoryInput.nativeElement.value === '') {\n      this.memoService.getCategory_Dept('', this.forwardForm.value.sender.id).subscribe(results => {\n        let datas = results[\"data\"];\n        this.categoryList = datas;\n      });\n    }\n  }\n  focussubCategory(e) {\n    // if (e.isUserInput == true) {\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\n      this.memoService.getSubCategory1(' ', this.categoryID).subscribe(results => {\n        let datas = results[\"data\"];\n        this.sub_categoryList = datas;\n        this.subcategoryInput.nativeElement.value = '';\n      });\n    }\n    // }\n  }\n  displayCategory(categorydis) {\n    return categorydis ? categorydis.name : undefined;\n  }\n  get categorydis() {\n    return this.forwardForm.get('category');\n  }\n  displaysubCategory(subcategory) {\n    return subcategory ? subcategory.name : undefined;\n  }\n  get subcategory() {\n    return this.forwardForm.get('sub_category');\n  }\n  removeEmployeeTo(employee) {\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeTo.splice(index, 1);\n      this.chipSelectedEmployeeToid.splice(index, 1);\n      this.employeeToInput.nativeElement.value = '';\n    }\n  }\n  employeeToSelected(event) {\n    this.selectEmployeeToByName(event.option.value.full_name);\n    this.employeeToInput.nativeElement.value = '';\n  }\n  selectEmployeeToByName(employeeName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC.length) {\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeBTo(employee) {\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeBTo.splice(index, 1);\n      this.chipSelectedEmployeeBToid.splice(index, 1);\n      this.employeeBToInput.nativeElement.value = '';\n    }\n  }\n  employeeBToSelected(event) {\n    this.selectEmployeeBToByName(event.option.value.full_name);\n    this.employeeBToInput.nativeElement.value = '';\n  }\n  selectEmployeeBToByName(employeeName) {\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto.length) {\n      return;\n    }\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto1.length) {\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id);\n    }\n  }\n  removeEmployeeCC(employeecc) {\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\n    if (index >= 0) {\n      this.chipSelectedEmployeeCC.splice(index, 1);\n      this.chipSelectedEmployeeCCid.splice(index, 1);\n      this.employeeccInput.nativeElement.value = '';\n    }\n  }\n  employeeccSelected(event) {\n    this.selectEmployeeCCByName(event.option.value.full_name);\n    this.employeeccInput.nativeElement.value = '';\n  }\n  selectEmployeeCCByName(employeeccName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC.length) {\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeApprover(employee) {\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeApprover.splice(index, 1);\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\n      this.employeeApproverInput.nativeElement.value = '';\n    }\n  }\n  employeeApproverSelected(event) {\n    this.selectEmployeeApproverByName(event.option.value.full_name);\n    this.employeeApproverInput.nativeElement.value = '';\n  }\n  selectEmployeeApproverByName(employee) {\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover1.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id);\n    }\n  }\n  removeEmployeeDept(dept) {\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\n    if (index >= 0) {\n      this.chipSelectedEmployeeDept.splice(index, 1);\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\n      this.employeeDeptInput.nativeElement.value = '';\n    }\n  }\n  employeeDeptSelected(event) {\n    this.selectEmployeeDeptByName(event.option.value.name);\n    this.employeeDeptInput.nativeElement.value = '';\n  }\n  selectEmployeeDeptByName(dept) {\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.name == dept);\n    if (foundEmployeeDept1.length) {\n      return;\n    }\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\n    if (foundEmployeeDept.length) {\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id);\n    }\n  }\n  deleteUpload(s, index) {\n    this.uploadList.forEach((s, i) => {\n      if (index === i) {\n        this.uploadList.splice(index, 1);\n        this.images.splice(index, 1);\n      }\n    });\n    // console.log('uplist3',this.uploadList)\n  }\n  getPriority() {\n    this.memoService.get_priority().subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n  }\n  getPriorityList() {\n    this.getPriority();\n    this.forwardForm.get('priority').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_priority().pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n  }\n  displayFnPriority(priority) {\n    return priority ? priority.name : undefined;\n  }\n  get priority() {\n    return this.forwardForm.value.get('priority');\n  }\n  removeEmployeeRecommender(employee) {\n    const index = this.chipSelectedRecommender.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedRecommender.splice(index, 1);\n      this.chipSelectedRecommenderId.splice(index, 1);\n      this.employeeRecommenderInput.nativeElement.value = '';\n    }\n  }\n  employeeRecommenderSelected(event) {\n    this.selectEmployeeRecommenderByName(event.option.value.full_name);\n    this.employeeRecommenderInput.nativeElement.value = '';\n  }\n  selectEmployeeRecommenderByName(employee) {\n    let foundEmployeeApprover1 = this.chipSelectedRecommender.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover1.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedRecommender.push(foundEmployeeApprover[0]);\n      this.chipSelectedRecommenderId.push(foundEmployeeApprover[0].id);\n    }\n  }\n  static ɵfac = function MemoForwardComponent_Factory(t) {\n    return new (t || MemoForwardComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MemoService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.SharedService), i0.ɵɵdirectiveInject(i7.DomSanitizer), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MemoForwardComponent,\n    selectors: [[\"app-memo-forward\"]],\n    viewQuery: function MemoForwardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(_c13, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.categoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subcategoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeBToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matBToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeccInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteCC = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeApproverInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteApp = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeDeptInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteDept = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.InputVar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeRecommenderInput = _t.first);\n      }\n    },\n    decls: 148,\n    vars: 48,\n    consts: [[1, \"content\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"width\", \"100%\"], [2, \"width\", \"40%\"], [2, \"width\", \"250px\", \"margin-left\", \"10px\", 3, \"click\"], [\"placeholder\", \"\", \"matInput\", \"\", \"formControlName\", \"sender\", \"required\", \"\", 3, \"matAutocomplete\"], [\"rmInput\", \"\"], [3, \"displayWith\"], [\"senderValue\", \"matAutocomplete\"], [\"class\", \"is-loading\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"width\", \"25%\"], [1, \"text-white\", \"text-center\", \"mx-auto\", \"rounded\", \"pt-2\", \"pb-2\", \"font-weight-bold\", 2, \"background-color\", \"#a39e9e\", \"font-family\", \"'Arial Narrow Bold', sans-serif\"], [2, \"width\", \"10%\"], [1, \"memo-form\", 2, \"margin-bottom\", \"-1.25em\"], [\"chipListapprover\", \"\"], [\"style\", \"font-size: small;\", 3, \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\"], [\"employeeApproverInput\", \"\"], [3, \"optionSelected\", \"opened\"], [\"autoapprover\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"chipListrecommender\", \"\"], [\"employeeRecommenderInput\", \"\"], [\"autoapprover1\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"subject\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [1, \"table\"], [\"width\", \"25%\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\"], [\"matInput\", \"\", \"formControlName\", \"category\", \"placeholder\", \"Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"categoryInput\", \"\"], [\"autocategory\", \"matAutocomplete\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"formControlName\", \"sub_category\", \"placeholder\", \"Sub Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"subcategoryInput\", \"\"], [\"autosubcategory\", \"matAutocomplete\"], [2, \"width\", \"100px\", \"margin-left\", \"10px\", 3, \"click\"], [\"placeholder\", \"Priority\", \"matInput\", \"\", \"formControlName\", \"priority\", \"required\", \"\", 3, \"matAutocomplete\"], [\"priorityValue\", \"matAutocomplete\"], [1, \"container\"], [\"type\", \"checkbox\", \"data-md-icheck\", \"\", 3, \"checked\", \"change\"], [1, \"checkmark\"], [2, \"width\", \"80%\"], [\"class\", \"btn-link\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"manual_reference\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"colspan\", \"2\"], [3, \"disabled\", \"click\"], [\"formControlName\", \"html\", 3, \"summernoteModel\", \"ngxSummernote\", \"ngxSummernoteDisabled\", \"summernoteModelChange\"], [1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"2em\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,.dotx,.dotm,.docb,\\n                                        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"multiple\", \"true\", \"formControlName\", \"images\", \"name\", \"images\", 3, \"change\"], [\"takeInput\", \"\"], [2, \"margin-right\", \"2em\"], [2, \"margin-bottom\", \"-1.25em\"], [\"matInput\", \"\", \"formControlName\", \"watermarktext\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"disabled\"], [\"id\", \"my-modal\", \"aria-labelledby\", \"my-modalLabel\", \"aria-hidden\", \"true\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\"], [\"data-bs-dismiss\", \"modal\", 1, \"modal-dialog\"], [1, \"modal-content\"], [\"class\", \"modal-body\", 4, \"ngIf\"], [1, \"is-loading\"], [3, \"value\"], [\"chipListDept\", \"\"], [\"employeeDeptInput\", \"\"], [\"autodept\", \"matAutocomplete\"], [2, \"font-size\", \"small\", 3, \"removable\", \"removed\"], [\"matChipRemove\", \"\"], [\"chipListTo\", \"\"], [\"employeeToInput\", \"\"], [\"autoto\", \"matAutocomplete\"], [\"chipListBTo\", \"\"], [\"employeeBToInput\", \"\"], [\"autobto\", \"matAutocomplete\"], [\"chipList\", \"\"], [\"employeeccInput\", \"\"], [\"autocc\", \"matAutocomplete\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [1, \"btn-link\"], [\"mat-icon-button\", \"\", \"type\", \"button\"], [\"aria-label\", \"Edit\", 2, \"color\", \"gray\", 3, \"click\"], [1, \"modal-body\"], [1, \"img-responsive\", 2, \"width\", \"100%\", 3, \"src\"]],\n    template: function MemoForwardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MemoForwardComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.forwardMemoForm();\n        });\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\")(6, \"mat-label\");\n        i0.ɵɵtext(7, \"From\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\")(9, \"table\", 2)(10, \"tr\")(11, \"td\", 3)(12, \"mat-form-field\", 4);\n        i0.ɵɵlistener(\"click\", function MemoForwardComponent_Template_mat_form_field_click_12_listener() {\n          return ctx.getSender();\n        });\n        i0.ɵɵelement(13, \"input\", 5, 6);\n        i0.ɵɵelementStart(15, \"mat-autocomplete\", 7, 8);\n        i0.ɵɵtemplate(17, MemoForwardComponent_mat_option_17_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(18, MemoForwardComponent_ng_container_18_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"td\", 11)(20, \"div\", 12);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"td\", 13);\n        i0.ɵɵelementStart(23, \"td\", 11)(24, \"div\", 12);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(26, MemoForwardComponent_tr_26_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(27, MemoForwardComponent_tr_27_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(28, MemoForwardComponent_tr_28_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(29, MemoForwardComponent_tr_29_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵelementStart(30, \"tr\");\n        i0.ɵɵtemplate(31, MemoForwardComponent_td_31_Template, 3, 0, \"td\", 10);\n        i0.ɵɵtemplate(32, MemoForwardComponent_td_32_Template, 3, 0, \"td\", 10);\n        i0.ɵɵelementStart(33, \"td\")(34, \"mat-form-field\", 14)(35, \"mat-chip-grid\", null, 15);\n        i0.ɵɵtemplate(37, MemoForwardComponent_mat_chip_row_37_Template, 4, 2, \"mat-chip-row\", 16);\n        i0.ɵɵelement(38, \"input\", 17, 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-autocomplete\", 19, 20);\n        i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_Template_mat_autocomplete_optionSelected_40_listener($event) {\n          return ctx.employeeApproverSelected($event);\n        })(\"opened\", function MemoForwardComponent_Template_mat_autocomplete_opened_40_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(42, MemoForwardComponent_mat_option_42_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"tr\")(44, \"td\")(45, \"mat-label\");\n        i0.ɵɵtext(46, \"Recommender\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"td\")(48, \"mat-form-field\", 14)(49, \"mat-chip-grid\", null, 22);\n        i0.ɵɵtemplate(51, MemoForwardComponent_mat_chip_row_51_Template, 4, 2, \"mat-chip-row\", 16);\n        i0.ɵɵelement(52, \"input\", 17, 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"mat-autocomplete\", 19, 24);\n        i0.ɵɵlistener(\"optionSelected\", function MemoForwardComponent_Template_mat_autocomplete_optionSelected_54_listener($event) {\n          return ctx.employeeRecommenderSelected($event);\n        })(\"opened\", function MemoForwardComponent_Template_mat_autocomplete_opened_54_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(56, MemoForwardComponent_mat_option_56_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(57, \"tr\")(58, \"td\")(59, \"mat-label\");\n        i0.ɵɵtext(60, \"Subject\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"td\")(62, \"mat-form-field\", 14);\n        i0.ɵɵelement(63, \"input\", 25);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(64, \"tr\")(65, \"td\");\n        i0.ɵɵtext(66, \"Cat/SubCat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"td\")(68, \"table\", 26)(69, \"tr\")(70, \"td\", 27)(71, \"mat-form-field\", 28)(72, \"input\", 29, 30);\n        i0.ɵɵlistener(\"focus\", function MemoForwardComponent_Template_input_focus_72_listener($event) {\n          return ctx.focusCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"mat-autocomplete\", 7, 31);\n        i0.ɵɵtemplate(76, MemoForwardComponent_mat_option_76_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(77, MemoForwardComponent_ng_container_77_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(78, \"td\", 27)(79, \"mat-form-field\", 32)(80, \"input\", 33, 34);\n        i0.ɵɵlistener(\"focus\", function MemoForwardComponent_Template_input_focus_80_listener($event) {\n          return ctx.focussubCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"mat-autocomplete\", 7, 35);\n        i0.ɵɵtemplate(84, MemoForwardComponent_mat_option_84_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(85, MemoForwardComponent_ng_container_85_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(86, \"td\", 27)(87, \"mat-form-field\", 36);\n        i0.ɵɵlistener(\"click\", function MemoForwardComponent_Template_mat_form_field_click_87_listener() {\n          return ctx.getPriorityList();\n        });\n        i0.ɵɵelement(88, \"input\", 37, 6);\n        i0.ɵɵelementStart(90, \"mat-autocomplete\", 7, 38);\n        i0.ɵɵtemplate(92, MemoForwardComponent_mat_option_92_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(93, MemoForwardComponent_ng_container_93_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(94, \"td\", 27)(95, \"label\", 39)(96, \"input\", 40);\n        i0.ɵɵlistener(\"change\", function MemoForwardComponent_Template_input_change_96_listener() {\n          return ctx.Confidential = !ctx.Confidential;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(97, \"Confidential \");\n        i0.ɵɵelement(98, \"span\", 41);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(99, \"tr\")(100, \"td\");\n        i0.ɵɵtext(101, \" Attachment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(102, \"td\")(103, \"table\", 26)(104, \"tr\", 42)(105, \"td\")(106, \"div\");\n        i0.ɵɵtemplate(107, MemoForwardComponent_span_107_Template, 5, 1, \"span\", 43);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(108, \"tr\")(109, \"td\")(110, \"mat-label\");\n        i0.ɵɵtext(111, \"Department Reference No\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(112, \"td\")(113, \"mat-form-field\", 14);\n        i0.ɵɵelement(114, \"input\", 44);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(115, \"tr\")(116, \"td\", 45)(117, \"div\")(118, \"button\", 46);\n        i0.ɵɵlistener(\"click\", function MemoForwardComponent_Template_button_click_118_listener() {\n          return ctx.enableEditor();\n        });\n        i0.ɵɵtext(119, \"Enable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"button\", 46);\n        i0.ɵɵlistener(\"click\", function MemoForwardComponent_Template_button_click_120_listener() {\n          return ctx.disableEditor();\n        });\n        i0.ɵɵtext(121, \"Disable\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(122, \"div\")(123, \"div\", 47);\n        i0.ɵɵlistener(\"summernoteModelChange\", function MemoForwardComponent_Template_div_summernoteModelChange_123_listener($event) {\n          return ctx.contentName = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(124, \"tr\")(125, \"td\", 45)(126, \"table\")(127, \"tr\")(128, \"td\")(129, \"label\", 48)(130, \"input\", 49, 50);\n        i0.ɵɵlistener(\"change\", function MemoForwardComponent_Template_input_change_130_listener($event) {\n          return ctx.fileChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(132, \"td\")(133, \"mat-label\", 51);\n        i0.ɵɵtext(134, \"Watermark Text\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(135, \"td\")(136, \"mat-form-field\", 52);\n        i0.ɵɵelement(137, \"input\", 53);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(138, \"td\")(139, \"button\", 54);\n        i0.ɵɵlistener(\"click\", function MemoForwardComponent_Template_button_click_139_listener() {\n          return ctx.cancelClick();\n        });\n        i0.ɵɵtext(140, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(141, \"td\")(142, \"button\", 55);\n        i0.ɵɵtext(143, \"Submit\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n        i0.ɵɵelementStart(144, \"div\", 56)(145, \"div\", 57)(146, \"div\", 58);\n        i0.ɵɵtemplate(147, MemoForwardComponent_div_147_Template, 2, 1, \"div\", 59);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n        const _r10 = i0.ɵɵreference(36);\n        const _r13 = i0.ɵɵreference(41);\n        const _r15 = i0.ɵɵreference(50);\n        const _r18 = i0.ɵɵreference(55);\n        const _r21 = i0.ɵɵreference(75);\n        const _r25 = i0.ɵɵreference(83);\n        const _r29 = i0.ɵɵreference(91);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.forwardForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.rdoIOMnfa, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.memoFrom_rf, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\" && ctx.chipSelectedEmployeeDept.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"NFA-MEMO\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedEmployeeApprover);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeApproverControl)(\"matAutocomplete\", _r13)(\"matChipInputFor\", _r10)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedRecommender);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeRecommenderControl)(\"matAutocomplete\", _r18)(\"matChipInputFor\", _r15)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"matAutocomplete\", _r21);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r25);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displaysubCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r29);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.Confidential);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uploadList);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", !ctx.editorDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"summernoteModel\", ctx.contentName)(\"ngxSummernote\", ctx.config)(\"ngxSummernoteDisabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"disabled\", ctx.forwardForm.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.pdfUrls !== \"pdf\");\n      }\n    },\n    dependencies: [i8.NgForOf, i8.NgIf, i9.NgxSummernoteDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i10.MatIconButton, i11.MatIcon, i12.MatInput, i13.MatFormField, i13.MatLabel, i14.MatOption, i15.MatAutocomplete, i15.MatAutocompleteTrigger, i16.MatChipGrid, i16.MatChipInput, i16.MatChipRemove, i16.MatChipRow],\n    styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n  display: block;\\n  position: relative;\\n  padding-left: 1px;\\n  margin-top: 20px;\\n  margin-bottom: 2px;\\n  margin-right: 20px;\\n  margin-left:-40px;\\n  cursor: pointer;\\n  font-size: 18px;\\n  -webkit-user-select: none;\\n  user-select: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  position: absolute;\\n  opacity: 0;\\n  cursor: pointer;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15;\\n  left: 5;\\n  height: 25px;\\n  width: 25px;\\n  background-color: #eee;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]:hover   input[_ngcontent-%COMP%]    ~ .checkmark[_ngcontent-%COMP%] {\\n  background-color: #ccc;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%] {\\n  background-color: #2196F3;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  display: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%]:after {\\n  display: block;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]:after {\\n  left: 9px;\\n  top: 5px;\\n  width: 5px;\\n  height: 10px;\\n  border: solid white;\\n  border-width: 0 3px 3px 0;\\n  transform: rotate(45deg);\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  margin-left: 47%;\\n  margin-top: 4%;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  margin-left: 3%;\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n  margin-left: 220px;\\n  margin-top: 10%;\\n}\\n\\n.form1[_ngcontent-%COMP%] {\\n  width: 1500px;\\n}\\n\\n.form2[_ngcontent-%COMP%] {\\n  width: 2000px;\\n}\\n\\n.uploadImages[_ngcontent-%COMP%] {\\n  margin-right: 160px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer), .mat-card-content[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer) {\\n  margin-bottom: 0;\\n  margin: 6px;\\n}\\n\\n.btn-submit[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n}\\n\\n.btn-cancel[_ngcontent-%COMP%] {\\n  margin-left: 40px;\\n}\\n\\n.memo-form[_ngcontent-%COMP%]{\\n  width:900px !important;\\n  margin-left: 10px;\\n}\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]  {\\n  border: 0px solid white;\\n  border-collapse: collapse;\\n  padding: 0px;\\n  margin: 0;\\n  border-spacing: 0px;\\n  \\n}\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\n  background-color: white;\\n}\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: white;\\n}\\n.mat-form-field-infix[_ngcontent-%COMP%] {\\n  padding: 0em 0 !important;\\n  border-top: 0em solid transparent !important;\\n}\\n.mat-chip[_ngcontent-%COMP%]{\\n  background-color: white !important;\\n  border: 1px solid #B7B8BB;\\n  border-radius: 16px;\\n}\\n.mat-radio-button[_ngcontent-%COMP%]    ~ .mat-radio-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1lbW8vbWVtby1mb3J3YXJkL21lbW8tZm9yd2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQjtBQUNsQjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsZUFBZTtFQUNmLHlCQUF5QjtFQUd6QixpQkFBaUI7QUFDbkI7O0FBRUEsd0NBQXdDO0FBQ3hDO0VBQ0Usa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixlQUFlO0FBQ2pCOztBQUVBLDZCQUE2QjtBQUM3QjtFQUNFLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsT0FBTztFQUNQLFlBQVk7RUFDWixXQUFXO0VBQ1gsc0JBQXNCO0FBQ3hCOztBQUVBLCtDQUErQztBQUMvQztFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQSx3REFBd0Q7QUFDeEQ7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsNkRBQTZEO0FBQzdEO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixhQUFhO0FBQ2Y7O0FBRUEsb0NBQW9DO0FBQ3BDO0VBQ0UsY0FBYztBQUNoQjs7QUFFQSxrQ0FBa0M7QUFDbEM7RUFDRSxTQUFTO0VBQ1QsUUFBUTtFQUNSLFVBQVU7RUFDVixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHlCQUF5QjtFQUd6Qix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTs7RUFFRSxnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osU0FBUztFQUNULG1CQUFtQjs7QUFFckI7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsNENBQTRDO0FBQzlDO0FBQ0E7RUFDRSxrQ0FBa0M7RUFDbEMseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLyogVGhlIGNvbnRhaW5lciAqL1xyXG4uY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZy1sZWZ0OiAxcHg7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxuICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gIG1hcmdpbi1sZWZ0Oi00MHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcclxuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcclxuICB1c2VyLXNlbGVjdDogbm9uZTtcclxufVxyXG5cclxuLyogSGlkZSB0aGUgYnJvd3NlcidzIGRlZmF1bHQgY2hlY2tib3ggKi9cclxuLmNvbnRhaW5lciBpbnB1dCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4vKiBDcmVhdGUgYSBjdXN0b20gY2hlY2tib3ggKi9cclxuLmNoZWNrbWFyayB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMTU7XHJcbiAgbGVmdDogNTtcclxuICBoZWlnaHQ6IDI1cHg7XHJcbiAgd2lkdGg6IDI1cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcclxufVxyXG5cclxuLyogT24gbW91c2Utb3ZlciwgYWRkIGEgZ3JleSBiYWNrZ3JvdW5kIGNvbG9yICovXHJcbi5jb250YWluZXI6aG92ZXIgaW5wdXQgfiAuY2hlY2ttYXJrIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjO1xyXG59XHJcblxyXG4vKiBXaGVuIHRoZSBjaGVja2JveCBpcyBjaGVja2VkLCBhZGQgYSBibHVlIGJhY2tncm91bmQgKi9cclxuLmNvbnRhaW5lciBpbnB1dDpjaGVja2VkIH4gLmNoZWNrbWFyayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcclxufVxyXG5cclxuLyogQ3JlYXRlIHRoZSBjaGVja21hcmsvaW5kaWNhdG9yIChoaWRkZW4gd2hlbiBub3QgY2hlY2tlZCkgKi9cclxuLmNoZWNrbWFyazphZnRlciB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogU2hvdyB0aGUgY2hlY2ttYXJrIHdoZW4gY2hlY2tlZCAqL1xyXG4uY29udGFpbmVyIGlucHV0OmNoZWNrZWQgfiAuY2hlY2ttYXJrOmFmdGVyIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyogU3R5bGUgdGhlIGNoZWNrbWFyay9pbmRpY2F0b3IgKi9cclxuLmNvbnRhaW5lciAuY2hlY2ttYXJrOmFmdGVyIHtcclxuICBsZWZ0OiA5cHg7XHJcbiAgdG9wOiA1cHg7XHJcbiAgd2lkdGg6IDVweDtcclxuICBoZWlnaHQ6IDEwcHg7XHJcbiAgYm9yZGVyOiBzb2xpZCB3aGl0ZTtcclxuICBib3JkZXItd2lkdGg6IDAgM3B4IDNweCAwO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG59XHJcblxyXG4udGl0bGUge1xyXG4gIG1hcmdpbi1sZWZ0OiA0NyU7XHJcbiAgbWFyZ2luLXRvcDogNCU7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICBtYXJnaW4tbGVmdDogMyU7XHJcbn1cclxuXHJcbi50ZXh0IHtcclxuICBtYXJnaW4tbGVmdDogMjIwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTAlO1xyXG59XHJcblxyXG4uZm9ybTEge1xyXG4gIHdpZHRoOiAxNTAwcHg7XHJcbn1cclxuXHJcbi5mb3JtMiB7XHJcbiAgd2lkdGg6IDIwMDBweDtcclxufVxyXG5cclxuLnVwbG9hZEltYWdlcyB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxNjBweDtcclxufVxyXG5cclxuLm1hdC1jYXJkPjpsYXN0LWNoaWxkOm5vdCgubWF0LWNhcmQtZm9vdGVyKSxcclxuLm1hdC1jYXJkLWNvbnRlbnQ+Omxhc3QtY2hpbGQ6bm90KC5tYXQtY2FyZC1mb290ZXIpIHtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIG1hcmdpbjogNnB4O1xyXG59XHJcblxyXG4uYnRuLXN1Ym1pdCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi5idG4tY2FuY2VsIHtcclxuICBtYXJnaW4tbGVmdDogNDBweDtcclxufVxyXG5cclxuLm1lbW8tZm9ybXtcclxuICB3aWR0aDo5MDBweCAhaW1wb3J0YW50O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbnRhYmxlLCB0aCAsIHRkICB7XHJcbiAgYm9yZGVyOiAwcHggc29saWQgd2hpdGU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBwYWRkaW5nOiAwcHg7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwcHg7XHJcbiAgXHJcbn1cclxudGFibGUgdHI6bnRoLWNoaWxkKG9kZCkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcbnRhYmxlIHRyOm50aC1jaGlsZChldmVuKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcclxuICBwYWRkaW5nOiAwZW0gMCAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci10b3A6IDBlbSBzb2xpZCB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtY2hpcHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNCN0I4QkI7XHJcbiAgYm9yZGVyLXJhZGl1czogMTZweDtcclxufVxyXG4ubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMTZweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","fromEvent","Memo","ENTER","COMMA","finalize","switchMap","tap","distinctUntilChanged","debounceTime","map","takeUntil","MatAutocompleteTrigger","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","des_r36","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵelementContainerStart","ɵɵtemplate","MemoForwardComponent_ng_container_18_mat_option_1_Template","ɵɵelementContainerEnd","ctx_r3","senderListData","ɵɵlistener","MemoForwardComponent_tr_26_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","restoredCtx","ɵɵrestoreView","_r44","employeedept_r42","$implicit","ctx_r43","ɵɵnextContext","ɵɵresetView","removeEmployeeDept","thisEmployeedept_r45","MemoForwardComponent_tr_26_mat_chip_row_8_Template","ɵɵelement","MemoForwardComponent_tr_26_Template_mat_autocomplete_optionSelected_11_listener","$event","_r47","ctx_r46","employeeDeptSelected","MemoForwardComponent_tr_26_Template_mat_autocomplete_opened_11_listener","ctx_r48","autocompleteDeptScroll","MemoForwardComponent_tr_26_mat_option_13_Template","ctx_r4","chipSelectedEmployeeDept","employeeDeptControl","_r40","_r37","separatorKeysCodes","departmentList","MemoForwardComponent_tr_27_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r56","employeeto_r54","ctx_r55","removeEmployeeTo","full_name","thisEmployee_r57","MemoForwardComponent_tr_27_mat_chip_row_8_Template","MemoForwardComponent_tr_27_Template_mat_autocomplete_optionSelected_11_listener","_r59","ctx_r58","employeeToSelected","MemoForwardComponent_tr_27_Template_mat_autocomplete_opened_11_listener","ctx_r60","autocompleteToScroll","MemoForwardComponent_tr_27_mat_option_13_Template","ctx_r5","chipSelectedEmployeeTo","to_emp","_r52","_r49","allEmployeeList","MemoForwardComponent_tr_28_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r68","employeebto_r66","ctx_r67","removeEmployeeBTo","thisEmployee_r69","MemoForwardComponent_tr_28_mat_chip_row_8_Template","MemoForwardComponent_tr_28_Template_mat_autocomplete_optionSelected_11_listener","_r71","ctx_r70","employeeBToSelected","MemoForwardComponent_tr_28_Template_mat_autocomplete_opened_11_listener","ctx_r72","autocompleteBToScroll","MemoForwardComponent_tr_28_mat_option_13_Template","ctx_r6","chipSelectedEmployeeBTo","bto_emp","_r64","_r61","MemoForwardComponent_tr_29_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r80","employeecc_r78","ctx_r79","removeEmployeeCC","thisEmployeeCC_r81","MemoForwardComponent_tr_29_mat_chip_row_8_Template","MemoForwardComponent_tr_29_Template_mat_autocomplete_optionSelected_11_listener","_r83","ctx_r82","employeeccSelected","MemoForwardComponent_tr_29_Template_mat_autocomplete_opened_11_listener","ctx_r84","autocompleteCCScroll","MemoForwardComponent_tr_29_mat_option_13_Template","ctx_r7","chipSelectedEmployeeCC","employeeccControl","_r76","_r73","MemoForwardComponent_mat_chip_row_37_Template_mat_chip_row_removed_0_listener","_r87","employeeapprover_r85","ctx_r86","removeEmployeeApprover","thisEmployeeCC_r88","MemoForwardComponent_mat_chip_row_51_Template_mat_chip_row_removed_0_listener","_r91","employeerecommender_r89","ctx_r90","removeEmployeeRecommender","thisEmployeeCC_r92","MemoForwardComponent_ng_container_77_mat_option_1_Template_mat_option_onSelectionChange_0_listener","_r96","ctx_r95","OnCategoryChange","cat_r94","MemoForwardComponent_ng_container_77_mat_option_1_Template","ctx_r23","categoryList","sub_r98","MemoForwardComponent_ng_container_85_mat_option_1_Template","ctx_r27","sub_categoryList","des_r100","MemoForwardComponent_ng_container_93_mat_option_1_Template","ctx_r31","priorityList","MemoForwardComponent_span_107_Template_mat_icon_click_3_listener","_r104","upload_r101","i_r102","index","ctx_r103","deleteUpload","ɵɵpropertyInterpolate","ctx_r34","jpgUrls","ɵɵsanitizeUrl","MemoForwardComponent","formBuilder","dataService","router","memoService","toastr","sharedService","sanitizer","route","forwardForm","config","airMode","tabDisable","popover","table","link","air","height","toolbar","codeviewFilter","codeviewFilterRegex","codeviewIframeFilter","editorDisabled","isLoading","contentName","chipSelectedEmployeeToid","chipSelectedEmployeeBToid","chipSelectedEmployeeCCid","allEmployeeApprover","chipSelectedEmployeeApprover","chipSelectedEmployeeApproverid","employeeApproverControl","Confidential","memoFrom_rf","images","source_id","has_next","has_previous","currentpage","isSender","categoryInput","subcategoryInput","employeeToInput","employeeBToInput","matToAutocomplete","matBToAutocomplete","employeeccInput","matAutocompleteCC","employeeApproverInput","matAutocompleteApp","employeeDeptInput","matAutocompleteDept","autocompleteTrigger","categoryID","datas","toListData","chipSelectedEmployeeDeptid","rdoIOMnfa","idValue","pdfUrls","refId","uploadList","InputVar","employeeRecommenderControl","chipSelectedRecommender","employeeRecommenderInput","chipSelectedRecommenderId","constructor","ngOnInit","group","subject","required","sender","manual_reference","watermarktext","to_dept","approver","cc","category","sub_category","priority","queryParams","subscribe","params","memofrom_rf","get","valueChanges","pipe","value","getCategory_Dept","id","results","nativeElement","getSubCategory1","get_EmployeeList","datapagination","length","getDepartmentPage","todeptlist","findIndex","todept","code","splice","getForwardFetchData","enableEditor","disableEditor","onBlur","onDelete","file","summernoteInit","event","setTimeout","panel","x","scrollTop","panelClosingActions","scrollHeight","elementHeight","clientHeight","atBottom","concat","autocompleteAppScroll","getSenderList","get_empTodeptMapping1","fromdept","getSender","displayFnSender","senderValue","undefined","getMemoIdValue","fetchData","getFetch","data","confidential","is_sender","ids","patchValue","memoClass","watermark_txt","Memofrom","senderId","deptValues","push","sendValue","categoryValue","categoryId","categoryName","cat","cats","subCategoryValue","subcategoryId","subcategoryName","subCategory","subCategoryValues","forEach","element","ref_id","emitEvent","createMemoInput","controls","memoclass1","orderno","finalappArray","eachitem","apporder","type","content","source_type","toLowerCase","finalrecArray","ordernos","recommorder","recommender","forwardMemoForm","error","timeOut","i","loginEmpId","answer","window","confirm","createForwardForm","res","next","navigate","mid","from","MemoView","skipLocationChange","cancelClick","fileChange","imagesList","target","files","item","s","it","io","e","source","OnSenderChange","focusCategory","focussubCategory","displayCategory","categorydis","displaysubCategory","subcategory","employee","indexOf","selectEmployeeToByName","option","employeeName","foundEmployeeCC1","filter","employeecc","foundEmployeeCC","selectEmployeeBToByName","foundEmployeebto","employeebto","foundEmployeebto1","selectEmployeeCCByName","employeeccName","employeeApproverSelected","selectEmployeeApproverByName","foundEmployeeApprover1","foundEmployeeApprover","dept","selectEmployeeDeptByName","foundEmployeeDept1","employeedept","foundEmployeeDept","getPriority","get_priority","getPriorityList","displayFnPriority","employeeRecommenderSelected","selectEmployeeRecommenderByName","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","i3","Router","i4","MemoService","i5","ToastrService","i6","SharedService","i7","DomSanitizer","ActivatedRoute","selectors","viewQuery","MemoForwardComponent_Query","rf","ctx","MemoForwardComponent_Template_form_ngSubmit_2_listener","MemoForwardComponent_Template_mat_form_field_click_12_listener","MemoForwardComponent_mat_option_17_Template","MemoForwardComponent_ng_container_18_Template","MemoForwardComponent_tr_26_Template","MemoForwardComponent_tr_27_Template","MemoForwardComponent_tr_28_Template","MemoForwardComponent_tr_29_Template","MemoForwardComponent_td_31_Template","MemoForwardComponent_td_32_Template","MemoForwardComponent_mat_chip_row_37_Template","MemoForwardComponent_Template_mat_autocomplete_optionSelected_40_listener","MemoForwardComponent_Template_mat_autocomplete_opened_40_listener","MemoForwardComponent_mat_option_42_Template","MemoForwardComponent_mat_chip_row_51_Template","MemoForwardComponent_Template_mat_autocomplete_optionSelected_54_listener","MemoForwardComponent_Template_mat_autocomplete_opened_54_listener","MemoForwardComponent_mat_option_56_Template","MemoForwardComponent_Template_input_focus_72_listener","MemoForwardComponent_mat_option_76_Template","MemoForwardComponent_ng_container_77_Template","MemoForwardComponent_Template_input_focus_80_listener","MemoForwardComponent_mat_option_84_Template","MemoForwardComponent_ng_container_85_Template","MemoForwardComponent_Template_mat_form_field_click_87_listener","MemoForwardComponent_mat_option_92_Template","MemoForwardComponent_ng_container_93_Template","MemoForwardComponent_Template_input_change_96_listener","MemoForwardComponent_span_107_Template","MemoForwardComponent_Template_button_click_118_listener","MemoForwardComponent_Template_button_click_120_listener","MemoForwardComponent_Template_div_summernoteModelChange_123_listener","MemoForwardComponent_Template_input_change_130_listener","MemoForwardComponent_Template_button_click_139_listener","MemoForwardComponent_div_147_Template","_r1","_r13","_r10","_r18","_r15","_r21","_r25","_r29","invalid"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memo-forward\\memo-forward.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memo-forward\\memo-forward.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { SharedService } from '../../service/shared.service'\r\nimport { DataService } from '../../service/data.service'\r\nimport { from, Observable, fromEvent } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Memo } from '../../memomodal/memo.model'\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MemoService, Category, subCategory, Department } from 'src/app/service/memo.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport interface SenderValue {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PriorityValue {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface iEmployeeList {\r\n  full_name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface iDeptList {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-memo-forward',\r\n  templateUrl: './memo-forward.component.html',\r\n  styleUrls: ['./memo-forward.component.css']\r\n})\r\nexport class MemoForwardComponent implements OnInit {\r\n  forwardForm: FormGroup;\r\n  // html: string;\r\n  config: any = {\r\n    airMode: false,\r\n    tabDisable: true,\r\n    popover: {\r\n      table: [\r\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\r\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\r\n      ],\r\n      link: [['link', ['linkDialogShow', 'unlink']]],\r\n      air: [\r\n        [\r\n          'font',\r\n          [\r\n            'bold',\r\n            'italic',\r\n            'underline',\r\n            'strikethrough',\r\n            'superscript',\r\n            'subscript',\r\n            'clear',\r\n          ],\r\n        ],\r\n      ],\r\n    },\r\n    height: '200px',\r\n    // uploadImagePath: '/api/upload',\r\n    toolbar: [\r\n      ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\r\n      [\r\n        'font',\r\n        [\r\n          'bold',\r\n          'italic',\r\n          'underline',\r\n          'strikethrough',\r\n          'superscript',\r\n          'subscript',\r\n          'clear',\r\n        ],\r\n      ],\r\n      ['fontsize', ['fontname', 'fontsize', 'color']],\r\n      ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\r\n      ['insert', ['table', 'picture', 'link', 'hr']]\r\n    ],\r\n    codeviewFilter: true,\r\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\r\n    codeviewIframeFilter: true,\r\n  };\r\n\r\n\r\n  editorDisabled = false;\r\n\r\n  // get sanitizedHtml() {\r\n  //   return this.sanitizer.bypassSecurityTrustHtml(this.forwardForm.get('html').value);\r\n  // }\r\n\r\n  isLoading = false;\r\n  contentName: any;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  public allEmployeeList: iEmployeeList[];\r\n  departmentList: iDeptList[];\r\n  public chipSelectedEmployeeTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeToid = [];\r\n  public to_emp = new FormControl();\r\n  public chipSelectedEmployeeBTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeBToid = [];\r\n  public bto_emp = new FormControl();\r\n  public chipSelectedEmployeeCC: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeCCid = [];\r\n  public employeeccControl = new FormControl();\r\n  // public chipSelectedDeptid = [];\r\n  public allEmployeeApprover: iEmployeeList[];\r\n  public chipSelectedEmployeeApprover: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeApproverid = [];\r\n  public employeeApproverControl = new FormControl();\r\n  public Confidential: boolean = false;\r\n  memoFrom_rf: any;\r\n  images: string[] = [];\r\n  source_id: any;\r\n  has_next = true;\r\n  has_previous = true;\r\n  currentpage: number = 1;\r\n  isSender: boolean;\r\n  @ViewChild('categoryInput') categoryInput: any;\r\n  @ViewChild('subcategoryInput') subcategoryInput: any;\r\n  @ViewChild('employeeToInput') employeeToInput: any;\r\n  @ViewChild('employeeBToInput') employeeBToInput: any;\r\n  @ViewChild('autoto') matToAutocomplete: MatAutocomplete;\r\n  @ViewChild('autobto') matBToAutocomplete: MatAutocomplete;\r\n  @ViewChild('employeeccInput') employeeccInput: any;\r\n  @ViewChild('autocc') matAutocompleteCC: MatAutocomplete;\r\n  @ViewChild('employeeApproverInput') employeeApproverInput: any;\r\n  @ViewChild('autoapprover') matAutocompleteApp: MatAutocomplete;\r\n  @ViewChild('employeeDeptInput') employeeDeptInput: any;\r\n  @ViewChild('autodept') matAutocompleteDept: MatAutocomplete;\r\n  // @ViewChild('htmlInput') htmlInput:any;\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n  // departmentID: any;\r\n  categoryID: any;\r\n  // to_dept = new FormControl();\r\n  datas: any = [];\r\n  senderListData: any = [];\r\n  categoryList: any = [];\r\n  sub_categoryList: any = [];\r\n  toListData: Array<any>;\r\n  public chipSelectedEmployeeDept: iDeptList[] = [];\r\n  public chipSelectedEmployeeDeptid = [];\r\n  public employeeDeptControl = new FormControl();\r\n  // departmentList: Array<any>;\r\n  priorityList: Array<any>;\r\n  rdoIOMnfa: any;\r\n  idValue: any;\r\n  pdfUrls: string;\r\n  jpgUrls: string;\r\n  refId: any;\r\n  uploadList = [];\r\n  @ViewChild('takeInput', { static: false })\r\n  InputVar: ElementRef;\r\n  // documentList: any;\r\n  public employeeRecommenderControl = new FormControl();\r\n  public chipSelectedRecommender: iEmployeeList[] = [];\r\n  @ViewChild('employeeRecommenderInput') employeeRecommenderInput: any;\r\n  public chipSelectedRecommenderId = [];\r\n\r\n  constructor(private formBuilder: FormBuilder, private dataService: DataService,\r\n    private router: Router, private memoService: MemoService, private toastr: ToastrService,\r\n    public sharedService: SharedService, private sanitizer: DomSanitizer, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forwardForm = this.formBuilder.group({\r\n      subject: ['', Validators.required],\r\n      sender: ['', Validators.required],\r\n      manual_reference: [''],\r\n      watermarktext: [''],\r\n      to_emp: [''],\r\n      bto_emp: [''],\r\n      to_dept: [''],\r\n      approver: [''],\r\n      cc: [''],\r\n      category: [''],\r\n      sub_category: [''],\r\n      priority: [''],\r\n      images: ['']\r\n    });\r\n\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.memoFrom_rf = params.memofrom_rf;\r\n      }\r\n      );\r\n\r\n\r\n    this.forwardForm.get('category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getCategory_Dept(value, this.forwardForm.value.sender.id)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.categoryList = datas;\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n\r\n    this.forwardForm.get('sub_category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getSubCategory1(value, this.categoryID)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.sub_categoryList = datas;\r\n      })\r\n\r\n\r\n    if (this.to_emp !== null) {\r\n      this.to_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.bto_emp !== null) {\r\n      this.bto_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeccControl !== null) {\r\n      this.employeeccControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.allEmployeeList = datas;\r\n          let datapagination = results[\"pagination\"];\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    if (this.employeeApproverControl !== null) {\r\n      this.employeeApproverControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.allEmployeeList = datas;\r\n          let datapagination = results[\"pagination\"];\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeDeptControl !== null) {\r\n      this.employeeDeptControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.getDepartmentPage(value, 1, '')\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.departmentList = datas;\r\n          let todeptlist =datas\r\n          const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\"); \r\n          if (index !== -1)\r\n          {\r\n            todeptlist.splice(index, 1); \r\n          }\r\n          if (this.departmentList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n\r\n\r\n        if (this.employeeRecommenderControl !== null) {\r\n          this.employeeRecommenderControl.valueChanges\r\n            .pipe(\r\n              debounceTime(100),\r\n              distinctUntilChanged(),\r\n              tap(() => {\r\n                this.isLoading = true;\r\n              }),\r\n              switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n                .pipe(\r\n                  finalize(() => {\r\n                    this.isLoading = false;\r\n                  }),\r\n                )\r\n              )\r\n            )\r\n            .subscribe((results: any[]) => {\r\n              let datas = results[\"data\"];\r\n              let datapagination = results[\"pagination\"];\r\n              this.allEmployeeList = datas;\r\n              if (this.allEmployeeList.length >= 0) {\r\n                this.has_next = datapagination.has_next;\r\n                this.has_previous = datapagination.has_previous;\r\n                this.currentpage = datapagination.index;\r\n              }\r\n            })\r\n        }\r\n    }\r\n\r\n    // this.getSender();\r\n    this.getForwardFetchData();\r\n    // this.getPriority();\r\n\r\n  } ///end of oninit\r\n\r\n  enableEditor() {\r\n    this.editorDisabled = false;\r\n  }\r\n\r\n  disableEditor() {\r\n    this.editorDisabled = true;\r\n  }\r\n\r\n  onBlur() {\r\n    // console.log('Blur');\r\n  }\r\n\r\n  onDelete(file) {\r\n    // console.log('Delete file', file.url);\r\n  }\r\n\r\n  summernoteInit(event) {\r\n    // console.log(event);\r\n  }\r\n\r\n  autocompleteToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeTo\r\n\r\n  autocompleteBToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matBToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matBToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeBTo\r\n\r\n  autocompleteCCScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteCC &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteCC.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof autocomplete CC\r\n\r\n  autocompleteAppScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteApp &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteApp.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeApproval\r\n\r\n  autocompleteDeptScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteDept &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteDept.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '')\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.departmentList = this.departmentList.concat(datas);\r\n                    if (this.departmentList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto matAutocompleteDept\r\n\r\n  // getSender() {\r\n\r\n  //   this.memoService.get_empTodeptMapping1('memo')\r\n  //     .subscribe((results: any[]) => {\r\n  //       let datas = results[\"data\"];\r\n  //       this.senderListData = datas;\r\n  //     })\r\n  // }\r\n\r\n  private getSenderList() {\r\n    this.memoService.get_empTodeptMapping1('memo')\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderListData = datas;\r\n        const index =  this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\r\n        if (index !== -1)\r\n        {\r\n          this.senderListData.splice(index, 1); \r\n        } \r\n      })\r\n  }\r\n  getSender() {\r\n    this.getSenderList();\r\n    this.forwardForm.get('sender').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_empTodeptMapping1('memo')\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderListData = datas;\r\n        const index =  this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\r\n        if (index !== -1)\r\n        {\r\n          this.senderListData.splice(index, 1); \r\n        }  \r\n        this.categoryInput.nativeElement.value = '';\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n  }\r\n\r\n  public displayFnSender(senderValue?: SenderValue): string | undefined {\r\n    return senderValue ? senderValue.name : undefined;\r\n  }\r\n  get senderValue() {\r\n    return this.forwardForm.value.get('sender');\r\n  }\r\n\r\n\r\n\r\n\r\n  getMemoIdValue(id) {\r\n    id = this.sharedService.fetchData.value;\r\n    return id;\r\n  }\r\n\r\n  getForwardFetchData() {\r\n    let id = this.getMemoIdValue(this.idValue)\r\n\r\n    this.dataService.getFetch(id)\r\n      .subscribe((data) => {\r\n        this.Confidential = data.confidential\r\n        this.isSender = data.is_sender;\r\n        // this.uploadList = data.document_arr\r\n        // console.log('uplist1',this.uploadList)\r\n        this.source_id = data.source_id;\r\n        let priority = data[\"priority\"];\r\n        let id = priority['id'];\r\n        let name = priority['name']\r\n        let ids = id\r\n        this.forwardForm.patchValue({\r\n          \"priority\": priority\r\n        })\r\n        let memoClass = new Memo();\r\n        memoClass.subject = data['subject']\r\n        memoClass.watermark_txt = data['watermark_txt']\r\n        if (data['type'] === 'iom') {\r\n          this.rdoIOMnfa = 'Inter-Office Memo';\r\n          this.sharedService.Memofrom = 'IOMEMO'\r\n        }\r\n        if (data['type'] === 'nfa') {\r\n          this.rdoIOMnfa = 'Note for Approval';\r\n          this.sharedService.Memofrom = 'NFA-MEMO'\r\n        }\r\n        this.contentName = data['content'];\r\n\r\n        if (this.memoFrom_rf !== 'FORWARD') {\r\n          let senderValue = data['sender'];\r\n          let senderId = senderValue['id'];\r\n          if (senderValue['name']) {\r\n            let deptValues: any = {\r\n              \"name\": senderValue.name,\r\n              \"id\": senderId\r\n            }\r\n            this.chipSelectedEmployeeDept.push(deptValues);\r\n            this.chipSelectedEmployeeDeptid.push(senderId);\r\n          } else {\r\n            var sendValue: any = {\r\n              \"full_name\": senderValue.full_name,\r\n              \"id\": senderId\r\n            }\r\n            this.chipSelectedEmployeeTo.push(sendValue);\r\n            this.chipSelectedEmployeeToid.push(senderId);\r\n          }\r\n        }\r\n        let categoryValue = data['category'];\r\n        let categoryId = categoryValue['id'];\r\n        let categoryName = categoryValue['name'];\r\n        let cat = categoryId\r\n        if (cat !== -1) {\r\n          let cats: any = {\r\n            \"name\": categoryName,\r\n            \"id\": categoryId\r\n          }\r\n          memoClass.category = cats;\r\n          this.categoryID = cat;\r\n          this.categoryList.push(cats);\r\n        }\r\n        let subCategoryValue = data['sub_category'];\r\n        let subcategoryId = subCategoryValue['id'];\r\n        let subcategoryName = subCategoryValue['name'];\r\n        let subCategory = subcategoryId\r\n        if (subCategory !== -1) {\r\n          let subCategoryValues: any = {\r\n            \"name\": subcategoryName,\r\n            \"id\": subcategoryId\r\n          }\r\n          memoClass.sub_category = subCategoryValues;\r\n          this.sub_categoryList.push(subCategoryValues)\r\n        }\r\n\r\n\r\n        data.cc.forEach(element => {\r\n          this.chipSelectedEmployeeCC.push(element);\r\n          this.chipSelectedEmployeeCCid.push(element.id);\r\n        });\r\n        this.datas = data;\r\n        this.refId = data.id\r\n        this.forwardForm.patchValue({\r\n          subject: memoClass.subject,\r\n          watermarktext: memoClass.watermark_txt,\r\n          to_emp: this.chipSelectedEmployeeToid,\r\n          to_dept: this.chipSelectedEmployeeDeptid,\r\n          approver: this.chipSelectedEmployeeApproverid,\r\n          category: memoClass.category,\r\n          sub_category: memoClass.sub_category,\r\n          cc: this.chipSelectedEmployeeCCid,\r\n          ref_id: this.refId\r\n        }, { emitEvent: false })\r\n        return memoClass\r\n      })\r\n  }\r\n\r\n  createMemoInput() {\r\n    let data = this.forwardForm.controls;\r\n    let memoclass1 = new Memo();\r\n    memoclass1.confidential = this.Confidential;\r\n    memoclass1.priority = data.priority.value.id\r\n    let orderno: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        \"id\": eachitem,\r\n        \"order\": orderno + 1\r\n      }\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder)\r\n    });\r\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\r\n    memoclass1.approver = finalappArray\r\n    memoclass1.cc = this.chipSelectedEmployeeCCid\r\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass1.subject = this.forwardForm.value.subject;\r\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\r\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\r\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\r\n      memoclass1.type = 'iom'\r\n    }\r\n    if (this.rdoIOMnfa === 'Note for Approval') {\r\n      memoclass1.type = 'nfa'\r\n    }\r\n\r\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\r\n    if (this.forwardForm.value.category === undefined) {\r\n      memoclass1.category = null;\r\n    } else {\r\n      memoclass1.category = this.forwardForm.value.category.id;\r\n    }\r\n    if (this.forwardForm.value.sub_category === undefined) {\r\n      memoclass1.sub_category = null;\r\n    } else {\r\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\r\n    }\r\n    memoclass1.content = this.contentName;\r\n    if (this.memoFrom_rf === 'REPLY' || this.memoFrom_rf === 'FORWARD') {\r\n      memoclass1.source_id = this.source_id;\r\n      memoclass1.source_type = this.memoFrom_rf.toLowerCase();\r\n    }\r\n    let finalrecArray = [];\r\n    let ordernos: number = 0;\r\n    this.chipSelectedRecommenderId.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n\r\n    memoclass1.recommender = finalrecArray;\r\n    return memoclass1;\r\n  }\r\n\r\n  forwardMemoForm() {\r\n\r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.toastr.error('Memo Add', 'Invalid From value', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          return false;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\r\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\r\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', { timeOut: 1500 });\r\n        return false;\r\n      }\r\n    }\r\n    if (this.forwardForm.value.priority.id === undefined) {\r\n      this.toastr.error('Memo Add', 'Invalid Priority', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.forwardForm.value.subject === \"\") {\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.forwardForm.value.watermarktext === \"\") {\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n\r\n    var answer = window.confirm(\"Save Memo?\");\r\n    if (answer) {\r\n      //some code\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n\r\n    this.dataService.createForwardForm(this.createMemoInput(), this.images, this.refId)\r\n      .subscribe(res => {\r\n        let id = res.id\r\n        this.sharedService.fetchData.next(id);\r\n        this.router.navigate([\"/ememo/memoView\"], { queryParams: { mid: id, from: 'forward', MemoView: \"YES\" }, skipLocationChange: true });\r\n        return true\r\n      })\r\n  }\r\n\r\n  cancelClick() {\r\n    let id = this.getMemoIdValue(this.idValue)\r\n    this.router.navigate([\"/ememo/memoView\"], { queryParams: { mid: id, from: 'forward', MemoView: \"YES\" }, skipLocationChange: true });\r\n  }\r\n\r\n  // attachmentDelete(s, index) {\r\n  //   this.documentList.forEach((s, i) => {\r\n  //     if (index === i)\r\n  //       this.documentList.splice(index, 1)\r\n  //     this.images.splice(index, 1)\r\n\r\n  //   })\r\n  // }\r\n\r\n  fileChange(event) {\r\n    let imagesList = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    this.InputVar.nativeElement.value = \"\";\r\n    imagesList.push(this.images)\r\n    this.uploadList = [];\r\n    imagesList.forEach(item => {\r\n      let s = item;\r\n      s.forEach(it => {\r\n        let io = it.name;\r\n        this.uploadList.push(io);\r\n      })\r\n    });\r\n    // console.log('uplist2',this.uploadList)\r\n  }\r\n\r\n  OnCategoryChange(e) {\r\n    this.categoryID = e.source.value.id;\r\n  }\r\n\r\n  OnSenderChange(e) {\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.subcategoryInput.nativeElement.value = '';\r\n  }\r\n\r\n  focusCategory(e) {\r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.categoryInput.nativeElement.value === '') {\r\n      this.memoService.getCategory_Dept('', this.forwardForm.value.sender.id)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.categoryList = datas;\r\n        });\r\n    }\r\n  }\r\n\r\n  focussubCategory(e) {\r\n    // if (e.isUserInput == true) {\r\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\r\n      this.memoService.getSubCategory1(' ', this.categoryID)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.sub_categoryList = datas;\r\n          this.subcategoryInput.nativeElement.value = '';\r\n        });\r\n    }\r\n    // }\r\n  }\r\n\r\n  public displayCategory(categorydis?: Category): string | undefined {\r\n\r\n    return categorydis ? categorydis.name : undefined;\r\n  }\r\n  get categorydis() {\r\n    return this.forwardForm.get('category');\r\n  }\r\n\r\n  public displaysubCategory(subcategory?: subCategory): string | undefined {\r\n\r\n    return subcategory ? subcategory.name : undefined;\r\n  }\r\n  get subcategory() {\r\n    return this.forwardForm.get('sub_category');\r\n  }\r\n\r\n\r\n  public removeEmployeeTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeTo.splice(index, 1);\r\n      this.chipSelectedEmployeeToid.splice(index, 1);\r\n      this.employeeToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeToByName(event.option.value.full_name);\r\n    this.employeeToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeToByName(employeeName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC.length) {\r\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeBTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeBTo.splice(index, 1);\r\n      this.chipSelectedEmployeeBToid.splice(index, 1);\r\n      this.employeeBToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeBToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeBToByName(event.option.value.full_name);\r\n    this.employeeBToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeBToByName(employeeName) {\r\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto.length) {\r\n      return;\r\n    }\r\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto1.length) {\r\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\r\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id)\r\n    }\r\n  }\r\n\r\n\r\n  public removeEmployeeCC(employeecc: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeCC.splice(index, 1);\r\n      this.chipSelectedEmployeeCCid.splice(index, 1);\r\n      this.employeeccInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeccSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeCCByName(event.option.value.full_name);\r\n    this.employeeccInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeCCByName(employeeccName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC.length) {\r\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeApprover(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeApprover.splice(index, 1);\r\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\r\n      this.employeeApproverInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeApproverSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeApproverByName(event.option.value.full_name);\r\n    this.employeeApproverInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeApproverByName(employee) {\r\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeDept(dept: iDeptList): void {\r\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeDept.splice(index, 1);\r\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\r\n      this.employeeDeptInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeDeptSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeDeptByName(event.option.value.name);\r\n    this.employeeDeptInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeDeptByName(dept) {\r\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.name == dept);\r\n    if (foundEmployeeDept1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\r\n    if (foundEmployeeDept.length) {\r\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\r\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id)\r\n    }\r\n  }\r\n\r\n  deleteUpload(s, index) {\r\n    this.uploadList.forEach((s, i) => {\r\n      if (index === i) {\r\n        this.uploadList.splice(index, 1)\r\n        this.images.splice(index, 1);\r\n      }\r\n    });\r\n    // console.log('uplist3',this.uploadList)\r\n  }\r\n\r\n  getPriority() {\r\n    this.memoService.get_priority()\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n  }\r\n  getPriorityList() {\r\n    this.getPriority();\r\n    this.forwardForm.get('priority').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_priority()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n  }\r\n\r\n  public displayFnPriority(priority?: PriorityValue): string | undefined {\r\n    return priority ? priority.name : undefined;\r\n  }\r\n\r\n  get priority() {\r\n    return this.forwardForm.value.get('priority');\r\n  }\r\n\r\n\r\n\r\n  public removeEmployeeRecommender(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedRecommender.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedRecommender.splice(index, 1);\r\n      this.chipSelectedRecommenderId.splice(index, 1);\r\n      this.employeeRecommenderInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeRecommenderSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeRecommenderByName(event.option.value.full_name);\r\n    this.employeeRecommenderInput.nativeElement.value = '';\r\n  }\r\n\r\n  private selectEmployeeRecommenderByName(employee) {\r\n    let foundEmployeeApprover1 = this.chipSelectedRecommender.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedRecommender.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedRecommenderId.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n\r\n}","<div>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"forwardForm\" (ngSubmit)=\"forwardMemoForm()\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>From</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <table style=\"width: 100%;\">\r\n                            <tr>\r\n                                <td style=\"width: 40%;\">\r\n                                    <mat-form-field style=\"width: 250px;margin-left: 10px;\" (click)=\"getSender()\">\r\n                                        <input #rmInput placeholder=\"\" matInput formControlName=\"sender\"\r\n                                            [matAutocomplete]=\"senderValue\" required>\r\n                                        <mat-autocomplete #senderValue=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayFnSender\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let des of senderListData\" [value]=\"des\">\r\n                                                    {{des.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td style=\"width: 25%;\">\r\n                                    <div class=\"text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\r\n                                        style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">\r\n                                        {{rdoIOMnfa}}\r\n                                    </div>\r\n                                </td>\r\n                                <td style=\"width: 10%;\"></td>\r\n                                <td style=\"width: 25%;\">\r\n                                    <div class=\"text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\r\n                                        style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">\r\n                                        {{memoFrom_rf}}\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>To Department</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListDept>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeedept of chipSelectedEmployeeDept\" \r\n                                    [removable]=true (removed)=\"removeEmployeeDept(employeedept)\">\r\n                                    {{employeedept.name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeDeptInput [formControl]=\"employeeDeptControl\"\r\n                                    [matAutocomplete]=\"autodept\" [matChipInputFor]=\"chipListDept\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autodept=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeDeptSelected($event)\" (opened)=\"autocompleteDeptScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeedept of departmentList\" [value]=\"thisEmployeedept\">\r\n                                    {{thisEmployeedept.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO' && this.chipSelectedEmployeeDept.length === 0\">\r\n                    <td>\r\n                        <mat-label>To</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListTo>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeeto of chipSelectedEmployeeTo\"\r\n                                     [removable]=true (removed)=\"removeEmployeeTo(employeeto)\">\r\n                                    {{employeeto.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeToInput [formControl]=\"to_emp\" [matAutocomplete]=\"autoto\"\r\n                                    [matChipInputFor]=\"chipListTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoto=\"matAutocomplete\" (optionSelected)=\"employeeToSelected($event)\"\r\n                                (opened)=\"autocompleteToScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                    {{thisEmployee.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>BTo</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListBTo>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeebto of chipSelectedEmployeeBTo\"\r\n                                    [removable]=true (removed)=\"removeEmployeeBTo(employeebto)\">\r\n                                    {{employeebto.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeBToInput [formControl]=\"bto_emp\" [matAutocomplete]=\"autobto\"\r\n                                    [matChipInputFor]=\"chipListBTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autobto=\"matAutocomplete\" (optionSelected)=\"employeeBToSelected($event)\"\r\n                                (opened)=\"autocompleteBToScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                    {{thisEmployee.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>CC</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipList>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeecc of chipSelectedEmployeeCC\"\r\n                                     [removable]=true (removed)=\"removeEmployeeCC(employeecc)\">\r\n                                    {{employeecc.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeccInput [formControl]=\"employeeccControl\" [matAutocomplete]=\"autocc\"\r\n                                    [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autocc=\"matAutocomplete\" (optionSelected)=\"employeeccSelected($event)\"\r\n                                (opened)=\"autocompleteCCScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                        <mat-label>Signee</mat-label>\r\n                    </td>\r\n                    <td *ngIf=\"sharedService.Memofrom === 'NFA-MEMO'\">\r\n                        <mat-label>Approver</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListapprover>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeeapprover of chipSelectedEmployeeApprover\" \r\n                                    [removable]=true (removed)=\"removeEmployeeApprover(employeeapprover)\">\r\n                                    {{employeeapprover.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeApproverInput [formControl]=\"employeeApproverControl\"\r\n                                    [matAutocomplete]=\"autoapprover\" [matChipInputFor]=\"chipListapprover\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoapprover=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeApproverSelected($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Recommender</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListrecommender>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeerecommender of chipSelectedRecommender\" \r\n                                    [removable]=true (removed)=\"removeEmployeeRecommender(employeerecommender)\">\r\n                                    {{employeerecommender.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeRecommenderInput [formControl]=\"employeeRecommenderControl\"\r\n                                    [matAutocomplete]=\"autoapprover1\" [matChipInputFor]=\"chipListrecommender\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoapprover1=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeRecommenderSelected($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Subject</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <input matInput style=\"font-size: small;\" formControlName=\"subject\" autocomplete=\"off\">\r\n                        </mat-form-field>\r\n\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Cat/SubCat</td>\r\n                    <td>\r\n                        <table class=\"table\">\r\n                            <tr>\r\n                                <td width=\"25%\">\r\n                                    <mat-form-field style=\"width:250px !important;height:55px !important\">\r\n                                        <input matInput #categoryInput style=\"font-size: small;\"\r\n                                            formControlName=\"category\" placeholder=\"Category\"\r\n                                            [matAutocomplete]=\"autocategory\" (focus)=\"focusCategory($event)\">\r\n                                        <mat-autocomplete #autocategory=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayCategory\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option (onSelectionChange)=\"OnCategoryChange($event)\"\r\n                                                    *ngFor=\"let cat of categoryList\" [value]=\"cat\">{{cat.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%\">\r\n                                    <mat-form-field\r\n                                        style=\"width:250px !important;height:55px !important;margin-left:12px\">\r\n                                        <input matInput #subcategoryInput style=\"font-size: small;\"\r\n                                            formControlName=\"sub_category\" placeholder=\"Sub Category\"\r\n                                            [matAutocomplete]=\"autosubcategory\" (focus)=\"focussubCategory($event)\">\r\n                                        <mat-autocomplete #autosubcategory=\"matAutocomplete\"\r\n                                            [displayWith]=\"displaysubCategory\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let sub of sub_categoryList\" [value]=\"sub\">\r\n                                                    {{sub.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%\">\r\n                                    <mat-form-field style=\"width: 100px;margin-left: 10px;\" (click)=\"getPriorityList()\">\r\n                                        <input #rmInput placeholder=\"Priority\" matInput formControlName=\"priority\"\r\n                                            [matAutocomplete]=\"priorityValue\" required>\r\n                                        <mat-autocomplete #priorityValue=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayFnSender\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let des of priorityList\" [value]=\"des\">\r\n                                                    {{des.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%\">\r\n                                    <label class=\"container\"> <input type=\"checkbox\" data-md-icheck\r\n                                            [checked]=\"Confidential\"\r\n                                            (change)=\"Confidential = !Confidential\" />Confidential\r\n                                        <span class=\"checkmark\"></span>\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td> Attachment</td>\r\n                    <td>\r\n                        <table class=\"table\">\r\n                            <tr style=\"width: 80%;\">\r\n                                <td>\r\n                                    <div>\r\n                                        <span *ngFor=\"let upload of uploadList;index as i\" class=\"btn-link\">\r\n                                            {{ upload}}\r\n                                            <button mat-icon-button type=\"button\">\r\n                                                <mat-icon style=\"color: gray;\" aria-label=\"Edit\"\r\n                                                    (click)=\"deleteUpload(upload,i)\">\r\n                                                    delete</mat-icon>\r\n                                            </button>\r\n                                        </span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Department Reference No</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <input matInput style=\"font-size: small;\" formControlName=\"manual_reference\"\r\n                                autocomplete=\"off\">\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\">\r\n                        <div>\r\n                            <button (click)=\"enableEditor()\" [disabled]=\"!editorDisabled\">Enable</button>\r\n                            <button (click)=\"disableEditor()\" [disabled]=\"editorDisabled\">Disable</button>\r\n                        </div>\r\n                        <div>\r\n                            <div formControlName=\"html\" [(summernoteModel)]=\"contentName\" [ngxSummernote]=\"config\"\r\n                                [ngxSummernoteDisabled]=\"editorDisabled\">\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>\r\n                                    <label class=\"btn btn-primary\" style=\"margin-right: 2em;\">\r\n                                        <input type=\"file\" #takeInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,.dotx,.dotm,.docb,\r\n                                        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\"\r\n                                            multiple=\"true\" formControlName=\"images\" name=\"images\"\r\n                                            (change)=\"fileChange($event)\">\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-label style=\"margin-right: 2em;\">Watermark Text</mat-label>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-form-field style=\"margin-bottom: -1.25em;\">\r\n                                        <input matInput style=\"font-size: small;\" formControlName=\"watermarktext\"\r\n                                            autocomplete=\"off\">\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" class=\"btn btn-outline-primary\"\r\n                                        style=\"border-radius:40px;margin-left: 12px;\"\r\n                                        (click)=\" cancelClick()\">Cancel</button>\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"submit\" [disabled]=\"forwardForm.invalid\"\r\n                                        class=\"btn btn-outline-primary\"\r\n                                        style=\"border-radius:40px;margin-left: 12px;\">Submit</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n\r\n            </table>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div id=\"my-modal\" class=\"modal fade\" aria-labelledby=\"my-modalLabel\" aria-hidden=\"true\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" data-bs-dismiss=\"modal\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\" *ngIf=\"pdfUrls!=='pdf'\">\r\n                <img src=\"{{jpgUrls}}\" class=\"img-responsive\" style=\"width: 100%;\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}