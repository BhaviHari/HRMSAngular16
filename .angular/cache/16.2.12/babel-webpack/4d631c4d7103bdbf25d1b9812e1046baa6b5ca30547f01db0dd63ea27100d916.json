{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { Memo } from '../../memomodal/memo.model';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/service/memo.service\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"src/app/service/notification.service\";\nimport * as i7 from \"ngx-spinner\";\nimport * as i8 from \"../../service/shared.service\";\nimport * as i9 from \"@angular/platform-browser\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"ngx-summernote\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"@angular/material/form-field\";\nimport * as i17 from \"@angular/material/core\";\nimport * as i18 from \"@angular/material/autocomplete\";\nimport * as i19 from \"@angular/material/chips\";\nconst _c0 = [\"senderInput\"];\nconst _c1 = [\"categoryInput\"];\nconst _c2 = [\"subcategoryInput\"];\nconst _c3 = [\"employeeToInput\"];\nconst _c4 = [\"employeeBToInput\"];\nconst _c5 = [\"autoto\"];\nconst _c6 = [\"autobto\"];\nconst _c7 = [\"employeeccInput\"];\nconst _c8 = [\"autocc\"];\nconst _c9 = [\"employeeApproverInput\"];\nconst _c10 = [\"autoapprover\"];\nconst _c11 = [\"employeeDeptInput\"];\nconst _c12 = [\"autodept\"];\nconst _c13 = [\"takeInput\"];\nconst _c14 = [\"employeeInputRecommender\"];\nfunction MemoredraftComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 62);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoredraftComponent_ng_container_17_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r41 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r41);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r41.name, \" \");\n  }\n}\nfunction MemoredraftComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoredraftComponent_ng_container_17_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.senderListData);\n  }\n}\nfunction MemoredraftComponent_tr_25_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_tr_25_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r49);\n      const employeedept_r47 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r48.removeEmployeeDept(employeedept_r47));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeedept_r47 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeedept_r47.dept_name ? employeedept_r47.dept_name : employeedept_r47.name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_25_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeedept_r50 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeedept_r50);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeedept_r50.name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To Department\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 64);\n    i0.ɵɵtemplate(8, MemoredraftComponent_tr_25_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 66);\n    i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_tr_25_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.employeeDeptSelected($event));\n    })(\"opened\", function MemoredraftComponent_tr_25_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.autocompleteDeptScroll());\n    });\n    i0.ɵɵtemplate(13, MemoredraftComponent_tr_25_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r42 = i0.ɵɵreference(7);\n    const _r45 = i0.ɵɵreference(12);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.chipSelectedEmployeeDept);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.employeeDeptControl)(\"matAutocomplete\", _r45)(\"matChipInputFor\", _r42)(\"matChipInputSeparatorKeyCodes\", ctx_r4.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.departmentList);\n  }\n}\nfunction MemoredraftComponent_tr_26_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r61 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_tr_26_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r61);\n      const employeeto_r59 = restoredCtx.$implicit;\n      const ctx_r60 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r60.removeEmployeeTo(employeeto_r59));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeto_r59 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeto_r59.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_26_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r62 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r62);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r62.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 69);\n    i0.ɵɵtemplate(8, MemoredraftComponent_tr_26_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 70);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 71);\n    i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_tr_26_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r63.employeeToSelected($event));\n    })(\"opened\", function MemoredraftComponent_tr_26_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r65 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r65.autocompleteToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoredraftComponent_tr_26_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r54 = i0.ɵɵreference(7);\n    const _r57 = i0.ɵɵreference(12);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.chipSelectedEmployeeTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.to_emp)(\"matAutocomplete\", _r57)(\"matChipInputFor\", _r54)(\"matChipInputSeparatorKeyCodes\", ctx_r5.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.allEmployeeList);\n  }\n}\nfunction MemoredraftComponent_tr_27_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_tr_27_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r73);\n      const employeebto_r71 = restoredCtx.$implicit;\n      const ctx_r72 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r72.removeEmployeeBTo(employeebto_r71));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeebto_r71 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeebto_r71.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_27_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r74 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r74);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r74.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"BTo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 72);\n    i0.ɵɵtemplate(8, MemoredraftComponent_tr_27_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 73);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 74);\n    i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_tr_27_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r75 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r75.employeeBToSelected($event));\n    })(\"opened\", function MemoredraftComponent_tr_27_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r77 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r77.autocompleteBToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoredraftComponent_tr_27_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r66 = i0.ɵɵreference(7);\n    const _r69 = i0.ɵɵreference(12);\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.chipSelectedEmployeeBTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.bto_emp)(\"matAutocomplete\", _r69)(\"matChipInputFor\", _r66)(\"matChipInputSeparatorKeyCodes\", ctx_r6.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.allEmployeeList);\n  }\n}\nfunction MemoredraftComponent_tr_28_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r85 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_tr_28_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r85);\n      const employeecc_r83 = restoredCtx.$implicit;\n      const ctx_r84 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r84.removeEmployeeCC(employeecc_r83));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeecc_r83 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeecc_r83.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_28_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r86 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r86);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r86.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r88 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"CC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14)(6, \"mat-chip-grid\", null, 75);\n    i0.ɵɵtemplate(8, MemoredraftComponent_tr_28_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 16);\n    i0.ɵɵelement(9, \"input\", 17, 76);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 19, 77);\n    i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_tr_28_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const ctx_r87 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r87.employeeccSelected($event));\n    })(\"opened\", function MemoredraftComponent_tr_28_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r88);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.autocompleteCCScroll());\n    });\n    i0.ɵɵtemplate(13, MemoredraftComponent_tr_28_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r78 = i0.ɵɵreference(7);\n    const _r81 = i0.ɵɵreference(12);\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.chipSelectedEmployeeCC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r7.employeeccControl)(\"matAutocomplete\", _r81)(\"matChipInputFor\", _r78)(\"matChipInputSeparatorKeyCodes\", ctx_r7.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.allEmployeeList);\n  }\n}\nfunction MemoredraftComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Signee\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoredraftComponent_td_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Approver\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoredraftComponent_mat_chip_row_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r92 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_mat_chip_row_36_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r92);\n      const employeeapprover_r90 = restoredCtx.$implicit;\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.removeEmployeeApprover(employeeapprover_r90));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeapprover_r90 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeapprover_r90.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_mat_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r93 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r93);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r93.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_mat_chip_row_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r96 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 67);\n    i0.ɵɵlistener(\"removed\", function MemoredraftComponent_mat_chip_row_50_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r96);\n      const employeerecommender_r94 = restoredCtx.$implicit;\n      const ctx_r95 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r95.removeEmployeeApprover1(employeerecommender_r94));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 68);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeerecommender_r94 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeerecommender_r94.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_mat_option_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r97 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r97);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r97.full_name, \" \");\n  }\n}\nfunction MemoredraftComponent_mat_option_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 62);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoredraftComponent_ng_container_76_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r101 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 79);\n    i0.ɵɵlistener(\"onSelectionChange\", function MemoredraftComponent_ng_container_76_mat_option_1_Template_mat_option_onSelectionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r101);\n      const ctx_r100 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r100.OnCategoryChange($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r99 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r99);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", cat_r99.name, \" \");\n  }\n}\nfunction MemoredraftComponent_ng_container_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoredraftComponent_ng_container_76_mat_option_1_Template, 2, 2, \"mat-option\", 78);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.categoryList);\n  }\n}\nfunction MemoredraftComponent_mat_option_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 62);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoredraftComponent_ng_container_84_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sub_r103 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sub_r103);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", sub_r103.name, \" \");\n  }\n}\nfunction MemoredraftComponent_ng_container_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoredraftComponent_ng_container_84_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r27.sub_categoryList);\n  }\n}\nfunction MemoredraftComponent_mat_option_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 62);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoredraftComponent_ng_container_92_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r105 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r105);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r105.name, \" \");\n  }\n}\nfunction MemoredraftComponent_ng_container_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoredraftComponent_ng_container_92_mat_option_1_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r31.priorityList);\n  }\n}\nfunction MemoredraftComponent_span_113_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r109 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 80);\n    i0.ɵɵlistener(\"click\", function MemoredraftComponent_span_113_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r109);\n      const selected_r106 = restoredCtx.$implicit;\n      const ctx_r108 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r108.imagePreview(selected_r106));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 81)(3, \"mat-icon\", 82);\n    i0.ɵɵlistener(\"click\", function MemoredraftComponent_span_113_Template_mat_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r109);\n      const selected_r106 = restoredCtx.$implicit;\n      const index_r107 = restoredCtx.index;\n      const ctx_r110 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r110.attachmentDelete(selected_r106.file_name, index_r107));\n    });\n    i0.ɵɵtext(4, \" delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const selected_r106 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", selected_r106.file_name, \" \");\n  }\n}\nfunction MemoredraftComponent_span_114_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r114 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 83);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 81)(3, \"mat-icon\", 84);\n    i0.ɵɵlistener(\"click\", function MemoredraftComponent_span_114_Template_mat_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r114);\n      const upload_r111 = restoredCtx.$implicit;\n      const i_r112 = restoredCtx.index;\n      const ctx_r113 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r113.deleteUpload(upload_r111, i_r112));\n    });\n    i0.ɵɵtext(4, \" delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const upload_r111 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", upload_r111, \" \");\n  }\n}\nfunction MemoredraftComponent_tr_122_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Forward Comments\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 14);\n    i0.ɵɵelement(6, \"input\", 85);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MemoredraftComponent_td_146_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 86);\n    i0.ɵɵtext(2, \"Back\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", \"/ememo/memosummary\");\n  }\n}\nfunction MemoredraftComponent_td_147_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r116 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function MemoredraftComponent_td_147_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r116);\n      const ctx_r115 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r115.MovetoView());\n    });\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoredraftComponent_td_148_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r118 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function MemoredraftComponent_td_148_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r118);\n      const ctx_r117 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r117.saveAsDraft());\n    });\n    i0.ɵɵtext(2, \"Save as Draft\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoredraftComponent_div_152_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 88);\n    i0.ɵɵelement(1, \"img\", 89);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r39.jpgUrls, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class MemoredraftComponent {\n  formBuilder;\n  dataService;\n  router;\n  memoService;\n  toastr;\n  notification;\n  SpinnerService;\n  sharedService;\n  sanitizer;\n  route;\n  imageUrl = environment.apiURL;\n  forwardForm;\n  config = {\n    airMode: false,\n    tabDisable: true,\n    popover: {\n      table: [['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']], ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]],\n      link: [['link', ['linkDialogShow', 'unlink']]],\n      air: [['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']]]\n    },\n    height: '200px',\n    toolbar: [['misc', ['codeview', 'undo', 'redo', 'codeBlock']], ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']], ['fontsize', ['fontname', 'fontsize', 'color']], ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']], ['insert', ['table', 'picture', 'link', 'hr']]],\n    codeviewFilter: true,\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\n    codeviewIframeFilter: true\n  };\n  editorDisabled = false;\n  isLoading = false;\n  contentName;\n  dept_autochange = true;\n  separatorKeysCodes = [ENTER, COMMA];\n  allEmployeeList;\n  departmentList;\n  chipSelectedEmployeeTo = [];\n  chipSelectedEmployeeToid = [];\n  to_emp = new FormControl();\n  chipSelectedEmployeeBTo = [];\n  chipSelectedEmployeeBToid = [];\n  bto_emp = new FormControl();\n  chipSelectedEmployeeCC = [];\n  chipSelectedEmployeeCCid = [];\n  employeeccControl = new FormControl();\n  allEmployeeApprover;\n  chipSelectedEmployeeApprover = [];\n  chipSelectedEmployeeApproverid = [];\n  employeeApproverControl = new FormControl();\n  Confidential = false;\n  Parallel_Delivery = false;\n  SubmitCalled = false;\n  isButtonVisible = true;\n  memoFrom_rf;\n  images = [];\n  source_id;\n  has_next = true;\n  has_previous = true;\n  currentpage = 1;\n  isSender;\n  refid;\n  pdfUrls;\n  jpgUrls;\n  senderInput;\n  categoryInput;\n  subcategoryInput;\n  employeeToInput;\n  employeeBToInput;\n  matToAutocomplete;\n  matBToAutocomplete;\n  employeeccInput;\n  matAutocompleteCC;\n  employeeApproverInput;\n  matAutocompleteApp;\n  employeeDeptInput;\n  matAutocompleteDept;\n  autocompleteTrigger;\n  InputVar;\n  categoryID;\n  datas = [];\n  senderListData = [];\n  categoryList = [];\n  sub_categoryList = [];\n  documentList;\n  uploadList = [];\n  toListData;\n  chipSelectedEmployeeDept = [];\n  chipSelectedEmployeeDeptid = [];\n  employeeDeptControl = new FormControl();\n  priorityList;\n  rdoIOMnfa;\n  idValue;\n  refId;\n  refversion;\n  documentDatas;\n  intervalid;\n  chipSelectedRecommender = [];\n  employeeInputRecommender;\n  chipSelectedRecommenderId = [];\n  employeeRecommenderControl = new FormControl();\n  constructor(formBuilder, dataService, router, memoService, toastr, notification, SpinnerService, sharedService, sanitizer, route) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.router = router;\n    this.memoService = memoService;\n    this.toastr = toastr;\n    this.notification = notification;\n    this.SpinnerService = SpinnerService;\n    this.sharedService = sharedService;\n    this.sanitizer = sanitizer;\n    this.route = route;\n    this.intervalid = setInterval(() => {\n      this.saveAsDraft();\n    }, 60 * 1000);\n  }\n  ngOnDestroy() {\n    if (this.intervalid) {\n      clearInterval(this.intervalid);\n    }\n  }\n  ngOnInit() {\n    this.forwardForm = this.formBuilder.group({\n      subject: ['', Validators.required],\n      sender: ['', Validators.required],\n      manual_reference: [''],\n      watermarktext: [''],\n      to_emp: [''],\n      bto_emp: [''],\n      to_dept: [''],\n      approver: [''],\n      cc: [''],\n      category: [''],\n      sub_category: [''],\n      priority: [''],\n      images: [''],\n      forward_comments: null,\n      recommender: ['']\n    });\n    this.route.queryParams.subscribe(params => {\n      this.memoFrom_rf = params.memofrom_rf;\n    });\n    this.getForwardFetchData();\n    this.forwardForm.get('category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getCategory_Dept(value, this.forwardForm.value.sender.id).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.categoryList = datas;\n      this.subcategoryInput.nativeElement.value = '';\n    });\n    this.forwardForm.get('sub_category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getSubCategory1(value, this.categoryID).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.sub_categoryList = datas;\n    });\n    if (this.to_emp !== null) {\n      this.to_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.bto_emp !== null) {\n      this.bto_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeccControl !== null) {\n      this.employeeccControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.allEmployeeList = datas;\n        let datapagination = results[\"pagination\"];\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeApproverControl !== null) {\n      this.employeeApproverControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.allEmployeeList = datas;\n        let datapagination = results[\"pagination\"];\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeDeptControl !== null) {\n      this.employeeDeptControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.getDepartmentPage(value, 1, '').pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.departmentList = datas;\n        let todeptlist = datas;\n        const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\");\n        if (index !== -1) {\n          todeptlist.splice(index, 1);\n        }\n        if (this.departmentList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n      if (this.employeeRecommenderControl !== null) {\n        this.employeeRecommenderControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n          this.isLoading = true;\n        }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n          this.isLoading = false;\n        })))).subscribe(results => {\n          let datas = results[\"data\"];\n          let datapagination = results[\"pagination\"];\n          this.allEmployeeList = datas;\n          if (this.allEmployeeList.length >= 0) {\n            this.has_next = datapagination.has_next;\n            this.has_previous = datapagination.has_previous;\n            this.currentpage = datapagination.index;\n          }\n        });\n      }\n    }\n  } //end of oninit\n  enableEditor() {\n    this.editorDisabled = false;\n  }\n  disableEditor() {\n    this.editorDisabled = true;\n  }\n  onBlur() {\n    // console.log('Blur');\n  }\n  onDelete(file) {\n    // console.log('Delete file', file.url);\n  }\n  summernoteInit(event) {\n    // console.log(event);\n  }\n  autocompleteToScroll() {\n    setTimeout(() => {\n      if (this.matToAutocomplete && this.autocompleteTrigger && this.matToAutocomplete.panel) {\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeTo\n  autocompleteBToScroll() {\n    setTimeout(() => {\n      if (this.matBToAutocomplete && this.autocompleteTrigger && this.matBToAutocomplete.panel) {\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeBTo\n  autocompleteCCScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteCC && this.autocompleteTrigger && this.matAutocompleteCC.panel) {\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof autocomplete CC\n  autocompleteAppScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteApp && this.autocompleteTrigger && this.matAutocompleteApp.panel) {\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeApproval\n  autocompleteDeptScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteDept && this.autocompleteTrigger && this.matAutocompleteDept.panel) {\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '').subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.departmentList = this.departmentList.concat(datas);\n                if (this.departmentList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto matAutocompleteDept\n  getForwardFetchData() {\n    let id = this.sharedService.fetchData.value;\n    this.idValue = id;\n    this.dataService.getFetch(id).subscribe(data => {\n      this.Confidential = data.confidential;\n      this.Parallel_Delivery = data.parallel_delivery;\n      this.isSender = data.is_sender;\n      this.documentList = data.document_arr;\n      this.refid = data.ref_id;\n      this.refversion = data.ref_version;\n      this.source_id = data.source_id;\n      let priority = data[\"priority\"];\n      if (priority) {\n        let priorityid = priority['id'];\n        let name = priority['name'];\n        this.forwardForm.patchValue({\n          \"priority\": priority\n        });\n      }\n      let memoClass = new Memo();\n      memoClass.subject = data['subject'];\n      memoClass.watermark_txt = data['watermark_txt'];\n      memoClass.manual_reference = data['manual_reference'];\n      // memoClass.forward_comments = data['forward_comments']\n      if (data['type'] === 'iom') {\n        this.rdoIOMnfa = 'Inter-Office Memo';\n        this.sharedService.Memofrom = 'IOMEMO';\n      }\n      if (data['type'] === 'nfa') {\n        this.rdoIOMnfa = 'Note for Approval';\n        this.sharedService.Memofrom = 'NFA-MEMO';\n      }\n      this.contentName = data['content'];\n      let senderValue = data['sender'];\n      let senderId = senderValue['id'];\n      if (senderValue['name']) {\n        let deptValues = {\n          \"name\": senderValue.name,\n          \"id\": senderId\n        };\n        memoClass.sender = deptValues;\n        this.senderListData.push(deptValues);\n      }\n      let categoryValue = data['category'];\n      let categoryId = categoryValue['id'];\n      let categoryName = categoryValue['name'];\n      let cat = categoryId;\n      if (cat !== -1) {\n        let cats = {\n          \"name\": categoryName,\n          \"id\": categoryId\n        };\n        memoClass.category = cats;\n        this.categoryID = cat;\n        this.categoryList.push(cats);\n      }\n      let subCategoryValue = data['sub_category'];\n      let subcategoryId = subCategoryValue['id'];\n      let subcategoryName = subCategoryValue['name'];\n      let subCategory = subcategoryId;\n      if (subCategory !== -1) {\n        let subCategoryValues = {\n          \"name\": subcategoryName,\n          \"id\": subcategoryId\n        };\n        memoClass.sub_category = subCategoryValues;\n        this.sub_categoryList.push(subCategoryValues);\n      }\n      data.cc.forEach(element => {\n        this.chipSelectedEmployeeCC.push(element);\n        this.chipSelectedEmployeeCCid.push(element.id);\n      });\n      data.to_dept.forEach(element => {\n        this.chipSelectedEmployeeDept.push(element);\n        this.chipSelectedEmployeeDeptid.push(element.id);\n      });\n      data.approver.forEach(element => {\n        this.chipSelectedEmployeeApprover.push(element);\n        this.chipSelectedEmployeeApproverid.push(element.id);\n      });\n      data.recommender.forEach(element => {\n        this.chipSelectedRecommender.push(element);\n        this.chipSelectedRecommenderId.push(element.id);\n      });\n      this.datas = data;\n      this.refId = data.ref_id;\n      this.dept_autochange = true;\n      this.forwardForm.patchValue({\n        subject: memoClass.subject,\n        sender: memoClass.sender,\n        manual_reference: memoClass.manual_reference,\n        watermarktext: memoClass.watermark_txt,\n        to_emp: this.chipSelectedEmployeeToid,\n        to_dept: this.chipSelectedEmployeeDeptid,\n        approver: this.chipSelectedEmployeeApproverid,\n        recommender: this.chipSelectedRecommenderId,\n        category: memoClass.category,\n        sub_category: memoClass.sub_category,\n        cc: this.chipSelectedEmployeeCCid,\n        ref_id: this.refId\n      }, {\n        emitEvent: false\n      });\n      // this.dept_autochange=false;\n      return memoClass;\n    });\n    if (this.memoFrom_rf === 'CLOSEandCLONE') {\n      this.idValue = '';\n    }\n  } ///getForwardFetchData()\n  imagePreview(attachment) {\n    const getToken = localStorage.getItem(\"sessionData\");\n    let tokenValue = JSON.parse(getToken);\n    let token = tokenValue.token;\n    pdfUrls: String;\n    jpgUrls: String;\n    let filename = attachment.file_name;\n    let fileid = attachment.id;\n    let fileextn = filename.split('.');\n    if (fileextn[1] === \"png\" || fileextn[1] === \"jpeg\" || fileextn[1] === \"jpg\") {\n      this.jpgUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?token=\" + token;\n    } else {\n      this.pdfUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?type= \" + filename + \"&token=\" + token;\n      let anchor = document.createElement('a');\n      anchor.href = this.pdfUrls;\n      anchor.target = '_blank';\n      anchor.click();\n    }\n  }\n  createMemoInput() {\n    let data = this.forwardForm.controls;\n    let memoclass1 = new Memo();\n    memoclass1.confidential = this.Confidential;\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\n    memoclass1.priority = data.priority.value.id;\n    let orderno = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        \"id\": eachitem,\n        \"order\": orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass1.approver = finalappArray;\n    memoclass1.cc = this.chipSelectedEmployeeCCid;\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass1.subject = this.forwardForm.value.subject;\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\n    // memoclass1.forward_comments = this.forwardForm.value.forward_comments;\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\n      memoclass1.type = 'iom';\n    }\n    if (this.rdoIOMnfa === 'Note for Approval') {\n      memoclass1.type = 'nfa';\n    }\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\n    if (this.forwardForm.value.category === undefined) {\n      memoclass1.category = null;\n    } else {\n      memoclass1.category = this.forwardForm.value.category.id;\n    }\n    if (this.forwardForm.value.sub_category === undefined) {\n      memoclass1.sub_category = null;\n    } else {\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\n    }\n    memoclass1.content = this.contentName;\n    memoclass1.images = this.images;\n    let finalrecArray = [];\n    let ordernos = 0;\n    this.chipSelectedRecommenderId.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    memoclass1.recommender = finalrecArray;\n    return memoclass1;\n  }\n  forwardMemoForm() {\n    this.SpinnerService.show();\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid From value', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n    }\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\n        this.SpinnerService.hide();\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', {\n          timeOut: 1500\n        });\n        return false;\n      }\n    }\n    if (this.forwardForm.value.subject === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.forwardForm.value.watermarktext === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    this.dataService.createForwardForm(this.createMemoInput(), this.images, this.refId).subscribe(res => {\n      let id = res.id;\n      this.sharedService.fetchData.next(id);\n      this.SpinnerService.hide();\n      this.router.navigate([\"/ememo/memoView\"], {\n        queryParams: {\n          mid: id,\n          from: 'draft'\n        },\n        skipLocationChange: true\n      });\n      return true;\n    }, error => {\n      this.SpinnerService.hide();\n    });\n  }\n  OnCategoryChange(e) {\n    this.categoryID = e.source.value.id;\n  }\n  OnSenderChange(e) {\n    if (e.isUserInput == true) {\n      if (this.dept_autochange === false) {\n        this.categoryInput.nativeElement.value = '';\n        this.subcategoryInput.nativeElement.value = '';\n      }\n      this.dept_autochange = false;\n    }\n  }\n  focusCategory(e) {\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.categoryInput.nativeElement.value === '') {\n      this.memoService.getCategory_Dept('', this.forwardForm.value.sender.id).subscribe(results => {\n        let datas = results[\"data\"];\n        this.categoryList = datas;\n      });\n    }\n  }\n  focussubCategory(e) {\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\n      this.memoService.getSubCategory1(' ', this.categoryID).subscribe(results => {\n        let datas = results[\"data\"];\n        this.sub_categoryList = datas;\n        this.subcategoryInput.nativeElement.value = '';\n      });\n    }\n  }\n  displayCategory(categorydis) {\n    return categorydis ? categorydis.name : undefined;\n  }\n  get categorydis() {\n    return this.forwardForm.get('category');\n  }\n  displaysubCategory(subcategory) {\n    return subcategory ? subcategory.name : undefined;\n  }\n  get subcategory() {\n    return this.forwardForm.get('sub_category');\n  }\n  removeEmployeeTo(employee) {\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeTo.splice(index, 1);\n      this.chipSelectedEmployeeToid.splice(index, 1);\n      this.employeeToInput.nativeElement.value = '';\n    }\n  }\n  employeeToSelected(event) {\n    this.selectEmployeeToByName(event.option.value.full_name);\n    this.employeeToInput.nativeElement.value = '';\n  }\n  selectEmployeeToByName(employeeName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC.length) {\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeBTo(employee) {\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeBTo.splice(index, 1);\n      this.chipSelectedEmployeeBToid.splice(index, 1);\n      this.employeeBToInput.nativeElement.value = '';\n    }\n  }\n  employeeBToSelected(event) {\n    this.selectEmployeeBToByName(event.option.value.full_name);\n    this.employeeBToInput.nativeElement.value = '';\n  }\n  selectEmployeeBToByName(employeeName) {\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto.length) {\n      return;\n    }\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto1.length) {\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id);\n    }\n  }\n  removeEmployeeCC(employeecc) {\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\n    if (index >= 0) {\n      this.chipSelectedEmployeeCC.splice(index, 1);\n      this.chipSelectedEmployeeCCid.splice(index, 1);\n      this.employeeccInput.nativeElement.value = '';\n    }\n  }\n  employeeccSelected(event) {\n    this.selectEmployeeCCByName(event.option.value.full_name);\n    this.employeeccInput.nativeElement.value = '';\n  }\n  selectEmployeeCCByName(employeeccName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC.length) {\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeApprover(employee) {\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeApprover.splice(index, 1);\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\n      this.employeeApproverInput.nativeElement.value = '';\n    }\n  }\n  employeeApproverSelected(event) {\n    this.selectEmployeeApproverByName(event.option.value.full_name, event.option.value.id);\n    this.employeeApproverInput.nativeElement.value = '';\n  }\n  selectEmployeeApproverByName(employee, employeeid) {\n    let foundEmployeeApproverid = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.id == employeeid);\n    if (foundEmployeeApproverid.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id);\n    }\n  }\n  removeEmployeeDept(dept) {\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\n    if (index >= 0) {\n      this.chipSelectedEmployeeDept.splice(index, 1);\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\n      this.employeeDeptInput.nativeElement.value = '';\n    }\n  }\n  employeeDeptSelected(event) {\n    this.selectEmployeeDeptByName(event.option.value.name, event.option.value.id);\n    this.employeeDeptInput.nativeElement.value = '';\n  }\n  selectEmployeeDeptByName(dept, deptid) {\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.id == deptid);\n    if (foundEmployeeDept1.length) {\n      return;\n    }\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\n    if (foundEmployeeDept.length) {\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id);\n      console.log(\"this.chipSelectedEmployeeDept\", this.chipSelectedEmployeeDept);\n    }\n  }\n  redraftCreate() {\n    let data = this.forwardForm.controls;\n    let memoclass1 = new DraftMemo();\n    if (this.refId) {\n      memoclass1.ref_id = this.refId;\n    }\n    memoclass1.confidential = this.Confidential;\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\n    memoclass1.priority = data.priority.value.id;\n    let orderno = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        \"id\": eachitem,\n        \"order\": orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass1.approver = finalappArray;\n    memoclass1.cc = this.chipSelectedEmployeeCCid;\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass1.subject = this.forwardForm.value.subject;\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\n    memoclass1.forward_comments = this.forwardForm.value.forward_comments;\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\n      memoclass1.type = 'iom';\n    }\n    if (this.rdoIOMnfa === 'Note for Approval') {\n      memoclass1.type = 'nfa';\n    }\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\n    if (this.forwardForm.value.category === undefined) {\n      memoclass1.category = null;\n    } else {\n      memoclass1.category = this.forwardForm.value.category.id;\n    }\n    if (this.forwardForm.value.sub_category === undefined) {\n      memoclass1.sub_category = null;\n    } else {\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\n    }\n    memoclass1.content = this.contentName;\n    let finalrecArray = [];\n    let ordernos = 0;\n    this.chipSelectedRecommenderId.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    memoclass1.recommender = finalrecArray;\n    return memoclass1;\n  }\n  saveAsDraft() {\n    this.SpinnerService.show();\n    if (this.SubmitCalled === true) {\n      this.SpinnerService.hide();\n      return false;\n    }\n    this.isButtonVisible = false;\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          this.isButtonVisible = true;\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n    }\n    if (this.forwardForm.value.priority.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Priority', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.forwardForm.value.subject === '') {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.forwardForm.value.watermarktext === '') {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    // var answer = window.confirm(\"Save Draft data?\");\n    // if (answer) {\n    //     //some code\n    // }\n    // else {\n    //   return false;\n    // }\n    if (this.idValue === '') {\n      // this.uploadList = [];\n      this.dataService.saveAsDraft(this.redraftCreate(), '', this.images).subscribe(res => {\n        if (res.code === undefined) {\n          this.SpinnerService.hide();\n          this.notification.showSuccess('Draft Saved!...');\n          this.idValue = res.id;\n          this.dataService.getFetch(this.idValue).subscribe(result => {\n            this.documentList = result.document_arr;\n            this.uploadList = [];\n          }, error => {\n            this.SpinnerService.hide();\n          });\n        } else {\n          this.SpinnerService.hide();\n          this.notification.showError(res.description);\n        }\n        this.isButtonVisible = true;\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    } else {\n      this.dataService.reDraftSave(this.redraftCreate(), this.idValue, this.images, this.documentList).subscribe(result => {\n        if (result.code === undefined) {\n          this.SpinnerService.hide();\n          this.notification.showSuccess(\"Draft Updated...\");\n          this.dataService.getFetch(this.idValue).subscribe(result => {\n            this.documentList = result.document_arr;\n            this.uploadList = [];\n            this.images = [];\n          }, error => {\n            this.SpinnerService.hide();\n          });\n        } else {\n          this.SpinnerService.hide();\n          this.notification.showError(result.description);\n        }\n        this.isButtonVisible = true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    }\n  }\n  MovetoView() {\n    this.SubmitCalled = true;\n    if (this.forwardForm.value.sender.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid From value', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          this.SubmitCalled = false;\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          return false;\n        }\n      }\n    }\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\n        this.SpinnerService.hide();\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', {\n          timeOut: 1500\n        });\n        this.SubmitCalled = false;\n        return false;\n      }\n    }\n    if (this.forwardForm.value.priority.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Priority', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.forwardForm.value.subject === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.forwardForm.value.watermarktext === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    var answer = window.confirm(\"Save Memo?\");\n    if (answer) {\n      //some code\n    } else {\n      this.SubmitCalled = false;\n      return false;\n    }\n    this.SpinnerService.show();\n    if (this.idValue) {\n      this.dataService.reDraftSave(this.redraftCreate(), this.idValue, this.images, this.documentList).subscribe(res => {\n        if (res.code === undefined) {\n          this.SpinnerService.hide();\n          this.notification.showSuccess('Draft Updated and ready to create Memo!...');\n          this.dataService.sendMemo(this.idValue).subscribe(res => {\n            this.sharedService.fetchData.next(this.idValue);\n            this.SpinnerService.hide();\n            this.router.navigate(['/ememo/memoView'], {\n              queryParams: {\n                mid: this.idValue,\n                from: 'memoredraft',\n                MemoView: \"YES\"\n              },\n              skipLocationChange: true\n            });\n          }, error => {\n            this.SpinnerService.hide();\n          });\n        } else {\n          this.SpinnerService.hide();\n          this.notification.showError(res.description);\n        }\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    } else {\n      this.uploadList = [];\n      this.dataService.createNewMemo(this.createMemoInput(), this.images).subscribe(result => {\n        if (result.code === undefined) {\n          let id = result.id;\n          this.sharedService.fetchData.next(id);\n          this.idValue = result.id;\n          this.SpinnerService.hide();\n          this.notification.showSuccess(\"Memo created\");\n          this.router.navigate(['/ememo/memoView'], {\n            queryParams: {\n              mid: id,\n              MemoView: \"YES\"\n            },\n            skipLocationChange: true\n          });\n        } else {\n          this.SpinnerService.hide();\n          this.notification.showError(result.description);\n        }\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    }\n    // if (this.idValue){\n    //   this.redraftCreate()\n    //   this.uploadList = [];\n    //   this.dataService.saveDraft(this.idValue)\n    //     .subscribe(result => {\n    //       this.notification.showSuccess(\"Draft Moved to View ...\")\n    //       this.router.navigate([\"/ememo/memoView\"], { queryParams: { mid: this.idValue }, skipLocationChange: true });\n    //     })\n    // }\n  }\n  attachmentDelete(s, index) {\n    this.documentList.forEach((s, i) => {\n      if (index === i) this.documentList.splice(index, 1);\n      this.images.splice(index, 1);\n    });\n  }\n  fileChange(event) {\n    let imagesList = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    this.InputVar.nativeElement.value = \"\";\n    imagesList.push(this.images);\n    this.uploadList = [];\n    imagesList.forEach(item => {\n      let s = item;\n      s.forEach(it => {\n        let io = it.name;\n        this.uploadList.push(io);\n      });\n    });\n  }\n  deleteUpload(s, index) {\n    this.uploadList.forEach((s, i) => {\n      if (index === i) {\n        this.uploadList.splice(index, 1);\n        this.images.splice(index, 1);\n      }\n    });\n  }\n  getSenderList() {\n    this.memoService.get_empTodeptMapping1('memo').subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderListData = datas;\n      const index = this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      if (index !== -1) {\n        this.senderListData.splice(index, 1);\n      }\n    });\n  }\n  getSender() {\n    this.getSenderList();\n    this.forwardForm.get('sender').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_empTodeptMapping1('memo').pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderListData = datas;\n      const index = this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      if (index !== -1) {\n        this.senderListData.splice(index, 1);\n      }\n      this.categoryInput.nativeElement.value = '';\n      this.subcategoryInput.nativeElement.value = '';\n    });\n  }\n  displayFnSender(senderValue) {\n    return senderValue ? senderValue.name : undefined;\n  }\n  get senderValue() {\n    return this.forwardForm.value.get('sender');\n  }\n  getPriority() {\n    this.memoService.get_priority().subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n  }\n  getPriorityList() {\n    this.getPriority();\n    this.forwardForm.get('priority').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_priority().pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n  }\n  displayFnPriority(priority) {\n    return priority ? priority.name : undefined;\n  }\n  get priority() {\n    return this.forwardForm.value.get('priority');\n  }\n  removeEmployeeApprover1(employee) {\n    const index = this.chipSelectedRecommender.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedRecommender.splice(index, 1);\n      this.chipSelectedRecommenderId.splice(index, 1);\n      this.employeeInputRecommender.nativeElement.value = '';\n    }\n  }\n  employeeApproverSelected1(event) {\n    this.selectEmployeeApproverByName1(event.option.value.full_name);\n    this.employeeInputRecommender.nativeElement.value = '';\n  }\n  selectEmployeeApproverByName1(employee) {\n    let foundEmployeeApprover1 = this.chipSelectedRecommender.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover1.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedRecommender.push(foundEmployeeApprover[0]);\n      this.chipSelectedRecommenderId.push(foundEmployeeApprover[0].id);\n    }\n  }\n  static ɵfac = function MemoredraftComponent_Factory(t) {\n    return new (t || MemoredraftComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MemoService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.NgxSpinnerService), i0.ɵɵdirectiveInject(i8.SharedService), i0.ɵɵdirectiveInject(i9.DomSanitizer), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MemoredraftComponent,\n    selectors: [[\"app-memoredraft\"]],\n    viewQuery: function MemoredraftComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(_c13, 5);\n        i0.ɵɵviewQuery(_c14, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.senderInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.categoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subcategoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeBToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matBToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeccInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteCC = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeApproverInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteApp = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeDeptInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteDept = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.InputVar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeInputRecommender = _t.first);\n      }\n    },\n    decls: 156,\n    vars: 54,\n    consts: [[1, \"content\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"width\", \"100%\"], [2, \"width\", \"40%\"], [2, \"width\", \"250px\", \"margin-left\", \"10px\"], [\"placeholder\", \"\", \"matInput\", \"\", \"formControlName\", \"sender\", \"required\", \"\", 3, \"matAutocomplete\", \"focus\"], [\"senderInput\", \"\"], [3, \"displayWith\"], [\"senderValue\", \"matAutocomplete\"], [\"class\", \"is-loading\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"width\", \"25%\"], [1, \"text-white\", \"text-center\", \"mx-auto\", \"rounded\", \"pt-2\", \"pb-2\", \"font-weight-bold\", 2, \"background-color\", \"#a39e9e\", \"font-family\", \"'Arial Narrow Bold', sans-serif\"], [2, \"width\", \"10%\"], [1, \"memo-form\", 2, \"margin-bottom\", \"-1.25em\"], [\"chipListapprover\", \"\"], [\"style\", \"font-size: small;\", 3, \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\"], [\"employeeApproverInput\", \"\"], [3, \"optionSelected\", \"opened\"], [\"autoapprover\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"chipListrecommender\", \"\"], [\"employeeInputRecommender\", \"\"], [\"autoapprover1\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"subject\", \"required\", \"\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [1, \"table\"], [\"width\", \"25%\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\"], [\"matInput\", \"\", \"formControlName\", \"category\", \"placeholder\", \"Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"categoryInput\", \"\"], [\"autocategory\", \"matAutocomplete\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"formControlName\", \"sub_category\", \"placeholder\", \"Sub Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"subcategoryInput\", \"\"], [\"autosubcategory\", \"matAutocomplete\"], [2, \"width\", \"100px\", \"margin-left\", \"10px\", 3, \"click\"], [\"placeholder\", \"Priority\", \"matInput\", \"\", \"formControlName\", \"priority\", \"required\", \"\", 3, \"matAutocomplete\"], [\"rmInput\", \"\"], [\"priorityValue\", \"matAutocomplete\"], [1, \"container\"], [\"type\", \"checkbox\", \"data-md-icheck\", \"\", 3, \"checked\", \"change\"], [1, \"checkmark\"], [2, \"width\", \"80%\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modal\", \"matTooltip\", \"Images\", \"class\", \"btn-link\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"btn-link\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"manual_reference\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"colspan\", \"2\"], [3, \"disabled\", \"click\"], [3, \"summernoteModel\", \"ngxSummernote\", \"ngxSummernoteDisabled\", \"summernoteModelChange\"], [1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"2em\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\\n                                    .dotx,.dotm,.docb,\\n                                    .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"multiple\", \"true\", \"formControlName\", \"images\", \"name\", \"images\", 3, \"change\"], [\"takeInput\", \"\"], [2, \"margin-right\", \"2em\"], [2, \"margin-bottom\", \"-1.25em\"], [\"matInput\", \"\", \"formControlName\", \"watermarktext\", \"required\", \"\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"id\", \"my-modal\", \"aria-labelledby\", \"my-modalLabel\", \"aria-hidden\", \"true\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\"], [\"data-bs-dismiss\", \"modal\", 1, \"modal-dialog\"], [1, \"modal-content\"], [\"class\", \"modal-body\", 4, \"ngIf\"], [\"bdColor\", \"rgba(51, 51, 51, 0.8)\", \"size\", \"default\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [1, \"is-loading\"], [3, \"value\"], [\"chipListDept\", \"\"], [\"employeeDeptInput\", \"\"], [\"autodept\", \"matAutocomplete\"], [2, \"font-size\", \"small\", 3, \"removable\", \"removed\"], [\"matChipRemove\", \"\"], [\"chipListTo\", \"\"], [\"employeeToInput\", \"\"], [\"autoto\", \"matAutocomplete\"], [\"chipListBTo\", \"\"], [\"employeeBToInput\", \"\"], [\"autobto\", \"matAutocomplete\"], [\"chipList\", \"\"], [\"employeeccInput\", \"\"], [\"autocc\", \"matAutocomplete\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modal\", \"matTooltip\", \"Images\", 1, \"btn-link\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\"], [\"aria-label\", \"Edit\", 2, \"color\", \"blue\", 3, \"click\"], [1, \"btn-link\"], [\"aria-label\", \"Edit\", 2, \"color\", \"gray\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"forward_comments\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"type\", \"button\", \"skipLocationChange\", \"\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"routerLink\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"click\"], [1, \"modal-body\"], [1, \"img-responsive\", 2, \"width\", \"100%\", 3, \"src\"]],\n    template: function MemoredraftComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MemoredraftComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.forwardMemoForm();\n        });\n        i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\")(5, \"mat-label\");\n        i0.ɵɵtext(6, \"From\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"td\")(8, \"table\", 2)(9, \"tr\")(10, \"td\", 3)(11, \"mat-form-field\", 4)(12, \"input\", 5, 6);\n        i0.ɵɵlistener(\"focus\", function MemoredraftComponent_Template_input_focus_12_listener() {\n          return ctx.getSender();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-autocomplete\", 7, 8);\n        i0.ɵɵtemplate(16, MemoredraftComponent_mat_option_16_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(17, MemoredraftComponent_ng_container_17_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"td\", 11)(19, \"div\", 12);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"td\", 13);\n        i0.ɵɵelementStart(22, \"td\", 11)(23, \"div\", 12);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(25, MemoredraftComponent_tr_25_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(26, MemoredraftComponent_tr_26_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(27, MemoredraftComponent_tr_27_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵtemplate(28, MemoredraftComponent_tr_28_Template, 14, 7, \"tr\", 10);\n        i0.ɵɵelementStart(29, \"tr\");\n        i0.ɵɵtemplate(30, MemoredraftComponent_td_30_Template, 3, 0, \"td\", 10);\n        i0.ɵɵtemplate(31, MemoredraftComponent_td_31_Template, 3, 0, \"td\", 10);\n        i0.ɵɵelementStart(32, \"td\")(33, \"mat-form-field\", 14)(34, \"mat-chip-grid\", null, 15);\n        i0.ɵɵtemplate(36, MemoredraftComponent_mat_chip_row_36_Template, 4, 2, \"mat-chip-row\", 16);\n        i0.ɵɵelement(37, \"input\", 17, 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"mat-autocomplete\", 19, 20);\n        i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_Template_mat_autocomplete_optionSelected_39_listener($event) {\n          return ctx.employeeApproverSelected($event);\n        })(\"opened\", function MemoredraftComponent_Template_mat_autocomplete_opened_39_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(41, MemoredraftComponent_mat_option_41_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(42, \"tr\")(43, \"td\")(44, \"mat-label\");\n        i0.ɵɵtext(45, \"Recommender\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"td\")(47, \"mat-form-field\", 14)(48, \"mat-chip-grid\", null, 22);\n        i0.ɵɵtemplate(50, MemoredraftComponent_mat_chip_row_50_Template, 4, 2, \"mat-chip-row\", 16);\n        i0.ɵɵelement(51, \"input\", 17, 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-autocomplete\", 19, 24);\n        i0.ɵɵlistener(\"optionSelected\", function MemoredraftComponent_Template_mat_autocomplete_optionSelected_53_listener($event) {\n          return ctx.employeeApproverSelected1($event);\n        })(\"opened\", function MemoredraftComponent_Template_mat_autocomplete_opened_53_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(55, MemoredraftComponent_mat_option_55_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(56, \"tr\")(57, \"td\")(58, \"mat-label\");\n        i0.ɵɵtext(59, \"Subject\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(60, \"td\")(61, \"mat-form-field\", 14);\n        i0.ɵɵelement(62, \"input\", 25);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"tr\")(64, \"td\");\n        i0.ɵɵtext(65, \"Cat/SubCat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"td\")(67, \"table\", 26)(68, \"tr\")(69, \"td\", 27)(70, \"mat-form-field\", 28)(71, \"input\", 29, 30);\n        i0.ɵɵlistener(\"focus\", function MemoredraftComponent_Template_input_focus_71_listener($event) {\n          return ctx.focusCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"mat-autocomplete\", 7, 31);\n        i0.ɵɵtemplate(75, MemoredraftComponent_mat_option_75_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(76, MemoredraftComponent_ng_container_76_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(77, \"td\", 27)(78, \"mat-form-field\", 32)(79, \"input\", 33, 34);\n        i0.ɵɵlistener(\"focus\", function MemoredraftComponent_Template_input_focus_79_listener($event) {\n          return ctx.focussubCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"mat-autocomplete\", 7, 35);\n        i0.ɵɵtemplate(83, MemoredraftComponent_mat_option_83_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(84, MemoredraftComponent_ng_container_84_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(85, \"td\", 27)(86, \"mat-form-field\", 36);\n        i0.ɵɵlistener(\"click\", function MemoredraftComponent_Template_mat_form_field_click_86_listener() {\n          return ctx.getPriorityList();\n        });\n        i0.ɵɵelement(87, \"input\", 37, 38);\n        i0.ɵɵelementStart(89, \"mat-autocomplete\", 7, 39);\n        i0.ɵɵtemplate(91, MemoredraftComponent_mat_option_91_Template, 2, 0, \"mat-option\", 9);\n        i0.ɵɵtemplate(92, MemoredraftComponent_ng_container_92_Template, 2, 1, \"ng-container\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(93, \"td\", 27)(94, \"label\", 40)(95, \"input\", 41);\n        i0.ɵɵlistener(\"change\", function MemoredraftComponent_Template_input_change_95_listener() {\n          return ctx.Confidential = !ctx.Confidential;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(96, \"Confidential \");\n        i0.ɵɵelement(97, \"span\", 42);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(98, \"tr\");\n        i0.ɵɵelement(99, \"td\");\n        i0.ɵɵelementStart(100, \"td\")(101, \"label\", 40)(102, \"input\", 41);\n        i0.ɵɵlistener(\"change\", function MemoredraftComponent_Template_input_change_102_listener() {\n          return ctx.Parallel_Delivery = !ctx.Parallel_Delivery;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(103, \"Parallel Delivery \");\n        i0.ɵɵelement(104, \"span\", 42);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(105, \"tr\")(106, \"td\");\n        i0.ɵɵtext(107, \" Attachment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(108, \"td\")(109, \"table\", 26)(110, \"tr\", 43)(111, \"td\")(112, \"div\");\n        i0.ɵɵtemplate(113, MemoredraftComponent_span_113_Template, 5, 1, \"span\", 44);\n        i0.ɵɵtemplate(114, MemoredraftComponent_span_114_Template, 5, 1, \"span\", 45);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(115, \"tr\")(116, \"td\")(117, \"mat-label\");\n        i0.ɵɵtext(118, \"Department Reference No\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(119, \"td\")(120, \"mat-form-field\", 14);\n        i0.ɵɵelement(121, \"input\", 46);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(122, MemoredraftComponent_tr_122_Template, 7, 0, \"tr\", 10);\n        i0.ɵɵelementStart(123, \"tr\")(124, \"td\", 47)(125, \"div\")(126, \"button\", 48);\n        i0.ɵɵlistener(\"click\", function MemoredraftComponent_Template_button_click_126_listener() {\n          return ctx.enableEditor();\n        });\n        i0.ɵɵtext(127, \"Enable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(128, \"button\", 48);\n        i0.ɵɵlistener(\"click\", function MemoredraftComponent_Template_button_click_128_listener() {\n          return ctx.disableEditor();\n        });\n        i0.ɵɵtext(129, \"Disable\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(130, \"div\")(131, \"div\", 49);\n        i0.ɵɵlistener(\"summernoteModelChange\", function MemoredraftComponent_Template_div_summernoteModelChange_131_listener($event) {\n          return ctx.contentName = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(132, \"tr\")(133, \"td\", 47)(134, \"table\")(135, \"tr\")(136, \"td\")(137, \"label\", 50)(138, \"input\", 51, 52);\n        i0.ɵɵlistener(\"change\", function MemoredraftComponent_Template_input_change_138_listener($event) {\n          return ctx.fileChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(140, \"td\")(141, \"mat-label\", 53);\n        i0.ɵɵtext(142, \"Watermark Text\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(143, \"td\")(144, \"mat-form-field\", 54);\n        i0.ɵɵelement(145, \"input\", 55);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(146, MemoredraftComponent_td_146_Template, 3, 1, \"td\", 10);\n        i0.ɵɵtemplate(147, MemoredraftComponent_td_147_Template, 3, 0, \"td\", 10);\n        i0.ɵɵtemplate(148, MemoredraftComponent_td_148_Template, 3, 0, \"td\", 10);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(149, \"div\", 56)(150, \"div\", 57)(151, \"div\", 58);\n        i0.ɵɵtemplate(152, MemoredraftComponent_div_152_Template, 2, 1, \"div\", 59);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(153, \"ngx-spinner\", 60)(154, \"p\", 61);\n        i0.ɵɵtext(155, \"Loading... \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n        const _r10 = i0.ɵɵreference(35);\n        const _r13 = i0.ɵɵreference(40);\n        const _r15 = i0.ɵɵreference(49);\n        const _r18 = i0.ɵɵreference(54);\n        const _r21 = i0.ɵɵreference(74);\n        const _r25 = i0.ɵɵreference(82);\n        const _r29 = i0.ɵɵreference(90);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.forwardForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.rdoIOMnfa, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.memoFrom_rf, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\" && ctx.chipSelectedEmployeeDept.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"NFA-MEMO\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedEmployeeApprover);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeApproverControl)(\"matAutocomplete\", _r13)(\"matChipInputFor\", _r10)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedRecommender);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeRecommenderControl)(\"matAutocomplete\", _r18)(\"matChipInputFor\", _r15)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"matAutocomplete\", _r21);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r25);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displaysubCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r29);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.Confidential);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.Parallel_Delivery);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.documentList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uploadList);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.memoFrom_rf === \"FORWARD\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.editorDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"summernoteModel\", ctx.contentName)(\"ngxSummernote\", ctx.config)(\"ngxSummernoteDisabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.pdfUrls !== \"pdf\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"fullScreen\", true);\n      }\n    },\n    dependencies: [i3.RouterLink, i10.NgForOf, i10.NgIf, i11.NgxSummernoteDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i7.NgxSpinnerComponent, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i12.MatIconButton, i13.MatIcon, i14.MatTooltip, i15.MatInput, i16.MatFormField, i16.MatLabel, i17.MatOption, i18.MatAutocomplete, i18.MatAutocompleteTrigger, i19.MatChipGrid, i19.MatChipInput, i19.MatChipRemove, i19.MatChipRow],\n    styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n  display: block;\\n  position: relative;\\n  padding-left: 1px;\\n  margin-top: 20px;\\n  margin-bottom: 2px;\\n  margin-right: 20px;\\n  margin-left: -40px;\\n  cursor: pointer;\\n  font-size: 18px;\\n  -webkit-user-select: none;\\n  user-select: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  position: absolute;\\n  opacity: 0;\\n  cursor: pointer;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15;\\n  left: 5;\\n  height: 25px;\\n  width: 25px;\\n  background-color: #eee;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]:hover   input[_ngcontent-%COMP%]    ~ .checkmark[_ngcontent-%COMP%] {\\n  background-color: #ccc;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%] {\\n  background-color: #2196F3;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  display: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%]:after {\\n  display: block;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]:after {\\n  left: 9px;\\n  top: 5px;\\n  width: 5px;\\n  height: 10px;\\n  border: solid white;\\n  border-width: 0 3px 3px 0;\\n  transform: rotate(45deg);\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  margin-left: 47%;\\n  margin-top: 4%;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n  margin-left: 3%;\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n  margin-left: 220px;\\n  margin-top: 10%;\\n}\\n\\n.form1[_ngcontent-%COMP%] {\\n  width: 1500px;\\n}\\n\\n.form2[_ngcontent-%COMP%] {\\n  width: 2000px;\\n}\\n\\n.uploadImages[_ngcontent-%COMP%] {\\n  margin-right: 160px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer), .mat-card-content[_ngcontent-%COMP%]    > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer) {\\n  margin-bottom: 0;\\n  margin: 6px;\\n}\\n\\n.btn-submit[_ngcontent-%COMP%] {\\n  margin-left: 20px;\\n}\\n\\n.btn-cancel[_ngcontent-%COMP%] {\\n  margin-left: 40px;\\n}\\n\\n.memo-form[_ngcontent-%COMP%] {\\n  width: 900px !important;\\n  margin-left: 10px;\\n}\\n\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 0px solid white;\\n  border-collapse: collapse;\\n  padding: 0px;\\n  margin: 0;\\n  border-spacing: 0px;\\n}\\n\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\n  background-color: white;\\n}\\n\\ntable[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: white;\\n}\\n\\n.mat-form-field-infix[_ngcontent-%COMP%] {\\n  padding: 0em 0 !important;\\n  border-top: 0em solid transparent !important;\\n}\\n\\n.mat-chip[_ngcontent-%COMP%] {\\n  background-color: white !important;\\n  border: 1px solid #B7B8BB;\\n  border-radius: 16px;\\n}\\n\\n.mat-radio-button[_ngcontent-%COMP%]    ~ .mat-radio-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1lbW8vbWVtb3JlZHJhZnQvbWVtb3JlZHJhZnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQUE7QUFDQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0VBR0EsaUJBQUE7QUFDRjs7QUFFQSx3Q0FBQTtBQUNBO0VBQ0Usa0JBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBLDZCQUFBO0FBQ0E7RUFDRSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBLCtDQUFBO0FBQ0E7RUFDRSxzQkFBQTtBQUNGOztBQUVBLHdEQUFBO0FBQ0E7RUFDRSx5QkFBQTtBQUNGOztBQUVBLDZEQUFBO0FBQ0E7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUEsb0NBQUE7QUFDQTtFQUNFLGNBQUE7QUFDRjs7QUFFQSxrQ0FBQTtBQUNBO0VBQ0UsU0FBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFHQSx3QkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0FBQ0Y7O0FBRUE7O0VBRUUsZ0JBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFDQTtFQUNFLHVCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLG1CQUFBO0FBRUY7O0FBQ0E7RUFDRSx1QkFBQTtBQUVGOztBQUFBO0VBQ0UsdUJBQUE7QUFHRjs7QUFEQTtFQUNFLHlCQUFBO0VBQ0EsNENBQUE7QUFJRjs7QUFGQTtFQUNFLGtDQUFBO0VBQ0EseUJBQUE7RUFDQSxtQkFBQTtBQUtGOztBQUhBO0VBQ0UsaUJBQUE7QUFNRiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFRoZSBjb250YWluZXIgKi9cclxuLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHBhZGRpbmctbGVmdDogMXB4O1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxuICBtYXJnaW4tbGVmdDotNDBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcclxuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbi8qIEhpZGUgdGhlIGJyb3dzZXIncyBkZWZhdWx0IGNoZWNrYm94ICovXHJcbi5jb250YWluZXIgaW5wdXQge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBvcGFjaXR5OiAwO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLyogQ3JlYXRlIGEgY3VzdG9tIGNoZWNrYm94ICovXHJcbi5jaGVja21hcmsge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDE1O1xyXG4gIGxlZnQ6IDU7XHJcbiAgaGVpZ2h0OiAyNXB4O1xyXG4gIHdpZHRoOiAyNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbn1cclxuXHJcbi8qIE9uIG1vdXNlLW92ZXIsIGFkZCBhIGdyZXkgYmFja2dyb3VuZCBjb2xvciAqL1xyXG4uY29udGFpbmVyOmhvdmVyIGlucHV0IH4gLmNoZWNrbWFyayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxufVxyXG5cclxuLyogV2hlbiB0aGUgY2hlY2tib3ggaXMgY2hlY2tlZCwgYWRkIGEgYmx1ZSBiYWNrZ3JvdW5kICovXHJcbi5jb250YWluZXIgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja21hcmsge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2RjM7XHJcbn1cclxuXHJcbi8qIENyZWF0ZSB0aGUgY2hlY2ttYXJrL2luZGljYXRvciAoaGlkZGVuIHdoZW4gbm90IGNoZWNrZWQpICovXHJcbi5jaGVja21hcms6YWZ0ZXIge1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIFNob3cgdGhlIGNoZWNrbWFyayB3aGVuIGNoZWNrZWQgKi9cclxuLmNvbnRhaW5lciBpbnB1dDpjaGVja2VkIH4gLmNoZWNrbWFyazphZnRlciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qIFN0eWxlIHRoZSBjaGVja21hcmsvaW5kaWNhdG9yICovXHJcbi5jb250YWluZXIgLmNoZWNrbWFyazphZnRlciB7XHJcbiAgbGVmdDogOXB4O1xyXG4gIHRvcDogNXB4O1xyXG4gIHdpZHRoOiA1cHg7XHJcbiAgaGVpZ2h0OiAxMHB4O1xyXG4gIGJvcmRlcjogc29saWQgd2hpdGU7XHJcbiAgYm9yZGVyLXdpZHRoOiAwIDNweCAzcHggMDtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxufVxyXG5cclxuLnRpdGxlIHtcclxuICBtYXJnaW4tbGVmdDogNDclO1xyXG4gIG1hcmdpbi10b3A6IDQlO1xyXG59XHJcblxyXG4uY29udGVudCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDMlO1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIyMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxufVxyXG5cclxuLmZvcm0xIHtcclxuICB3aWR0aDogMTUwMHB4O1xyXG59XHJcblxyXG4uZm9ybTIge1xyXG4gIHdpZHRoOiAyMDAwcHg7XHJcbn1cclxuXHJcbi51cGxvYWRJbWFnZXMge1xyXG4gIG1hcmdpbi1yaWdodDogMTYwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZD46bGFzdC1jaGlsZDpub3QoLm1hdC1jYXJkLWZvb3RlciksXHJcbi5tYXQtY2FyZC1jb250ZW50PjpsYXN0LWNoaWxkOm5vdCgubWF0LWNhcmQtZm9vdGVyKSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBtYXJnaW46IDZweDtcclxufVxyXG5cclxuLmJ0bi1zdWJtaXQge1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4uYnRuLWNhbmNlbCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbn1cclxuXHJcbi5tZW1vLWZvcm17XHJcbiAgd2lkdGg6OTAwcHggIWltcG9ydGFudDtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG50YWJsZSwgdGggLCB0ZCAge1xyXG4gIGJvcmRlcjogMHB4IHNvbGlkIHdoaXRlO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgcGFkZGluZzogMHB4O1xyXG4gIG1hcmdpbjogMDtcclxuICBib3JkZXItc3BhY2luZzogMHB4O1xyXG4gIFxyXG59XHJcbnRhYmxlIHRyOm50aC1jaGlsZChvZGQpIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG50YWJsZSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcbi5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XHJcbiAgcGFkZGluZzogMGVtIDAgIWltcG9ydGFudDtcclxuICBib3JkZXItdG9wOiAwZW0gc29saWQgdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxufVxyXG4ubWF0LWNoaXB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjQjdCOEJCO1xyXG4gIGJvcmRlci1yYWRpdXM6IDE2cHg7XHJcbn1cclxuLm1hdC1yYWRpby1idXR0b24gfiAubWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport class DraftMemo {\n  ref_id;\n  subject;\n  watermark_txt;\n  manual_reference;\n  sender;\n  type;\n  category;\n  sub_category;\n  content;\n  to_emp;\n  bto_emp;\n  to_dept;\n  approver;\n  cc;\n  images;\n  confidential;\n  priority;\n  source_id;\n  source_type;\n  forward_comments;\n  recommender;\n  parallel_delivery;\n}","map":{"version":3,"names":["FormControl","Validators","fromEvent","Memo","ENTER","COMMA","finalize","switchMap","tap","distinctUntilChanged","debounceTime","map","takeUntil","MatAutocompleteTrigger","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","des_r41","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵelementContainerStart","ɵɵtemplate","MemoredraftComponent_ng_container_17_mat_option_1_Template","ɵɵelementContainerEnd","ctx_r3","senderListData","ɵɵlistener","MemoredraftComponent_tr_25_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","restoredCtx","ɵɵrestoreView","_r49","employeedept_r47","$implicit","ctx_r48","ɵɵnextContext","ɵɵresetView","removeEmployeeDept","dept_name","thisEmployeedept_r50","MemoredraftComponent_tr_25_mat_chip_row_8_Template","ɵɵelement","MemoredraftComponent_tr_25_Template_mat_autocomplete_optionSelected_11_listener","$event","_r52","ctx_r51","employeeDeptSelected","MemoredraftComponent_tr_25_Template_mat_autocomplete_opened_11_listener","ctx_r53","autocompleteDeptScroll","MemoredraftComponent_tr_25_mat_option_13_Template","ctx_r4","chipSelectedEmployeeDept","employeeDeptControl","_r45","_r42","separatorKeysCodes","departmentList","MemoredraftComponent_tr_26_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r61","employeeto_r59","ctx_r60","removeEmployeeTo","full_name","thisEmployee_r62","MemoredraftComponent_tr_26_mat_chip_row_8_Template","MemoredraftComponent_tr_26_Template_mat_autocomplete_optionSelected_11_listener","_r64","ctx_r63","employeeToSelected","MemoredraftComponent_tr_26_Template_mat_autocomplete_opened_11_listener","ctx_r65","autocompleteToScroll","MemoredraftComponent_tr_26_mat_option_13_Template","ctx_r5","chipSelectedEmployeeTo","to_emp","_r57","_r54","allEmployeeList","MemoredraftComponent_tr_27_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r73","employeebto_r71","ctx_r72","removeEmployeeBTo","thisEmployee_r74","MemoredraftComponent_tr_27_mat_chip_row_8_Template","MemoredraftComponent_tr_27_Template_mat_autocomplete_optionSelected_11_listener","_r76","ctx_r75","employeeBToSelected","MemoredraftComponent_tr_27_Template_mat_autocomplete_opened_11_listener","ctx_r77","autocompleteBToScroll","MemoredraftComponent_tr_27_mat_option_13_Template","ctx_r6","chipSelectedEmployeeBTo","bto_emp","_r69","_r66","MemoredraftComponent_tr_28_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r85","employeecc_r83","ctx_r84","removeEmployeeCC","thisEmployeeCC_r86","MemoredraftComponent_tr_28_mat_chip_row_8_Template","MemoredraftComponent_tr_28_Template_mat_autocomplete_optionSelected_11_listener","_r88","ctx_r87","employeeccSelected","MemoredraftComponent_tr_28_Template_mat_autocomplete_opened_11_listener","ctx_r89","autocompleteCCScroll","MemoredraftComponent_tr_28_mat_option_13_Template","ctx_r7","chipSelectedEmployeeCC","employeeccControl","_r81","_r78","MemoredraftComponent_mat_chip_row_36_Template_mat_chip_row_removed_0_listener","_r92","employeeapprover_r90","ctx_r91","removeEmployeeApprover","thisEmployeeCC_r93","MemoredraftComponent_mat_chip_row_50_Template_mat_chip_row_removed_0_listener","_r96","employeerecommender_r94","ctx_r95","removeEmployeeApprover1","thisEmployeeCC_r97","MemoredraftComponent_ng_container_76_mat_option_1_Template_mat_option_onSelectionChange_0_listener","_r101","ctx_r100","OnCategoryChange","cat_r99","MemoredraftComponent_ng_container_76_mat_option_1_Template","ctx_r23","categoryList","sub_r103","MemoredraftComponent_ng_container_84_mat_option_1_Template","ctx_r27","sub_categoryList","des_r105","MemoredraftComponent_ng_container_92_mat_option_1_Template","ctx_r31","priorityList","MemoredraftComponent_span_113_Template_span_click_0_listener","_r109","selected_r106","ctx_r108","imagePreview","MemoredraftComponent_span_113_Template_mat_icon_click_3_listener","index_r107","index","ctx_r110","attachmentDelete","file_name","MemoredraftComponent_span_114_Template_mat_icon_click_3_listener","_r114","upload_r111","i_r112","ctx_r113","deleteUpload","MemoredraftComponent_td_147_Template_button_click_1_listener","_r116","ctx_r115","MovetoView","MemoredraftComponent_td_148_Template_button_click_1_listener","_r118","ctx_r117","saveAsDraft","ɵɵpropertyInterpolate","ctx_r39","jpgUrls","ɵɵsanitizeUrl","MemoredraftComponent","formBuilder","dataService","router","memoService","toastr","notification","SpinnerService","sharedService","sanitizer","route","imageUrl","apiURL","forwardForm","config","airMode","tabDisable","popover","table","link","air","height","toolbar","codeviewFilter","codeviewFilterRegex","codeviewIframeFilter","editorDisabled","isLoading","contentName","dept_autochange","chipSelectedEmployeeToid","chipSelectedEmployeeBToid","chipSelectedEmployeeCCid","allEmployeeApprover","chipSelectedEmployeeApprover","chipSelectedEmployeeApproverid","employeeApproverControl","Confidential","Parallel_Delivery","SubmitCalled","isButtonVisible","memoFrom_rf","images","source_id","has_next","has_previous","currentpage","isSender","refid","pdfUrls","senderInput","categoryInput","subcategoryInput","employeeToInput","employeeBToInput","matToAutocomplete","matBToAutocomplete","employeeccInput","matAutocompleteCC","employeeApproverInput","matAutocompleteApp","employeeDeptInput","matAutocompleteDept","autocompleteTrigger","InputVar","categoryID","datas","documentList","uploadList","toListData","chipSelectedEmployeeDeptid","rdoIOMnfa","idValue","refId","refversion","documentDatas","intervalid","chipSelectedRecommender","employeeInputRecommender","chipSelectedRecommenderId","employeeRecommenderControl","constructor","setInterval","ngOnDestroy","clearInterval","ngOnInit","group","subject","required","sender","manual_reference","watermarktext","to_dept","approver","cc","category","sub_category","priority","forward_comments","recommender","queryParams","subscribe","params","memofrom_rf","getForwardFetchData","get","valueChanges","pipe","value","getCategory_Dept","id","results","nativeElement","getSubCategory1","get_EmployeeList","datapagination","length","getDepartmentPage","todeptlist","findIndex","todept","code","splice","enableEditor","disableEditor","onBlur","onDelete","file","summernoteInit","event","setTimeout","panel","x","scrollTop","panelClosingActions","scrollHeight","elementHeight","clientHeight","atBottom","concat","autocompleteAppScroll","fetchData","getFetch","data","confidential","parallel_delivery","is_sender","document_arr","ref_id","ref_version","priorityid","patchValue","memoClass","watermark_txt","Memofrom","senderValue","senderId","deptValues","push","categoryValue","categoryId","categoryName","cat","cats","subCategoryValue","subcategoryId","subcategoryName","subCategory","subCategoryValues","forEach","element","emitEvent","attachment","getToken","localStorage","getItem","tokenValue","JSON","parse","token","String","filename","fileid","fileextn","split","anchor","document","createElement","href","target","click","createMemoInput","controls","memoclass1","orderno","finalappArray","eachitem","apporder","type","undefined","content","finalrecArray","ordernos","recommorder","forwardMemoForm","show","hide","error","timeOut","i","loginEmpId","createForwardForm","res","next","navigate","mid","from","skipLocationChange","e","source","OnSenderChange","isUserInput","focusCategory","focussubCategory","displayCategory","categorydis","displaysubCategory","subcategory","employee","indexOf","selectEmployeeToByName","option","employeeName","foundEmployeeCC1","filter","employeecc","foundEmployeeCC","selectEmployeeBToByName","foundEmployeebto","employeebto","foundEmployeebto1","selectEmployeeCCByName","employeeccName","employeeApproverSelected","selectEmployeeApproverByName","employeeid","foundEmployeeApproverid","foundEmployeeApprover","dept","selectEmployeeDeptByName","deptid","foundEmployeeDept1","employeedept","foundEmployeeDept","console","log","redraftCreate","DraftMemo","showSuccess","result","showError","description","reDraftSave","answer","window","confirm","sendMemo","MemoView","createNewMemo","s","fileChange","imagesList","files","item","it","io","getSenderList","get_empTodeptMapping1","fromdept","getSender","displayFnSender","getPriority","get_priority","getPriorityList","displayFnPriority","employeeApproverSelected1","selectEmployeeApproverByName1","foundEmployeeApprover1","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","i3","Router","i4","MemoService","i5","ToastrService","i6","NotificationService","i7","NgxSpinnerService","i8","SharedService","i9","DomSanitizer","ActivatedRoute","selectors","viewQuery","MemoredraftComponent_Query","rf","ctx","MemoredraftComponent_Template_form_ngSubmit_1_listener","MemoredraftComponent_Template_input_focus_12_listener","MemoredraftComponent_mat_option_16_Template","MemoredraftComponent_ng_container_17_Template","MemoredraftComponent_tr_25_Template","MemoredraftComponent_tr_26_Template","MemoredraftComponent_tr_27_Template","MemoredraftComponent_tr_28_Template","MemoredraftComponent_td_30_Template","MemoredraftComponent_td_31_Template","MemoredraftComponent_mat_chip_row_36_Template","MemoredraftComponent_Template_mat_autocomplete_optionSelected_39_listener","MemoredraftComponent_Template_mat_autocomplete_opened_39_listener","MemoredraftComponent_mat_option_41_Template","MemoredraftComponent_mat_chip_row_50_Template","MemoredraftComponent_Template_mat_autocomplete_optionSelected_53_listener","MemoredraftComponent_Template_mat_autocomplete_opened_53_listener","MemoredraftComponent_mat_option_55_Template","MemoredraftComponent_Template_input_focus_71_listener","MemoredraftComponent_mat_option_75_Template","MemoredraftComponent_ng_container_76_Template","MemoredraftComponent_Template_input_focus_79_listener","MemoredraftComponent_mat_option_83_Template","MemoredraftComponent_ng_container_84_Template","MemoredraftComponent_Template_mat_form_field_click_86_listener","MemoredraftComponent_mat_option_91_Template","MemoredraftComponent_ng_container_92_Template","MemoredraftComponent_Template_input_change_95_listener","MemoredraftComponent_Template_input_change_102_listener","MemoredraftComponent_span_113_Template","MemoredraftComponent_span_114_Template","MemoredraftComponent_tr_122_Template","MemoredraftComponent_Template_button_click_126_listener","MemoredraftComponent_Template_button_click_128_listener","MemoredraftComponent_Template_div_summernoteModelChange_131_listener","MemoredraftComponent_Template_input_change_138_listener","MemoredraftComponent_td_146_Template","MemoredraftComponent_td_147_Template","MemoredraftComponent_td_148_Template","MemoredraftComponent_div_152_Template","_r1","_r13","_r10","_r18","_r15","_r21","_r25","_r29","source_type"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memoredraft\\memoredraft.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memoredraft\\memoredraft.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { SharedService } from '../../service/shared.service'\r\nimport { DataService } from '../../service/data.service'\r\nimport { from, Observable, fromEvent } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Memo } from '../../memomodal/memo.model'\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime, map, takeUntil } from 'rxjs/operators';\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MemoService, Category, subCategory, Department } from 'src/app/service/memo.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nexport interface SenderValue {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PriorityValue {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface iEmployeeList {\r\n  full_name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface iDeptList {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-memoredraft',\r\n  templateUrl: './memoredraft.component.html',\r\n  styleUrls: ['./memoredraft.component.scss']\r\n})\r\nexport class MemoredraftComponent implements OnInit {\r\n  imageUrl = environment.apiURL\r\n  forwardForm: FormGroup;\r\n  config: any = {\r\n    airMode: false,\r\n    tabDisable: true,\r\n    popover: {\r\n      table: [\r\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\r\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\r\n      ],\r\n      link: [['link', ['linkDialogShow', 'unlink']]],\r\n      air: [\r\n        [\r\n          'font',\r\n          [\r\n            'bold',\r\n            'italic',\r\n            'underline',\r\n            'strikethrough',\r\n            'superscript',\r\n            'subscript',\r\n            'clear',\r\n          ],\r\n        ],\r\n      ],\r\n    },\r\n    height: '200px',\r\n    toolbar: [\r\n      ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\r\n      [\r\n        'font',\r\n        [\r\n          'bold',\r\n          'italic',\r\n          'underline',\r\n          'strikethrough',\r\n          'superscript',\r\n          'subscript',\r\n          'clear',\r\n        ],\r\n      ],\r\n      ['fontsize', ['fontname', 'fontsize', 'color']],\r\n      ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\r\n      ['insert', ['table', 'picture', 'link', 'hr']]\r\n    ],\r\n    codeviewFilter: true,\r\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\r\n    codeviewIframeFilter: true,\r\n  };\r\n\r\n\r\n  editorDisabled = false;\r\n  isLoading = false;\r\n  contentName: any;\r\n  dept_autochange: boolean = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  public allEmployeeList: iEmployeeList[];\r\n  departmentList: iDeptList[];\r\n  public chipSelectedEmployeeTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeToid = [];\r\n  public to_emp = new FormControl();\r\n  public chipSelectedEmployeeBTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeBToid = [];\r\n  public bto_emp = new FormControl();\r\n  public chipSelectedEmployeeCC: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeCCid = [];\r\n  public employeeccControl = new FormControl();\r\n  public allEmployeeApprover: iEmployeeList[];\r\n  public chipSelectedEmployeeApprover: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeApproverid = [];\r\n  public employeeApproverControl = new FormControl();\r\n  public Confidential: boolean = false;\r\n  public Parallel_Delivery: boolean = false;\r\n  SubmitCalled = false;\r\n  isButtonVisible=true;\r\n  memoFrom_rf: any;\r\n  images: string[] = [];\r\n  source_id: any;\r\n  has_next = true;\r\n  has_previous = true;\r\n  currentpage: number = 1;\r\n  isSender: boolean;\r\n  refid:any;\r\n  pdfUrls: string;\r\n  jpgUrls: string;\r\n  @ViewChild('senderInput') senderInput: any;\r\n  @ViewChild('categoryInput') categoryInput: any;\r\n  @ViewChild('subcategoryInput') subcategoryInput: any;\r\n  @ViewChild('employeeToInput') employeeToInput: any;\r\n  @ViewChild('employeeBToInput') employeeBToInput: any;\r\n  @ViewChild('autoto') matToAutocomplete: MatAutocomplete;\r\n  @ViewChild('autobto') matBToAutocomplete: MatAutocomplete;\r\n  @ViewChild('employeeccInput') employeeccInput: any;\r\n  @ViewChild('autocc') matAutocompleteCC: MatAutocomplete;\r\n  @ViewChild('employeeApproverInput') employeeApproverInput: any;\r\n  @ViewChild('autoapprover') matAutocompleteApp: MatAutocomplete;\r\n  @ViewChild('employeeDeptInput') employeeDeptInput: any;\r\n  @ViewChild('autodept') matAutocompleteDept: MatAutocomplete;\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('takeInput', { static: false })\r\n  InputVar: ElementRef;\r\n  categoryID: any;\r\n  datas: any = [];\r\n  senderListData: any = [];\r\n  categoryList: any = [];\r\n  sub_categoryList: any = [];\r\n  documentList: any;\r\n  uploadList = [];\r\n  toListData: Array<any>;\r\n  public chipSelectedEmployeeDept: iDeptList[] = [];\r\n  public chipSelectedEmployeeDeptid = [];\r\n  public employeeDeptControl = new FormControl();\r\n  priorityList: Array<any>;\r\n  rdoIOMnfa: any;\r\n  idValue: any;\r\n  refId: any;\r\n  refversion:any;\r\n  documentDatas: Array<any>;\r\n  intervalid: any;\r\n  public chipSelectedRecommender: iEmployeeList[] = [];\r\n  @ViewChild('employeeInputRecommender') employeeInputRecommender: any;\r\n  public chipSelectedRecommenderId = [];\r\n  public employeeRecommenderControl = new FormControl();\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private dataService: DataService,\r\n    private router: Router, private memoService: MemoService, private toastr: ToastrService,\r\n    private notification: NotificationService,private SpinnerService: NgxSpinnerService,\r\n    public sharedService: SharedService, private sanitizer: DomSanitizer, private route: ActivatedRoute) {\r\n    this.intervalid = setInterval(() => { this.saveAsDraft() }, 60 * 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalid) {\r\n      clearInterval(this.intervalid);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.forwardForm = this.formBuilder.group({\r\n      subject: ['', Validators.required],\r\n      sender: ['', Validators.required],\r\n      manual_reference: [''],\r\n      watermarktext: [''],\r\n      to_emp: [''],\r\n      bto_emp: [''],\r\n      to_dept: [''],\r\n      approver: [''],\r\n      cc: [''],\r\n      category: [''],\r\n      sub_category: [''],\r\n      priority: [''],\r\n      images: [''],\r\n      forward_comments:null,\r\n      recommender: ['',],\r\n\r\n    });\r\n\r\n    this.route.queryParams\r\n      .subscribe(params => {\r\n        this.memoFrom_rf = params.memofrom_rf;\r\n      }\r\n      );\r\n\r\n    this.getForwardFetchData();\r\n\r\n    this.forwardForm.get('category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getCategory_Dept(value, this.forwardForm.value.sender.id)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.categoryList = datas;\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n\r\n    this.forwardForm.get('sub_category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getSubCategory1(value, this.categoryID)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.sub_categoryList = datas;\r\n      })\r\n\r\n    if (this.to_emp !== null) {\r\n      this.to_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n\r\n        })\r\n    }\r\n\r\n    if (this.bto_emp !== null) {\r\n      this.bto_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeccControl !== null) {\r\n      this.employeeccControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.allEmployeeList = datas;\r\n          let datapagination = results[\"pagination\"];\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n    if (this.employeeApproverControl !== null) {\r\n      this.employeeApproverControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.allEmployeeList = datas;\r\n          let datapagination = results[\"pagination\"];\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeDeptControl !== null) {\r\n      this.employeeDeptControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.getDepartmentPage(value, 1, '')\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.departmentList = datas;\r\n          let todeptlist =datas;\r\n          const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\"); \r\n          if (index !== -1)\r\n          {\r\n            todeptlist.splice(index, 1); \r\n          }\r\n          if (this.departmentList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n\r\n\r\n          if (this.employeeRecommenderControl !== null) {\r\n          this.employeeRecommenderControl.valueChanges\r\n            .pipe(\r\n              debounceTime(100),\r\n              distinctUntilChanged(),\r\n              tap(() => {\r\n                this.isLoading = true;\r\n              }),\r\n              switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n                .pipe(\r\n                  finalize(() => {\r\n                    this.isLoading = false;\r\n                  }),\r\n                )\r\n              )\r\n            )\r\n            .subscribe((results: any[]) => {\r\n              let datas = results[\"data\"];\r\n              let datapagination = results[\"pagination\"];\r\n              this.allEmployeeList = datas;\r\n              if (this.allEmployeeList.length >= 0) {\r\n                this.has_next = datapagination.has_next;\r\n                this.has_previous = datapagination.has_previous;\r\n                this.currentpage = datapagination.index;\r\n              }\r\n            })\r\n        }\r\n    }\r\n\r\n  } //end of oninit\r\n\r\n  enableEditor() {\r\n    this.editorDisabled = false;\r\n  }\r\n\r\n  disableEditor() {\r\n    this.editorDisabled = true;\r\n  }\r\n\r\n  onBlur() {\r\n    // console.log('Blur');\r\n  }\r\n\r\n  onDelete(file) {\r\n    // console.log('Delete file', file.url);\r\n  }\r\n\r\n  summernoteInit(event) {\r\n    // console.log(event);\r\n  }\r\n\r\n  autocompleteToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeTo\r\n\r\n  autocompleteBToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matBToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matBToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeBTo\r\n\r\n  autocompleteCCScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteCC &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteCC.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof autocomplete CC\r\n\r\n  autocompleteAppScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteApp &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteApp.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeApproval\r\n\r\n  autocompleteDeptScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteDept &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteDept.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '')\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.departmentList = this.departmentList.concat(datas);\r\n                    if (this.departmentList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto matAutocompleteDept\r\n\r\n  getForwardFetchData() {\r\n    let id = this.sharedService.fetchData.value;\r\n    this.idValue = id\r\n    this.dataService.getFetch(id)\r\n      .subscribe((data) => {\r\n        this.Confidential = data.confidential;\r\n        this.Parallel_Delivery = data.parallel_delivery;\r\n        this.isSender = data.is_sender;\r\n        this.documentList = data.document_arr;\r\n        this.refid =data.ref_id;\r\n        this.refversion = data.ref_version;\r\n        this.source_id = data.source_id;\r\n        let priority = data[\"priority\"];\r\n        if (priority) {\r\n          let priorityid = priority['id'];\r\n          let name = priority['name']\r\n          this.forwardForm.patchValue({\r\n            \"priority\": priority\r\n          })\r\n        }\r\n        let memoClass = new Memo();\r\n        memoClass.subject = data['subject']\r\n        memoClass.watermark_txt = data['watermark_txt']\r\n        memoClass.manual_reference = data['manual_reference']\r\n        // memoClass.forward_comments = data['forward_comments']\r\n        if (data['type'] === 'iom') {\r\n          this.rdoIOMnfa = 'Inter-Office Memo';\r\n          this.sharedService.Memofrom = 'IOMEMO'\r\n        }\r\n        if (data['type'] === 'nfa') {\r\n          this.rdoIOMnfa = 'Note for Approval';\r\n          this.sharedService.Memofrom = 'NFA-MEMO'\r\n        }\r\n        this.contentName = data['content'];\r\n        let senderValue = data['sender'];\r\n        let senderId = senderValue['id'];\r\n        if (senderValue['name']) {\r\n          let deptValues: any = {\r\n            \"name\": senderValue.name,\r\n            \"id\": senderId\r\n          }\r\n          memoClass.sender = deptValues;\r\n          this.senderListData.push(deptValues);\r\n        }\r\n        \r\n        let categoryValue = data['category'];\r\n        let categoryId = categoryValue['id'];\r\n        let categoryName = categoryValue['name'];\r\n        let cat = categoryId\r\n        if (cat !== -1) {\r\n          let cats: any = {\r\n            \"name\": categoryName,\r\n            \"id\": categoryId\r\n          }\r\n          memoClass.category = cats;\r\n          this.categoryID = cat;\r\n          this.categoryList.push(cats);\r\n        }\r\n        let subCategoryValue = data['sub_category'];\r\n        let subcategoryId = subCategoryValue['id'];\r\n        let subcategoryName = subCategoryValue['name'];\r\n        let subCategory = subcategoryId\r\n        if (subCategory !== -1) {\r\n          let subCategoryValues: any = {\r\n            \"name\": subcategoryName,\r\n            \"id\": subcategoryId\r\n          }\r\n          memoClass.sub_category = subCategoryValues;\r\n          this.sub_categoryList.push(subCategoryValues)\r\n        }\r\n        data.cc.forEach(element => {\r\n          this.chipSelectedEmployeeCC.push(element);\r\n          this.chipSelectedEmployeeCCid.push(element.id);\r\n        });\r\n        data.to_dept.forEach(element => {\r\n          this.chipSelectedEmployeeDept.push(element);\r\n          this.chipSelectedEmployeeDeptid.push(element.id);\r\n        });\r\n        data.approver.forEach(element => {\r\n          this.chipSelectedEmployeeApprover.push(element);\r\n          this.chipSelectedEmployeeApproverid.push(element.id);\r\n        });\r\n        data.recommender.forEach(element => {\r\n          this.chipSelectedRecommender.push(element);\r\n          this.chipSelectedRecommenderId.push(element.id);\r\n        });\r\n        this.datas = data;\r\n        this.refId = data.ref_id\r\n        this.dept_autochange = true;\r\n        this.forwardForm.patchValue({\r\n          subject: memoClass.subject,\r\n          sender: memoClass.sender,\r\n          manual_reference: memoClass.manual_reference,\r\n          watermarktext: memoClass.watermark_txt,\r\n          to_emp: this.chipSelectedEmployeeToid,\r\n          to_dept: this.chipSelectedEmployeeDeptid,\r\n          approver: this.chipSelectedEmployeeApproverid,\r\n          recommender: this.chipSelectedRecommenderId,\r\n          category: memoClass.category,\r\n          sub_category: memoClass.sub_category,\r\n          cc: this.chipSelectedEmployeeCCid,\r\n          ref_id: this.refId\r\n        }, { emitEvent: false });\r\n        // this.dept_autochange=false;\r\n        return memoClass\r\n      })\r\n    if (this.memoFrom_rf === 'CLOSEandCLONE') {\r\n      this.idValue = '';\r\n    }\r\n  } ///getForwardFetchData()\r\n\r\n  imagePreview(attachment) {\r\n    const getToken = localStorage.getItem(\"sessionData\");\r\n    let tokenValue = JSON.parse(getToken);\r\n    let token = tokenValue.token;\r\n    pdfUrls: String;\r\n    jpgUrls: String;\r\n\r\n    let filename = attachment.file_name;\r\n    let fileid = attachment.id;\r\n    let fileextn = filename.split('.')\r\n\r\n    if (fileextn[1] === \"png\" || fileextn[1] === \"jpeg\" || fileextn[1] === \"jpg\") {\r\n      this.jpgUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?token=\" + token;\r\n    }\r\n    else {\r\n      this.pdfUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?type= \" + filename + \"&token=\" + token;\r\n      let anchor = document.createElement('a');\r\n      anchor.href = this.pdfUrls;\r\n      anchor.target = '_blank';\r\n      anchor.click();\r\n    }\r\n  }\r\n\r\n  createMemoInput() {\r\n    let data = this.forwardForm.controls;\r\n    let memoclass1 = new Memo();\r\n    memoclass1.confidential = this.Confidential;\r\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\r\n    memoclass1.priority =  data.priority.value.id\r\n    let orderno: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        \"id\": eachitem,\r\n        \"order\": orderno + 1\r\n      }\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder)\r\n    });\r\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\r\n    memoclass1.approver = finalappArray\r\n    memoclass1.cc = this.chipSelectedEmployeeCCid\r\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass1.subject = this.forwardForm.value.subject;\r\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\r\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\r\n    // memoclass1.forward_comments = this.forwardForm.value.forward_comments;\r\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\r\n      memoclass1.type = 'iom'\r\n    }\r\n    if (this.rdoIOMnfa === 'Note for Approval') {\r\n      memoclass1.type = 'nfa'\r\n    }\r\n\r\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\r\n    if (this.forwardForm.value.category === undefined) {\r\n      memoclass1.category = null;\r\n    } else {\r\n      memoclass1.category = this.forwardForm.value.category.id;\r\n    }\r\n    if (this.forwardForm.value.sub_category === undefined) {\r\n      memoclass1.sub_category = null;\r\n    } else {\r\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\r\n    }\r\n    memoclass1.content = this.contentName;\r\n    memoclass1.images = this.images;\r\n    let finalrecArray = [];\r\n    let ordernos: number = 0;\r\n    this.chipSelectedRecommenderId.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n\r\n    memoclass1.recommender = finalrecArray;\r\n    return memoclass1;\r\n  }\r\n\r\n  forwardMemoForm() {\r\n    this.SpinnerService.show();\r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid From value', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          return false;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\r\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n         return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\r\n        this.SpinnerService.hide();\r\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', { timeOut: 1500 });\r\n        return false;\r\n      }\r\n    }\r\n    if (this.forwardForm.value.subject === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n    if (this.forwardForm.value.watermarktext === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n\r\n    this.dataService.createForwardForm(this.createMemoInput(), this.images, this.refId)\r\n      .subscribe(res => {\r\n        let id = res.id\r\n        this.sharedService.fetchData.next(id);\r\n        this.SpinnerService.hide();\r\n        this.router.navigate([\"/ememo/memoView\"], { queryParams: { mid: id, from: 'draft' }, skipLocationChange: true });\r\n        return true\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n  }\r\n\r\n  OnCategoryChange(e) {\r\n    this.categoryID = e.source.value.id;\r\n  }\r\n\r\n  OnSenderChange(e) {\r\n    if (e.isUserInput == true) {\r\n      if (this.dept_autochange === false) {\r\n        this.categoryInput.nativeElement.value = '';\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      }\r\n      this.dept_autochange = false;\r\n    }\r\n  }\r\n\r\n  focusCategory(e) {\r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n\r\n    if (this.categoryInput.nativeElement.value === '') {\r\n      this.memoService.getCategory_Dept('', this.forwardForm.value.sender.id)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.categoryList = datas;\r\n        });\r\n    }\r\n  }\r\n\r\n  focussubCategory(e) {\r\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\r\n      this.memoService.getSubCategory1(' ', this.categoryID)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.sub_categoryList = datas;\r\n          this.subcategoryInput.nativeElement.value = '';\r\n        });\r\n    }\r\n  }\r\n\r\n  public displayCategory(categorydis?: Category): string | undefined {\r\n\r\n    return categorydis ? categorydis.name : undefined;\r\n  }\r\n  get categorydis() {\r\n    return this.forwardForm.get('category');\r\n  }\r\n\r\n  public displaysubCategory(subcategory?: subCategory): string | undefined {\r\n\r\n    return subcategory ? subcategory.name : undefined;\r\n  }\r\n  get subcategory() {\r\n    return this.forwardForm.get('sub_category');\r\n  }\r\n\r\n\r\n  public removeEmployeeTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeTo.splice(index, 1);\r\n      this.chipSelectedEmployeeToid.splice(index, 1);\r\n      this.employeeToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeToByName(event.option.value.full_name);\r\n    this.employeeToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeToByName(employeeName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC.length) {\r\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeBTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeBTo.splice(index, 1);\r\n      this.chipSelectedEmployeeBToid.splice(index, 1);\r\n      this.employeeBToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeBToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeBToByName(event.option.value.full_name);\r\n    this.employeeBToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeBToByName(employeeName) {\r\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto.length) {\r\n      return;\r\n    }\r\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto1.length) {\r\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\r\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id)\r\n    }\r\n  }\r\n\r\n\r\n  public removeEmployeeCC(employeecc: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeCC.splice(index, 1);\r\n      this.chipSelectedEmployeeCCid.splice(index, 1);\r\n      this.employeeccInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeccSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeCCByName(event.option.value.full_name);\r\n    this.employeeccInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeCCByName(employeeccName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC.length) {\r\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeApprover(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeApprover.splice(index, 1);\r\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\r\n      this.employeeApproverInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeApproverSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeApproverByName(event.option.value.full_name,event.option.value.id);\r\n    this.employeeApproverInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeApproverByName(employee,employeeid) {\r\n    let foundEmployeeApproverid = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.id == employeeid);\r\n    if (foundEmployeeApproverid.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeDept(dept: iDeptList): void {\r\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeDept.splice(index, 1);\r\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\r\n      this.employeeDeptInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeDeptSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeDeptByName(event.option.value.name,event.option.value.id);\r\n    this.employeeDeptInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeDeptByName(dept,deptid) {\r\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.id == deptid);\r\n    if (foundEmployeeDept1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\r\n    if (foundEmployeeDept.length) {\r\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\r\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id)\r\n      console.log(\"this.chipSelectedEmployeeDept\",this.chipSelectedEmployeeDept)\r\n    }\r\n  }\r\n\r\n  redraftCreate() {\r\n    let data = this.forwardForm.controls;\r\n    let memoclass1 = new DraftMemo();\r\n    if (this.refId){\r\n      memoclass1.ref_id=this.refId;\r\n    }\r\n    memoclass1.confidential = this.Confidential;\r\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\r\n    memoclass1.priority =  data.priority.value.id\r\n    let orderno: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        \"id\": eachitem,\r\n        \"order\": orderno + 1\r\n      }\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder)\r\n    });\r\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\r\n    memoclass1.approver = finalappArray\r\n    memoclass1.cc = this.chipSelectedEmployeeCCid\r\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass1.subject = this.forwardForm.value.subject;\r\n    memoclass1.manual_reference = this.forwardForm.value.manual_reference;\r\n    memoclass1.forward_comments = this.forwardForm.value.forward_comments;\r\n    \r\n    memoclass1.watermark_txt = this.forwardForm.value.watermarktext;\r\n    if (this.rdoIOMnfa === 'Inter-Office Memo') {\r\n      memoclass1.type = 'iom'\r\n    }\r\n    if (this.rdoIOMnfa === 'Note for Approval') {\r\n      memoclass1.type = 'nfa'\r\n    }\r\n\r\n    memoclass1.sender = this.forwardForm.value.sender.id + '_dept';\r\n    if (this.forwardForm.value.category === undefined) {\r\n      memoclass1.category = null;\r\n    } else {\r\n      memoclass1.category = this.forwardForm.value.category.id;\r\n    }\r\n    if (this.forwardForm.value.sub_category === undefined) {\r\n      memoclass1.sub_category = null;\r\n    } else {\r\n      memoclass1.sub_category = this.forwardForm.value.sub_category.id;\r\n    }\r\n    memoclass1.content = this.contentName;\r\n    let finalrecArray = [];\r\n    let ordernos: number = 0;\r\n    this.chipSelectedRecommenderId.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n\r\n    memoclass1.recommender = finalrecArray;\r\n    return memoclass1;\r\n  }\r\n\r\n  saveAsDraft() {\r\n    this.SpinnerService.show();\r\n    if (this.SubmitCalled === true) {\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    this.isButtonVisible=false;\r\n\r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      this.isButtonVisible=true;\r\n      return false;\r\n    }\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      this.isButtonVisible=true;\r\n     return false;\r\n    }\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          this.isButtonVisible=true;\r\n          return false;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\r\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.forwardForm.value.priority.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Priority', { timeOut: 1500 });\r\n      this.isButtonVisible=true;\r\n      return false;\r\n    }\r\n\r\n    if (this.forwardForm.value.subject === '') {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      this.isButtonVisible=true;\r\n      return false;\r\n    }\r\n    if (this.forwardForm.value.watermarktext === '') {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n      this.isButtonVisible=true;\r\n      return false;\r\n    }\r\n\r\n    // var answer = window.confirm(\"Save Draft data?\");\r\n    // if (answer) {\r\n    //     //some code\r\n    // }\r\n    // else {\r\n    //   return false;\r\n    // }\r\n\r\n    if (this.idValue === '') {\r\n      // this.uploadList = [];\r\n      this.dataService.saveAsDraft(this.redraftCreate(), '', this.images).subscribe((res) => {\r\n        if(res.code === undefined) {\r\n          this.SpinnerService.hide();\r\n          this.notification.showSuccess('Draft Saved!...');\r\n          this.idValue = res.id;\r\n          this.dataService.getFetch(this.idValue)\r\n          .subscribe(result => {\r\n            this.documentList = result.document_arr;\r\n            this.uploadList = [];\r\n          },\r\n          error => {\r\n            this.SpinnerService.hide();\r\n          });\r\n        } else {\r\n          this.SpinnerService.hide();\r\n          this.notification.showError(res.description)\r\n        }        \r\n        this.isButtonVisible=true;\r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n    } else {\r\n\r\n      this.dataService.reDraftSave(this.redraftCreate(), this.idValue, this.images, this.documentList)\r\n        .subscribe(result => {\r\n          if(result.code === undefined) {\r\n            this.SpinnerService.hide();\r\n          this.notification.showSuccess(\"Draft Updated...\")\r\n          this.dataService.getFetch(this.idValue)\r\n            .subscribe(result => {\r\n              this.documentList = result.document_arr;\r\n              this.uploadList = [];\r\n              this.images = [];\r\n            },\r\n            error => {\r\n              this.SpinnerService.hide();\r\n            });\r\n          } else {\r\n            this.SpinnerService.hide();\r\n            this.notification.showError(result.description)\r\n          } \r\n          \r\n            this.isButtonVisible=true;\r\n        },\r\n        error => {\r\n          this.SpinnerService.hide();\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  MovetoView() {\r\n    this.SubmitCalled = true\r\n   \r\n    if (this.forwardForm.value.sender.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid From value', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          this.SubmitCalled = false;\r\n          return false;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.chipSelectedRecommenderId.length; i++) {\r\n        if (this.chipSelectedRecommenderId[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\r\n        this.SpinnerService.hide();\r\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', { timeOut: 1500 });\r\n        this.SubmitCalled = false;\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (this.forwardForm.value.priority.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Priority', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n\r\n    if (this.forwardForm.value.subject === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.forwardForm.value.watermarktext === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    var answer = window.confirm(\"Save Memo?\");\r\n    if (answer) {\r\n      //some code\r\n    }\r\n    else {\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    this.SpinnerService.show();\r\n    if (this.idValue) {\r\n      \r\n      this.dataService.reDraftSave(this.redraftCreate(), this.idValue, this.images, this.documentList).subscribe((res) => {\r\n        if(res.code === undefined) {\r\n        this.SpinnerService.hide();\r\n        this.notification.showSuccess('Draft Updated and ready to create Memo!...');\r\n        this.dataService.sendMemo(this.idValue).subscribe((res) => {\r\n          this.sharedService.fetchData.next(this.idValue);\r\n          this.SpinnerService.hide();\r\n          this.router.navigate(['/ememo/memoView'], { queryParams: { mid: this.idValue, from: 'memoredraft' ,MemoView: \"YES\"}, skipLocationChange: true });\r\n        },\r\n        error => {\r\n          this.SpinnerService.hide();\r\n        });\r\n      } else {\r\n        this.SpinnerService.hide();\r\n        this.notification.showError(res.description)\r\n      }\r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n\r\n\r\n    } else {\r\n      this.uploadList = [];\r\n      this.dataService.createNewMemo(this.createMemoInput(), this.images).subscribe((result) => {\r\n        if(result.code === undefined) {\r\n        let id = result.id;\r\n        this.sharedService.fetchData.next(id);\r\n        this.idValue = result.id;\r\n        this.SpinnerService.hide();\r\n        this.notification.showSuccess(\"Memo created\")\r\n        this.router.navigate(['/ememo/memoView'], { queryParams: { mid: id ,MemoView: \"YES\"}, skipLocationChange: true });\r\n      } else {\r\n        this.SpinnerService.hide();\r\n        this.notification.showError(result.description)\r\n      } \r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n    }\r\n\r\n    // if (this.idValue){\r\n    //   this.redraftCreate()\r\n    //   this.uploadList = [];\r\n    //   this.dataService.saveDraft(this.idValue)\r\n    //     .subscribe(result => {\r\n    //       this.notification.showSuccess(\"Draft Moved to View ...\")\r\n    //       this.router.navigate([\"/ememo/memoView\"], { queryParams: { mid: this.idValue }, skipLocationChange: true });\r\n    //     })\r\n    // }\r\n\r\n\r\n  }\r\n  attachmentDelete(s, index) {\r\n    this.documentList.forEach((s, i) => {\r\n      if (index === i)\r\n        this.documentList.splice(index, 1)\r\n      this.images.splice(index, 1)\r\n\r\n    })\r\n  }\r\n\r\n  fileChange(event) {\r\n    let imagesList = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    this.InputVar.nativeElement.value = \"\";\r\n    imagesList.push(this.images)\r\n    this.uploadList = [];\r\n    imagesList.forEach(item => {\r\n      let s = item;\r\n      s.forEach(it => {\r\n        let io = it.name;\r\n        this.uploadList.push(io);\r\n      })\r\n    })\r\n  }\r\n\r\n  deleteUpload(s, index) {\r\n    this.uploadList.forEach((s, i) => {\r\n      if (index === i) {\r\n        this.uploadList.splice(index, 1)\r\n        this.images.splice(index, 1);\r\n      }\r\n    })\r\n  }\r\n\r\n  private getSenderList() {\r\n    this.memoService.get_empTodeptMapping1('memo')\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderListData = datas;\r\n        const index =  this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\"); \r\n        if (index !== -1)\r\n        {\r\n          this.senderListData.splice(index, 1); \r\n        } \r\n      })\r\n  }\r\n  getSender() {\r\n    this.getSenderList();\r\n    this.forwardForm.get('sender').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_empTodeptMapping1('memo')\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderListData = datas;\r\n        const index =  this.senderListData.findIndex(fromdept => fromdept.code === \"DGRP11\"); \r\n        if (index !== -1)\r\n        {\r\n          this.senderListData.splice(index, 1); \r\n        } \r\n        this.categoryInput.nativeElement.value = '';\t\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n  }\r\n\r\n  public displayFnSender(senderValue?: SenderValue): string | undefined {\r\n    return senderValue ? senderValue.name : undefined;\r\n  }\r\n  get senderValue() {\r\n    return this.forwardForm.value.get('sender');\r\n  }\r\n\r\n\r\n\r\n  getPriority() {\r\n    this.memoService.get_priority()\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n  }\r\n  getPriorityList() {\r\n    this.getPriority();\r\n    this.forwardForm.get('priority').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_priority()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n  }\r\n\r\n  public displayFnPriority(priority?: PriorityValue): string | undefined {\r\n    return priority ? priority.name : undefined;\r\n  }\r\n\r\n  get priority() {\r\n    return this.forwardForm.value.get('priority');\r\n  }\r\n\r\n  public removeEmployeeApprover1(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedRecommender.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedRecommender.splice(index, 1);\r\n      this.chipSelectedRecommenderId.splice(index, 1);\r\n      this.employeeInputRecommender.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeApproverSelected1(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeApproverByName1(event.option.value.full_name);\r\n    this.employeeInputRecommender.nativeElement.value = '';\r\n  }\r\n\r\n  private selectEmployeeApproverByName1(employee) {\r\n    let foundEmployeeApprover1 = this.chipSelectedRecommender.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedRecommender.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedRecommenderId.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class DraftMemo {\r\n  ref_id:any;\r\n  subject: string;\r\n  watermark_txt:string;\r\n  manual_reference:string;\r\n  sender: any;\r\n  type:any;\r\n  category: number;\r\n  sub_category: number;\r\n  content: any;\r\n  to_emp: any;\r\n  bto_emp: any;\r\n  to_dept: any;\r\n  approver: any;\r\n  cc: any;\r\n  images: any;\r\n  confidential: any;\r\n  priority: string;\r\n  source_id:any;\r\n  source_type:any;\r\n  forward_comments:any;\r\n  recommender: any;\r\n  parallel_delivery: any;\r\n\r\n}","<div class=\"content\">\r\n    <form [formGroup]=\"forwardForm\" (ngSubmit)=\"forwardMemoForm()\">\r\n        <table>\r\n            <tr>\r\n                <td>\r\n                    <mat-label>From</mat-label>\r\n                </td>\r\n                <td>\r\n                    <table  style=\"width: 100%;\">\r\n                        <tr>\r\n                            <td style=\"width: 40%;\">\r\n                                <mat-form-field style=\"width: 250px;margin-left: 10px;\">\r\n                                    <input #senderInput placeholder=\"\" matInput formControlName=\"sender\"\r\n                                        [matAutocomplete]=\"senderValue\" required  (focus)=\"getSender()\">\r\n                                    <mat-autocomplete #senderValue=\"matAutocomplete\" [displayWith]=\"displayFnSender\">\r\n                                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                        <ng-container *ngIf=\"!isLoading\">\r\n                                            <mat-option *ngFor=\"let des of senderListData\" [value]=\"des\">\r\n                                                {{des.name}}\r\n                                            </mat-option>\r\n                                        </ng-container>\r\n                                    </mat-autocomplete>\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td style=\"width: 25%;\">\r\n                                <div class=\"text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\r\n                                    style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">\r\n                                    {{rdoIOMnfa}}\r\n                                </div>\r\n                            </td>\r\n                            <td style=\"width: 10%;\"></td>\r\n                            <td style=\"width: 25%;\">\r\n                                <div class=\"text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\"\r\n                                    style=\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\">\r\n                                    {{memoFrom_rf}}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                <td>\r\n                    <mat-label>To Department</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipListDept>\r\n                            <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeedept of chipSelectedEmployeeDept\"\r\n                                 [removable]=true (removed)=\"removeEmployeeDept(employeedept)\">\r\n                                 {{ employeedept.dept_name ? employeedept.dept_name: employeedept.name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeDeptInput [formControl]=\"employeeDeptControl\" [matAutocomplete]=\"autodept\"\r\n                                [matChipInputFor]=\"chipListDept\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autodept=\"matAutocomplete\" (optionSelected)=\"employeeDeptSelected($event)\"\r\n                            (opened)=\"autocompleteDeptScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployeedept of departmentList\" [value]=\"thisEmployeedept\">\r\n                                {{thisEmployeedept.name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO' && this.chipSelectedEmployeeDept.length === 0\">\r\n                <td>\r\n                    <mat-label>To</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipListTo>\r\n                            <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeeto of chipSelectedEmployeeTo\"\r\n                               [removable]=true (removed)=\"removeEmployeeTo(employeeto)\">\r\n                                {{employeeto.full_name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeToInput [formControl]=\"to_emp\" [matAutocomplete]=\"autoto\"\r\n                                [matChipInputFor]=\"chipListTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autoto=\"matAutocomplete\" (optionSelected)=\"employeeToSelected($event)\"\r\n                            (opened)=\"autocompleteToScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                {{thisEmployee.full_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                <td>\r\n                    <mat-label>BTo</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipListBTo>\r\n                            <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeebto of chipSelectedEmployeeBTo\"\r\n                                [removable]=true (removed)=\"removeEmployeeBTo(employeebto)\">\r\n                                {{employeebto.full_name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeBToInput [formControl]=\"bto_emp\" [matAutocomplete]=\"autobto\"\r\n                                [matChipInputFor]=\"chipListBTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autobto=\"matAutocomplete\" (optionSelected)=\"employeeBToSelected($event)\"\r\n                            (opened)=\"autocompleteBToScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                {{thisEmployee.full_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                <td>\r\n                    <mat-label>CC</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipList>\r\n                            <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeecc of chipSelectedEmployeeCC\"\r\n                                [removable]=true (removed)=\"removeEmployeeCC(employeecc)\">\r\n                                {{employeecc.full_name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeccInput [formControl]=\"employeeccControl\" [matAutocomplete]=\"autocc\"\r\n                                [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autocc=\"matAutocomplete\" (optionSelected)=\"employeeccSelected($event)\"\r\n                            (opened)=\"autocompleteCCScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                {{thisEmployeeCC.full_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <mat-label>Signee</mat-label>\r\n                </td>\r\n                <td *ngIf=\"sharedService.Memofrom === 'NFA-MEMO'\">\r\n                    <mat-label>Approver</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipListapprover>\r\n                            <mat-chip-row style=\"font-size: small;\"\r\n                                *ngFor=\"let employeeapprover of chipSelectedEmployeeApprover\"\r\n                                [removable]=true (removed)=\"removeEmployeeApprover(employeeapprover)\">\r\n                                {{employeeapprover.full_name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeApproverInput [formControl]=\"employeeApproverControl\"\r\n                                [matAutocomplete]=\"autoapprover\" [matChipInputFor]=\"chipListapprover\"\r\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autoapprover=\"matAutocomplete\"\r\n                            (optionSelected)=\"employeeApproverSelected($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                {{thisEmployeeCC.full_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>\r\n                    <mat-label>Recommender</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <mat-chip-grid #chipListrecommender>\r\n                            <mat-chip-row style=\"font-size: small;\"\r\n                                *ngFor=\"let employeerecommender of chipSelectedRecommender\" \r\n                                [removable]=true (removed)=\"removeEmployeeApprover1(employeerecommender)\">\r\n                                {{employeerecommender.full_name}}\r\n                                <mat-icon matChipRemove>cancel</mat-icon>\r\n                            </mat-chip-row>\r\n                            <input #employeeInputRecommender [formControl]=\"employeeRecommenderControl\"\r\n                                [matAutocomplete]=\"autoapprover1\" [matChipInputFor]=\"chipListrecommender\"\r\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #autoapprover1=\"matAutocomplete\"\r\n                            (optionSelected)=\"employeeApproverSelected1($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                            <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                {{thisEmployeeCC.full_name}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <mat-label>Subject</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <input matInput style=\"font-size: small;\" formControlName=\"subject\" required autocomplete=\"off\">\r\n                    </mat-form-field>\r\n\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>Cat/SubCat</td>\r\n                <td>\r\n                    <table class=\"table\">\r\n                        <tr>\r\n                            <td width=\"25%\">\r\n                                <mat-form-field style=\"width:250px !important;height:55px !important\">\r\n                                    <input matInput #categoryInput style=\"font-size: small;\" formControlName=\"category\" placeholder=\"Category\"\r\n                                        [matAutocomplete]=\"autocategory\" (focus)=\"focusCategory($event)\">\r\n                                    <mat-autocomplete #autocategory=\"matAutocomplete\" [displayWith]=\"displayCategory\">\r\n                                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                        <ng-container *ngIf=\"!isLoading\">\r\n                                            <mat-option (onSelectionChange)=\"OnCategoryChange($event)\"\r\n                                                *ngFor=\"let cat of categoryList\" [value]=\"cat\">{{cat.name}}\r\n                                            </mat-option>\r\n                                        </ng-container>\r\n                                    </mat-autocomplete>\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td width=\"25%\">\r\n                                <mat-form-field style=\"width:250px !important;height:55px !important;margin-left:12px\">\r\n                                    <input matInput #subcategoryInput style=\"font-size: small;\"\r\n                                        formControlName=\"sub_category\" placeholder=\"Sub Category\" [matAutocomplete]=\"autosubcategory\"\r\n                                        (focus)=\"focussubCategory($event)\">\r\n                                    <mat-autocomplete #autosubcategory=\"matAutocomplete\"\r\n                                        [displayWith]=\"displaysubCategory\">\r\n                                        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                        <ng-container *ngIf=\"!isLoading\">\r\n                                            <mat-option *ngFor=\"let sub of sub_categoryList\" [value]=\"sub\">{{sub.name}}\r\n                                            </mat-option>\r\n                                        </ng-container>\r\n                                    </mat-autocomplete>\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td width=\"25%\">\r\n                               <mat-form-field style=\"width: 100px;margin-left: 10px;\" (click)=\"getPriorityList()\">\r\n                                        <input #rmInput placeholder=\"Priority\" matInput formControlName=\"priority\"\r\n                                            [matAutocomplete]=\"priorityValue\" required>\r\n                                        <mat-autocomplete #priorityValue=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayFnSender\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let des of priorityList\" [value]=\"des\">\r\n                                                    {{des.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                            </td>\r\n                            <td width=\"25%\">\r\n                                <label class=\"container\"> <input type=\"checkbox\" data-md-icheck [checked]=\"Confidential\"\r\n                                        (change)=\"Confidential = !Confidential\" />Confidential\r\n                                    <span class=\"checkmark\"></span>\r\n                                </label>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td></td>\r\n                <td>\r\n                    <label class=\"container\"> <input type=\"checkbox\" data-md-icheck [checked]=\"Parallel_Delivery\"\r\n                            (change)=\"Parallel_Delivery = !Parallel_Delivery\" />Parallel Delivery\r\n                        <span class=\"checkmark\"></span>\r\n                    </label>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td> Attachment</td>\r\n                <td>\r\n                    <table class=\"table\">\r\n                        <tr style=\"width: 80%;\">\r\n                            <td>\r\n                                <div>\r\n                                    <span *ngFor=\"let selected of documentList;let index = index\"\r\n                                        (click)=\"imagePreview(selected)\" data-bs-toggle=\"modal\" data-bs-target=\"#my-modal\"\r\n                                        matTooltip=\"Images\" class=\"btn-link\">\r\n                                        {{ selected.file_name}}\r\n                                        <button mat-icon-button type=\"button\">\r\n                                            <mat-icon style=\"color: blue;\" aria-label=\"Edit\"\r\n                                                (click)=\"attachmentDelete  (selected.file_name,index)\">\r\n                                                delete</mat-icon>\r\n                                        </button>\r\n                                    </span>\r\n                                    <span *ngFor=\"let upload of uploadList;index as i\" class=\"btn-link\">\r\n                                        {{ upload}}\r\n                                        <button mat-icon-button type=\"button\">\r\n                                            <mat-icon style=\"color: gray;\" aria-label=\"Edit\" (click)=\"deleteUpload(upload,i)\">\r\n                                                delete</mat-icon>\r\n                                        </button>\r\n                                    </span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    <mat-label>Department Reference No</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <input matInput style=\"font-size: small;\" formControlName=\"manual_reference\" autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr *ngIf=\"this.memoFrom_rf === 'FORWARD'\">\r\n                <td>\r\n                    <mat-label>Forward Comments</mat-label>\r\n                </td>\r\n                <td>\r\n                    <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                        <input matInput style=\"font-size: small;\" formControlName=\"forward_comments\" autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">\r\n                    <div>\r\n                        <button (click)=\"enableEditor()\" [disabled]=\"!editorDisabled\">Enable</button>\r\n                        <button (click)=\"disableEditor()\" [disabled]=\"editorDisabled\">Disable</button>\r\n                    </div>\r\n                    <div>\r\n                        <div [(summernoteModel)]=\"contentName\" [ngxSummernote]=\"config\"\r\n                            [ngxSummernoteDisabled]=\"editorDisabled\">\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <label class=\"btn btn-primary\" style=\"margin-right: 2em;\">\r\n                                    <input type=\"file\" #takeInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                                    .dotx,.dotm,.docb,\r\n                                    .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" multiple=\"true\"\r\n                                        formControlName=\"images\" name=\"images\" (change)=\"fileChange($event)\">\r\n                                </label>\r\n                            </td>\r\n                            <td>\r\n                                <mat-label style=\"margin-right: 2em;\">Watermark Text</mat-label>\r\n                            </td>\r\n                            <td>\r\n                                <mat-form-field style=\"margin-bottom: -1.25em;\">\r\n                                    <input matInput style=\"font-size: small;\" formControlName=\"watermarktext\" required\r\n                                        autocomplete=\"off\">\r\n                                </mat-form-field>\r\n                            </td>\r\n                            <td *ngIf=\"isButtonVisible\">\r\n                                <button type=\"button\" class=\"btn btn-outline-primary\"\r\n                                    style=\"border-radius:40px;margin-left: 12px;\" [routerLink]='\"/ememo/memosummary\"'\r\n                                    skipLocationChange>Back</button>\r\n                            </td>\r\n                            <td *ngIf=\"isButtonVisible\">\r\n                                <button type=\"button\" (click)=\"MovetoView()\" class=\"btn btn-outline-primary\"\r\n                                    style=\"border-radius:40px;margin-left: 12px;\">Submit</button>\r\n                            </td>\r\n                            <td *ngIf=\"isButtonVisible\">\r\n                                <button type=\"button\" (click)=\"saveAsDraft()\" class=\"btn btn-outline-primary\"\r\n                                    style=\"border-radius:40px;margin-left: 12px;\">Save as Draft</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </form>\r\n</div>\r\n<div id=\"my-modal\" class=\"modal fade\" aria-labelledby=\"my-modalLabel\" aria-hidden=\"true\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" data-bs-dismiss=\"modal\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\" *ngIf=\"pdfUrls!=='pdf'\">\r\n                <img src=\"{{jpgUrls}}\" class=\"img-responsive\" style=\"width: 100%;\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" [fullScreen] = \"true\" type=\"ball-spin-clockwise\">\r\n    <p style=\"color: white\">Loading... </p>\r\n</ngx-spinner>"],"mappings":"AACA,SAAiCA,WAAW,EAAEC,UAAU,QAAmB,gBAAgB;AAG3F,SAA2BC,SAAS,QAAQ,MAAM;AAGlD,SAASC,IAAI,QAAQ,4BAA4B;AACjD,SAASC,KAAK,EAAEC,KAAK,QAAQ,uBAAuB;AACpD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,EAAEC,oBAAoB,EAAEC,YAAY,EAAEC,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAC7G,SAAwDC,sBAAsB,QAAQ,gCAAgC;AAItH,SAASC,WAAW,QAAQ,8BAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICClBC,EAAA,CAAAC,cAAA,qBAAiD;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;;IAEpEH,EAAA,CAAAC,cAAA,qBAA6D;IACzDD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAFkCH,EAAA,CAAAI,UAAA,UAAAC,OAAA,CAAa;IACxDL,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAF,OAAA,CAAAG,IAAA,MACJ;;;;;IAHJR,EAAA,CAAAS,uBAAA,GAAiC;IAC7BT,EAAA,CAAAU,UAAA,IAAAC,0DAAA,yBAEa;IACjBX,EAAA,CAAAY,qBAAA,EAAe;;;;IAHiBZ,EAAA,CAAAM,SAAA,GAAiB;IAAjBN,EAAA,CAAAI,UAAA,YAAAS,MAAA,CAAAC,cAAA,CAAiB;;;;;;IAgC7Dd,EAAA,CAAAC,cAAA,uBACmE;IAA7CD,EAAA,CAAAe,UAAA,qBAAAC,mFAAA;MAAA,MAAAC,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAC,IAAA;MAAA,MAAAC,gBAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,OAAA,GAAAtB,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAAF,OAAA,CAAAG,kBAAA,CAAAL,gBAAA,CAAgC;IAAA,EAAC;IAC7DpB,EAAA,CAAAE,MAAA,GACD;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAFxCH,EAAA,CAAAI,UAAA,mBAAgB;IAChBJ,EAAA,CAAAM,SAAA,GACD;IADCN,EAAA,CAAAO,kBAAA,MAAAa,gBAAA,CAAAM,SAAA,GAAAN,gBAAA,CAAAM,SAAA,GAAAN,gBAAA,CAAAZ,IAAA,MACD;;;;;IAQJR,EAAA,CAAAC,cAAA,qBAAuF;IACnFD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF+CH,EAAA,CAAAI,UAAA,UAAAuB,oBAAA,CAA0B;IAClF3B,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAoB,oBAAA,CAAAnB,IAAA,MACJ;;;;;;IApBhBR,EAAA,CAAAC,cAAA,SAAgD;IAE7BD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAExCH,EAAA,CAAAC,cAAA,SAAI;IAGQD,EAAA,CAAAU,UAAA,IAAAkB,kDAAA,2BAIe;IACf5B,EAAA,CAAA6B,SAAA,oBAEiC;IACrC7B,EAAA,CAAAG,YAAA,EAAgB;IAChBH,EAAA,CAAAC,cAAA,gCACwC;IADMD,EAAA,CAAAe,UAAA,4BAAAe,gFAAAC,MAAA;MAAA/B,EAAA,CAAAkB,aAAA,CAAAc,IAAA;MAAA,MAAAC,OAAA,GAAAjC,EAAA,CAAAuB,aAAA;MAAA,OAAkBvB,EAAA,CAAAwB,WAAA,CAAAS,OAAA,CAAAC,oBAAA,CAAAH,MAAA,CAA4B;IAAA,EAAC,oBAAAI,wEAAA;MAAAnC,EAAA,CAAAkB,aAAA,CAAAc,IAAA;MAAA,MAAAI,OAAA,GAAApC,EAAA,CAAAuB,aAAA;MAAA,OAC/EvB,EAAA,CAAAwB,WAAA,CAAAY,OAAA,CAAAC,sBAAA,EAAwB;IAAA,EADuD;IAEzFrC,EAAA,CAAAU,UAAA,KAAA4B,iDAAA,yBAEa;IACjBtC,EAAA,CAAAG,YAAA,EAAmB;;;;;;IAdkDH,EAAA,CAAAM,SAAA,GAA2B;IAA3BN,EAAA,CAAAI,UAAA,YAAAmC,MAAA,CAAAC,wBAAA,CAA2B;IAKlExC,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAAI,UAAA,gBAAAmC,MAAA,CAAAE,mBAAA,CAAmC,oBAAAC,IAAA,qBAAAC,IAAA,mCAAAJ,MAAA,CAAAK,kBAAA;IAMpB5C,EAAA,CAAAM,SAAA,GAAiB;IAAjBN,EAAA,CAAAI,UAAA,YAAAmC,MAAA,CAAAM,cAAA,CAAiB;;;;;;IAc1D7C,EAAA,CAAAC,cAAA,uBAC6D;IAAzCD,EAAA,CAAAe,UAAA,qBAAA+B,mFAAA;MAAA,MAAA7B,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAA6B,IAAA;MAAA,MAAAC,cAAA,GAAA/B,WAAA,CAAAI,SAAA;MAAA,MAAA4B,OAAA,GAAAjD,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAAyB,OAAA,CAAAC,gBAAA,CAAAF,cAAA,CAA4B;IAAA,EAAC;IACxDhD,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAF1CH,EAAA,CAAAI,UAAA,mBAAgB;IACfJ,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAAyC,cAAA,CAAAG,SAAA,MACA;;;;;IAQJnD,EAAA,CAAAC,cAAA,qBAAgF;IAC5ED,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF4CH,EAAA,CAAAI,UAAA,UAAAgD,gBAAA,CAAsB;IAC3EpD,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAA6C,gBAAA,CAAAD,SAAA,MACJ;;;;;;IApBhBnD,EAAA,CAAAC,cAAA,SAA8F;IAE3ED,EAAA,CAAAE,MAAA,SAAE;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAE7BH,EAAA,CAAAC,cAAA,SAAI;IAGQD,EAAA,CAAAU,UAAA,IAAA2C,kDAAA,2BAIe;IACfrD,EAAA,CAAA6B,SAAA,oBAEiC;IACrC7B,EAAA,CAAAG,YAAA,EAAgB;IAChBH,EAAA,CAAAC,cAAA,gCACsC;IADMD,EAAA,CAAAe,UAAA,4BAAAuC,gFAAAvB,MAAA;MAAA/B,EAAA,CAAAkB,aAAA,CAAAqC,IAAA;MAAA,MAAAC,OAAA,GAAAxD,EAAA,CAAAuB,aAAA;MAAA,OAAkBvB,EAAA,CAAAwB,WAAA,CAAAgC,OAAA,CAAAC,kBAAA,CAAA1B,MAAA,CAA0B;IAAA,EAAC,oBAAA2B,wEAAA;MAAA1D,EAAA,CAAAkB,aAAA,CAAAqC,IAAA;MAAA,MAAAI,OAAA,GAAA3D,EAAA,CAAAuB,aAAA;MAAA,OAC3EvB,EAAA,CAAAwB,WAAA,CAAAmC,OAAA,CAAAC,oBAAA,EAAsB;IAAA,EADqD;IAErF5D,EAAA,CAAAU,UAAA,KAAAmD,iDAAA,yBAEa;IACjB7D,EAAA,CAAAG,YAAA,EAAmB;;;;;;IAdgDH,EAAA,CAAAM,SAAA,GAAyB;IAAzBN,EAAA,CAAAI,UAAA,YAAA0D,MAAA,CAAAC,sBAAA,CAAyB;IAKhE/D,EAAA,CAAAM,SAAA,GAAsB;IAAtBN,EAAA,CAAAI,UAAA,gBAAA0D,MAAA,CAAAE,MAAA,CAAsB,oBAAAC,IAAA,qBAAAC,IAAA,mCAAAJ,MAAA,CAAAlB,kBAAA;IAMT5C,EAAA,CAAAM,SAAA,GAAkB;IAAlBN,EAAA,CAAAI,UAAA,YAAA0D,MAAA,CAAAK,eAAA,CAAkB;;;;;;IAcvDnE,EAAA,CAAAC,cAAA,uBACgE;IAA3CD,EAAA,CAAAe,UAAA,qBAAAqD,mFAAA;MAAA,MAAAnD,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAmD,IAAA;MAAA,MAAAC,eAAA,GAAArD,WAAA,CAAAI,SAAA;MAAA,MAAAkD,OAAA,GAAAvE,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAA+C,OAAA,CAAAC,iBAAA,CAAAF,eAAA,CAA8B;IAAA,EAAC;IAC3DtE,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAFzCH,EAAA,CAAAI,UAAA,mBAAgB;IAChBJ,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAA+D,eAAA,CAAAnB,SAAA,MACA;;;;;IAQJnD,EAAA,CAAAC,cAAA,qBAAgF;IAC5ED,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF4CH,EAAA,CAAAI,UAAA,UAAAqE,gBAAA,CAAsB;IAC3EzE,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAkE,gBAAA,CAAAtB,SAAA,MACJ;;;;;;IApBhBnD,EAAA,CAAAC,cAAA,SAAgD;IAE7BD,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAE9BH,EAAA,CAAAC,cAAA,SAAI;IAGQD,EAAA,CAAAU,UAAA,IAAAgE,kDAAA,2BAIe;IACf1E,EAAA,CAAA6B,SAAA,oBAEiC;IACrC7B,EAAA,CAAAG,YAAA,EAAgB;IAChBH,EAAA,CAAAC,cAAA,gCACuC;IADMD,EAAA,CAAAe,UAAA,4BAAA4D,gFAAA5C,MAAA;MAAA/B,EAAA,CAAAkB,aAAA,CAAA0D,IAAA;MAAA,MAAAC,OAAA,GAAA7E,EAAA,CAAAuB,aAAA;MAAA,OAAkBvB,EAAA,CAAAwB,WAAA,CAAAqD,OAAA,CAAAC,mBAAA,CAAA/C,MAAA,CAA2B;IAAA,EAAC,oBAAAgD,wEAAA;MAAA/E,EAAA,CAAAkB,aAAA,CAAA0D,IAAA;MAAA,MAAAI,OAAA,GAAAhF,EAAA,CAAAuB,aAAA;MAAA,OAC7EvB,EAAA,CAAAwB,WAAA,CAAAwD,OAAA,CAAAC,qBAAA,EAAuB;IAAA,EADsD;IAEvFjF,EAAA,CAAAU,UAAA,KAAAwE,iDAAA,yBAEa;IACjBlF,EAAA,CAAAG,YAAA,EAAmB;;;;;;IAdiDH,EAAA,CAAAM,SAAA,GAA0B;IAA1BN,EAAA,CAAAI,UAAA,YAAA+E,MAAA,CAAAC,uBAAA,CAA0B;IAKjEpF,EAAA,CAAAM,SAAA,GAAuB;IAAvBN,EAAA,CAAAI,UAAA,gBAAA+E,MAAA,CAAAE,OAAA,CAAuB,oBAAAC,IAAA,qBAAAC,IAAA,mCAAAJ,MAAA,CAAAvC,kBAAA;IAMX5C,EAAA,CAAAM,SAAA,GAAkB;IAAlBN,EAAA,CAAAI,UAAA,YAAA+E,MAAA,CAAAhB,eAAA,CAAkB;;;;;;IAcvDnE,EAAA,CAAAC,cAAA,uBAC8D;IAAzCD,EAAA,CAAAe,UAAA,qBAAAyE,mFAAA;MAAA,MAAAvE,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAuE,IAAA;MAAA,MAAAC,cAAA,GAAAzE,WAAA,CAAAI,SAAA;MAAA,MAAAsE,OAAA,GAAA3F,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAAmE,OAAA,CAAAC,gBAAA,CAAAF,cAAA,CAA4B;IAAA,EAAC;IACzD1F,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAFzCH,EAAA,CAAAI,UAAA,mBAAgB;IAChBJ,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAAmF,cAAA,CAAAvC,SAAA,MACA;;;;;IAQJnD,EAAA,CAAAC,cAAA,qBAAoF;IAChFD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF8CH,EAAA,CAAAI,UAAA,UAAAyF,kBAAA,CAAwB;IAC/E7F,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAsF,kBAAA,CAAA1C,SAAA,MACJ;;;;;;IApBhBnD,EAAA,CAAAC,cAAA,SAAgD;IAE7BD,EAAA,CAAAE,MAAA,SAAE;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAE7BH,EAAA,CAAAC,cAAA,SAAI;IAGQD,EAAA,CAAAU,UAAA,IAAAoF,kDAAA,2BAIe;IACf9F,EAAA,CAAA6B,SAAA,oBAEiC;IACrC7B,EAAA,CAAAG,YAAA,EAAgB;IAChBH,EAAA,CAAAC,cAAA,gCACsC;IADMD,EAAA,CAAAe,UAAA,4BAAAgF,gFAAAhE,MAAA;MAAA/B,EAAA,CAAAkB,aAAA,CAAA8E,IAAA;MAAA,MAAAC,OAAA,GAAAjG,EAAA,CAAAuB,aAAA;MAAA,OAAkBvB,EAAA,CAAAwB,WAAA,CAAAyE,OAAA,CAAAC,kBAAA,CAAAnE,MAAA,CAA0B;IAAA,EAAC,oBAAAoE,wEAAA;MAAAnG,EAAA,CAAAkB,aAAA,CAAA8E,IAAA;MAAA,MAAAI,OAAA,GAAApG,EAAA,CAAAuB,aAAA;MAAA,OAC3EvB,EAAA,CAAAwB,WAAA,CAAA4E,OAAA,CAAAC,oBAAA,EAAsB;IAAA,EADqD;IAErFrG,EAAA,CAAAU,UAAA,KAAA4F,iDAAA,yBAEa;IACjBtG,EAAA,CAAAG,YAAA,EAAmB;;;;;;IAdgDH,EAAA,CAAAM,SAAA,GAAyB;IAAzBN,EAAA,CAAAI,UAAA,YAAAmG,MAAA,CAAAC,sBAAA,CAAyB;IAKhExG,EAAA,CAAAM,SAAA,GAAiC;IAAjCN,EAAA,CAAAI,UAAA,gBAAAmG,MAAA,CAAAE,iBAAA,CAAiC,oBAAAC,IAAA,qBAAAC,IAAA,mCAAAJ,MAAA,CAAA3D,kBAAA;IAMlB5C,EAAA,CAAAM,SAAA,GAAkB;IAAlBN,EAAA,CAAAI,UAAA,YAAAmG,MAAA,CAAApC,eAAA,CAAkB;;;;;IAQrEnE,EAAA,CAAAC,cAAA,SAAgD;IACjCD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;IAEjCH,EAAA,CAAAC,cAAA,SAAkD;IACnCD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAY;;;;;;IAKvBH,EAAA,CAAAC,cAAA,uBAE0E;IAArDD,EAAA,CAAAe,UAAA,qBAAA6F,8EAAA;MAAA,MAAA3F,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAA2F,IAAA;MAAA,MAAAC,oBAAA,GAAA7F,WAAA,CAAAI,SAAA;MAAA,MAAA0F,OAAA,GAAA/G,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAAuF,OAAA,CAAAC,sBAAA,CAAAF,oBAAA,CAAwC;IAAA,EAAC;IACrE9G,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAFzCH,EAAA,CAAAI,UAAA,mBAAgB;IAChBJ,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAAuG,oBAAA,CAAA3D,SAAA,MACA;;;;;IAQJnD,EAAA,CAAAC,cAAA,qBAAoF;IAChFD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF8CH,EAAA,CAAAI,UAAA,UAAA6G,kBAAA,CAAwB;IAC/EjH,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAA0G,kBAAA,CAAA9D,SAAA,MACJ;;;;;;IAaAnD,EAAA,CAAAC,cAAA,uBAE8E;IAAzDD,EAAA,CAAAe,UAAA,qBAAAmG,8EAAA;MAAA,MAAAjG,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAiG,IAAA;MAAA,MAAAC,uBAAA,GAAAnG,WAAA,CAAAI,SAAA;MAAA,MAAAgG,OAAA,GAAArH,EAAA,CAAAuB,aAAA;MAAA,OAAWvB,EAAA,CAAAwB,WAAA,CAAA6F,OAAA,CAAAC,uBAAA,CAAAF,uBAAA,CAA4C;IAAA,EAAC;IACzEpH,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,mBAAwB;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAFzCH,EAAA,CAAAI,UAAA,mBAAgB;IAChBJ,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAA6G,uBAAA,CAAAjE,SAAA,MACA;;;;;IAQJnD,EAAA,CAAAC,cAAA,qBAAoF;IAChFD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF8CH,EAAA,CAAAI,UAAA,UAAAmH,kBAAA,CAAwB;IAC/EvH,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAgH,kBAAA,CAAApE,SAAA,MACJ;;;;;IA0BYnD,EAAA,CAAAC,cAAA,qBAAiD;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;;;IAEpEH,EAAA,CAAAC,cAAA,qBACmD;IADvCD,EAAA,CAAAe,UAAA,+BAAAyG,mGAAAzF,MAAA;MAAA/B,EAAA,CAAAkB,aAAA,CAAAuG,KAAA;MAAA,MAAAC,QAAA,GAAA1H,EAAA,CAAAuB,aAAA;MAAA,OAAqBvB,EAAA,CAAAwB,WAAA,CAAAkG,QAAA,CAAAC,gBAAA,CAAA5F,MAAA,CAAwB;IAAA,EAAC;IACP/B,EAAA,CAAAE,MAAA,GACnD;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IADwBH,EAAA,CAAAI,UAAA,UAAAwH,OAAA,CAAa;IAAC5H,EAAA,CAAAM,SAAA,GACnD;IADmDN,EAAA,CAAAO,kBAAA,KAAAqH,OAAA,CAAApH,IAAA,MACnD;;;;;IAHJR,EAAA,CAAAS,uBAAA,GAAiC;IAC7BT,EAAA,CAAAU,UAAA,IAAAmH,0DAAA,yBAEa;IACjB7H,EAAA,CAAAY,qBAAA,EAAe;;;;IAFSZ,EAAA,CAAAM,SAAA,GAAe;IAAfN,EAAA,CAAAI,UAAA,YAAA0H,OAAA,CAAAC,YAAA,CAAe;;;;;IAavC/H,EAAA,CAAAC,cAAA,qBAAiD;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;;IAEpEH,EAAA,CAAAC,cAAA,qBAA+D;IAAAD,EAAA,CAAAE,MAAA,GAC/D;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IADoCH,EAAA,CAAAI,UAAA,UAAA4H,QAAA,CAAa;IAAChI,EAAA,CAAAM,SAAA,GAC/D;IAD+DN,EAAA,CAAAO,kBAAA,KAAAyH,QAAA,CAAAxH,IAAA,MAC/D;;;;;IAFJR,EAAA,CAAAS,uBAAA,GAAiC;IAC7BT,EAAA,CAAAU,UAAA,IAAAuH,0DAAA,yBACa;IACjBjI,EAAA,CAAAY,qBAAA,EAAe;;;;IAFiBZ,EAAA,CAAAM,SAAA,GAAmB;IAAnBN,EAAA,CAAAI,UAAA,YAAA8H,OAAA,CAAAC,gBAAA,CAAmB;;;;;IAY/CnI,EAAA,CAAAC,cAAA,qBAAiD;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;;IAEpEH,EAAA,CAAAC,cAAA,qBAA2D;IACvDD,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAFgCH,EAAA,CAAAI,UAAA,UAAAgI,QAAA,CAAa;IACtDpI,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAA6H,QAAA,CAAA5H,IAAA,MACJ;;;;;IAHJR,EAAA,CAAAS,uBAAA,GAAiC;IAC7BT,EAAA,CAAAU,UAAA,IAAA2H,0DAAA,yBAEa;IACjBrI,EAAA,CAAAY,qBAAA,EAAe;;;;IAHiBZ,EAAA,CAAAM,SAAA,GAAe;IAAfN,EAAA,CAAAI,UAAA,YAAAkI,OAAA,CAAAC,YAAA,CAAe;;;;;;IAiCvDvI,EAAA,CAAAC,cAAA,eAEyC;IADrCD,EAAA,CAAAe,UAAA,mBAAAyH,6DAAA;MAAA,MAAAvH,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAuH,KAAA;MAAA,MAAAC,aAAA,GAAAzH,WAAA,CAAAI,SAAA;MAAA,MAAAsH,QAAA,GAAA3I,EAAA,CAAAuB,aAAA;MAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAAmH,QAAA,CAAAC,YAAA,CAAAF,aAAA,CAAsB;IAAA,EAAC;IAEhC1I,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,iBAAsC;IAE9BD,EAAA,CAAAe,UAAA,mBAAA8H,iEAAA;MAAA,MAAA5H,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAuH,KAAA;MAAA,MAAAC,aAAA,GAAAzH,WAAA,CAAAI,SAAA;MAAA,MAAAyH,UAAA,GAAA7H,WAAA,CAAA8H,KAAA;MAAA,MAAAC,QAAA,GAAAhJ,EAAA,CAAAuB,aAAA;MAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAAwH,QAAA,CAAAC,gBAAA,CAAAP,aAAA,CAAAQ,SAAA,EAAAJ,UAAA,CAA4C;IAAA,EAAC;IACtD9I,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAJzBH,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAAmI,aAAA,CAAAQ,SAAA,MACA;;;;;;IAMJlJ,EAAA,CAAAC,cAAA,eAAoE;IAChED,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,iBAAsC;IACeD,EAAA,CAAAe,UAAA,mBAAAoI,iEAAA;MAAA,MAAAlI,WAAA,GAAAjB,EAAA,CAAAkB,aAAA,CAAAkI,KAAA;MAAA,MAAAC,WAAA,GAAApI,WAAA,CAAAI,SAAA;MAAA,MAAAiI,MAAA,GAAArI,WAAA,CAAA8H,KAAA;MAAA,MAAAQ,QAAA,GAAAvJ,EAAA,CAAAuB,aAAA;MAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAA+H,QAAA,CAAAC,YAAA,CAAAH,WAAA,EAAAC,MAAA,CAAsB;IAAA,EAAC;IAC7EtJ,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IAHzBH,EAAA,CAAAM,SAAA,GACA;IADAN,EAAA,CAAAO,kBAAA,MAAA8I,WAAA,MACA;;;;;IAqB5BrJ,EAAA,CAAAC,cAAA,SAA2C;IAExBD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAE3CH,EAAA,CAAAC,cAAA,SAAI;IAEID,EAAA,CAAA6B,SAAA,gBAAgG;IACpG7B,EAAA,CAAAG,YAAA,EAAiB;;;;;IAqCTH,EAAA,CAAAC,cAAA,SAA4B;IAGDD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;IADcH,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAAI,UAAA,oCAAmC;;;;;;IAGzFJ,EAAA,CAAAC,cAAA,SAA4B;IACFD,EAAA,CAAAe,UAAA,mBAAA0I,6DAAA;MAAAzJ,EAAA,CAAAkB,aAAA,CAAAwI,KAAA;MAAA,MAAAC,QAAA,GAAA3J,EAAA,CAAAuB,aAAA;MAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAAmI,QAAA,CAAAC,UAAA,EAAY;IAAA,EAAC;IACM5J,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;;IAErEH,EAAA,CAAAC,cAAA,SAA4B;IACFD,EAAA,CAAAe,UAAA,mBAAA8I,6DAAA;MAAA7J,EAAA,CAAAkB,aAAA,CAAA4I,KAAA;MAAA,MAAAC,QAAA,GAAA/J,EAAA,CAAAuB,aAAA;MAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAAuI,QAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IACKhK,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;IAY5FH,EAAA,CAAAC,cAAA,cAAgD;IAC5CD,EAAA,CAAA6B,SAAA,cAAmE;IACvE7B,EAAA,CAAAG,YAAA,EAAM;;;;IADGH,EAAA,CAAAM,SAAA,GAAiB;IAAjBN,EAAA,CAAAiK,qBAAA,QAAAC,OAAA,CAAAC,OAAA,EAAAnK,EAAA,CAAAoK,aAAA,CAAiB;;;ADzVtC,OAAM,MAAOC,oBAAoB;EA8HXC,WAAA;EAAkCC,WAAA;EAC5CC,MAAA;EAAwBC,WAAA;EAAkCC,MAAA;EAC1DC,YAAA;EAA0CC,cAAA;EAC3CC,aAAA;EAAsCC,SAAA;EAAiCC,KAAA;EAhIhFC,QAAQ,GAAGjL,WAAW,CAACkL,MAAM;EAC7BC,WAAW;EACXC,MAAM,GAAQ;IACZC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE,CACL,CAAC,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC,EAChE,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CACtD;MACDC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC;MAC9CC,GAAG,EAAE,CACH,CACE,MAAM,EACN,CACE,MAAM,EACN,QAAQ,EACR,WAAW,EACX,eAAe,EACf,aAAa,EACb,WAAW,EACX,OAAO,CACR,CACF;KAEJ;IACDC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE,CACP,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,EACnD,CACE,MAAM,EACN,CACE,MAAM,EACN,QAAQ,EACR,WAAW,EACX,eAAe,EACf,aAAa,EACb,WAAW,EACX,OAAO,CACR,CACF,EACD,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,EAC/C,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC,EACvD,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAC/C;IACDC,cAAc,EAAE,IAAI;IACpBC,mBAAmB,EAAE,uJAAuJ;IAC5KC,oBAAoB,EAAE;GACvB;EAGDC,cAAc,GAAG,KAAK;EACtBC,SAAS,GAAG,KAAK;EACjBC,WAAW;EACXC,eAAe,GAAY,IAAI;EACtBtJ,kBAAkB,GAAa,CAACvD,KAAK,EAAEC,KAAK,CAAC;EAC/C6E,eAAe;EACtBtB,cAAc;EACPkB,sBAAsB,GAAoB,EAAE;EAC5CoI,wBAAwB,GAAG,EAAE;EAC7BnI,MAAM,GAAG,IAAI/E,WAAW,EAAE;EAC1BmG,uBAAuB,GAAoB,EAAE;EAC7CgH,yBAAyB,GAAG,EAAE;EAC9B/G,OAAO,GAAG,IAAIpG,WAAW,EAAE;EAC3BuH,sBAAsB,GAAoB,EAAE;EAC5C6F,wBAAwB,GAAG,EAAE;EAC7B5F,iBAAiB,GAAG,IAAIxH,WAAW,EAAE;EACrCqN,mBAAmB;EACnBC,4BAA4B,GAAoB,EAAE;EAClDC,8BAA8B,GAAG,EAAE;EACnCC,uBAAuB,GAAG,IAAIxN,WAAW,EAAE;EAC3CyN,YAAY,GAAY,KAAK;EAC7BC,iBAAiB,GAAY,KAAK;EACzCC,YAAY,GAAG,KAAK;EACpBC,eAAe,GAAC,IAAI;EACpBC,WAAW;EACXC,MAAM,GAAa,EAAE;EACrBC,SAAS;EACTC,QAAQ,GAAG,IAAI;EACfC,YAAY,GAAG,IAAI;EACnBC,WAAW,GAAW,CAAC;EACvBC,QAAQ;EACRC,KAAK;EACLC,OAAO;EACPnD,OAAO;EACmBoD,WAAW;EACTC,aAAa;EACVC,gBAAgB;EACjBC,eAAe;EACdC,gBAAgB;EAC1BC,iBAAiB;EAChBC,kBAAkB;EACVC,eAAe;EACxBC,iBAAiB;EACFC,qBAAqB;EAC9BC,kBAAkB;EACbC,iBAAiB;EAC1BC,mBAAmB;EACPC,mBAAmB;EAEtDC,QAAQ;EACRC,UAAU;EACVC,KAAK,GAAQ,EAAE;EACfzN,cAAc,GAAQ,EAAE;EACxBiH,YAAY,GAAQ,EAAE;EACtBI,gBAAgB,GAAQ,EAAE;EAC1BqG,YAAY;EACZC,UAAU,GAAG,EAAE;EACfC,UAAU;EACHlM,wBAAwB,GAAgB,EAAE;EAC1CmM,0BAA0B,GAAG,EAAE;EAC/BlM,mBAAmB,GAAG,IAAIxD,WAAW,EAAE;EAC9CsJ,YAAY;EACZqG,SAAS;EACTC,OAAO;EACPC,KAAK;EACLC,UAAU;EACVC,aAAa;EACbC,UAAU;EACHC,uBAAuB,GAAoB,EAAE;EACbC,wBAAwB;EACxDC,yBAAyB,GAAG,EAAE;EAC9BC,0BAA0B,GAAG,IAAIpQ,WAAW,EAAE;EAGrDqQ,YAAoBhF,WAAwB,EAAUC,WAAwB,EACpEC,MAAc,EAAUC,WAAwB,EAAUC,MAAqB,EAC/EC,YAAiC,EAASC,cAAiC,EAC5EC,aAA4B,EAAUC,SAAuB,EAAUC,KAAqB;IAHjF,KAAAT,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IACvD,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAChE,KAAAC,YAAY,GAAZA,YAAY;IAA8B,KAAAC,cAAc,GAAdA,cAAc;IACzD,KAAAC,aAAa,GAAbA,aAAa;IAAyB,KAAAC,SAAS,GAATA,SAAS;IAAwB,KAAAC,KAAK,GAALA,KAAK;IACnF,IAAI,CAACkE,UAAU,GAAGM,WAAW,CAAC,MAAK;MAAG,IAAI,CAACvF,WAAW,EAAE;IAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC;EACxE;EAEAwF,WAAWA,CAAA;IACT,IAAI,IAAI,CAACP,UAAU,EAAE;MACnBQ,aAAa,CAAC,IAAI,CAACR,UAAU,CAAC;;EAElC;EAEAS,QAAQA,CAAA;IACN,IAAI,CAACxE,WAAW,GAAG,IAAI,CAACZ,WAAW,CAACqF,KAAK,CAAC;MACxCC,OAAO,EAAE,CAAC,EAAE,EAAE1Q,UAAU,CAAC2Q,QAAQ,CAAC;MAClCC,MAAM,EAAE,CAAC,EAAE,EAAE5Q,UAAU,CAAC2Q,QAAQ,CAAC;MACjCE,gBAAgB,EAAE,CAAC,EAAE,CAAC;MACtBC,aAAa,EAAE,CAAC,EAAE,CAAC;MACnBhM,MAAM,EAAE,CAAC,EAAE,CAAC;MACZqB,OAAO,EAAE,CAAC,EAAE,CAAC;MACb4K,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,EAAE,EAAE,CAAC,EAAE,CAAC;MACRC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC,EAAE,CAAC;MAClBC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdvD,MAAM,EAAE,CAAC,EAAE,CAAC;MACZwD,gBAAgB,EAAC,IAAI;MACrBC,WAAW,EAAE,CAAC,EAAE;KAEjB,CAAC;IAEF,IAAI,CAACzF,KAAK,CAAC0F,WAAW,CACnBC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAAC7D,WAAW,GAAG6D,MAAM,CAACC,WAAW;IACvC,CAAC,CACA;IAEH,IAAI,CAACC,mBAAmB,EAAE;IAE1B,IAAI,CAAC3F,WAAW,CAAC4F,GAAG,CAAC,UAAU,CAAC,CAACC,YAAY,CAC1CC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;MACP,IAAI,CAACuM,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAACyG,gBAAgB,CAACD,KAAK,EAAE,IAAI,CAAC/F,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,CAAC,CAC1FH,IAAI,CACHzR,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAACrJ,YAAY,GAAGwG,KAAK;MACzB,IAAI,CAACd,gBAAgB,CAAC4D,aAAa,CAACJ,KAAK,GAAG,EAAE;IAChD,CAAC,CAAC;IAEJ,IAAI,CAAC/F,WAAW,CAAC4F,GAAG,CAAC,cAAc,CAAC,CAACC,YAAY,CAC9CC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;MACP,IAAI,CAACuM,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC6G,eAAe,CAACL,KAAK,EAAE,IAAI,CAAC3C,UAAU,CAAC,CACxE0C,IAAI,CACHzR,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAACjJ,gBAAgB,GAAGoG,KAAK;IAC/B,CAAC,CAAC;IAEJ,IAAI,IAAI,CAACvK,MAAM,KAAK,IAAI,EAAE;MACxB,IAAI,CAACA,MAAM,CAAC+M,YAAY,CACrBC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;QACP,IAAI,CAACuM,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC8G,gBAAgB,CAACN,KAAK,EAAE,CAAC,CAAC,CAC3DD,IAAI,CACHzR,QAAQ,CAAC,MAAK;QACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,CAACjN,eAAe,GAAGoK,KAAK;QAC5B,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;UACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;UAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;MAG3C,CAAC,CAAC;;IAGN,IAAI,IAAI,CAAC1D,OAAO,KAAK,IAAI,EAAE;MACzB,IAAI,CAACA,OAAO,CAAC0L,YAAY,CACtBC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;QACP,IAAI,CAACuM,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC8G,gBAAgB,CAACN,KAAK,EAAE,CAAC,CAAC,CAC3DD,IAAI,CACHzR,QAAQ,CAAC,MAAK;QACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,CAACjN,eAAe,GAAGoK,KAAK;QAC5B,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;UACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;UAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;MAE3C,CAAC,CAAC;;IAGN,IAAI,IAAI,CAACtC,iBAAiB,KAAK,IAAI,EAAE;MACnC,IAAI,CAACA,iBAAiB,CAACsK,YAAY,CAChCC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;QACP,IAAI,CAACuM,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC8G,gBAAgB,CAACN,KAAK,EAAE,CAAC,CAAC,CAC3DD,IAAI,CACHzR,QAAQ,CAAC,MAAK;QACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,CAACjN,eAAe,GAAGoK,KAAK;QAC5B,IAAIiD,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,IAAI,CAACjN,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;UACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;UAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;MAE3C,CAAC,CAAC;;IAIN,IAAI,IAAI,CAAC0D,uBAAuB,KAAK,IAAI,EAAE;MACzC,IAAI,CAACA,uBAAuB,CAACsE,YAAY,CACtCC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;QACP,IAAI,CAACuM,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC8G,gBAAgB,CAACN,KAAK,EAAE,CAAC,CAAC,CAC3DD,IAAI,CACHzR,QAAQ,CAAC,MAAK;QACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,CAACjN,eAAe,GAAGoK,KAAK;QAC5B,IAAIiD,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,IAAI,CAACjN,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;UACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;UACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;UAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;MAE3C,CAAC,CAAC;;IAGN,IAAI,IAAI,CAACtG,mBAAmB,KAAK,IAAI,EAAE;MACrC,IAAI,CAACA,mBAAmB,CAACsO,YAAY,CAClCC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;QACP,IAAI,CAACuM,SAAS,GAAG,IAAI;MACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAACiH,iBAAiB,CAACT,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAChED,IAAI,CACHzR,QAAQ,CAAC,MAAK;QACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;MACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;QAC1C,IAAI,CAACvO,cAAc,GAAG0L,KAAK;QAC3B,IAAIoD,UAAU,GAAEpD,KAAK;QACrB,MAAMxF,KAAK,GAAG4I,UAAU,CAACC,SAAS,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,CAAC;QACtE,IAAI/I,KAAK,KAAK,CAAC,CAAC,EAChB;UACE4I,UAAU,CAACI,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;;QAE7B,IAAI,IAAI,CAAClG,cAAc,CAAC4O,MAAM,IAAI,CAAC,EAAE;UACnC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;UACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;UAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;MAE3C,CAAC,CAAC;MAGA,IAAI,IAAI,CAACsG,0BAA0B,KAAK,IAAI,EAAE;QAC9C,IAAI,CAACA,0BAA0B,CAAC0B,YAAY,CACzCC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;UACP,IAAI,CAACuM,SAAS,GAAG,IAAI;QACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAAC8G,gBAAgB,CAACN,KAAK,EAAE,CAAC,CAAC,CAC3DD,IAAI,CACHzR,QAAQ,CAAC,MAAK;UACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;QACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;UAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;UAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;UAC1C,IAAI,CAACjN,eAAe,GAAGoK,KAAK;UAC5B,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;YACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;YACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;YAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;QAE3C,CAAC,CAAC;;;EAIZ,CAAC,CAAC;EAEFiJ,YAAYA,CAAA;IACV,IAAI,CAACjG,cAAc,GAAG,KAAK;EAC7B;EAEAkG,aAAaA,CAAA;IACX,IAAI,CAAClG,cAAc,GAAG,IAAI;EAC5B;EAEAmG,MAAMA,CAAA;IACJ;EAAA;EAGFC,QAAQA,CAACC,IAAI;IACX;EAAA;EAGFC,cAAcA,CAACC,KAAK;IAClB;EAAA;EAGF1O,oBAAoBA,CAAA;IAClB2O,UAAU,CAAC,MAAK;MACd,IACE,IAAI,CAAC3E,iBAAiB,IACtB,IAAI,CAACQ,mBAAmB,IACxB,IAAI,CAACR,iBAAiB,CAAC4E,KAAK,EAC5B;QACArT,SAAS,CAAC,IAAI,CAACyO,iBAAiB,CAAC4E,KAAK,CAACnB,aAAa,EAAE,QAAQ,CAAC,CAC5DL,IAAI,CACHpR,GAAG,CAAC6S,CAAC,IAAI,IAAI,CAAC7E,iBAAiB,CAAC4E,KAAK,CAACnB,aAAa,CAACqB,SAAS,CAAC,EAC9D7S,SAAS,CAAC,IAAI,CAACuO,mBAAmB,CAACuE,mBAAmB,CAAC,CACxD,CACAjC,SAAS,CAAC+B,CAAC,IAAG;UACb,MAAMC,SAAS,GAAG,IAAI,CAAC9E,iBAAiB,CAAC4E,KAAK,CAACnB,aAAa,CAACqB,SAAS;UACtE,MAAME,YAAY,GAAG,IAAI,CAAChF,iBAAiB,CAAC4E,KAAK,CAACnB,aAAa,CAACuB,YAAY;UAC5E,MAAMC,aAAa,GAAG,IAAI,CAACjF,iBAAiB,CAAC4E,KAAK,CAACnB,aAAa,CAACyB,YAAY;UAC7E,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC,IAAIF,SAAS,GAAGG,aAAa;UAC9D,IAAIE,QAAQ,EAAE;YACZ,IAAI,IAAI,CAAC9F,QAAQ,KAAK,IAAI,EAAE;cAC1B,IAAI,CAACxC,WAAW,CAAC8G,gBAAgB,CAAC,IAAI,CAAC7D,eAAe,CAAC2D,aAAa,CAACJ,KAAK,EAAE,IAAI,CAAC9D,WAAW,GAAG,CAAC,CAAC,CAC9FuD,SAAS,CAAEU,OAAc,IAAI;gBAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;gBAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAACjN,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC6O,MAAM,CAACzE,KAAK,CAAC;gBACzD,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;kBACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;kBACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;kBAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;cAE3C,CAAC,CAAC;aACL;WACF;QACH,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF9D,qBAAqBA,CAAA;IACnBsN,UAAU,CAAC,MAAK;MACd,IACE,IAAI,CAAC1E,kBAAkB,IACvB,IAAI,CAACO,mBAAmB,IACxB,IAAI,CAACP,kBAAkB,CAAC2E,KAAK,EAC7B;QACArT,SAAS,CAAC,IAAI,CAAC0O,kBAAkB,CAAC2E,KAAK,CAACnB,aAAa,EAAE,QAAQ,CAAC,CAC7DL,IAAI,CACHpR,GAAG,CAAC6S,CAAC,IAAI,IAAI,CAAC5E,kBAAkB,CAAC2E,KAAK,CAACnB,aAAa,CAACqB,SAAS,CAAC,EAC/D7S,SAAS,CAAC,IAAI,CAACuO,mBAAmB,CAACuE,mBAAmB,CAAC,CACxD,CACAjC,SAAS,CAAC+B,CAAC,IAAG;UACb,MAAMC,SAAS,GAAG,IAAI,CAAC7E,kBAAkB,CAAC2E,KAAK,CAACnB,aAAa,CAACqB,SAAS;UACvE,MAAME,YAAY,GAAG,IAAI,CAAC/E,kBAAkB,CAAC2E,KAAK,CAACnB,aAAa,CAACuB,YAAY;UAC7E,MAAMC,aAAa,GAAG,IAAI,CAAChF,kBAAkB,CAAC2E,KAAK,CAACnB,aAAa,CAACyB,YAAY;UAC9E,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC,IAAIF,SAAS,GAAGG,aAAa;UAC9D,IAAIE,QAAQ,EAAE;YACZ,IAAI,IAAI,CAAC9F,QAAQ,KAAK,IAAI,EAAE;cAC1B,IAAI,CAACxC,WAAW,CAAC8G,gBAAgB,CAAC,IAAI,CAAC5D,gBAAgB,CAAC0D,aAAa,CAACJ,KAAK,EAAE,IAAI,CAAC9D,WAAW,GAAG,CAAC,CAAC,CAC/FuD,SAAS,CAAEU,OAAc,IAAI;gBAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;gBAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAACjN,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC6O,MAAM,CAACzE,KAAK,CAAC;gBACzD,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;kBACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;kBACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;kBAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;cAE3C,CAAC,CAAC;aACL;WACF;QACH,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF1C,oBAAoBA,CAAA;IAClBkM,UAAU,CAAC,MAAK;MACd,IACE,IAAI,CAACxE,iBAAiB,IACtB,IAAI,CAACK,mBAAmB,IACxB,IAAI,CAACL,iBAAiB,CAACyE,KAAK,EAC5B;QACArT,SAAS,CAAC,IAAI,CAAC4O,iBAAiB,CAACyE,KAAK,CAACnB,aAAa,EAAE,QAAQ,CAAC,CAC5DL,IAAI,CACHpR,GAAG,CAAC6S,CAAC,IAAI,IAAI,CAAC1E,iBAAiB,CAACyE,KAAK,CAACnB,aAAa,CAACqB,SAAS,CAAC,EAC9D7S,SAAS,CAAC,IAAI,CAACuO,mBAAmB,CAACuE,mBAAmB,CAAC,CACxD,CACAjC,SAAS,CAAC+B,CAAC,IAAG;UACb,MAAMC,SAAS,GAAG,IAAI,CAAC3E,iBAAiB,CAACyE,KAAK,CAACnB,aAAa,CAACqB,SAAS;UACtE,MAAME,YAAY,GAAG,IAAI,CAAC7E,iBAAiB,CAACyE,KAAK,CAACnB,aAAa,CAACuB,YAAY;UAC5E,MAAMC,aAAa,GAAG,IAAI,CAAC9E,iBAAiB,CAACyE,KAAK,CAACnB,aAAa,CAACyB,YAAY;UAC7E,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC,IAAIF,SAAS,GAAGG,aAAa;UAC9D,IAAIE,QAAQ,EAAE;YACZ,IAAI,IAAI,CAAC9F,QAAQ,KAAK,IAAI,EAAE;cAC1B,IAAI,CAACxC,WAAW,CAAC8G,gBAAgB,CAAC,IAAI,CAACzD,eAAe,CAACuD,aAAa,CAACJ,KAAK,EAAE,IAAI,CAAC9D,WAAW,GAAG,CAAC,CAAC,CAC9FuD,SAAS,CAAEU,OAAc,IAAI;gBAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;gBAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAACjN,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC6O,MAAM,CAACzE,KAAK,CAAC;gBACzD,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;kBACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;kBACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;kBAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;cAE3C,CAAC,CAAC;aACL;WACF;QACH,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFkK,qBAAqBA,CAAA;IACnBV,UAAU,CAAC,MAAK;MACd,IACE,IAAI,CAACtE,kBAAkB,IACvB,IAAI,CAACG,mBAAmB,IACxB,IAAI,CAACH,kBAAkB,CAACuE,KAAK,EAC7B;QACArT,SAAS,CAAC,IAAI,CAAC8O,kBAAkB,CAACuE,KAAK,CAACnB,aAAa,EAAE,QAAQ,CAAC,CAC7DL,IAAI,CACHpR,GAAG,CAAC6S,CAAC,IAAI,IAAI,CAACxE,kBAAkB,CAACuE,KAAK,CAACnB,aAAa,CAACqB,SAAS,CAAC,EAC/D7S,SAAS,CAAC,IAAI,CAACuO,mBAAmB,CAACuE,mBAAmB,CAAC,CACxD,CACAjC,SAAS,CAAC+B,CAAC,IAAG;UACb,MAAMC,SAAS,GAAG,IAAI,CAACzE,kBAAkB,CAACuE,KAAK,CAACnB,aAAa,CAACqB,SAAS;UACvE,MAAME,YAAY,GAAG,IAAI,CAAC3E,kBAAkB,CAACuE,KAAK,CAACnB,aAAa,CAACuB,YAAY;UAC7E,MAAMC,aAAa,GAAG,IAAI,CAAC5E,kBAAkB,CAACuE,KAAK,CAACnB,aAAa,CAACyB,YAAY;UAC9E,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC,IAAIF,SAAS,GAAGG,aAAa;UAC9D,IAAIE,QAAQ,EAAE;YACZ,IAAI,IAAI,CAAC9F,QAAQ,KAAK,IAAI,EAAE;cAC1B,IAAI,CAACxC,WAAW,CAAC8G,gBAAgB,CAAC,IAAI,CAACvD,qBAAqB,CAACqD,aAAa,CAACJ,KAAK,EAAE,IAAI,CAAC9D,WAAW,GAAG,CAAC,CAAC,CACpGuD,SAAS,CAAEU,OAAc,IAAI;gBAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;gBAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAACjN,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC6O,MAAM,CAACzE,KAAK,CAAC;gBACzD,IAAI,IAAI,CAACpK,eAAe,CAACsN,MAAM,IAAI,CAAC,EAAE;kBACpC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;kBACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;kBAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;cAE3C,CAAC,CAAC;aACL;WACF;QACH,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF1G,sBAAsBA,CAAA;IACpBkQ,UAAU,CAAC,MAAK;MACd,IACE,IAAI,CAACpE,mBAAmB,IACxB,IAAI,CAACC,mBAAmB,IACxB,IAAI,CAACD,mBAAmB,CAACqE,KAAK,EAC9B;QACArT,SAAS,CAAC,IAAI,CAACgP,mBAAmB,CAACqE,KAAK,CAACnB,aAAa,EAAE,QAAQ,CAAC,CAC9DL,IAAI,CACHpR,GAAG,CAAC6S,CAAC,IAAI,IAAI,CAACtE,mBAAmB,CAACqE,KAAK,CAACnB,aAAa,CAACqB,SAAS,CAAC,EAChE7S,SAAS,CAAC,IAAI,CAACuO,mBAAmB,CAACuE,mBAAmB,CAAC,CACxD,CACAjC,SAAS,CAAC+B,CAAC,IAAG;UACb,MAAMC,SAAS,GAAG,IAAI,CAACvE,mBAAmB,CAACqE,KAAK,CAACnB,aAAa,CAACqB,SAAS;UACxE,MAAME,YAAY,GAAG,IAAI,CAACzE,mBAAmB,CAACqE,KAAK,CAACnB,aAAa,CAACuB,YAAY;UAC9E,MAAMC,aAAa,GAAG,IAAI,CAAC1E,mBAAmB,CAACqE,KAAK,CAACnB,aAAa,CAACyB,YAAY;UAC/E,MAAMC,QAAQ,GAAGH,YAAY,GAAG,CAAC,IAAIF,SAAS,GAAGG,aAAa;UAC9D,IAAIE,QAAQ,EAAE;YACZ,IAAI,IAAI,CAAC9F,QAAQ,KAAK,IAAI,EAAE;cAC1B,IAAI,CAACxC,WAAW,CAACiH,iBAAiB,CAAC,IAAI,CAACxD,iBAAiB,CAACmD,aAAa,CAACJ,KAAK,EAAE,IAAI,CAAC9D,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CACrGuD,SAAS,CAAEU,OAAc,IAAI;gBAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;gBAC3B,IAAII,cAAc,GAAGJ,OAAO,CAAC,YAAY,CAAC;gBAC1C,IAAI,CAACvO,cAAc,GAAG,IAAI,CAACA,cAAc,CAACmQ,MAAM,CAACzE,KAAK,CAAC;gBACvD,IAAI,IAAI,CAAC1L,cAAc,CAAC4O,MAAM,IAAI,CAAC,EAAE;kBACnC,IAAI,CAACxE,QAAQ,GAAGuE,cAAc,CAACvE,QAAQ;kBACvC,IAAI,CAACC,YAAY,GAAGsE,cAAc,CAACtE,YAAY;kBAC/C,IAAI,CAACC,WAAW,GAAGqE,cAAc,CAACzI,KAAK;;cAE3C,CAAC,CAAC;aACL;WACF;QACH,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF8H,mBAAmBA,CAAA;IACjB,IAAIM,EAAE,GAAG,IAAI,CAACtG,aAAa,CAACqI,SAAS,CAACjC,KAAK;IAC3C,IAAI,CAACpC,OAAO,GAAGsC,EAAE;IACjB,IAAI,CAAC5G,WAAW,CAAC4I,QAAQ,CAAChC,EAAE,CAAC,CAC1BT,SAAS,CAAE0C,IAAI,IAAI;MAClB,IAAI,CAAC1G,YAAY,GAAG0G,IAAI,CAACC,YAAY;MACrC,IAAI,CAAC1G,iBAAiB,GAAGyG,IAAI,CAACE,iBAAiB;MAC/C,IAAI,CAAClG,QAAQ,GAAGgG,IAAI,CAACG,SAAS;MAC9B,IAAI,CAAC/E,YAAY,GAAG4E,IAAI,CAACI,YAAY;MACrC,IAAI,CAACnG,KAAK,GAAE+F,IAAI,CAACK,MAAM;MACvB,IAAI,CAAC1E,UAAU,GAAGqE,IAAI,CAACM,WAAW;MAClC,IAAI,CAAC1G,SAAS,GAAGoG,IAAI,CAACpG,SAAS;MAC/B,IAAIsD,QAAQ,GAAG8C,IAAI,CAAC,UAAU,CAAC;MAC/B,IAAI9C,QAAQ,EAAE;QACZ,IAAIqD,UAAU,GAAGrD,QAAQ,CAAC,IAAI,CAAC;QAC/B,IAAI9P,IAAI,GAAG8P,QAAQ,CAAC,MAAM,CAAC;QAC3B,IAAI,CAACpF,WAAW,CAAC0I,UAAU,CAAC;UAC1B,UAAU,EAAEtD;SACb,CAAC;;MAEJ,IAAIuD,SAAS,GAAG,IAAIzU,IAAI,EAAE;MAC1ByU,SAAS,CAACjE,OAAO,GAAGwD,IAAI,CAAC,SAAS,CAAC;MACnCS,SAAS,CAACC,aAAa,GAAGV,IAAI,CAAC,eAAe,CAAC;MAC/CS,SAAS,CAAC9D,gBAAgB,GAAGqD,IAAI,CAAC,kBAAkB,CAAC;MACrD;MACA,IAAIA,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE;QAC1B,IAAI,CAACxE,SAAS,GAAG,mBAAmB;QACpC,IAAI,CAAC/D,aAAa,CAACkJ,QAAQ,GAAG,QAAQ;;MAExC,IAAIX,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE;QAC1B,IAAI,CAACxE,SAAS,GAAG,mBAAmB;QACpC,IAAI,CAAC/D,aAAa,CAACkJ,QAAQ,GAAG,UAAU;;MAE1C,IAAI,CAAC9H,WAAW,GAAGmH,IAAI,CAAC,SAAS,CAAC;MAClC,IAAIY,WAAW,GAAGZ,IAAI,CAAC,QAAQ,CAAC;MAChC,IAAIa,QAAQ,GAAGD,WAAW,CAAC,IAAI,CAAC;MAChC,IAAIA,WAAW,CAAC,MAAM,CAAC,EAAE;QACvB,IAAIE,UAAU,GAAQ;UACpB,MAAM,EAAEF,WAAW,CAACxT,IAAI;UACxB,IAAI,EAAEyT;SACP;QACDJ,SAAS,CAAC/D,MAAM,GAAGoE,UAAU;QAC7B,IAAI,CAACpT,cAAc,CAACqT,IAAI,CAACD,UAAU,CAAC;;MAGtC,IAAIE,aAAa,GAAGhB,IAAI,CAAC,UAAU,CAAC;MACpC,IAAIiB,UAAU,GAAGD,aAAa,CAAC,IAAI,CAAC;MACpC,IAAIE,YAAY,GAAGF,aAAa,CAAC,MAAM,CAAC;MACxC,IAAIG,GAAG,GAAGF,UAAU;MACpB,IAAIE,GAAG,KAAK,CAAC,CAAC,EAAE;QACd,IAAIC,IAAI,GAAQ;UACd,MAAM,EAAEF,YAAY;UACpB,IAAI,EAAED;SACP;QACDR,SAAS,CAACzD,QAAQ,GAAGoE,IAAI;QACzB,IAAI,CAAClG,UAAU,GAAGiG,GAAG;QACrB,IAAI,CAACxM,YAAY,CAACoM,IAAI,CAACK,IAAI,CAAC;;MAE9B,IAAIC,gBAAgB,GAAGrB,IAAI,CAAC,cAAc,CAAC;MAC3C,IAAIsB,aAAa,GAAGD,gBAAgB,CAAC,IAAI,CAAC;MAC1C,IAAIE,eAAe,GAAGF,gBAAgB,CAAC,MAAM,CAAC;MAC9C,IAAIG,WAAW,GAAGF,aAAa;MAC/B,IAAIE,WAAW,KAAK,CAAC,CAAC,EAAE;QACtB,IAAIC,iBAAiB,GAAQ;UAC3B,MAAM,EAAEF,eAAe;UACvB,IAAI,EAAED;SACP;QACDb,SAAS,CAACxD,YAAY,GAAGwE,iBAAiB;QAC1C,IAAI,CAAC1M,gBAAgB,CAACgM,IAAI,CAACU,iBAAiB,CAAC;;MAE/CzB,IAAI,CAACjD,EAAE,CAAC2E,OAAO,CAACC,OAAO,IAAG;QACxB,IAAI,CAACvO,sBAAsB,CAAC2N,IAAI,CAACY,OAAO,CAAC;QACzC,IAAI,CAAC1I,wBAAwB,CAAC8H,IAAI,CAACY,OAAO,CAAC5D,EAAE,CAAC;MAChD,CAAC,CAAC;MACFiC,IAAI,CAACnD,OAAO,CAAC6E,OAAO,CAACC,OAAO,IAAG;QAC7B,IAAI,CAACvS,wBAAwB,CAAC2R,IAAI,CAACY,OAAO,CAAC;QAC3C,IAAI,CAACpG,0BAA0B,CAACwF,IAAI,CAACY,OAAO,CAAC5D,EAAE,CAAC;MAClD,CAAC,CAAC;MACFiC,IAAI,CAAClD,QAAQ,CAAC4E,OAAO,CAACC,OAAO,IAAG;QAC9B,IAAI,CAACxI,4BAA4B,CAAC4H,IAAI,CAACY,OAAO,CAAC;QAC/C,IAAI,CAACvI,8BAA8B,CAAC2H,IAAI,CAACY,OAAO,CAAC5D,EAAE,CAAC;MACtD,CAAC,CAAC;MACFiC,IAAI,CAAC5C,WAAW,CAACsE,OAAO,CAACC,OAAO,IAAG;QACjC,IAAI,CAAC7F,uBAAuB,CAACiF,IAAI,CAACY,OAAO,CAAC;QAC1C,IAAI,CAAC3F,yBAAyB,CAAC+E,IAAI,CAACY,OAAO,CAAC5D,EAAE,CAAC;MACjD,CAAC,CAAC;MACF,IAAI,CAAC5C,KAAK,GAAG6E,IAAI;MACjB,IAAI,CAACtE,KAAK,GAAGsE,IAAI,CAACK,MAAM;MACxB,IAAI,CAACvH,eAAe,GAAG,IAAI;MAC3B,IAAI,CAAChB,WAAW,CAAC0I,UAAU,CAAC;QAC1BhE,OAAO,EAAEiE,SAAS,CAACjE,OAAO;QAC1BE,MAAM,EAAE+D,SAAS,CAAC/D,MAAM;QACxBC,gBAAgB,EAAE8D,SAAS,CAAC9D,gBAAgB;QAC5CC,aAAa,EAAE6D,SAAS,CAACC,aAAa;QACtC9P,MAAM,EAAE,IAAI,CAACmI,wBAAwB;QACrC8D,OAAO,EAAE,IAAI,CAACtB,0BAA0B;QACxCuB,QAAQ,EAAE,IAAI,CAAC1D,8BAA8B;QAC7CgE,WAAW,EAAE,IAAI,CAACpB,yBAAyB;QAC3CgB,QAAQ,EAAEyD,SAAS,CAACzD,QAAQ;QAC5BC,YAAY,EAAEwD,SAAS,CAACxD,YAAY;QACpCF,EAAE,EAAE,IAAI,CAAC9D,wBAAwB;QACjCoH,MAAM,EAAE,IAAI,CAAC3E;OACd,EAAE;QAAEkG,SAAS,EAAE;MAAK,CAAE,CAAC;MACxB;MACA,OAAOnB,SAAS;IAClB,CAAC,CAAC;IACJ,IAAI,IAAI,CAAC/G,WAAW,KAAK,eAAe,EAAE;MACxC,IAAI,CAAC+B,OAAO,GAAG,EAAE;;EAErB,CAAC,CAAC;EAEFjG,YAAYA,CAACqM,UAAU;IACrB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACpD,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;IACrC,IAAIM,KAAK,GAAGH,UAAU,CAACG,KAAK;IAC5BlI,OAAO,EAAEmI,MAAM;IACftL,OAAO,EAAEsL,MAAM;IAEf,IAAIC,QAAQ,GAAGT,UAAU,CAAC/L,SAAS;IACnC,IAAIyM,MAAM,GAAGV,UAAU,CAAC9D,EAAE;IAC1B,IAAIyE,QAAQ,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IAElC,IAAID,QAAQ,CAAC,CAAC,CAAC,KAAK,KAAK,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,MAAM,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MAC5E,IAAI,CAACzL,OAAO,GAAG,IAAI,CAACa,QAAQ,GAAG,wBAAwB,GAAG2K,MAAM,GAAG,SAAS,GAAGH,KAAK;KACrF,MACI;MACH,IAAI,CAAClI,OAAO,GAAG,IAAI,CAACtC,QAAQ,GAAG,wBAAwB,GAAG2K,MAAM,GAAG,SAAS,GAAGD,QAAQ,GAAG,SAAS,GAAGF,KAAK;MAC3G,IAAIM,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,MAAM,CAACG,IAAI,GAAG,IAAI,CAAC3I,OAAO;MAC1BwI,MAAM,CAACI,MAAM,GAAG,QAAQ;MACxBJ,MAAM,CAACK,KAAK,EAAE;;EAElB;EAEAC,eAAeA,CAAA;IACb,IAAIhD,IAAI,GAAG,IAAI,CAAClI,WAAW,CAACmL,QAAQ;IACpC,IAAIC,UAAU,GAAG,IAAIlX,IAAI,EAAE;IAC3BkX,UAAU,CAACjD,YAAY,GAAG,IAAI,CAAC3G,YAAY;IAC3C4J,UAAU,CAAChD,iBAAiB,GAAG,IAAI,CAAC3G,iBAAiB;IACrD2J,UAAU,CAAChG,QAAQ,GAAI8C,IAAI,CAAC9C,QAAQ,CAACW,KAAK,CAACE,EAAE;IAC7C,IAAIoF,OAAO,GAAW,CAAC;IACvB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAI,CAAChK,8BAA8B,CAACsI,OAAO,CAAE2B,QAAQ,IAAI;MACvD,IAAIC,QAAQ,GAAG;QACb,IAAI,EAAED,QAAQ;QACd,OAAO,EAAEF,OAAO,GAAG;OACpB;MACDA,OAAO,GAAGA,OAAO,GAAG,CAAC;MACrBC,aAAa,CAACrC,IAAI,CAACuC,QAAQ,CAAC;IAC9B,CAAC,CAAC;IACFJ,UAAU,CAACrG,OAAO,GAAG,IAAI,CAACtB,0BAA0B;IACpD2H,UAAU,CAACpG,QAAQ,GAAGsG,aAAa;IACnCF,UAAU,CAACnG,EAAE,GAAG,IAAI,CAAC9D,wBAAwB;IAC7CiK,UAAU,CAACtS,MAAM,GAAG,IAAI,CAACmI,wBAAwB;IACjDmK,UAAU,CAACjR,OAAO,GAAG,IAAI,CAAC+G,yBAAyB;IACnDkK,UAAU,CAAC1G,OAAO,GAAG,IAAI,CAAC1E,WAAW,CAAC+F,KAAK,CAACrB,OAAO;IACnD0G,UAAU,CAACvG,gBAAgB,GAAG,IAAI,CAAC7E,WAAW,CAAC+F,KAAK,CAAClB,gBAAgB;IACrEuG,UAAU,CAACxC,aAAa,GAAG,IAAI,CAAC5I,WAAW,CAAC+F,KAAK,CAACjB,aAAa;IAC/D;IACA,IAAI,IAAI,CAACpB,SAAS,KAAK,mBAAmB,EAAE;MAC1C0H,UAAU,CAACK,IAAI,GAAG,KAAK;;IAEzB,IAAI,IAAI,CAAC/H,SAAS,KAAK,mBAAmB,EAAE;MAC1C0H,UAAU,CAACK,IAAI,GAAG,KAAK;;IAGzBL,UAAU,CAACxG,MAAM,GAAG,IAAI,CAAC5E,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,GAAG,OAAO;IAC9D,IAAI,IAAI,CAACjG,WAAW,CAAC+F,KAAK,CAACb,QAAQ,KAAKwG,SAAS,EAAE;MACjDN,UAAU,CAAClG,QAAQ,GAAG,IAAI;KAC3B,MAAM;MACLkG,UAAU,CAAClG,QAAQ,GAAG,IAAI,CAAClF,WAAW,CAAC+F,KAAK,CAACb,QAAQ,CAACe,EAAE;;IAE1D,IAAI,IAAI,CAACjG,WAAW,CAAC+F,KAAK,CAACZ,YAAY,KAAKuG,SAAS,EAAE;MACrDN,UAAU,CAACjG,YAAY,GAAG,IAAI;KAC/B,MAAM;MACLiG,UAAU,CAACjG,YAAY,GAAG,IAAI,CAACnF,WAAW,CAAC+F,KAAK,CAACZ,YAAY,CAACc,EAAE;;IAElEmF,UAAU,CAACO,OAAO,GAAG,IAAI,CAAC5K,WAAW;IACrCqK,UAAU,CAACvJ,MAAM,GAAG,IAAI,CAACA,MAAM;IAC/B,IAAI+J,aAAa,GAAG,EAAE;IACtB,IAAIC,QAAQ,GAAW,CAAC;IACxB,IAAI,CAAC3H,yBAAyB,CAAC0F,OAAO,CAAE2B,QAAQ,IAAI;MAClD,IAAIO,WAAW,GAAG;QAChB,IAAI,EAAEP,QAAQ;QACd,OAAO,EAAEM,QAAQ,GAAG;OACrB;MACDA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;MACvBD,aAAa,CAAC3C,IAAI,CAAC6C,WAAW,CAAC;IACjC,CAAC,CAAC;IAEFV,UAAU,CAAC9F,WAAW,GAAGsG,aAAa;IACtC,OAAOR,UAAU;EACnB;EAEAW,eAAeA,CAAA;IACb,IAAI,CAACrM,cAAc,CAACsM,IAAI,EAAE;IAC1B,IAAI,IAAI,CAAChM,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,KAAKyF,SAAS,EAAE;MAClD,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,oBAAoB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACtE,OAAO,KAAK;;IAEd,IAAI,IAAI,CAAC7K,8BAA8B,CAACiF,MAAM,KAAK,CAAC,EAAE;MACpD,IAAI,CAAC7G,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,qCAAqC,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACvF,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACxM,aAAa,CAACkJ,QAAQ,KAAK,UAAU,EAAE;MAC9C,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC9K,8BAA8B,CAACiF,MAAM,EAAE6F,CAAC,EAAE,EAAE;QACnE,IAAI,IAAI,CAAC9K,8BAA8B,CAAC8K,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UAC5E,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,gCAAgC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UAClF,OAAO,KAAK;;;MAGhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClI,yBAAyB,CAACqC,MAAM,EAAE6F,CAAC,EAAE,EAAE;QAC9D,IAAI,IAAI,CAAClI,yBAAyB,CAACkI,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UACvE,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,mCAAmC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UACtF,OAAO,KAAK;;;;IAKjB,IAAI,IAAI,CAACxM,aAAa,CAACkJ,QAAQ,KAAK,QAAQ,EAAE;MAC5C,IAAI,IAAI,CAAC5H,wBAAwB,CAACsF,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC9C,0BAA0B,CAAC8C,MAAM,KAAK,CAAC,EAAE;QAC9F,IAAI,CAAC7G,cAAc,CAACuM,IAAI,EAAE;QAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,kDAAkD,EAAE;UAAEC,OAAO,EAAE;QAAI,CAAE,CAAC;QACpG,OAAO,KAAK;;;IAGhB,IAAI,IAAI,CAACnM,WAAW,CAAC+F,KAAK,CAACrB,OAAO,KAAK,EAAE,EAAE;MACzC,IAAI,CAAChF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACnE,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACnM,WAAW,CAAC+F,KAAK,CAACjB,aAAa,KAAK,EAAE,EAAE;MAC/C,IAAI,CAACpF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,wBAAwB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC1E,OAAO,KAAK;;IAGd,IAAI,CAAC9M,WAAW,CAACiN,iBAAiB,CAAC,IAAI,CAACpB,eAAe,EAAE,EAAE,IAAI,CAACrJ,MAAM,EAAE,IAAI,CAAC+B,KAAK,CAAC,CAChF4B,SAAS,CAAC+G,GAAG,IAAG;MACf,IAAItG,EAAE,GAAGsG,GAAG,CAACtG,EAAE;MACf,IAAI,CAACtG,aAAa,CAACqI,SAAS,CAACwE,IAAI,CAACvG,EAAE,CAAC;MACrC,IAAI,CAACvG,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAAC3M,MAAM,CAACmN,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;QAAElH,WAAW,EAAE;UAAEmH,GAAG,EAAEzG,EAAE;UAAE0G,IAAI,EAAE;QAAO,CAAE;QAAEC,kBAAkB,EAAE;MAAI,CAAE,CAAC;MAChH,OAAO,IAAI;IACb,CAAC,EACDV,KAAK,IAAG;MACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;IAC5B,CAAC,CACA;EACL;EAEAxP,gBAAgBA,CAACoQ,CAAC;IAChB,IAAI,CAACzJ,UAAU,GAAGyJ,CAAC,CAACC,MAAM,CAAC/G,KAAK,CAACE,EAAE;EACrC;EAEA8G,cAAcA,CAACF,CAAC;IACd,IAAIA,CAAC,CAACG,WAAW,IAAI,IAAI,EAAE;MACzB,IAAI,IAAI,CAAChM,eAAe,KAAK,KAAK,EAAE;QAClC,IAAI,CAACsB,aAAa,CAAC6D,aAAa,CAACJ,KAAK,GAAG,EAAE;QAC3C,IAAI,CAACxD,gBAAgB,CAAC4D,aAAa,CAACJ,KAAK,GAAG,EAAE;;MAEhD,IAAI,CAAC/E,eAAe,GAAG,KAAK;;EAEhC;EAEAiM,aAAaA,CAACJ,CAAC;IACb,IAAI,IAAI,CAAC7M,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,KAAKyF,SAAS,EAAE;MAClD,IAAI,CAAClM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,2BAA2B,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC7E,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC7J,aAAa,CAAC6D,aAAa,CAACJ,KAAK,KAAK,EAAE,EAAE;MACjD,IAAI,CAACxG,WAAW,CAACyG,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAChG,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,CAAC,CACpET,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,CAACrJ,YAAY,GAAGwG,KAAK;MAC3B,CAAC,CAAC;;EAER;EAEA6J,gBAAgBA,CAACL,CAAC;IAChB,IAAI,IAAI,CAACtK,gBAAgB,CAAC4D,aAAa,CAACJ,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC3C,UAAU,KAAKsI,SAAS,EAAE;MACrF,IAAI,CAACnM,WAAW,CAAC6G,eAAe,CAAC,GAAG,EAAE,IAAI,CAAChD,UAAU,CAAC,CACnDoC,SAAS,CAAEU,OAAc,IAAI;QAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;QAC3B,IAAI,CAACjJ,gBAAgB,GAAGoG,KAAK;QAC7B,IAAI,CAACd,gBAAgB,CAAC4D,aAAa,CAACJ,KAAK,GAAG,EAAE;MAChD,CAAC,CAAC;;EAER;EAEOoH,eAAeA,CAACC,WAAsB;IAE3C,OAAOA,WAAW,GAAGA,WAAW,CAAC9X,IAAI,GAAGoW,SAAS;EACnD;EACA,IAAI0B,WAAWA,CAAA;IACb,OAAO,IAAI,CAACpN,WAAW,CAAC4F,GAAG,CAAC,UAAU,CAAC;EACzC;EAEOyH,kBAAkBA,CAACC,WAAyB;IAEjD,OAAOA,WAAW,GAAGA,WAAW,CAAChY,IAAI,GAAGoW,SAAS;EACnD;EACA,IAAI4B,WAAWA,CAAA;IACb,OAAO,IAAI,CAACtN,WAAW,CAAC4F,GAAG,CAAC,cAAc,CAAC;EAC7C;EAGO5N,gBAAgBA,CAACuV,QAAuB;IAC7C,MAAM1P,KAAK,GAAG,IAAI,CAAChF,sBAAsB,CAAC2U,OAAO,CAACD,QAAQ,CAAC;IAC3D,IAAI1P,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAAChF,sBAAsB,CAACgO,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC5C,IAAI,CAACoD,wBAAwB,CAAC4F,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC9C,IAAI,CAAC2E,eAAe,CAAC2D,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAEjD;EAEOxN,kBAAkBA,CAAC6O,KAAmC;IAC3D,IAAI,CAACqG,sBAAsB,CAACrG,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAAC9N,SAAS,CAAC;IACzD,IAAI,CAACuK,eAAe,CAAC2D,aAAa,CAACJ,KAAK,GAAG,EAAE;EAC/C;EACQ0H,sBAAsBA,CAACE,YAAY;IACzC,IAAIC,gBAAgB,GAAG,IAAI,CAAC/U,sBAAsB,CAACgV,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAI0V,YAAY,CAAC;IAC7G,IAAIC,gBAAgB,CAACrH,MAAM,EAAE;MAC3B;;IAEF,IAAIwH,eAAe,GAAG,IAAI,CAAC9U,eAAe,CAAC4U,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAI0V,YAAY,CAAC;IACrG,IAAII,eAAe,CAACxH,MAAM,EAAE;MAC1B,IAAI,CAAC1N,sBAAsB,CAACoQ,IAAI,CAAC8E,eAAe,CAAC,CAAC,CAAC,CAAC;MACpD,IAAI,CAAC9M,wBAAwB,CAACgI,IAAI,CAAC8E,eAAe,CAAC,CAAC,CAAC,CAAC9H,EAAE,CAAC;;EAE7D;EAEO3M,iBAAiBA,CAACiU,QAAuB;IAC9C,MAAM1P,KAAK,GAAG,IAAI,CAAC3D,uBAAuB,CAACsT,OAAO,CAACD,QAAQ,CAAC;IAC5D,IAAI1P,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAAC3D,uBAAuB,CAAC2M,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC7C,IAAI,CAACqD,yBAAyB,CAAC2F,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC/C,IAAI,CAAC4E,gBAAgB,CAAC0D,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAElD;EAEOnM,mBAAmBA,CAACwN,KAAmC;IAC5D,IAAI,CAAC4G,uBAAuB,CAAC5G,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAAC9N,SAAS,CAAC;IAC1D,IAAI,CAACwK,gBAAgB,CAAC0D,aAAa,CAACJ,KAAK,GAAG,EAAE;EAChD;EACQiI,uBAAuBA,CAACL,YAAY;IAC1C,IAAIM,gBAAgB,GAAG,IAAI,CAAC/T,uBAAuB,CAAC2T,MAAM,CAACK,WAAW,IAAIA,WAAW,CAACjW,SAAS,IAAI0V,YAAY,CAAC;IAChH,IAAIM,gBAAgB,CAAC1H,MAAM,EAAE;MAC3B;;IAEF,IAAI4H,iBAAiB,GAAG,IAAI,CAAClV,eAAe,CAAC4U,MAAM,CAACK,WAAW,IAAIA,WAAW,CAACjW,SAAS,IAAI0V,YAAY,CAAC;IACzG,IAAIQ,iBAAiB,CAAC5H,MAAM,EAAE;MAC5B,IAAI,CAACrM,uBAAuB,CAAC+O,IAAI,CAACkF,iBAAiB,CAAC,CAAC,CAAC,CAAC;MACvD,IAAI,CAACjN,yBAAyB,CAAC+H,IAAI,CAACkF,iBAAiB,CAAC,CAAC,CAAC,CAAClI,EAAE,CAAC;;EAEhE;EAGOvL,gBAAgBA,CAACoT,UAAyB;IAC/C,MAAMjQ,KAAK,GAAG,IAAI,CAACvC,sBAAsB,CAACkS,OAAO,CAACM,UAAU,CAAC;IAC7D,IAAIjQ,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACvC,sBAAsB,CAACuL,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC5C,IAAI,CAACsD,wBAAwB,CAAC0F,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC9C,IAAI,CAAC+E,eAAe,CAACuD,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAEjD;EAEO/K,kBAAkBA,CAACoM,KAAmC;IAC3D,IAAI,CAACgH,sBAAsB,CAAChH,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAAC9N,SAAS,CAAC;IACzD,IAAI,CAAC2K,eAAe,CAACuD,aAAa,CAACJ,KAAK,GAAG,EAAE;EAC/C;EACQqI,sBAAsBA,CAACC,cAAc;IAC3C,IAAIT,gBAAgB,GAAG,IAAI,CAACtS,sBAAsB,CAACuS,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAIoW,cAAc,CAAC;IAC/G,IAAIT,gBAAgB,CAACrH,MAAM,EAAE;MAC3B;;IAEF,IAAIwH,eAAe,GAAG,IAAI,CAAC9U,eAAe,CAAC4U,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAIoW,cAAc,CAAC;IACvG,IAAIN,eAAe,CAACxH,MAAM,EAAE;MAC1B,IAAI,CAACjL,sBAAsB,CAAC2N,IAAI,CAAC8E,eAAe,CAAC,CAAC,CAAC,CAAC;MACpD,IAAI,CAAC5M,wBAAwB,CAAC8H,IAAI,CAAC8E,eAAe,CAAC,CAAC,CAAC,CAAC9H,EAAE,CAAC;;EAE7D;EAEOnK,sBAAsBA,CAACyR,QAAuB;IACnD,MAAM1P,KAAK,GAAG,IAAI,CAACwD,4BAA4B,CAACmM,OAAO,CAACD,QAAQ,CAAC;IACjE,IAAI1P,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACwD,4BAA4B,CAACwF,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAClD,IAAI,CAACyD,8BAA8B,CAACuF,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MACpD,IAAI,CAACiF,qBAAqB,CAACqD,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAEvD;EAEOuI,wBAAwBA,CAAClH,KAAmC;IACjE,IAAI,CAACmH,4BAA4B,CAACnH,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAAC9N,SAAS,EAACmP,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAACE,EAAE,CAAC;IACrF,IAAI,CAACnD,qBAAqB,CAACqD,aAAa,CAACJ,KAAK,GAAG,EAAE;EACrD;EACQwI,4BAA4BA,CAAChB,QAAQ,EAACiB,UAAU;IACtD,IAAIC,uBAAuB,GAAG,IAAI,CAACpN,4BAA4B,CAACwM,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7H,EAAE,IAAIuI,UAAU,CAAC;IACjH,IAAIC,uBAAuB,CAAClI,MAAM,EAAE;MAClC;;IAEF,IAAImI,qBAAqB,GAAG,IAAI,CAACzV,eAAe,CAAC4U,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAIsV,QAAQ,CAAC;IACvG,IAAImB,qBAAqB,CAACnI,MAAM,EAAE;MAChC,IAAI,CAAClF,4BAA4B,CAAC4H,IAAI,CAACyF,qBAAqB,CAAC,CAAC,CAAC,CAAC;MAChE,IAAI,CAACpN,8BAA8B,CAAC2H,IAAI,CAACyF,qBAAqB,CAAC,CAAC,CAAC,CAACzI,EAAE,CAAC;;EAEzE;EAEO1P,kBAAkBA,CAACoY,IAAe;IACvC,MAAM9Q,KAAK,GAAG,IAAI,CAACvG,wBAAwB,CAACkW,OAAO,CAACmB,IAAI,CAAC;IACzD,IAAI9Q,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACvG,wBAAwB,CAACuP,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC9C,IAAI,CAAC4F,0BAA0B,CAACoD,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAChD,IAAI,CAACmF,iBAAiB,CAACmD,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAEnD;EAEO/O,oBAAoBA,CAACoQ,KAAmC;IAC7D,IAAI,CAACwH,wBAAwB,CAACxH,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAACzQ,IAAI,EAAC8R,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAACE,EAAE,CAAC;IAC5E,IAAI,CAACjD,iBAAiB,CAACmD,aAAa,CAACJ,KAAK,GAAG,EAAE;EACjD;EACQ6I,wBAAwBA,CAACD,IAAI,EAACE,MAAM;IAC1C,IAAIC,kBAAkB,GAAG,IAAI,CAACxX,wBAAwB,CAACuW,MAAM,CAACkB,YAAY,IAAIA,YAAY,CAAC9I,EAAE,IAAI4I,MAAM,CAAC;IACxG,IAAIC,kBAAkB,CAACvI,MAAM,EAAE;MAC7B;;IAEF,IAAIyI,iBAAiB,GAAG,IAAI,CAACrX,cAAc,CAACkW,MAAM,CAACkB,YAAY,IAAIA,YAAY,CAACzZ,IAAI,IAAIqZ,IAAI,CAAC;IAC7F,IAAIK,iBAAiB,CAACzI,MAAM,EAAE;MAC5B,IAAI,CAACjP,wBAAwB,CAAC2R,IAAI,CAAC+F,iBAAiB,CAAC,CAAC,CAAC,CAAC;MACxD,IAAI,CAACvL,0BAA0B,CAACwF,IAAI,CAAC+F,iBAAiB,CAAC,CAAC,CAAC,CAAC/I,EAAE,CAAC;MAC7DgJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAC,IAAI,CAAC5X,wBAAwB,CAAC;;EAE9E;EAEA6X,aAAaA,CAAA;IACX,IAAIjH,IAAI,GAAG,IAAI,CAAClI,WAAW,CAACmL,QAAQ;IACpC,IAAIC,UAAU,GAAG,IAAIgE,SAAS,EAAE;IAChC,IAAI,IAAI,CAACxL,KAAK,EAAC;MACbwH,UAAU,CAAC7C,MAAM,GAAC,IAAI,CAAC3E,KAAK;;IAE9BwH,UAAU,CAACjD,YAAY,GAAG,IAAI,CAAC3G,YAAY;IAC3C4J,UAAU,CAAChD,iBAAiB,GAAG,IAAI,CAAC3G,iBAAiB;IACrD2J,UAAU,CAAChG,QAAQ,GAAI8C,IAAI,CAAC9C,QAAQ,CAACW,KAAK,CAACE,EAAE;IAC7C,IAAIoF,OAAO,GAAW,CAAC;IACvB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAI,CAAChK,8BAA8B,CAACsI,OAAO,CAAE2B,QAAQ,IAAI;MACvD,IAAIC,QAAQ,GAAG;QACb,IAAI,EAAED,QAAQ;QACd,OAAO,EAAEF,OAAO,GAAG;OACpB;MACDA,OAAO,GAAGA,OAAO,GAAG,CAAC;MACrBC,aAAa,CAACrC,IAAI,CAACuC,QAAQ,CAAC;IAC9B,CAAC,CAAC;IACFJ,UAAU,CAACrG,OAAO,GAAG,IAAI,CAACtB,0BAA0B;IACpD2H,UAAU,CAACpG,QAAQ,GAAGsG,aAAa;IACnCF,UAAU,CAACnG,EAAE,GAAG,IAAI,CAAC9D,wBAAwB;IAC7CiK,UAAU,CAACtS,MAAM,GAAG,IAAI,CAACmI,wBAAwB;IACjDmK,UAAU,CAACjR,OAAO,GAAG,IAAI,CAAC+G,yBAAyB;IACnDkK,UAAU,CAAC1G,OAAO,GAAG,IAAI,CAAC1E,WAAW,CAAC+F,KAAK,CAACrB,OAAO;IACnD0G,UAAU,CAACvG,gBAAgB,GAAG,IAAI,CAAC7E,WAAW,CAAC+F,KAAK,CAAClB,gBAAgB;IACrEuG,UAAU,CAAC/F,gBAAgB,GAAG,IAAI,CAACrF,WAAW,CAAC+F,KAAK,CAACV,gBAAgB;IAErE+F,UAAU,CAACxC,aAAa,GAAG,IAAI,CAAC5I,WAAW,CAAC+F,KAAK,CAACjB,aAAa;IAC/D,IAAI,IAAI,CAACpB,SAAS,KAAK,mBAAmB,EAAE;MAC1C0H,UAAU,CAACK,IAAI,GAAG,KAAK;;IAEzB,IAAI,IAAI,CAAC/H,SAAS,KAAK,mBAAmB,EAAE;MAC1C0H,UAAU,CAACK,IAAI,GAAG,KAAK;;IAGzBL,UAAU,CAACxG,MAAM,GAAG,IAAI,CAAC5E,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,GAAG,OAAO;IAC9D,IAAI,IAAI,CAACjG,WAAW,CAAC+F,KAAK,CAACb,QAAQ,KAAKwG,SAAS,EAAE;MACjDN,UAAU,CAAClG,QAAQ,GAAG,IAAI;KAC3B,MAAM;MACLkG,UAAU,CAAClG,QAAQ,GAAG,IAAI,CAAClF,WAAW,CAAC+F,KAAK,CAACb,QAAQ,CAACe,EAAE;;IAE1D,IAAI,IAAI,CAACjG,WAAW,CAAC+F,KAAK,CAACZ,YAAY,KAAKuG,SAAS,EAAE;MACrDN,UAAU,CAACjG,YAAY,GAAG,IAAI;KAC/B,MAAM;MACLiG,UAAU,CAACjG,YAAY,GAAG,IAAI,CAACnF,WAAW,CAAC+F,KAAK,CAACZ,YAAY,CAACc,EAAE;;IAElEmF,UAAU,CAACO,OAAO,GAAG,IAAI,CAAC5K,WAAW;IACrC,IAAI6K,aAAa,GAAG,EAAE;IACtB,IAAIC,QAAQ,GAAW,CAAC;IACxB,IAAI,CAAC3H,yBAAyB,CAAC0F,OAAO,CAAE2B,QAAQ,IAAI;MAClD,IAAIO,WAAW,GAAG;QAChB,IAAI,EAAEP,QAAQ;QACd,OAAO,EAAEM,QAAQ,GAAG;OACrB;MACDA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;MACvBD,aAAa,CAAC3C,IAAI,CAAC6C,WAAW,CAAC;IACjC,CAAC,CAAC;IAEFV,UAAU,CAAC9F,WAAW,GAAGsG,aAAa;IACtC,OAAOR,UAAU;EACnB;EAEAtM,WAAWA,CAAA;IACT,IAAI,CAACY,cAAc,CAACsM,IAAI,EAAE;IAC1B,IAAI,IAAI,CAACtK,YAAY,KAAK,IAAI,EAAE;MAC9B,IAAI,CAAChC,cAAc,CAACuM,IAAI,EAAE;MAC1B,OAAO,KAAK;;IAEd,IAAI,CAACtK,eAAe,GAAC,KAAK;IAE1B,IAAI,IAAI,CAAC3B,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,KAAKyF,SAAS,EAAE;MAClD,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,2BAA2B,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC7E,IAAI,CAACxK,eAAe,GAAC,IAAI;MACzB,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACL,8BAA8B,CAACiF,MAAM,KAAK,CAAC,EAAE;MACpD,IAAI,CAAC7G,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,qCAAqC,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACvF,IAAI,CAACxK,eAAe,GAAC,IAAI;MAC1B,OAAO,KAAK;;IAEb,IAAI,IAAI,CAAChC,aAAa,CAACkJ,QAAQ,KAAK,UAAU,EAAE;MAC9C,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC9K,8BAA8B,CAACiF,MAAM,EAAE6F,CAAC,EAAE,EAAE;QACnE,IAAI,IAAI,CAAC9K,8BAA8B,CAAC8K,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UAC5E,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,gCAAgC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UAClF,IAAI,CAACxK,eAAe,GAAC,IAAI;UACzB,OAAO,KAAK;;;MAGhB,KAAK,IAAIyK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClI,yBAAyB,CAACqC,MAAM,EAAE6F,CAAC,EAAE,EAAE;QAC9D,IAAI,IAAI,CAAClI,yBAAyB,CAACkI,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UACvE,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,mCAAmC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UACrF,OAAO,KAAK;;;;IAKlB,IAAI,IAAI,CAACnM,WAAW,CAAC+F,KAAK,CAACX,QAAQ,CAACa,EAAE,KAAKyF,SAAS,EAAE;MACpD,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,kBAAkB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACpE,IAAI,CAACxK,eAAe,GAAC,IAAI;MACzB,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC3B,WAAW,CAAC+F,KAAK,CAACrB,OAAO,KAAK,EAAE,EAAE;MACzC,IAAI,CAAChF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACnE,IAAI,CAACxK,eAAe,GAAC,IAAI;MACzB,OAAO,KAAK;;IAEd,IAAI,IAAI,CAAC3B,WAAW,CAAC+F,KAAK,CAACjB,aAAa,KAAK,EAAE,EAAE;MAC/C,IAAI,CAACpF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,wBAAwB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC1E,IAAI,CAACxK,eAAe,GAAC,IAAI;MACzB,OAAO,KAAK;;IAGd;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,IAAI,CAACgC,OAAO,KAAK,EAAE,EAAE;MACvB;MACA,IAAI,CAACtE,WAAW,CAACP,WAAW,CAAC,IAAI,CAACqQ,aAAa,EAAE,EAAE,EAAE,EAAE,IAAI,CAACtN,MAAM,CAAC,CAAC2D,SAAS,CAAE+G,GAAG,IAAI;QACpF,IAAGA,GAAG,CAAC3F,IAAI,KAAK8E,SAAS,EAAE;UACzB,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC4P,WAAW,CAAC,iBAAiB,CAAC;UAChD,IAAI,CAAC1L,OAAO,GAAG4I,GAAG,CAACtG,EAAE;UACrB,IAAI,CAAC5G,WAAW,CAAC4I,QAAQ,CAAC,IAAI,CAACtE,OAAO,CAAC,CACtC6B,SAAS,CAAC8J,MAAM,IAAG;YAClB,IAAI,CAAChM,YAAY,GAAGgM,MAAM,CAAChH,YAAY;YACvC,IAAI,CAAC/E,UAAU,GAAG,EAAE;UACtB,CAAC,EACD2I,KAAK,IAAG;YACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;UAC5B,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAACvM,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC8P,SAAS,CAAChD,GAAG,CAACiD,WAAW,CAAC;;QAE9C,IAAI,CAAC7N,eAAe,GAAC,IAAI;QACzB,OAAO,IAAI;MACb,CAAC,EACDuK,KAAK,IAAG;QACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;MAC5B,CAAC,CACA;KACF,MAAM;MAEL,IAAI,CAAC5M,WAAW,CAACoQ,WAAW,CAAC,IAAI,CAACN,aAAa,EAAE,EAAE,IAAI,CAACxL,OAAO,EAAE,IAAI,CAAC9B,MAAM,EAAE,IAAI,CAACyB,YAAY,CAAC,CAC7FkC,SAAS,CAAC8J,MAAM,IAAG;QAClB,IAAGA,MAAM,CAAC1I,IAAI,KAAK8E,SAAS,EAAE;UAC5B,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;UAC5B,IAAI,CAACxM,YAAY,CAAC4P,WAAW,CAAC,kBAAkB,CAAC;UACjD,IAAI,CAAChQ,WAAW,CAAC4I,QAAQ,CAAC,IAAI,CAACtE,OAAO,CAAC,CACpC6B,SAAS,CAAC8J,MAAM,IAAG;YAClB,IAAI,CAAChM,YAAY,GAAGgM,MAAM,CAAChH,YAAY;YACvC,IAAI,CAAC/E,UAAU,GAAG,EAAE;YACpB,IAAI,CAAC1B,MAAM,GAAG,EAAE;UAClB,CAAC,EACDqK,KAAK,IAAG;YACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;UAC5B,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAACvM,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC8P,SAAS,CAACD,MAAM,CAACE,WAAW,CAAC;;QAG/C,IAAI,CAAC7N,eAAe,GAAC,IAAI;MAC7B,CAAC,EACDuK,KAAK,IAAG;QACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;MAC5B,CAAC,CAAC;;EAGR;EAEAvN,UAAUA,CAAA;IACR,IAAI,CAACgD,YAAY,GAAG,IAAI;IAExB,IAAI,IAAI,CAAC1B,WAAW,CAAC+F,KAAK,CAACnB,MAAM,CAACqB,EAAE,KAAKyF,SAAS,EAAE;MAClD,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,oBAAoB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACtE,IAAI,CAACzK,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAEd,IAAI,IAAI,CAACJ,8BAA8B,CAACiF,MAAM,KAAK,CAAC,EAAE;MACpD,IAAI,CAAC7G,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,qCAAqC,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACvF,IAAI,CAACzK,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAEd,IAAI,IAAI,CAAC/B,aAAa,CAACkJ,QAAQ,KAAK,UAAU,EAAE;MAC9C,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC9K,8BAA8B,CAACiF,MAAM,EAAE6F,CAAC,EAAE,EAAE;QACnE,IAAI,IAAI,CAAC9K,8BAA8B,CAAC8K,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UAC5E,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,gCAAgC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UAClF,IAAI,CAACzK,YAAY,GAAG,KAAK;UACzB,OAAO,KAAK;;;MAGhB,KAAK,IAAI0K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClI,yBAAyB,CAACqC,MAAM,EAAE6F,CAAC,EAAE,EAAE;QAC9D,IAAI,IAAI,CAAClI,yBAAyB,CAACkI,CAAC,CAAC,KAAK,IAAI,CAACzM,aAAa,CAAC0M,UAAU,EAAE;UACvE,IAAI,CAAC3M,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,mCAAmC,EAAE;YAAEC,OAAO,EAAE;UAAI,CAAE,CAAC;UACrF,OAAO,KAAK;;;;IAIlB,IAAI,IAAI,CAACxM,aAAa,CAACkJ,QAAQ,KAAK,QAAQ,EAAE;MAC5C,IAAI,IAAI,CAAC5H,wBAAwB,CAACsF,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC9C,0BAA0B,CAAC8C,MAAM,KAAK,CAAC,EAAE;QAC9F,IAAI,CAAC7G,cAAc,CAACuM,IAAI,EAAE;QAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,kDAAkD,EAAE;UAAEC,OAAO,EAAE;QAAI,CAAE,CAAC;QACpG,IAAI,CAACzK,YAAY,GAAG,KAAK;QACzB,OAAO,KAAK;;;IAIhB,IAAI,IAAI,CAAC1B,WAAW,CAAC+F,KAAK,CAACX,QAAQ,CAACa,EAAE,KAAKyF,SAAS,EAAE;MACpD,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,kBAAkB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACpE,IAAI,CAACzK,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAGd,IAAI,IAAI,CAAC1B,WAAW,CAAC+F,KAAK,CAACrB,OAAO,KAAK,EAAE,EAAE;MACzC,IAAI,CAAChF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MACnE,IAAI,CAACzK,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAEd,IAAI,IAAI,CAAC1B,WAAW,CAAC+F,KAAK,CAACjB,aAAa,KAAK,EAAE,EAAE;MAC/C,IAAI,CAACpF,cAAc,CAACuM,IAAI,EAAE;MAC1B,IAAI,CAACzM,MAAM,CAAC0M,KAAK,CAAC,UAAU,EAAE,wBAAwB,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE,CAAC;MAC1E,IAAI,CAACzK,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAEd,IAAIgO,MAAM,GAAGC,MAAM,CAACC,OAAO,CAAC,YAAY,CAAC;IACzC,IAAIF,MAAM,EAAE;MACV;IAAA,CACD,MACI;MACH,IAAI,CAAChO,YAAY,GAAG,KAAK;MACzB,OAAO,KAAK;;IAEd,IAAI,CAAChC,cAAc,CAACsM,IAAI,EAAE;IAC1B,IAAI,IAAI,CAACrI,OAAO,EAAE;MAEhB,IAAI,CAACtE,WAAW,CAACoQ,WAAW,CAAC,IAAI,CAACN,aAAa,EAAE,EAAE,IAAI,CAACxL,OAAO,EAAE,IAAI,CAAC9B,MAAM,EAAE,IAAI,CAACyB,YAAY,CAAC,CAACkC,SAAS,CAAE+G,GAAG,IAAI;QACjH,IAAGA,GAAG,CAAC3F,IAAI,KAAK8E,SAAS,EAAE;UAC3B,IAAI,CAAChM,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC4P,WAAW,CAAC,4CAA4C,CAAC;UAC3E,IAAI,CAAChQ,WAAW,CAACwQ,QAAQ,CAAC,IAAI,CAAClM,OAAO,CAAC,CAAC6B,SAAS,CAAE+G,GAAG,IAAI;YACxD,IAAI,CAAC5M,aAAa,CAACqI,SAAS,CAACwE,IAAI,CAAC,IAAI,CAAC7I,OAAO,CAAC;YAC/C,IAAI,CAACjE,cAAc,CAACuM,IAAI,EAAE;YAC1B,IAAI,CAAC3M,MAAM,CAACmN,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;cAAElH,WAAW,EAAE;gBAAEmH,GAAG,EAAE,IAAI,CAAC/I,OAAO;gBAAEgJ,IAAI,EAAE,aAAa;gBAAEmD,QAAQ,EAAE;cAAK,CAAC;cAAElD,kBAAkB,EAAE;YAAI,CAAE,CAAC;UAClJ,CAAC,EACDV,KAAK,IAAG;YACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;UAC5B,CAAC,CAAC;SACH,MAAM;UACL,IAAI,CAACvM,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC8P,SAAS,CAAChD,GAAG,CAACiD,WAAW,CAAC;;QAE5C,OAAO,IAAI;MACb,CAAC,EACDtD,KAAK,IAAG;QACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;MAC5B,CAAC,CACA;KAGF,MAAM;MACL,IAAI,CAAC1I,UAAU,GAAG,EAAE;MACpB,IAAI,CAAClE,WAAW,CAAC0Q,aAAa,CAAC,IAAI,CAAC7E,eAAe,EAAE,EAAE,IAAI,CAACrJ,MAAM,CAAC,CAAC2D,SAAS,CAAE8J,MAAM,IAAI;QACvF,IAAGA,MAAM,CAAC1I,IAAI,KAAK8E,SAAS,EAAE;UAC9B,IAAIzF,EAAE,GAAGqJ,MAAM,CAACrJ,EAAE;UAClB,IAAI,CAACtG,aAAa,CAACqI,SAAS,CAACwE,IAAI,CAACvG,EAAE,CAAC;UACrC,IAAI,CAACtC,OAAO,GAAG2L,MAAM,CAACrJ,EAAE;UACxB,IAAI,CAACvG,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC4P,WAAW,CAAC,cAAc,CAAC;UAC7C,IAAI,CAAC/P,MAAM,CAACmN,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;YAAElH,WAAW,EAAE;cAAEmH,GAAG,EAAEzG,EAAE;cAAE6J,QAAQ,EAAE;YAAK,CAAC;YAAElD,kBAAkB,EAAE;UAAI,CAAE,CAAC;SAClH,MAAM;UACL,IAAI,CAAClN,cAAc,CAACuM,IAAI,EAAE;UAC1B,IAAI,CAACxM,YAAY,CAAC8P,SAAS,CAACD,MAAM,CAACE,WAAW,CAAC;;QAE/C,OAAO,IAAI;MACb,CAAC,EACDtD,KAAK,IAAG;QACN,IAAI,CAACxM,cAAc,CAACuM,IAAI,EAAE;MAC5B,CAAC,CACA;;IAGH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGF;EACAlO,gBAAgBA,CAACiS,CAAC,EAAEnS,KAAK;IACvB,IAAI,CAACyF,YAAY,CAACsG,OAAO,CAAC,CAACoG,CAAC,EAAE5D,CAAC,KAAI;MACjC,IAAIvO,KAAK,KAAKuO,CAAC,EACb,IAAI,CAAC9I,YAAY,CAACuD,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MACpC,IAAI,CAACgE,MAAM,CAACgF,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;IAE9B,CAAC,CAAC;EACJ;EAEAoS,UAAUA,CAAC7I,KAAK;IACd,IAAI8I,UAAU,GAAG,EAAE;IACnB,KAAK,IAAI9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhF,KAAK,CAAC4D,MAAM,CAACmF,KAAK,CAAC5J,MAAM,EAAE6F,CAAC,EAAE,EAAE;MAClD,IAAI,CAACvK,MAAM,CAACoH,IAAI,CAAC7B,KAAK,CAAC4D,MAAM,CAACmF,KAAK,CAAC/D,CAAC,CAAC,CAAC;;IAEzC,IAAI,CAACjJ,QAAQ,CAACgD,aAAa,CAACJ,KAAK,GAAG,EAAE;IACtCmK,UAAU,CAACjH,IAAI,CAAC,IAAI,CAACpH,MAAM,CAAC;IAC5B,IAAI,CAAC0B,UAAU,GAAG,EAAE;IACpB2M,UAAU,CAACtG,OAAO,CAACwG,IAAI,IAAG;MACxB,IAAIJ,CAAC,GAAGI,IAAI;MACZJ,CAAC,CAACpG,OAAO,CAACyG,EAAE,IAAG;QACb,IAAIC,EAAE,GAAGD,EAAE,CAAC/a,IAAI;QAChB,IAAI,CAACiO,UAAU,CAAC0F,IAAI,CAACqH,EAAE,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAhS,YAAYA,CAAC0R,CAAC,EAAEnS,KAAK;IACnB,IAAI,CAAC0F,UAAU,CAACqG,OAAO,CAAC,CAACoG,CAAC,EAAE5D,CAAC,KAAI;MAC/B,IAAIvO,KAAK,KAAKuO,CAAC,EAAE;QACf,IAAI,CAAC7I,UAAU,CAACsD,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;QAChC,IAAI,CAACgE,MAAM,CAACgF,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;;IAEhC,CAAC,CAAC;EACJ;EAEQ0S,aAAaA,CAAA;IACnB,IAAI,CAAChR,WAAW,CAACiR,qBAAqB,CAAC,MAAM,CAAC,CAC3ChL,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAACtQ,cAAc,GAAGyN,KAAK;MAC3B,MAAMxF,KAAK,GAAI,IAAI,CAACjI,cAAc,CAAC8Q,SAAS,CAAC+J,QAAQ,IAAIA,QAAQ,CAAC7J,IAAI,KAAK,QAAQ,CAAC;MACpF,IAAI/I,KAAK,KAAK,CAAC,CAAC,EAChB;QACE,IAAI,CAACjI,cAAc,CAACiR,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;;IAExC,CAAC,CAAC;EACN;EACA6S,SAASA,CAAA;IACP,IAAI,CAACH,aAAa,EAAE;IACpB,IAAI,CAACvQ,WAAW,CAAC4F,GAAG,CAAC,QAAQ,CAAC,CAACC,YAAY,CACxCC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;MACP,IAAI,CAACuM,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAACiR,qBAAqB,CAAC,MAAM,CAAC,CAC9D1K,IAAI,CACHzR,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAACtQ,cAAc,GAAGyN,KAAK;MAC3B,MAAMxF,KAAK,GAAI,IAAI,CAACjI,cAAc,CAAC8Q,SAAS,CAAC+J,QAAQ,IAAIA,QAAQ,CAAC7J,IAAI,KAAK,QAAQ,CAAC;MACpF,IAAI/I,KAAK,KAAK,CAAC,CAAC,EAChB;QACE,IAAI,CAACjI,cAAc,CAACiR,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;;MAEtC,IAAI,CAACyE,aAAa,CAAC6D,aAAa,CAACJ,KAAK,GAAG,EAAE;MAC3C,IAAI,CAACxD,gBAAgB,CAAC4D,aAAa,CAACJ,KAAK,GAAG,EAAE;IAChD,CAAC,CAAC;EACN;EAEO4K,eAAeA,CAAC7H,WAAyB;IAC9C,OAAOA,WAAW,GAAGA,WAAW,CAACxT,IAAI,GAAGoW,SAAS;EACnD;EACA,IAAI5C,WAAWA,CAAA;IACb,OAAO,IAAI,CAAC9I,WAAW,CAAC+F,KAAK,CAACH,GAAG,CAAC,QAAQ,CAAC;EAC7C;EAIAgL,WAAWA,CAAA;IACT,IAAI,CAACrR,WAAW,CAACsR,YAAY,EAAE,CAC5BrL,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAAC7I,YAAY,GAAGgG,KAAK;IAC3B,CAAC,CAAC;EACN;EACAyN,eAAeA,CAAA;IACb,IAAI,CAACF,WAAW,EAAE;IAClB,IAAI,CAAC5Q,WAAW,CAAC4F,GAAG,CAAC,UAAU,CAAC,CAACC,YAAY,CAC1CC,IAAI,CACHrR,YAAY,CAAC,GAAG,CAAC,EACjBD,oBAAoB,EAAE,EACtBD,GAAG,CAAC,MAAK;MACP,IAAI,CAACuM,SAAS,GAAG,IAAI;IACvB,CAAC,CAAC,EACFxM,SAAS,CAACyR,KAAK,IAAI,IAAI,CAACxG,WAAW,CAACsR,YAAY,EAAE,CAC/C/K,IAAI,CACHzR,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACyM,SAAS,GAAG,KAAK;IACxB,CAAC,CAAC,CACH,CACF,CACF,CACA0E,SAAS,CAAEU,OAAc,IAAI;MAC5B,IAAI7C,KAAK,GAAG6C,OAAO,CAAC,MAAM,CAAC;MAC3B,IAAI,CAAC7I,YAAY,GAAGgG,KAAK;IAC3B,CAAC,CAAC;EACN;EAEO0N,iBAAiBA,CAAC3L,QAAwB;IAC/C,OAAOA,QAAQ,GAAGA,QAAQ,CAAC9P,IAAI,GAAGoW,SAAS;EAC7C;EAEA,IAAItG,QAAQA,CAAA;IACV,OAAO,IAAI,CAACpF,WAAW,CAAC+F,KAAK,CAACH,GAAG,CAAC,UAAU,CAAC;EAC/C;EAEOxJ,uBAAuBA,CAACmR,QAAuB;IACpD,MAAM1P,KAAK,GAAG,IAAI,CAACmG,uBAAuB,CAACwJ,OAAO,CAACD,QAAQ,CAAC;IAC5D,IAAI1P,KAAK,IAAI,CAAC,EAAE;MACd,IAAI,CAACmG,uBAAuB,CAAC6C,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC7C,IAAI,CAACqG,yBAAyB,CAAC2C,MAAM,CAAChJ,KAAK,EAAE,CAAC,CAAC;MAC/C,IAAI,CAACoG,wBAAwB,CAACkC,aAAa,CAACJ,KAAK,GAAG,EAAE;;EAE1D;EAEOiL,yBAAyBA,CAAC5J,KAAmC;IAClE,IAAI,CAAC6J,6BAA6B,CAAC7J,KAAK,CAACsG,MAAM,CAAC3H,KAAK,CAAC9N,SAAS,CAAC;IAChE,IAAI,CAACgM,wBAAwB,CAACkC,aAAa,CAACJ,KAAK,GAAG,EAAE;EACxD;EAEQkL,6BAA6BA,CAAC1D,QAAQ;IAC5C,IAAI2D,sBAAsB,GAAG,IAAI,CAAClN,uBAAuB,CAAC6J,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAIsV,QAAQ,CAAC;IAChH,IAAI2D,sBAAsB,CAAC3K,MAAM,EAAE;MACjC;;IAEF,IAAImI,qBAAqB,GAAG,IAAI,CAACzV,eAAe,CAAC4U,MAAM,CAACC,UAAU,IAAIA,UAAU,CAAC7V,SAAS,IAAIsV,QAAQ,CAAC;IACvG,IAAImB,qBAAqB,CAACnI,MAAM,EAAE;MAChC,IAAI,CAACvC,uBAAuB,CAACiF,IAAI,CAACyF,qBAAqB,CAAC,CAAC,CAAC,CAAC;MAC3D,IAAI,CAACxK,yBAAyB,CAAC+E,IAAI,CAACyF,qBAAqB,CAAC,CAAC,CAAC,CAACzI,EAAE,CAAC;;EAEpE;;qBAr9CW9G,oBAAoB,EAAArK,EAAA,CAAAqc,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAvc,EAAA,CAAAqc,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAzc,EAAA,CAAAqc,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAA3c,EAAA,CAAAqc,iBAAA,CAAAO,EAAA,CAAAC,WAAA,GAAA7c,EAAA,CAAAqc,iBAAA,CAAAS,EAAA,CAAAC,aAAA,GAAA/c,EAAA,CAAAqc,iBAAA,CAAAW,EAAA,CAAAC,mBAAA,GAAAjd,EAAA,CAAAqc,iBAAA,CAAAa,EAAA,CAAAC,iBAAA,GAAAnd,EAAA,CAAAqc,iBAAA,CAAAe,EAAA,CAAAC,aAAA,GAAArd,EAAA,CAAAqc,iBAAA,CAAAiB,EAAA,CAAAC,YAAA,GAAAvd,EAAA,CAAAqc,iBAAA,CAAAK,EAAA,CAAAc,cAAA;EAAA;;UAApBnT,oBAAoB;IAAAoT,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;uBAmGpB9d,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC3InCE,EAAA,CAAAC,cAAA,aAAqB;QACeD,EAAA,CAAAe,UAAA,sBAAA+c,uDAAA;UAAA,OAAYD,GAAA,CAAA5G,eAAA,EAAiB;QAAA,EAAC;QAC1DjX,EAAA,CAAAC,cAAA,YAAO;QAGgBD,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAE/BH,EAAA,CAAAC,cAAA,SAAI;QAM8DD,EAAA,CAAAe,UAAA,mBAAAgd,sDAAA;UAAA,OAASF,GAAA,CAAAjC,SAAA,EAAW;QAAA,EAAC;QADnE5b,EAAA,CAAAG,YAAA,EACoE;QACpEH,EAAA,CAAAC,cAAA,8BAAiF;QAC7ED,EAAA,CAAAU,UAAA,KAAAsd,2CAAA,wBAAwE;QACxEhe,EAAA,CAAAU,UAAA,KAAAud,6CAAA,2BAIe;QACnBje,EAAA,CAAAG,YAAA,EAAmB;QAG3BH,EAAA,CAAAC,cAAA,cAAwB;QAGhBD,EAAA,CAAAE,MAAA,IACJ;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAEVH,EAAA,CAAA6B,SAAA,cAA6B;QAC7B7B,EAAA,CAAAC,cAAA,cAAwB;QAGhBD,EAAA,CAAAE,MAAA,IACJ;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAO1BH,EAAA,CAAAU,UAAA,KAAAwd,mCAAA,kBAwBK;QACLle,EAAA,CAAAU,UAAA,KAAAyd,mCAAA,kBAwBK;QACLne,EAAA,CAAAU,UAAA,KAAA0d,mCAAA,kBAwBK;QACLpe,EAAA,CAAAU,UAAA,KAAA2d,mCAAA,kBAwBK;QACLre,EAAA,CAAAC,cAAA,UAAI;QACAD,EAAA,CAAAU,UAAA,KAAA4d,mCAAA,iBAEK;QACLte,EAAA,CAAAU,UAAA,KAAA6d,mCAAA,iBAEK;QACLve,EAAA,CAAAC,cAAA,UAAI;QAGQD,EAAA,CAAAU,UAAA,KAAA8d,6CAAA,2BAKe;QACfxe,EAAA,CAAA6B,SAAA,qBAEsF;QAC1F7B,EAAA,CAAAG,YAAA,EAAgB;QAChBH,EAAA,CAAAC,cAAA,gCAC2F;QAAvFD,EAAA,CAAAe,UAAA,4BAAA0d,0EAAA1c,MAAA;UAAA,OAAkB8b,GAAA,CAAArE,wBAAA,CAAAzX,MAAA,CAAgC;QAAA,EAAC,oBAAA2c,kEAAA;UAAA,OAAWb,GAAA,CAAA5K,qBAAA,EAAuB;QAAA,EAAlC;QACnDjT,EAAA,CAAAU,UAAA,KAAAie,2CAAA,yBAEa;QACjB3e,EAAA,CAAAG,YAAA,EAAmB;QAK/BH,EAAA,CAAAC,cAAA,UAAI;QAEeD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAEtCH,EAAA,CAAAC,cAAA,UAAI;QAGQD,EAAA,CAAAU,UAAA,KAAAke,6CAAA,2BAKe;QACf5e,EAAA,CAAA6B,SAAA,qBAEsF;QAC1F7B,EAAA,CAAAG,YAAA,EAAgB;QAChBH,EAAA,CAAAC,cAAA,gCAC4F;QAAxFD,EAAA,CAAAe,UAAA,4BAAA8d,0EAAA9c,MAAA;UAAA,OAAkB8b,GAAA,CAAA3B,yBAAA,CAAAna,MAAA,CAAiC;QAAA,EAAC,oBAAA+c,kEAAA;UAAA,OAAWjB,GAAA,CAAA5K,qBAAA,EAAuB;QAAA,EAAlC;QACpDjT,EAAA,CAAAU,UAAA,KAAAqe,2CAAA,yBAEa;QACjB/e,EAAA,CAAAG,YAAA,EAAmB;QAI/BH,EAAA,CAAAC,cAAA,UAAI;QAEeD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAElCH,EAAA,CAAAC,cAAA,UAAI;QAEID,EAAA,CAAA6B,SAAA,iBAAgG;QACpG7B,EAAA,CAAAG,YAAA,EAAiB;QAIzBH,EAAA,CAAAC,cAAA,UAAI;QACID,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnBH,EAAA,CAAAC,cAAA,UAAI;QAMqDD,EAAA,CAAAe,UAAA,mBAAAie,sDAAAjd,MAAA;UAAA,OAAS8b,GAAA,CAAA1F,aAAA,CAAApW,MAAA,CAAqB;QAAA,EAAC;QADpE/B,EAAA,CAAAG,YAAA,EACqE;QACrEH,EAAA,CAAAC,cAAA,+BAAkF;QAC9ED,EAAA,CAAAU,UAAA,KAAAue,2CAAA,wBAAwE;QACxEjf,EAAA,CAAAU,UAAA,KAAAwe,6CAAA,2BAIe;QACnBlf,EAAA,CAAAG,YAAA,EAAmB;QAG3BH,EAAA,CAAAC,cAAA,cAAgB;QAIJD,EAAA,CAAAe,UAAA,mBAAAoe,sDAAApd,MAAA;UAAA,OAAS8b,GAAA,CAAAzF,gBAAA,CAAArW,MAAA,CAAwB;QAAA,EAAC;QAFtC/B,EAAA,CAAAG,YAAA,EAEuC;QACvCH,EAAA,CAAAC,cAAA,+BACuC;QACnCD,EAAA,CAAAU,UAAA,KAAA0e,2CAAA,wBAAwE;QACxEpf,EAAA,CAAAU,UAAA,KAAA2e,6CAAA,2BAGe;QACnBrf,EAAA,CAAAG,YAAA,EAAmB;QAG3BH,EAAA,CAAAC,cAAA,cAAgB;QAC2CD,EAAA,CAAAe,UAAA,mBAAAue,+DAAA;UAAA,OAASzB,GAAA,CAAA7B,eAAA,EAAiB;QAAA,EAAC;QAC1Ehc,EAAA,CAAA6B,SAAA,qBAC+C;QAC/C7B,EAAA,CAAAC,cAAA,+BACoC;QAChCD,EAAA,CAAAU,UAAA,KAAA6e,2CAAA,wBAAwE;QACxEvf,EAAA,CAAAU,UAAA,KAAA8e,6CAAA,2BAIe;QACnBxf,EAAA,CAAAG,YAAA,EAAmB;QAG/BH,EAAA,CAAAC,cAAA,cAAgB;QAEJD,EAAA,CAAAe,UAAA,oBAAA0e,uDAAA;UAAA,OAAA5B,GAAA,CAAAnR,YAAA,IAAAmR,GAAA,CAAAnR,YAAA;QAAA,EAAuC;QADrB1M,EAAA,CAAAG,YAAA,EACwB;QAAAH,EAAA,CAAAE,MAAA,qBAC9C;QAAAF,EAAA,CAAA6B,SAAA,gBAA+B;QACnC7B,EAAA,CAAAG,YAAA,EAAQ;QAM5BH,EAAA,CAAAC,cAAA,UAAI;QACAD,EAAA,CAAA6B,SAAA,UAAS;QACT7B,EAAA,CAAAC,cAAA,WAAI;QAEQD,EAAA,CAAAe,UAAA,oBAAA2e,wDAAA;UAAA,OAAA7B,GAAA,CAAAlR,iBAAA,IAAAkR,GAAA,CAAAlR,iBAAA;QAAA,EAAiD;QAD/B3M,EAAA,CAAAG,YAAA,EACkC;QAAAH,EAAA,CAAAE,MAAA,2BACxD;QAAAF,EAAA,CAAA6B,SAAA,iBAA+B;QACnC7B,EAAA,CAAAG,YAAA,EAAQ;QAGhBH,EAAA,CAAAC,cAAA,WAAI;QACKD,EAAA,CAAAE,MAAA,oBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACpBH,EAAA,CAAAC,cAAA,WAAI;QAKgBD,EAAA,CAAAU,UAAA,MAAAif,sCAAA,mBASO;QACP3f,EAAA,CAAAU,UAAA,MAAAkf,sCAAA,mBAMO;QACX5f,EAAA,CAAAG,YAAA,EAAM;QAM1BH,EAAA,CAAAC,cAAA,WAAI;QAEeD,EAAA,CAAAE,MAAA,gCAAuB;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAElDH,EAAA,CAAAC,cAAA,WAAI;QAEID,EAAA,CAAA6B,SAAA,kBAAgG;QACpG7B,EAAA,CAAAG,YAAA,EAAiB;QAGzBH,EAAA,CAAAU,UAAA,MAAAmf,oCAAA,iBASK;QACL7f,EAAA,CAAAC,cAAA,WAAI;QAGgBD,EAAA,CAAAe,UAAA,mBAAA+e,wDAAA;UAAA,OAASjC,GAAA,CAAA7L,YAAA,EAAc;QAAA,EAAC;QAA8BhS,EAAA,CAAAE,MAAA,eAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7EH,EAAA,CAAAC,cAAA,mBAA8D;QAAtDD,EAAA,CAAAe,UAAA,mBAAAgf,wDAAA;UAAA,OAASlC,GAAA,CAAA5L,aAAA,EAAe;QAAA,EAAC;QAA6BjS,EAAA,CAAAE,MAAA,gBAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAElFH,EAAA,CAAAC,cAAA,YAAK;QACID,EAAA,CAAAe,UAAA,mCAAAif,qEAAAje,MAAA;UAAA,OAAA8b,GAAA,CAAA5R,WAAA,GAAAlK,MAAA;QAAA,EAAiC;QAEtC/B,EAAA,CAAAG,YAAA,EAAM;QAIlBH,EAAA,CAAAC,cAAA,WAAI;QAS+DD,EAAA,CAAAe,UAAA,oBAAAkf,wDAAAle,MAAA;UAAA,OAAU8b,GAAA,CAAA1C,UAAA,CAAApZ,MAAA,CAAkB;QAAA,EAAC;QAHxE/B,EAAA,CAAAG,YAAA,EAGyE;QAGjFH,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAE,MAAA,uBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAEpEH,EAAA,CAAAC,cAAA,WAAI;QAEID,EAAA,CAAA6B,SAAA,kBACuB;QAC3B7B,EAAA,CAAAG,YAAA,EAAiB;QAErBH,EAAA,CAAAU,UAAA,MAAAwf,oCAAA,iBAIK;QACLlgB,EAAA,CAAAU,UAAA,MAAAyf,oCAAA,iBAGK;QACLngB,EAAA,CAAAU,UAAA,MAAA0f,oCAAA,iBAGK;QACTpgB,EAAA,CAAAG,YAAA,EAAK;QAO7BH,EAAA,CAAAC,cAAA,gBAAqH;QAGzGD,EAAA,CAAAU,UAAA,MAAA2f,qCAAA,kBAEM;QACVrgB,EAAA,CAAAG,YAAA,EAAM;QAGdH,EAAA,CAAAC,cAAA,wBAA6G;QACjFD,EAAA,CAAAE,MAAA,oBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;;;;;;QAtYjCH,EAAA,CAAAM,SAAA,GAAyB;QAAzBN,EAAA,CAAAI,UAAA,cAAAyd,GAAA,CAAA3S,WAAA,CAAyB;QAYKlL,EAAA,CAAAM,SAAA,IAA+B;QAA/BN,EAAA,CAAAI,UAAA,oBAAAkgB,GAAA,CAA+B;QACctgB,EAAA,CAAAM,SAAA,GAA+B;QAA/BN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAAhC,eAAA,CAA+B;QAC/D7b,EAAA,CAAAM,SAAA,GAAe;QAAfN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAA7R,SAAA,CAAe;QACbhM,EAAA,CAAAM,SAAA,GAAgB;QAAhBN,EAAA,CAAAI,UAAA,UAAAyd,GAAA,CAAA7R,SAAA,CAAgB;QAWnChM,EAAA,CAAAM,SAAA,GACJ;QADIN,EAAA,CAAAO,kBAAA,MAAAsd,GAAA,CAAAjP,SAAA,MACJ;QAMI5O,EAAA,CAAAM,SAAA,GACJ;QADIN,EAAA,CAAAO,kBAAA,MAAAsd,GAAA,CAAA/Q,WAAA,MACJ;QAOf9M,EAAA,CAAAM,SAAA,GAAyC;QAAzCN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,cAAyC;QAyBzC/T,EAAA,CAAAM,SAAA,GAAuF;QAAvFN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,iBAAA8J,GAAA,CAAArb,wBAAA,CAAAiP,MAAA,OAAuF;QAyBvFzR,EAAA,CAAAM,SAAA,GAAyC;QAAzCN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,cAAyC;QAyBzC/T,EAAA,CAAAM,SAAA,GAAyC;QAAzCN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,cAAyC;QA0BrC/T,EAAA,CAAAM,SAAA,GAAyC;QAAzCN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,cAAyC;QAGzC/T,EAAA,CAAAM,SAAA,GAA2C;QAA3CN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhT,aAAA,CAAAkJ,QAAA,gBAA2C;QAOH/T,EAAA,CAAAM,SAAA,GAA+B;QAA/BN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAAtR,4BAAA,CAA+B;QAKlCvM,EAAA,CAAAM,SAAA,GAAuC;QAAvCN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAApR,uBAAA,CAAuC,oBAAA8T,IAAA,qBAAAC,IAAA,mCAAA3C,GAAA,CAAAjb,kBAAA;QAM9B5C,EAAA,CAAAM,SAAA,GAAkB;QAAlBN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAA1Z,eAAA,CAAkB;QAgBrBnE,EAAA,CAAAM,SAAA,GAA0B;QAA1BN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAA3O,uBAAA,CAA0B;QAK7BlP,EAAA,CAAAM,SAAA,GAA0C;QAA1CN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAAxO,0BAAA,CAA0C,oBAAAoR,IAAA,qBAAAC,IAAA,mCAAA7C,GAAA,CAAAjb,kBAAA;QAMpC5C,EAAA,CAAAM,SAAA,GAAkB;QAAlBN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAA1Z,eAAA,CAAkB;QA0B7CnE,EAAA,CAAAM,SAAA,IAAgC;QAAhCN,EAAA,CAAAI,UAAA,oBAAAugB,IAAA,CAAgC;QACc3gB,EAAA,CAAAM,SAAA,GAA+B;QAA/BN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAAxF,eAAA,CAA+B;QAChErY,EAAA,CAAAM,SAAA,GAAe;QAAfN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAA7R,SAAA,CAAe;QACbhM,EAAA,CAAAM,SAAA,GAAgB;QAAhBN,EAAA,CAAAI,UAAA,UAAAyd,GAAA,CAAA7R,SAAA,CAAgB;QAW2BhM,EAAA,CAAAM,SAAA,GAAmC;QAAnCN,EAAA,CAAAI,UAAA,oBAAAwgB,IAAA,CAAmC;QAG7F5gB,EAAA,CAAAM,SAAA,GAAkC;QAAlCN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAAtF,kBAAA,CAAkC;QACrBvY,EAAA,CAAAM,SAAA,GAAe;QAAfN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAA7R,SAAA,CAAe;QACbhM,EAAA,CAAAM,SAAA,GAAgB;QAAhBN,EAAA,CAAAI,UAAA,UAAAyd,GAAA,CAAA7R,SAAA,CAAgB;QAU3BhM,EAAA,CAAAM,SAAA,GAAiC;QAAjCN,EAAA,CAAAI,UAAA,oBAAAygB,IAAA,CAAiC;QAEjC7gB,EAAA,CAAAM,SAAA,GAA+B;QAA/BN,EAAA,CAAAI,UAAA,gBAAAyd,GAAA,CAAAhC,eAAA,CAA+B;QAClB7b,EAAA,CAAAM,SAAA,GAAe;QAAfN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAA7R,SAAA,CAAe;QACbhM,EAAA,CAAAM,SAAA,GAAgB;QAAhBN,EAAA,CAAAI,UAAA,UAAAyd,GAAA,CAAA7R,SAAA,CAAgB;QASqBhM,EAAA,CAAAM,SAAA,GAAwB;QAAxBN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAAnR,YAAA,CAAwB;QAYpC1M,EAAA,CAAAM,SAAA,GAA6B;QAA7BN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAAlR,iBAAA,CAA6B;QAalD3M,EAAA,CAAAM,SAAA,IAAgB;QAAhBN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAArP,YAAA,CAAgB;QAUlBxO,EAAA,CAAAM,SAAA,GAAc;QAAdN,EAAA,CAAAI,UAAA,YAAAyd,GAAA,CAAApP,UAAA,CAAc;QAuB1DzO,EAAA,CAAAM,SAAA,GAAoC;QAApCN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAA/Q,WAAA,eAAoC;QAaI9M,EAAA,CAAAM,SAAA,GAA4B;QAA5BN,EAAA,CAAAI,UAAA,cAAAyd,GAAA,CAAA9R,cAAA,CAA4B;QAC3B/L,EAAA,CAAAM,SAAA,GAA2B;QAA3BN,EAAA,CAAAI,UAAA,aAAAyd,GAAA,CAAA9R,cAAA,CAA2B;QAGxD/L,EAAA,CAAAM,SAAA,GAAiC;QAAjCN,EAAA,CAAAI,UAAA,oBAAAyd,GAAA,CAAA5R,WAAA,CAAiC,kBAAA4R,GAAA,CAAA1S,MAAA,2BAAA0S,GAAA,CAAA9R,cAAA;QA2B7B/L,EAAA,CAAAM,SAAA,IAAqB;QAArBN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhR,eAAA,CAAqB;QAKrB7M,EAAA,CAAAM,SAAA,GAAqB;QAArBN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhR,eAAA,CAAqB;QAIrB7M,EAAA,CAAAM,SAAA,GAAqB;QAArBN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAhR,eAAA,CAAqB;QAcjB7M,EAAA,CAAAM,SAAA,GAAqB;QAArBN,EAAA,CAAAI,UAAA,SAAAyd,GAAA,CAAAvQ,OAAA,WAAqB;QAMEtN,EAAA,CAAAM,SAAA,GAAqB;QAArBN,EAAA,CAAAI,UAAA,oBAAqB;;;;;;;AD2nCjF,OAAM,MAAOka,SAAS;EACpB7G,MAAM;EACN7D,OAAO;EACPkE,aAAa;EACb/D,gBAAgB;EAChBD,MAAM;EACN6G,IAAI;EACJvG,QAAQ;EACRC,YAAY;EACZwG,OAAO;EACP7S,MAAM;EACNqB,OAAO;EACP4K,OAAO;EACPC,QAAQ;EACRC,EAAE;EACFpD,MAAM;EACNsG,YAAY;EACZ/C,QAAQ;EACRtD,SAAS;EACT8T,WAAW;EACXvQ,gBAAgB;EAChBC,WAAW;EACX8C,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}