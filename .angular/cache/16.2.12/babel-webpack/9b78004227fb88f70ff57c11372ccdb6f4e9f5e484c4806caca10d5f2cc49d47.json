{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as imp from '../../../AppAutoEngine/import-services/CommonimportFiles';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../AppAutoEngine/import-services/CommonimportFiles\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../AppAutoEngine/API Services/Api_and_Query/apicallservice.service\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"@angular/cdk/accordion\";\nimport * as i15 from \"../emptask-create/emptask-create.component\";\nimport * as i16 from \"../time-sheet/time-sheet.component\";\nfunction EmpTaskSummaryComponent_div_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 44);\n    i0.ɵɵtext(1, \"arrow_back\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_mat_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r13.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r13.text, \" \");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Remarks/Reason: \");\n    i0.ɵɵelementStart(4, \"b\")(5, \"i\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"Delay Days: \");\n    i0.ɵɵelementStart(10, \"button\", 70);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const type_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(type_r14 == null ? null : type_r14.reason_for_delay);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.delay_days) > 0 ? \"redcolor\" : \"successStatus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.delay_days, \" \");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 51)(2, \"div\", 71)(3, \"input\", 72);\n    i0.ɵɵlistener(\"ngModelChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r31);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      return i0.ɵɵresetView(type_r14.DynamicDate = $event);\n    })(\"dateChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template_input_dateChange_3_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.ChangeDateFormat(type_r14));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"mat-datepicker-toggle\", 73)(5, \"mat-datepicker\", null, 74);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"div\", 71);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r28 = i0.ɵɵreference(6);\n    const type_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matDatepicker\", _r28)(\"ngModel\", type_r14.DynamicDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\")(\"for\", _r28);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 82);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const leaves_r40 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", i0.ɵɵpipeBind1(2, 3, leaves_r40));\n    i0.ɵɵproperty(\"ngClass\", \"othersColor\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", leaves_r40 == \"absent\" ? \"A\" : leaves_r40 == \"weekend\" ? \"W\" : leaves_r40 == \"holiday\" ? \"H\" : \"\", \" \");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵtemplate(6, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_ng_container_6_Template, 4, 5, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"input\", 81);\n    i0.ɵɵlistener(\"ngModelChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const dateHours_r37 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(dateHours_r37.hour = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const dateHours_r37 = ctx.$implicit;\n    const index_r38 = ctx.index;\n    const type_r14 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(index_r38 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 5, dateHours_r37 == null ? null : dateHours_r37.date, \"dd-MM-yyyy\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", dateHours_r37 == null ? null : dateHours_r37.adt_ref);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readOnly\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\")(\"ngModel\", dateHours_r37 == null ? null : dateHours_r37.hour);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 75)(2, \"table\", 76)(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Sl.No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Task Days\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Hours\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_Template, 9, 8, \"tr\", 26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\")(12, \"table\")(13, \"tr\")(14, \"td\");\n    i0.ɵɵtext(15, \"Actual Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementStart(19, \"input\", 72);\n    i0.ɵɵlistener(\"ngModelChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      return i0.ɵɵresetView(type_r14.DynamicDate = $event);\n    })(\"dateChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_dateChange_19_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      ctx_r47.ChangeDateFormat(type_r14);\n      return i0.ɵɵresetView(ctx_r47.EndDateCalculate(type_r14));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"mat-datepicker-toggle\", 77)(21, \"mat-datepicker\", null, 78);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"tr\")(24, \"td\", 79)(25, \"input\", 80);\n    i0.ɵɵlistener(\"ngModelChange\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      return i0.ɵɵresetView(type_r14.reason_for_delay = $event);\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const _r36 = i0.ɵɵreference(22);\n    const type_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", type_r14 == null ? null : type_r14.emp_hours == null ? null : type_r14.emp_hours.hour_data);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(18, 8, type_r14 == null ? null : type_r14.actual_start_date, \"dd-MM-yyyy\"), \" - \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matDatepicker\", _r36)(\"ngModel\", type_r14.DynamicDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r36)(\"disabled\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"readOnly\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\")(\"ngModel\", type_r14 == null ? null : type_r14.reason_for_delay);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r54 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_38_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r54);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r52 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r52.ChaneStatus(1, type_r14));\n    });\n    i0.ɵɵtext(1, \"Open\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r57 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 83);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_39_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r57);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r55 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r55.ChaneStatus(2, type_r14));\n    });\n    i0.ɵɵtext(1, \"Complete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_40_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r60);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r58 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r58.UpdateTask(type_r14));\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 84);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_41_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r63);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r61 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r61.ChaneStatus(3, type_r14));\n    });\n    i0.ɵɵtext(1, \"Hold\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r66 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_42_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r66);\n      const type_r14 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r64 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r64.ChaneStatus(1, type_r14));\n    });\n    i0.ɵɵtext(1, \"Reopen \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r14 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", i0.ɵɵpipeBind2(2, 1, type_r14 == null ? null : type_r14.actual_end_date, \"dd-MM-yyyy\"), \" \");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 67)(1, \"b\");\n    i0.ɵɵtext(2, \"Actual Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵtemplate(5, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_span_5_Template, 3, 4, \"span\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 2, type_r14 == null ? null : type_r14.actual_start_date, \"dd-MM-yyyy\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.actual_end_date) != \"None\");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 85)(1, \"b\");\n    i0.ɵɵtext(2, \"Delay Days: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 86);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const type_r14 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.DynamicDelayDaysCount) > 0 ? \"bgAlertColor\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", (type_r14 == null ? null : type_r14.DynamicDelayDaysCount) > 0 ? type_r14 == null ? null : type_r14.DynamicDelayDaysCount : 0, \" \");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 49)(2, \"div\", 50)(3, \"div\", 51)(4, \"div\", 52)(5, \"h3\")(6, \"span\", 53);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 54)(10, \"div\", 55)(11, \"span\", 56)(12, \"span\", 57);\n    i0.ɵɵtext(13, \"tag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 58);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\", 57);\n    i0.ɵɵtext(17, \"arrow_forward_ios\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18);\n    i0.ɵɵelementStart(19, \"span\", 57);\n    i0.ɵɵtext(20, \"arrow_forward_ios\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\", 58);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \" \\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 55)(25, \"span\", 46);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"div\", 55)(28, \"span\", 46);\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \" \\u00A0 \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(31, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_31_Template, 12, 3, \"div\", 1);\n    i0.ɵɵelementStart(32, \"div\");\n    i0.ɵɵelement(33, \"br\");\n    i0.ɵɵtemplate(34, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template, 8, 4, \"div\", 1);\n    i0.ɵɵtemplate(35, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template, 26, 11, \"div\", 1);\n    i0.ɵɵelementStart(36, \"div\");\n    i0.ɵɵelement(37, \"br\");\n    i0.ɵɵtemplate(38, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_38_Template, 2, 0, \"button\", 59);\n    i0.ɵɵtemplate(39, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_39_Template, 2, 0, \"button\", 60);\n    i0.ɵɵtemplate(40, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_40_Template, 2, 0, \"button\", 61);\n    i0.ɵɵtemplate(41, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_41_Template, 2, 0, \"button\", 62);\n    i0.ɵɵtemplate(42, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_42_Template, 2, 0, \"button\", 59);\n    i0.ɵɵelementStart(43, \"button\", 63);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_Template_button_click_43_listener() {\n      i0.ɵɵrestoreView(_r73);\n      const type_r14 = i0.ɵɵnextContext().$implicit;\n      const ctx_r71 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r71.showPopUp(type_r14));\n    });\n    i0.ɵɵtext(44, \"Close \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(45, \"div\", 64)(46, \"div\", 65)(47, \"ul\", 66)(48, \"li\", 67)(49, \"b\");\n    i0.ɵɵtext(50, \"Assigned by:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"li\", 67)(53, \"b\");\n    i0.ɵɵtext(54, \"Head/Lead:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"li\", 67)(57, \"b\");\n    i0.ɵɵtext(58, \"Planned Date:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(59);\n    i0.ɵɵpipe(60, \"date\");\n    i0.ɵɵpipe(61, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(62, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_Template, 6, 5, \"li\", 68);\n    i0.ɵɵelementStart(63, \"li\", 67)(64, \"b\");\n    i0.ɵɵtext(65, \" Total: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(66);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(67, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_67_Template, 5, 2, \"li\", 69);\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const type_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(type_r14 == null ? null : type_r14.code);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" - \", type_r14 == null ? null : type_r14.task, \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.client_name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.app_id, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.module_id, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\" ? \"successStatus\" : (type_r14 == null ? null : type_r14.task_status) == \"Yet to Start\" ? \"primarycolor\" : (type_r14 == null ? null : type_r14.task_status) == \"Verified\" ? \"successStatus\" : (type_r14 == null ? null : type_r14.task_status) == \"Draft\" ? \"infoStatement\" : (type_r14 == null ? null : type_r14.task_status) == \"Work in Progress\" ? \"othersColor\" : (type_r14 == null ? null : type_r14.task_status) == \"Rejected\" ? \"redcolor\" : \"othersColor\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.task_status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.dev_type) == \"New\" ? \"primarycolor\" : (type_r14 == null ? null : type_r14.dev_type) == \"Bug Fix\" ? \"othersColor\" : (type_r14 == null ? null : type_r14.dev_type) == \"Enhancement\" ? \"infoStatement\" : (type_r14 == null ? null : type_r14.dev_type) == \"Training\" ? \"othersColor\" : \"othersColor\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.dev_type, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status_id) == 3);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.assigned_by == null ? null : type_r14.assigned_by.full_name, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", type_r14 == null ? null : type_r14.unit_head == null ? null : type_r14.unit_head.full_name, \"/\", type_r14 == null ? null : type_r14.team_lead == null ? null : type_r14.team_lead.full_name, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(60, 25, type_r14 == null ? null : type_r14.start_date, \"dd-MM-yyyy\"), \" - \", i0.ɵɵpipeBind2(61, 28, type_r14 == null ? null : type_r14.end_date, \"dd-MM-yyyy\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.actual_start_date) != \"None\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", (type_r14 == null ? null : type_r14.hours) == \"None\" ? \"0\" : type_r14 == null ? null : type_r14.hours, \" hrs \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.task_status) != \"Completed\");\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_container_63_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\")(2, \"td\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"div\")(6, \"span\", 46);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" - \");\n    i0.ɵɵelementStart(9, \"span\", 47);\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"slice\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 46);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" \\u00A0 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"span\", 46);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"span\");\n    i0.ɵɵtext(21);\n    i0.ɵɵpipe(22, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"td\")(24, \"span\", 48);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_container_63_Template_span_click_24_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r76);\n      const type_r14 = restoredCtx.$implicit;\n      const ctx_r75 = i0.ɵɵnextContext(2);\n      ctx_r75.showPopUp(type_r14);\n      return i0.ɵɵresetView(ctx_r75.EndDateCalculate(type_r14));\n    });\n    i0.ɵɵtext(25, \" visibility \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(26, EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_Template, 68, 31, \"tr\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const type_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(((ctx_r7.EmpTaskObj == null ? null : ctx_r7.EmpTaskObj.presentpageTask) - 1) * ctx_r7.EmpTaskObj.pagesize + i_r15 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", \"othersColor\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r14 == null ? null : type_r14.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"title\", type_r14 == null ? null : type_r14.task);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (type_r14 == null ? null : type_r14.task.length) > 25 ? i0.ɵɵpipeBind3(11, 11, type_r14 == null ? null : type_r14.task, 0, 25) + \"..\" : type_r14.task, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.dev_type) == \"New\" ? \"primarycolor\" : (type_r14 == null ? null : type_r14.dev_type) == \"Bug Fix\" ? \"othersColor\" : (type_r14 == null ? null : type_r14.dev_type) == \"Enhancement\" ? \"infoStatement\" : (type_r14 == null ? null : type_r14.dev_type) == \"Training\" ? \"othersColor\" : \"othersColor\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.dev_type, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", (type_r14 == null ? null : type_r14.task_status) == \"Completed\" ? \"successStatus\" : (type_r14 == null ? null : type_r14.task_status) == \"Yet to Start\" ? \"primarycolor\" : (type_r14 == null ? null : type_r14.task_status) == \"Verified\" ? \"successStatus\" : (type_r14 == null ? null : type_r14.task_status) == \"Draft\" ? \"infoStatement\" : (type_r14 == null ? null : type_r14.task_status) == \"Work in Progress\" ? \"othersColor\" : (type_r14 == null ? null : type_r14.task_status) == \"Rejected\" ? \"redcolor\" : \"othersColor\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14 == null ? null : type_r14.task_status, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(22, 15, type_r14.end_date, \"dd-MMM-yyyy\"), \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (type_r14 == null ? null : type_r14.DynamicStatusCall) == true);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 87)(1, \"h3\");\n    i0.ɵɵtext(2, \"No Records Found.. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_ng_template_65_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r78 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 88)(1, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_template_65_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r77 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r77.TaskSearch(\"previous\"));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"arrow_back\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_ng_template_65_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r78);\n      const ctx_r79 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r79.TaskSearch(\"next\"));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"arrow_forward\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", (ctx_r10.EmpTaskObj == null ? null : ctx_r10.EmpTaskObj.hasPreviousTask) === false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.EmpTaskObj == null ? null : ctx_r10.EmpTaskObj.presentpageTask, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", (ctx_r10.EmpTaskObj == null ? null : ctx_r10.EmpTaskObj.hasNextTask) === false);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 66)(1, \"li\", 96)(2, \"p\")(3, \"span\", 53);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 97);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const datatask_r86 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(datatask_r86 == null ? null : datatask_r86.code);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", datatask_r86 == null ? null : datatask_r86.desc, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(datatask_r86 == null ? null : datatask_r86.hours);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_ul_1_Template, 8, 3, \"ul\", 95);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const datadate_r84 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", datadate_r84 == null ? null : datadate_r84.task);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r88 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"cdk-accordion-item\", 90, 91)(2, \"div\", 92);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_Template_div_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r88);\n      const item_r80 = restoredCtx.$implicit;\n      const _r82 = i0.ɵɵreference(1);\n      const ctx_r87 = i0.ɵɵnextContext(2);\n      _r82.toggle();\n      return i0.ɵɵresetView(ctx_r87.getdataForSelectedDate(item_r80));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"date\");\n    i0.ɵɵelementStart(5, \"span\", 93);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 94)(8, \"h4\");\n    i0.ɵɵtext(9, \"Task Details \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_Template, 2, 1, \"ng-container\", 26);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r80 = ctx.$implicit;\n    const index_r81 = ctx.index;\n    const _r82 = i0.ɵɵreference(1);\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"id\", \"accordion-header-\" + index_r81)(\"aria-expanded\", _r82.expanded)(\"aria-controls\", \"accordion-body-\" + index_r81);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 10, item_r80, \"dd-MM-yyyy\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", _r82.expanded ? \"expand_less\" : \"expand_more\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", _r82.expanded ? \"\" : \"none\");\n    i0.ɵɵattribute(\"id\", \"accordion-body-\" + index_r81)(\"aria-labelledby\", \"accordion-header-\" + index_r81);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.EmpTaskObj == null ? null : ctx_r12.EmpTaskObj.taskHourList);\n  }\n}\nfunction EmpTaskSummaryComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r90 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h3\", 4);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_h3_click_2_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.BackToSummaryToAttendanceLog());\n    });\n    i0.ɵɵtemplate(3, EmpTaskSummaryComponent_div_0_span_3_Template, 2, 0, \"span\", 5);\n    i0.ɵɵtext(4, \" My Tasks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 6)(6, \"table\")(7, \"tr\")(8, \"td\")(9, \"mat-label\");\n    i0.ɵɵtext(10, \"From Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"mat-form-field\", 7)(13, \"input\", 8);\n    i0.ɵɵlistener(\"dateChange\", function EmpTaskSummaryComponent_div_0_Template_input_dateChange_13_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.ChangeDateFormatCommon(\"EmpTaskSummary\", \"from_date\", \"form\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"mat-datepicker-toggle\", 9)(15, \"mat-datepicker\", null, 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\", 11)(18, \"mat-label\", 12);\n    i0.ɵɵtext(19, \"To Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"br\");\n    i0.ɵɵelementStart(21, \"mat-form-field\", 13)(22, \"input\", 14);\n    i0.ɵɵlistener(\"dateChange\", function EmpTaskSummaryComponent_div_0_Template_input_dateChange_22_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r92 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r92.ChangeDateFormatCommon(\"EmpTaskSummary\", \"to_date\", \"form\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"mat-datepicker-toggle\", 9)(24, \"mat-datepicker\", null, 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"td\", 11)(27, \"mat-label\", 12);\n    i0.ɵɵtext(28, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"br\");\n    i0.ɵɵelementStart(30, \"mat-form-field\", 13)(31, \"mat-select\", 16);\n    i0.ɵɵtemplate(32, EmpTaskSummaryComponent_div_0_mat_option_32_Template, 2, 2, \"mat-option\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"td\")(34, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r93 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r93.TaskSearch(\"\"));\n    });\n    i0.ɵɵelementStart(35, \"mat-icon\", 19);\n    i0.ɵɵtext(36, \"search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r94 = i0.ɵɵnextContext();\n      ctx_r94.EmpTaskSummary.reset();\n      return i0.ɵɵresetView(ctx_r94.TaskSearch(\"\"));\n    });\n    i0.ɵɵtext(38, \" Reset \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"td\")(40, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_button_click_40_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r95 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r95.getAddScreen());\n    });\n    i0.ɵɵelement(41, \"i\", 21);\n    i0.ɵɵtext(42, \" Add Task\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"td\")(44, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_button_click_44_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r96 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r96.TaskHourReport());\n    });\n    i0.ɵɵtext(45, \" Task History \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(46, \"div\", 23)(47, \"table\", 24)(48, \"thead\", 25)(49, \"tr\")(50, \"th\");\n    i0.ɵɵtext(51, \"S.No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"th\");\n    i0.ɵɵtext(53, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(54, \"th\");\n    i0.ɵɵtext(55, \"Labels\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(56, \"th\");\n    i0.ɵɵtext(57, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"th\");\n    i0.ɵɵtext(59, \"Due Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"th\");\n    i0.ɵɵtext(61, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(62, \"tbody\");\n    i0.ɵɵtemplate(63, EmpTaskSummaryComponent_div_0_ng_container_63_Template, 27, 18, \"ng-container\", 26);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(64, EmpTaskSummaryComponent_div_0_div_64_Template, 3, 0, \"div\", 27);\n    i0.ɵɵtemplate(65, EmpTaskSummaryComponent_div_0_ng_template_65_Template, 8, 3, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(67, \"div\", 29)(68, \"div\", 30)(69, \"div\", 31)(70, \"div\", 32)(71, \"h5\", 33);\n    i0.ɵɵtext(72, \"Modal title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(73, \"button\", 34)(74, \"span\", 35);\n    i0.ɵɵtext(75, \"\\u00D7\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(76, \"div\", 36)(77, \"div\")(78, \"mat-label\");\n    i0.ɵɵtext(79, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(80, \"br\");\n    i0.ɵɵelementStart(81, \"mat-form-field\")(82, \"input\", 37);\n    i0.ɵɵlistener(\"dateChange\", function EmpTaskSummaryComponent_div_0_Template_input_dateChange_82_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r97 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r97.ChangeDateFormatCommon(\"EmpTaskSummary\", \"end_date\", \"\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(83, \"mat-datepicker-toggle\", 9)(84, \"mat-datepicker\", null, 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(86, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_0_Template_button_click_86_listener() {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r98 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r98.getTaskHours());\n    });\n    i0.ɵɵtext(87, \"Choose\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(88, \"cdk-accordion\", 40);\n    i0.ɵɵtemplate(89, EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_Template, 11, 13, \"cdk-accordion-item\", 41);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(90, \"div\", 42)(91, \"button\", 43);\n    i0.ɵɵtext(92, \"Close\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(16);\n    const _r5 = i0.ɵɵreference(25);\n    const _r9 = i0.ɵɵreference(66);\n    const _r11 = i0.ɵɵreference(85);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.EmpTaskObj.backmenu);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.EmpTaskSummary);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"matDatepicker\", _r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r4);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"matDatepicker\", _r5)(\"min\", ctx_r0.EmpTaskSummary.value.from_date);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r5);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.EmpTaskObj.statusList);\n    i0.ɵɵadvance(31);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.EmpTaskObj == null ? null : ctx_r0.EmpTaskObj.taskLists);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.EmpTaskObj.taskLists == null ? null : ctx_r0.EmpTaskObj.taskLists.length) == 0)(\"ngIfElse\", _r9);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"matDatepicker\", _r11)(\"formControl\", ctx_r0.SelectedHourDate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r11);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.EmpTaskObj.SelectedHoursList);\n  }\n}\nfunction EmpTaskSummaryComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r100 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-emptask-create\", 98);\n    i0.ɵɵlistener(\"OnSubmit\", function EmpTaskSummaryComponent_div_1_Template_app_emptask_create_OnSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r100);\n      const ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.SubmitbackToSummary());\n    })(\"OnCancel\", function EmpTaskSummaryComponent_div_1_Template_app_emptask_create_OnCancel_1_listener() {\n      i0.ɵɵrestoreView(_r100);\n      const ctx_r101 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r101.CancelbackToSummary());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmpTaskSummaryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r103 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 4);\n    i0.ɵɵlistener(\"click\", function EmpTaskSummaryComponent_div_2_Template_h3_click_1_listener() {\n      i0.ɵɵrestoreView(_r103);\n      const ctx_r102 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r102.BackToSummary());\n    });\n    i0.ɵɵelementStart(2, \"span\", 44);\n    i0.ɵɵtext(3, \"arrow_back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Time Sheet\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"app-time-sheet\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EmpTaskSummaryComponent {\n  fb;\n  router;\n  SpinnerService;\n  errorHandler;\n  datePipe;\n  notify;\n  shareService;\n  hrmsapi;\n  ActRoute;\n  apicall;\n  taskapi;\n  constructor(fb, router, SpinnerService, errorHandler, datePipe, notify, shareService, hrmsapi, ActRoute, apicall, taskapi) {\n    this.fb = fb;\n    this.router = router;\n    this.SpinnerService = SpinnerService;\n    this.errorHandler = errorHandler;\n    this.datePipe = datePipe;\n    this.notify = notify;\n    this.shareService = shareService;\n    this.hrmsapi = hrmsapi;\n    this.ActRoute = ActRoute;\n    this.apicall = apicall;\n    this.taskapi = taskapi;\n  }\n  wip_startdate = new FormControl(new Date());\n  complete_enddate = new FormControl(new Date());\n  SelectedHourDate = new FormControl(this.datePipe.transform(new Date(), 'yyyy-MM-dd'));\n  EmpTaskSummary;\n  EmpTaskObj = {\n    EmpTaskSummary: true,\n    EmpTaskCreate: false,\n    EmpHoursHistory: false,\n    ApprovalStatusList: [],\n    pagesize: 10,\n    taskLists: [],\n    presentpageTask: 1,\n    hasPreviousTask: false,\n    hasNextTask: false,\n    devtypelist: [],\n    clientList: [],\n    appNameList: [],\n    statusList: [],\n    moduleNameList: [],\n    teamldList: [],\n    DayTaskData: [],\n    taskHourList: [],\n    SelectedHoursList: [],\n    backmenu: false\n  };\n  ngOnInit() {\n    this.EmpTaskSummary = this.fb.group({\n      app_id: '',\n      client: '',\n      dev_type: '',\n      module_id: '',\n      unit_head: '',\n      team_lead: '',\n      from_date: '',\n      to_date: '',\n      status: ''\n    });\n    this.ActRoute.paramMap.subscribe(params => {\n      let SummaryCall = params.get('data');\n      console.log(\"summary call\", SummaryCall);\n      if (SummaryCall == 'fromEmpview') {\n        this.EmpTaskObj.backmenu = true;\n      }\n    });\n    this.TaskSearch('');\n    this.getdevtype();\n    this.getStatus();\n  }\n  getEmpTask(search, pageno) {\n    let ApiCallBasedOnType = this.taskapi.tasksApi.api.EmplevelTask + '?page=' + pageno;\n    this.apicall.ApiCall('post', ApiCallBasedOnType, search).subscribe(result => {\n      this.SpinnerService.hide();\n      console.log('leave request', result);\n      let datass = result['data'];\n      this.EmpTaskObj.taskLists = datass;\n      let datapagination = result[\"pagination\"];\n      if (this.EmpTaskObj.taskLists.length > 0) {\n        this.EmpTaskObj.hasNextTask = datapagination.has_next;\n        this.EmpTaskObj.hasPreviousTask = datapagination.has_previous;\n        this.EmpTaskObj.presentpageTask = datapagination.index;\n      }\n      let currentDate = new Date();\n      let formtDate = this.datePipe.transform(currentDate, \"yyyy-MM-dd\");\n      this.EmpTaskObj.taskLists.forEach(x => {\n        let Plan_Start;\n        let Plan_End;\n        let PlanDaysCalculate;\n        let TotalPlanDays;\n        // if(x.start_date == x.end_date){\n        //   TotalPlanDays = 1\n        // }else{\n        Plan_Start = new Date(this.datePipe.transform(x.start_date, 'yyyy-MM-dd'));\n        Plan_End = new Date(this.datePipe.transform(x.end_date, 'yyyy-MM-dd'));\n        PlanDaysCalculate = Plan_Start.getTime() - Plan_End.getTime();\n        TotalPlanDays = Math.abs(PlanDaysCalculate) / (1000 * 60 * 60 * 24) + 1;\n        // console.log(\"days calculation\", TotalPlanDays, PlanDaysCalculate, Plan_Start, Plan_End)\n        // }\n        Object.assign(x, {\n          \"DynamicStatusCall\": false,\n          \"DynamicDate\": formtDate,\n          \"DynamicHoursToSend\": 0,\n          \"DynamicPlannedDays\": TotalPlanDays,\n          \"DynamicActualDays\": 0,\n          \"DynamicDelayDaysCount\": 0\n        });\n      });\n      console.log(this.EmpTaskObj.taskLists);\n      return this.EmpTaskObj.taskLists;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  TaskSearch(hint) {\n    let search = this.EmpTaskSummary.value;\n    // const dateValue = this.leaveRequestSearchForm.value;\n    // dateValue.fromdate = this.datePipe.transform(dateValue.fromdate, 'yyyy-MM-dd');\n    // const dateValue1 = this.leaveRequestSearchForm.value;\n    // dateValue.todate = this.datePipe.transform(dateValue1.todate, 'yyyy-MM-dd');\n    let obj = {\n      from_date: search?.from_date,\n      to_date: search?.to_date,\n      summary_type: search?.status\n    };\n    console.log(\"obj data b4 api\", obj);\n    for (let i in obj) {\n      if (obj[i] == undefined || obj[i] == null) {\n        obj[i] = '';\n      }\n    }\n    this.SpinnerService.show();\n    if (hint == 'next') {\n      this.getEmpTask(obj, this.EmpTaskObj?.presentpageTask + 1);\n    } else if (hint == 'previous') {\n      this.getEmpTask(obj, this.EmpTaskObj?.presentpageTask - 1);\n    } else {\n      this.getEmpTask(obj, 1);\n    }\n  }\n  resetRequestSearch() {\n    this.EmpTaskSummary.reset('');\n    this.TaskSearch('');\n  }\n  getAddScreen() {\n    this.EmpTaskObj.EmpTaskSummary = false;\n    this.EmpTaskObj.EmpTaskCreate = true;\n    this.EmpTaskObj.EmpHoursHistory = false;\n  }\n  getdevtype() {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskObj.devtypelist = datas;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  clientsearch(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskObj.clientList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnclt(clt) {\n    return clt ? clt.name : undefined;\n  }\n  Projectsearch(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskObj.appNameList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnappnm(appnm) {\n    return appnm ? appnm.name : undefined;\n  }\n  getStatus() {\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.MyTaskStatus).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskObj.statusList = datas;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  getModule(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskObj.appNameList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnmodnm(mod) {\n    return mod ? mod.name : undefined;\n  }\n  getTeamLead(data) {\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.teamLead + data).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskObj.teamldList = datas;\n    });\n  }\n  displayFnteamld(teamld) {\n    return teamld ? teamld.name : undefined;\n  }\n  ChaneStatus(status, taskstatus) {\n    let obj;\n    console.log(\"taskstatus\", taskstatus);\n    if (taskstatus?.task_status_id == 0) {\n      obj = {\n        actual_start_date: taskstatus?.DynamicDate,\n        task_status: status\n      };\n    } else if (taskstatus?.task_status_id == 1) {\n      obj = {\n        actual_end_date: taskstatus?.DynamicDate,\n        task_status: status,\n        emp_hr: taskstatus?.emp_hours,\n        delay_days: taskstatus?.DynamicDelayDaysCount,\n        reason_for_delay: taskstatus?.reason_for_delay\n      };\n    } else {\n      obj = {\n        task_status: status\n      };\n    }\n    this.apicall.ApiCall(\"post\", this.taskapi.tasksApi.api.changeTaskStatus + taskstatus.id, obj).subscribe(results => {\n      this.notify.success(\"Status Updated\");\n      this.TaskSearch('');\n    });\n  }\n  showPopUp(data) {\n    if (data.DynamicStatusCall == true) {\n      data.DynamicStatusCall = false;\n    } else {\n      data.DynamicStatusCall = true;\n    }\n  }\n  SubmitbackToSummary() {\n    this.TaskSearch('');\n    this.EmpTaskObj.EmpTaskSummary = true;\n    this.EmpTaskObj.EmpTaskCreate = false;\n    this.EmpTaskObj.EmpHoursHistory = false;\n  }\n  CancelbackToSummary() {\n    this.EmpTaskObj.EmpTaskSummary = true;\n    this.EmpTaskObj.EmpTaskCreate = false;\n    this.EmpTaskObj.EmpHoursHistory = false;\n  }\n  ChangeDateFormat(data) {\n    data.DynamicDate = this.datePipe.transform(data?.DynamicDate, 'yyyy-MM-dd');\n  }\n  ChangeDateFormatCommon(form, control, type) {\n    console.log(\"console.log(control, type)\", control, type);\n    if (type == 'form') {\n      // this.EmpTaskSummary.value[control] = this.datePipe.transform(this.EmpTaskSummary.value[control], 'yyyy-MM-dd');\n      this.EmpTaskSummary.patchValue({\n        [control]: this.datePipe.transform(this.EmpTaskSummary.value[control], 'yyyy-MM-dd')\n      });\n      console.log(\"console.log(control, type)\", control, type);\n    } else {\n      this.SelectedHourDate.patchValue(this.datePipe.transform(this.SelectedHourDate.value, 'yyyy-MM-dd'));\n    }\n  }\n  EndDateCalculate(data) {\n    ///if Planned days = 5, and if actual task days = 6\n    ///then delay days  = 1  \n    let Plan_Start;\n    let Plan_End;\n    let PlanDaysCalculate;\n    let TotalPlanDays;\n    console.log(\"actual start date and end date \", data);\n    Plan_Start = new Date(this.datePipe.transform(data.actual_start_date, 'yyyy-MM-dd'));\n    Plan_End = new Date(this.datePipe.transform(data.DynamicDate, 'yyyy-MM-dd'));\n    PlanDaysCalculate = Plan_Start.getTime() - Plan_End.getTime();\n    TotalPlanDays = Math.abs(PlanDaysCalculate) / (1000 * 60 * 60 * 24) + 1;\n    data.DynamicDelayDaysCount = TotalPlanDays - data?.DynamicPlannedDays > 0 ? TotalPlanDays - data?.DynamicPlannedDays : 0;\n  }\n  UpdateTask(data) {\n    let obj = {\n      emp_hr: data?.emp_hours,\n      delay_days: data.DynamicDelayDaysCount,\n      reason_for_delay: data.reason_for_delay\n    };\n    console.log(data, obj);\n    this.apicall.ApiCall(\"post\", this.taskapi.tasksApi.api.changeTaskStatus + data.id, obj).subscribe(results => {\n      this.notify.success(\"Status Updated\");\n      this.TaskSearch('');\n    });\n  }\n  getTaskHours() {\n    this.EmpTaskObj.SelectedHoursList = [];\n    let dates = [...Array(3)].map((x, i) => {\n      let datesSelected = new Date(this.SelectedHourDate.value);\n      datesSelected.setDate(datesSelected.getDate() - i);\n      return datesSelected;\n    });\n    this.EmpTaskObj.SelectedHoursList = dates;\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.EmpTaskHours + this.SelectedHourDate.value).subscribe(results => {\n      this.EmpTaskObj.DayTaskData = results;\n    });\n  }\n  getdataForSelectedDate(data) {\n    console.log(data, this.EmpTaskObj.DayTaskData);\n    let dateFormat = this.datePipe.transform(data, 'yyyy-MM-dd');\n    this.EmpTaskObj.taskHourList = [];\n    let filterData = this.EmpTaskObj.DayTaskData[dateFormat];\n    this.EmpTaskObj.taskHourList = filterData;\n    console.log(\"this.EmpTaskObj.taskHourList\", this.EmpTaskObj.taskHourList);\n    // let filterData  =  \n    // console.log(filterData)\n    // this.EmpTaskObj?.taskHourList = this.EmpTaskObj.DayTaskData[dateFormat]\n    // let gettingData = this.EmpTaskObj.DayTaskData.find(x=>x.data)\n    // console.log(\"EmpTaskObj.taskHourList\", gettingData)\n    // this.EmpTaskObj.taskHourList = gettingData\n  }\n  CancelbackToSummaryReport() {\n    this.EmpTaskObj.EmpHoursHistory = false;\n    this.EmpTaskObj.EmpTaskSummary = true;\n    this.EmpTaskObj.EmpTaskCreate = false;\n  }\n  TaskHourReport() {\n    this.EmpTaskObj.EmpHoursHistory = true;\n    this.EmpTaskObj.EmpTaskSummary = false;\n    this.EmpTaskObj.EmpTaskCreate = false;\n  }\n  BackToSummary() {\n    this.EmpTaskObj.EmpHoursHistory = false;\n    this.EmpTaskObj.EmpTaskSummary = true;\n    this.EmpTaskObj.EmpTaskCreate = false;\n  }\n  BackToSummaryToAttendanceLog() {\n    if (this.EmpTaskObj.backmenu) {\n      this.router.navigate(['hrms/empdetails']);\n    }\n  }\n  static ɵfac = function EmpTaskSummaryComponent_Factory(t) {\n    return new (t || EmpTaskSummaryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ErrorHandlingServiceService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i3.HrmsAPI), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i5.ApicallserviceService), i0.ɵɵdirectiveInject(i3.TaskApi));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmpTaskSummaryComponent,\n    selectors: [[\"app-emp-task-summary\"]],\n    features: [i0.ɵɵProvidersFeature([imp.HrmsAPI, imp.TaskApi])],\n    decls: 3,\n    vars: 3,\n    consts: [[\"class\", \"row marginset\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"marginset\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\"], [3, \"click\"], [\"class\", \"material-icons alignmiddle\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"widthsmall\"], [\"matInput\", \"\", \"readonly\", \"\", \"formControlName\", \"from_date\", 3, \"matDatepicker\", \"dateChange\"], [\"matSuffix\", \"\", 1, \"maticonsize\", 3, \"for\"], [\"picker1\", \"\"], [1, \"padsize\"], [1, \"gapBtween\"], [1, \"widthsmall\", \"gapBtween\"], [\"matInput\", \"\", \"readonly\", \"\", \"formControlName\", \"to_date\", 3, \"matDatepicker\", \"min\", \"dateChange\"], [\"picker2\", \"\"], [\"formControlName\", \"status\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-stroked-button\", \"\", \"aria-label\", \"Search\", 1, \"gapBtween\", 2, \"background-color\", \"white\", 3, \"click\"], [\"matTooltip\", \"Search\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"gapBtween\", 2, \"border-radius\", \"10px\", \"border-color\", \"#f5c68b\", \"background-color\", \"#f5c68b\", 3, \"click\"], [1, \"fa\", \"fa-plus-circle\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"gapBtween\", 3, \"click\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\", 2, \"width\", \"90%\"], [1, \"table_header\"], [4, \"ngFor\", \"ngForOf\"], [\"style\", \"margin-left: 42%;\", 4, \"ngIf\", \"ngIfElse\"], [\"leavereqpage\", \"\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"matInput\", \"\", \"readonly\", \"\", 3, \"matDatepicker\", \"formControl\", \"dateChange\"], [\"pickerSingle\", \"\"], [\"id\", \"WhiteBtn\", 1, \"btn\", \"btn-light\", \"ml-50\", 3, \"click\"], [1, \"example-accordion\"], [\"class\", \"example-accordion-item\", \"role\", \"button\", \"tabindex\", \"0\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [1, \"material-icons\", \"alignmiddle\"], [3, \"value\"], [1, \"badge\", 3, \"ngClass\"], [3, \"title\"], [1, \"material-icons\", 3, \"click\"], [\"colspan\", \"10\"], [1, \"marginAndpadding\"], [1, \"row\"], [1, \"col-lg-8\"], [1, \"badge\", \"badge-secondary\"], [1, \"flexdirection\"], [1, \"marginsetMiddle\"], [1, \"badge\", \"badge-pill\", \"badge-light\"], [1, \"material-icons\", \"fontsize\", \"alignvertical\"], [1, \"alignvertical\"], [\"type\", \"button\", \"class\", \"btn btn-primary gapBtween\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-success gapBtween\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-secondary gapBtween\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-warning gapBtween\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"gapBtween\", 3, \"click\"], [1, \"col-sm-4\", \"col-md-4\", \"col-lg-4\"], [1, \"centerOfList\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"class\", \"list-group-item\", 4, \"ngIf\"], [\"class\", \"list-group-item\", 3, \"ngClass\", 4, \"ngIf\"], [\"mat-mini-fab\", \"\", 3, \"ngClass\"], [1, \"col\"], [\"readonly\", \"\", \"placeholder\", \"Date\", 2, \"width\", \"100px\", 3, \"matDatepicker\", \"ngModel\", \"ngModelChange\", \"dateChange\"], [\"matSuffix\", \"\", 1, \"maticonsize\", 3, \"disabled\", \"for\"], [\"dynamic1\", \"\"], [1, \"table-responsive\", \"timertable\"], [1, \"tablestyle\"], [\"matSuffix\", \"\", 1, \"maticonsize\", 3, \"for\", \"disabled\"], [\"dynamic2\", \"\"], [\"colspan\", \"100\"], [\"placeholder\", \"Reason / Remarks\", 2, \"border\", \"0\", \"outline\", \"0\", \"width\", \"400px\", 3, \"readOnly\", \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Date\", 2, \"width\", \"100px\", 3, \"readOnly\", \"ngModel\", \"ngModelChange\"], [1, \"radleave\", 3, \"title\", \"ngClass\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"gapBtween\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"gapBtween\", 3, \"click\"], [1, \"list-group-item\", 3, \"ngClass\"], [1, \"blinks\"], [2, \"margin-left\", \"42%\"], [1, \"col-sm-12\", 2, \"font-size\", \"small\", \"text-align\", \"right\", \"margin-bottom\", \"50px\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"role\", \"button\", \"tabindex\", \"0\", 1, \"example-accordion-item\"], [\"accordionItem\", \"cdkAccordionItem\"], [1, \"example-accordion-item-header\", 3, \"click\"], [1, \"example-accordion-item-description\", \"material-icons\", \"fontsizeicons\"], [\"role\", \"region\", 1, \"example-accordion-item-body\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"badge\", \"badge-primary\", \"badge-pill\", \"align-items-right\"], [3, \"OnSubmit\", \"OnCancel\"]],\n    template: function EmpTaskSummaryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EmpTaskSummaryComponent_div_0_Template, 93, 15, \"div\", 0);\n        i0.ɵɵtemplate(1, EmpTaskSummaryComponent_div_1_Template, 2, 0, \"div\", 1);\n        i0.ɵɵtemplate(2, EmpTaskSummaryComponent_div_2_Template, 6, 0, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.EmpTaskObj.EmpTaskSummary);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.EmpTaskObj.EmpTaskCreate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.EmpTaskObj.EmpHoursHistory);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i1.NgModel, i6.MatButton, i6.MatIconButton, i6.MatMiniFabButton, i7.MatIcon, i8.MatTooltip, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatSuffix, i11.MatSelect, i12.MatOption, i13.MatDatepicker, i13.MatDatepickerInput, i13.MatDatepickerToggle, i14.CdkAccordion, i14.CdkAccordionItem, i15.EMPTaskCreateComponent, i16.TimeSheetComponent, i4.UpperCasePipe, i4.SlicePipe, i4.DatePipe],\n    styles: [\".padsize[_ngcontent-%COMP%] {\\n  padding-left: 10px;\\n}\\n\\n.icons[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n\\n.rightside[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n\\n.tooltipMark[_ngcontent-%COMP%]   .tooltipShow[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n  background-color: rgb(255, 255, 255);\\n  color: black;\\n  text-align: center;\\n  border-radius: 6px;\\n  padding: 5px 0;\\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\\n  \\n\\n  position: absolute;\\n  left: 400px;\\n  z-index: 1;\\n}\\n\\n.tooltipMark[_ngcontent-%COMP%]:hover   .tooltipShow[_ngcontent-%COMP%] {\\n  visibility: visible;\\n}\\n\\n.tooltipShow[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%], .tooltipShow[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]    > ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  list-style: none;\\n}\\n\\n.noborder[_ngcontent-%COMP%] {\\n  border: none;\\n  width: 90%;\\n}\\n\\n#collapseNoteView[_ngcontent-%COMP%] {\\n  min-width: 50%;\\n  max-width: 80%;\\n  max-height: 700px;\\n  padding: 5px;\\n  overflow: hidden;\\n  overflow: scroll;\\n  margin-bottom: 200px;\\n}\\n\\n#collapseNoteView[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 2px;\\n}\\n\\n\\n\\n#collapseNoteView[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: #ffffff;\\n}\\n\\n#collapseNoteView[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: #555;\\n}\\n\\n.sizeinput[_ngcontent-%COMP%] {\\n  width: 20px;\\n}\\n\\n#collapseNoteViewStatusUpdate[_ngcontent-%COMP%] {\\n  min-width: 50%;\\n  max-width: 80%;\\n  max-height: 700px;\\n  padding: 5px;\\n  overflow: scroll;\\n  margin-bottom: 200px;\\n  z-index: 1;\\n}\\n\\n.fontsize[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n\\n.alignvertical[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n\\n.marginAndpadding[_ngcontent-%COMP%] {\\n  margin: 2px;\\n  padding: 5px;\\n  border: 1px solid rgba(0, 0, 0, 0.282);\\n}\\n\\n#headerTaskName[_ngcontent-%COMP%] {\\n  word-wrap: break-word;\\n}\\n\\n.flexdirection[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.textoverflowSet[_ngcontent-%COMP%] {\\n  white-space: nowrap;\\n  width: 50px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  border: 1px solid #000000;\\n}\\n\\n.createdby[_ngcontent-%COMP%] {\\n  color: #7a7a7a;\\n  font-size: 12px;\\n  margin-left: 10px;\\n}\\n\\n.marginsetMiddle[_ngcontent-%COMP%] {\\n  margin: 10px 10px auto;\\n}\\n\\n.colorsetHours[_ngcontent-%COMP%] {\\n  background-color: #ffffff;\\n}\\n\\n.successBtn[_ngcontent-%COMP%] {\\n  background-color: #28A745;\\n}\\n\\n.gapBtween[_ngcontent-%COMP%] {\\n  margin-left: 40px;\\n}\\n\\n.circleHours[_ngcontent-%COMP%] {\\n  border-radius: 50px;\\n  border: 2px solid rgb(146, 143, 143);\\n  width: 80px;\\n  height: 80px;\\n  text-align: center;\\n  display: grid;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.list-group-item[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.timertable[_ngcontent-%COMP%] {\\n  max-height: 350px;\\n}\\n\\n.tablestyle[_ngcontent-%COMP%] {\\n  position: sticky;\\n  left: 0;\\n}\\n\\n.tablestyle[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child, .tablestyle[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:first-child {\\n  position: sticky;\\n  left: 0;\\n  z-index: 1;\\n}\\n\\n.bgAlertColor[_ngcontent-%COMP%] {\\n  background-color: #ee4e65;\\n  color: #ffffff;\\n}\\n\\n.primarycolor[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: #ffffff;\\n}\\n\\n.redcolor[_ngcontent-%COMP%] {\\n  background-color: #ee4e65;\\n  color: #ffffff;\\n}\\n\\n.successStatus[_ngcontent-%COMP%] {\\n  background-color: #28A745;\\n  color: #ffffff;\\n}\\n\\n.warns[_ngcontent-%COMP%] {\\n  background-color: #ffc107;\\n  color: #ffffff;\\n}\\n\\n.othersColor[_ngcontent-%COMP%] {\\n  background-color: #6c757d;\\n  color: #ffffff;\\n}\\n\\n.infoStatement[_ngcontent-%COMP%] {\\n  background-color: #17a2b8;\\n  color: #ffffff;\\n}\\n\\n.radleave[_ngcontent-%COMP%] {\\n  width: 20px;\\n  border-radius: 50px;\\n  text-align: center;\\n}\\n\\n.example-accordion[_ngcontent-%COMP%] {\\n  display: block;\\n  max-width: 500px;\\n}\\n\\n.example-accordion-item[_ngcontent-%COMP%] {\\n  display: block;\\n  border: solid 1px #ccc;\\n}\\n\\n.example-accordion-item[_ngcontent-%COMP%]    + .example-accordion-item[_ngcontent-%COMP%] {\\n  border-top: none;\\n}\\n\\n.example-accordion-item-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  justify-content: space-between;\\n}\\n\\n.example-accordion-item-description[_ngcontent-%COMP%] {\\n  font-size: 0.85em;\\n  color: #999;\\n}\\n\\n.example-accordion-item-header[_ngcontent-%COMP%], .example-accordion-item-body[_ngcontent-%COMP%] {\\n  padding: 16px;\\n}\\n\\n.example-accordion-item-header[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  background-color: #eee;\\n}\\n\\n.example-accordion-item[_ngcontent-%COMP%]:first-child {\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n}\\n\\n.example-accordion-item[_ngcontent-%COMP%]:last-child {\\n  border-bottom-left-radius: 4px;\\n  border-bottom-right-radius: 4px;\\n}\\n\\n.fontsizeicons[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n\\n.alignmiddle[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n\\n.marginset[_ngcontent-%COMP%] {\\n  margin: 0px auto;\\n}\\n\\n.widthsmall[_ngcontent-%COMP%] {\\n  width: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["FormControl","imp","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","status_r13","id","ɵɵadvance","ɵɵtextInterpolate1","text","ɵɵelement","ɵɵtextInterpolate","type_r14","reason_for_delay","delay_days","ɵɵlistener","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r31","ɵɵnextContext","$implicit","ɵɵresetView","DynamicDate","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template_input_dateChange_3_listener","ctx_r32","ChangeDateFormat","_r28","task_status","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵpropertyInterpolate","ɵɵpipeBind1","leaves_r40","ɵɵtemplate","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_ng_container_6_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_Template_input_ngModelChange_8_listener","restoredCtx","_r42","dateHours_r37","hour","index_r38","ɵɵpipeBind2","date","adt_ref","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_tr_10_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_ngModelChange_19_listener","_r46","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_dateChange_19_listener","ctx_r47","EndDateCalculate","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template_input_ngModelChange_25_listener","emp_hours","hour_data","actual_start_date","_r36","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_38_Template_button_click_0_listener","_r54","ctx_r52","ChaneStatus","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_39_Template_button_click_0_listener","_r57","ctx_r55","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_40_Template_button_click_0_listener","_r60","ctx_r58","UpdateTask","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_41_Template_button_click_0_listener","_r63","ctx_r61","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_42_Template_button_click_0_listener","_r66","ctx_r64","actual_end_date","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_span_5_Template","DynamicDelayDaysCount","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_31_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_34_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_div_35_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_38_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_39_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_40_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_41_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_button_42_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_Template_button_click_43_listener","_r73","ctx_r71","showPopUp","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_62_Template","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_li_67_Template","code","task","client_name","app_id","module_id","dev_type","task_status_id","assigned_by","full_name","ɵɵtextInterpolate2","unit_head","team_lead","start_date","end_date","hours","EmpTaskSummaryComponent_div_0_ng_container_63_Template_span_click_24_listener","_r76","ctx_r75","EmpTaskSummaryComponent_div_0_ng_container_63_tr_26_Template","ctx_r7","EmpTaskObj","presentpageTask","pagesize","i_r15","length","ɵɵpipeBind3","DynamicStatusCall","EmpTaskSummaryComponent_div_0_ng_template_65_Template_button_click_1_listener","_r78","ctx_r77","TaskSearch","EmpTaskSummaryComponent_div_0_ng_template_65_Template_button_click_5_listener","ctx_r79","ctx_r10","hasPreviousTask","hasNextTask","datatask_r86","desc","EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_ul_1_Template","datadate_r84","EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_Template_div_click_2_listener","_r88","item_r80","_r82","ɵɵreference","ctx_r87","toggle","getdataForSelectedDate","EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_ng_container_10_Template","ɵɵattribute","index_r81","expanded","ɵɵstyleProp","ctx_r12","taskHourList","EmpTaskSummaryComponent_div_0_Template_h3_click_2_listener","_r90","ctx_r89","BackToSummaryToAttendanceLog","EmpTaskSummaryComponent_div_0_span_3_Template","EmpTaskSummaryComponent_div_0_Template_input_dateChange_13_listener","ctx_r91","ChangeDateFormatCommon","EmpTaskSummaryComponent_div_0_Template_input_dateChange_22_listener","ctx_r92","EmpTaskSummaryComponent_div_0_mat_option_32_Template","EmpTaskSummaryComponent_div_0_Template_button_click_34_listener","ctx_r93","EmpTaskSummaryComponent_div_0_Template_button_click_37_listener","ctx_r94","EmpTaskSummary","reset","EmpTaskSummaryComponent_div_0_Template_button_click_40_listener","ctx_r95","getAddScreen","EmpTaskSummaryComponent_div_0_Template_button_click_44_listener","ctx_r96","TaskHourReport","EmpTaskSummaryComponent_div_0_ng_container_63_Template","EmpTaskSummaryComponent_div_0_div_64_Template","EmpTaskSummaryComponent_div_0_ng_template_65_Template","ɵɵtemplateRefExtractor","EmpTaskSummaryComponent_div_0_Template_input_dateChange_82_listener","ctx_r97","EmpTaskSummaryComponent_div_0_Template_button_click_86_listener","ctx_r98","getTaskHours","EmpTaskSummaryComponent_div_0_cdk_accordion_item_89_Template","ctx_r0","backmenu","_r4","_r5","value","from_date","statusList","taskLists","_r9","_r11","SelectedHourDate","SelectedHoursList","EmpTaskSummaryComponent_div_1_Template_app_emptask_create_OnSubmit_1_listener","_r100","ctx_r99","SubmitbackToSummary","EmpTaskSummaryComponent_div_1_Template_app_emptask_create_OnCancel_1_listener","ctx_r101","CancelbackToSummary","EmpTaskSummaryComponent_div_2_Template_h3_click_1_listener","_r103","ctx_r102","BackToSummary","EmpTaskSummaryComponent","fb","router","SpinnerService","errorHandler","datePipe","notify","shareService","hrmsapi","ActRoute","apicall","taskapi","constructor","wip_startdate","Date","complete_enddate","transform","EmpTaskCreate","EmpHoursHistory","ApprovalStatusList","devtypelist","clientList","appNameList","moduleNameList","teamldList","DayTaskData","ngOnInit","group","client","to_date","status","paramMap","subscribe","params","SummaryCall","get","console","log","getdevtype","getStatus","getEmpTask","search","pageno","ApiCallBasedOnType","tasksApi","api","EmplevelTask","ApiCall","result","hide","datass","datapagination","has_next","has_previous","index","currentDate","formtDate","forEach","x","Plan_Start","Plan_End","PlanDaysCalculate","TotalPlanDays","getTime","Math","abs","Object","assign","error","handleError","hint","obj","summary_type","i","undefined","show","resetRequestSearch","devTypeDD","results","datas","clientsearch","Typedata","queries","query","displayFnclt","clt","name","Projectsearch","projectSearch","displayFnappnm","appnm","MyTaskStatus","getModule","displayFnmodnm","mod","getTeamLead","data","teamLead","displayFnteamld","teamld","taskstatus","emp_hr","changeTaskStatus","success","form","control","type","patchValue","DynamicPlannedDays","dates","Array","map","datesSelected","setDate","getDate","EmpTaskHours","dateFormat","filterData","CancelbackToSummaryReport","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","NgxSpinnerService","ErrorHandlingServiceService","i4","DatePipe","ToastrService","SharedService","HrmsAPI","ActivatedRoute","i5","ApicallserviceService","TaskApi","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","EmpTaskSummaryComponent_Template","rf","ctx","EmpTaskSummaryComponent_div_0_Template","EmpTaskSummaryComponent_div_1_Template","EmpTaskSummaryComponent_div_2_Template"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\taskreport\\EmpTask\\emp-task-summary\\emp-task-summary.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\taskreport\\EmpTask\\emp-task-summary\\emp-task-summary.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, FormGroupDirective, FormArrayName } from '@angular/forms';\r\nimport * as imp from '../../../AppAutoEngine/import-services/CommonimportFiles'\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ApicallserviceService } from '../../../AppAutoEngine/API Services/Api_and_Query/apicallservice.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-emp-task-summary',\r\n  templateUrl: './emp-task-summary.component.html',\r\n  styleUrls: ['./emp-task-summary.component.scss'],\r\n  providers: [imp.HrmsAPI, imp.TaskApi]\r\n})\r\nexport class EmpTaskSummaryComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private SpinnerService: imp.NgxSpinnerService,\r\n    private errorHandler: imp.ErrorHandlingServiceService, private datePipe: DatePipe, private notify: imp.ToastrService,\r\n    private shareService: imp.SharedService, private hrmsapi: imp.HrmsAPI, private ActRoute: ActivatedRoute, \r\n    private apicall: ApicallserviceService, private taskapi: imp.TaskApi\r\n  ) { }\r\n\r\n  wip_startdate = new FormControl(new Date())\r\n  complete_enddate = new FormControl(new Date())\r\n  SelectedHourDate = new FormControl(this.datePipe.transform(new Date(), 'yyyy-MM-dd'))\r\n\r\n  EmpTaskSummary: FormGroup;\r\n  EmpTaskObj = {\r\n    EmpTaskSummary: true,\r\n    EmpTaskCreate: false,\r\n    EmpHoursHistory: false,  \r\n    ApprovalStatusList: [],\r\n    pagesize: 10,\r\n    taskLists: [],\r\n    presentpageTask: 1,\r\n    hasPreviousTask: false,\r\n    hasNextTask: false,\r\n    devtypelist: [],\r\n    clientList: [],\r\n    appNameList: [],\r\n    statusList: [],\r\n    moduleNameList: [],\r\n    teamldList: [],\r\n    DayTaskData: [], \r\n    taskHourList: [],\r\n    SelectedHoursList: [],\r\n    backmenu: false  \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.EmpTaskSummary = this.fb.group({\r\n      app_id: '',\r\n      client: '',\r\n      dev_type: '',\r\n      module_id: '',\r\n      unit_head: '',\r\n      team_lead: '',\r\n      from_date: '',\r\n      to_date: '',\r\n      status: ''\r\n    })\r\n\r\n    this.ActRoute.paramMap.subscribe((params: ParamMap)=>{\r\n      let SummaryCall: any = params.get('data')\r\n      console.log(\"summary call\",SummaryCall)\r\n      if(SummaryCall == 'fromEmpview'){\r\n        this.EmpTaskObj.backmenu = true \r\n      }\r\n      \r\n\r\n    })\r\n\r\n    this.TaskSearch('');\r\n    this.getdevtype();\r\n    this.getStatus();\r\n  }\r\n\r\n  getEmpTask(search, pageno) {\r\n    let ApiCallBasedOnType = this.taskapi.tasksApi.api.EmplevelTask + '?page=' + pageno\r\n    this.apicall.ApiCall('post', ApiCallBasedOnType, search)\r\n      .subscribe(result => {\r\n        this.SpinnerService.hide();\r\n        console.log('leave request', result)\r\n        let datass = result['data'];\r\n        this.EmpTaskObj.taskLists = datass;\r\n        let datapagination = result[\"pagination\"];\r\n        if (this.EmpTaskObj.taskLists.length > 0) {\r\n          this.EmpTaskObj.hasNextTask = datapagination.has_next;\r\n          this.EmpTaskObj.hasPreviousTask = datapagination.has_previous;\r\n          this.EmpTaskObj.presentpageTask = datapagination.index;\r\n        }\r\n        let currentDate = new Date()\r\n        let formtDate = this.datePipe.transform(currentDate, \"yyyy-MM-dd\")\r\n        this.EmpTaskObj.taskLists.forEach(x => {\r\n\r\n          let Plan_Start: any\r\n          let Plan_End: any\r\n          let PlanDaysCalculate\r\n          let TotalPlanDays\r\n\r\n          // if(x.start_date == x.end_date){\r\n          //   TotalPlanDays = 1\r\n          // }else{\r\n          Plan_Start = new Date(this.datePipe.transform(x.start_date, 'yyyy-MM-dd'));\r\n          Plan_End = new Date(this.datePipe.transform(x.end_date, 'yyyy-MM-dd'));\r\n\r\n          PlanDaysCalculate = Plan_Start.getTime() - Plan_End.getTime()\r\n          TotalPlanDays = (Math.abs(PlanDaysCalculate) / (1000 * 60 * 60 * 24)) + 1;\r\n          // console.log(\"days calculation\", TotalPlanDays, PlanDaysCalculate, Plan_Start, Plan_End)\r\n          // }\r\n          Object.assign(x, {\r\n            \"DynamicStatusCall\": false,\r\n            \"DynamicDate\": formtDate,\r\n            \"DynamicHoursToSend\": 0,\r\n            \"DynamicPlannedDays\": TotalPlanDays,\r\n            \"DynamicActualDays\": 0,\r\n            \"DynamicDelayDaysCount\": 0\r\n          })\r\n        })\r\n        console.log(this.EmpTaskObj.taskLists)\r\n        return this.EmpTaskObj.taskLists\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n\r\n\r\n\r\n  TaskSearch(hint: any) {\r\n    let search = this.EmpTaskSummary.value;\r\n    // const dateValue = this.leaveRequestSearchForm.value;\r\n    // dateValue.fromdate = this.datePipe.transform(dateValue.fromdate, 'yyyy-MM-dd');\r\n    // const dateValue1 = this.leaveRequestSearchForm.value;\r\n    // dateValue.todate = this.datePipe.transform(dateValue1.todate, 'yyyy-MM-dd');\r\n\r\n    let obj = {\r\n      from_date: search?.from_date,\r\n      to_date: search?.to_date,\r\n      summary_type: search?.status\r\n    }\r\n    console.log(\"obj data b4 api\", obj)\r\n    for (let i in obj) {\r\n      if (obj[i] == undefined || obj[i] == null) {\r\n        obj[i] = '';\r\n      }\r\n    }\r\n    this.SpinnerService.show();\r\n\r\n    if (hint == 'next') {\r\n      this.getEmpTask(obj, this.EmpTaskObj?.presentpageTask + 1)\r\n    }\r\n    else if (hint == 'previous') {\r\n      this.getEmpTask(obj, this.EmpTaskObj?.presentpageTask - 1)\r\n    }\r\n    else {\r\n      this.getEmpTask(obj, 1)\r\n    }\r\n\r\n  }\r\n\r\n  resetRequestSearch() {\r\n    this.EmpTaskSummary.reset('')\r\n    this.TaskSearch('')\r\n  }\r\n\r\n\r\n  getAddScreen() {\r\n\r\n    this.EmpTaskObj.EmpTaskSummary = false;\r\n    this.EmpTaskObj.EmpTaskCreate = true;\r\n    this.EmpTaskObj.EmpHoursHistory = false;\r\n\r\n  }\r\n\r\n\r\n  getdevtype() {\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.EmpTaskObj.devtypelist = datas;\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  clientsearch(Typedata) {\r\n\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch +\r\n      this.taskapi.tasksApi.queries.query + Typedata + '&' +\r\n      this.taskapi.tasksApi.queries.status + 2)\r\n\r\n      .subscribe(results => {\r\n        this.EmpTaskObj.clientList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n\r\n  }\r\n\r\n  displayFnclt(clt?: interfacedatas): string | undefined {\r\n    return clt ? clt.name : undefined;\r\n  }\r\n\r\n  Projectsearch(Typedata) {\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2)\r\n      .subscribe(results => {\r\n        this.EmpTaskObj.appNameList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  displayFnappnm(appnm?: interfacedatas): string | undefined {\r\n    return appnm ? appnm.name : undefined;\r\n  }\r\n\r\n  getStatus() {\r\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.MyTaskStatus)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.EmpTaskObj.statusList = datas;\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  getModule(Typedata) {\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2)\r\n      .subscribe(results => {\r\n        this.EmpTaskObj.appNameList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n  displayFnmodnm(mod?: interfacedatas): string | undefined {\r\n    return mod ? mod.name : undefined;\r\n  }\r\n\r\n  getTeamLead(data) {\r\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.teamLead + data)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.EmpTaskObj.teamldList = datas;\r\n      })\r\n  }\r\n\r\n  displayFnteamld(teamld?: interfacedatas): string | undefined {\r\n    return teamld ? teamld.name : undefined;\r\n  }\r\n\r\n\r\n  ChaneStatus(status, taskstatus) {\r\n    let obj: any\r\n    console.log(\"taskstatus\", taskstatus)\r\n    if (taskstatus?.task_status_id == 0) {\r\n      obj = {\r\n        actual_start_date: taskstatus?.DynamicDate,\r\n        task_status: status,\r\n      }\r\n    }\r\n    else if (taskstatus?.task_status_id == 1) {\r\n      obj = {\r\n        actual_end_date: taskstatus?.DynamicDate,\r\n        task_status: status,\r\n        emp_hr: taskstatus?.emp_hours,\r\n        delay_days: taskstatus?.DynamicDelayDaysCount,\r\n        reason_for_delay: taskstatus?.reason_for_delay\r\n      }\r\n    }\r\n\r\n    else {\r\n      obj = {\r\n        task_status: status\r\n      }\r\n    }\r\n    this.apicall.ApiCall(\"post\", this.taskapi.tasksApi.api.changeTaskStatus + taskstatus.id, obj)\r\n      .subscribe(results => {\r\n        this.notify.success(\"Status Updated\")\r\n        this.TaskSearch('')\r\n      })\r\n\r\n  }\r\n\r\n  showPopUp(data) {\r\n    if (data.DynamicStatusCall == true) {\r\n      data.DynamicStatusCall = false\r\n    } else {\r\n      data.DynamicStatusCall = true\r\n    }\r\n\r\n  }\r\n\r\n\r\n  SubmitbackToSummary() {\r\n    this.TaskSearch('')\r\n    this.EmpTaskObj.EmpTaskSummary = true;\r\n    this.EmpTaskObj.EmpTaskCreate = false;\r\n    this.EmpTaskObj.EmpHoursHistory = false; \r\n  }\r\n\r\n\r\n  CancelbackToSummary() {\r\n    this.EmpTaskObj.EmpTaskSummary = true;\r\n    this.EmpTaskObj.EmpTaskCreate = false;\r\n    this.EmpTaskObj.EmpHoursHistory = false\r\n  }\r\n\r\n  ChangeDateFormat(data) {\r\n    data.DynamicDate = this.datePipe.transform(data?.DynamicDate, 'yyyy-MM-dd');\r\n  }\r\n  ChangeDateFormatCommon(form, control, type) {\r\n    console.log(\"console.log(control, type)\", control, type)\r\n    if (type == 'form'){\r\n      // this.EmpTaskSummary.value[control] = this.datePipe.transform(this.EmpTaskSummary.value[control], 'yyyy-MM-dd');\r\n      this.EmpTaskSummary.patchValue({ \r\n        [control]: this.datePipe.transform(this.EmpTaskSummary.value[control], 'yyyy-MM-dd')\r\n    });\r\n      console.log(\"console.log(control, type)\", control, type)\r\n    }\r\n    else{\r\n      this.SelectedHourDate.patchValue(this.datePipe.transform(this.SelectedHourDate.value, 'yyyy-MM-dd'))\r\n    }\r\n  }\r\n\r\n  EndDateCalculate(data) {\r\n    ///if Planned days = 5, and if actual task days = 6\r\n    ///then delay days  = 1  \r\n    let Plan_Start: any\r\n    let Plan_End: any\r\n    let PlanDaysCalculate\r\n    let TotalPlanDays\r\n\r\n      console.log(\"actual start date and end date \", data)\r\n    Plan_Start = new Date(this.datePipe.transform(data.actual_start_date, 'yyyy-MM-dd'));\r\n    Plan_End = new Date(this.datePipe.transform(data.DynamicDate, 'yyyy-MM-dd'));\r\n\r\n    PlanDaysCalculate = Plan_Start.getTime() - Plan_End.getTime()\r\n    TotalPlanDays = (Math.abs(PlanDaysCalculate) / (1000 * 60 * 60 * 24)) + 1;\r\n\r\n    data.DynamicDelayDaysCount = (TotalPlanDays - data?.DynamicPlannedDays) > 0 ? (TotalPlanDays - data?.DynamicPlannedDays) : 0 \r\n\r\n  }\r\n\r\n  UpdateTask(data) {\r\n    let obj = {\r\n      emp_hr: data?.emp_hours,\r\n      delay_days: data.DynamicDelayDaysCount,\r\n      reason_for_delay: data.reason_for_delay\r\n    }\r\n    console.log(data, obj)\r\n    this.apicall.ApiCall(\"post\", this.taskapi.tasksApi.api.changeTaskStatus + data.id, obj)\r\n      .subscribe(results => {\r\n        this.notify.success(\"Status Updated\")\r\n        this.TaskSearch('')\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getTaskHours() {\r\n    this.EmpTaskObj.SelectedHoursList = []\r\n    let dates = [...Array(3)].map((x, i) => {\r\n      let datesSelected = new Date(this.SelectedHourDate.value)\r\n      datesSelected.setDate(datesSelected.getDate() - i)\r\n      return datesSelected\r\n    })\r\n    this.EmpTaskObj.SelectedHoursList = dates\r\n\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.EmpTaskHours + this.SelectedHourDate.value)\r\n      .subscribe(results => {\r\n        this.EmpTaskObj.DayTaskData = results \r\n      })\r\n\r\n  }\r\n\r\n  getdataForSelectedDate(data){\r\n    console.log(data, this.EmpTaskObj.DayTaskData)\r\n    let dateFormat = this.datePipe.transform(data, 'yyyy-MM-dd')\r\n    this.EmpTaskObj.taskHourList = [];\r\n    let filterData  = this.EmpTaskObj.DayTaskData[dateFormat]\r\n    this.EmpTaskObj.taskHourList = filterData\r\n    console.log(\"this.EmpTaskObj.taskHourList\", this.EmpTaskObj.taskHourList)\r\n    // let filterData  =  \r\n    // console.log(filterData)\r\n    // this.EmpTaskObj?.taskHourList = this.EmpTaskObj.DayTaskData[dateFormat]\r\n\r\n    // let gettingData = this.EmpTaskObj.DayTaskData.find(x=>x.data)\r\n    // console.log(\"EmpTaskObj.taskHourList\", gettingData)\r\n    // this.EmpTaskObj.taskHourList = gettingData\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  CancelbackToSummaryReport(){\r\n    this.EmpTaskObj.EmpHoursHistory = false;\r\n    this.EmpTaskObj.EmpTaskSummary = true;\r\n    this.EmpTaskObj.EmpTaskCreate = false;\r\n  }\r\n\r\n  TaskHourReport(){\r\n    this.EmpTaskObj.EmpHoursHistory = true;\r\n    this.EmpTaskObj.EmpTaskSummary = false;\r\n    this.EmpTaskObj.EmpTaskCreate = false;\r\n  }\r\n\r\n  BackToSummary(){\r\n    this.EmpTaskObj.EmpHoursHistory = false;\r\n    this.EmpTaskObj.EmpTaskSummary = true;\r\n    this.EmpTaskObj.EmpTaskCreate = false;\r\n  }\r\n\r\n  BackToSummaryToAttendanceLog(){\r\n    if(this.EmpTaskObj.backmenu){\r\n    this.router.navigate(['hrms/empdetails'])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport interface interfacedatas {\r\n  id: string;\r\n  name: string;\r\n}","<div class=\"row marginset\" *ngIf=\"EmpTaskObj.EmpTaskSummary\">\r\n    <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <h3 (click)=\"BackToSummaryToAttendanceLog()\"> <span class=\"material-icons alignmiddle\" *ngIf=\"this.EmpTaskObj.backmenu\">arrow_back</span> My Tasks</h3>  \r\n        <form [formGroup]=\"EmpTaskSummary\">\r\n            <table>\r\n                <tr>\r\n                    <!-- <td>\r\n                            <mat-label>From Date</mat-label><br>\r\n                            <mat-form-field>\r\n                                <input matInput readonly [matDatepicker]=\"picker1\" formControlName=\"start_date\">\r\n                                <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker1\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker1></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td class=\"padsize\">\r\n                            <mat-label>To Date</mat-label><br>\r\n                            <mat-form-field>\r\n                                <input matInput readonly [matDatepicker]=\"picker2\" formControlName=\"end_date\"\r\n                                    [min]=\"EmpTaskSummary.value.start_date\">\r\n                                <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker2\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker2></mat-datepicker>\r\n                            </mat-form-field>\r\n\r\n                        </td>\r\n                        <td class=\"padsize\">\r\n                            <mat-label>Dev Type </mat-label><br>\r\n                            <mat-form-field>\r\n                                <mat-select formControlName=\"dev_type\">\r\n                                    <mat-option *ngFor=\"let devtype of EmpTaskObj.devtypelist\" [value]=\"devtype.id\">\r\n                                        {{devtype.text}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n\r\n                        </td> -->\r\n                    <!-- <td>\r\n                            <mat-label>Client</mat-label><br>\r\n                            <mat-form-field>\r\n\r\n                                <input #cltInput matInput formControlName=\"client\" [matAutocomplete]=\"clt\"\r\n                                    (keyup)=\"clientsearch(this.EmpTaskSummary.value.client)\">\r\n                                <mat-icon matSuffix>unfold_more</mat-icon>\r\n                                <mat-autocomplete #clt=\"matAutocomplete\" [displayWith]=\"displayFnclt\">\r\n\r\n                                    <mat-option *ngFor=\"let clt of EmpTaskObj.clientList\" [value]=\"clt\">\r\n                                        {{clt.name}}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </td> \r\n\r\n\r\n                        <td class=\"padsize\">\r\n                            <mat-label>Project Name</mat-label><br>\r\n                            <mat-form-field>\r\n                                <input #appnmInput matInput formControlName=\"app_id\" [matAutocomplete]=\"appnm\"\r\n                                    (keyup)=\"Projectsearch(this.EmpTaskSummary.value.app_id)\">\r\n                                <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                                <mat-autocomplete #appnm=\"matAutocomplete\" [displayWith]=\"displayFnappnm\">\r\n\r\n                                    <mat-option *ngFor=\"let  appnm of EmpTaskObj.appNameList\" [value]=\"appnm\">\r\n                                        {{appnm.name}}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </td>\r\n\r\n                        <td class=\"padsize\">\r\n                            <mat-label>Module Name</mat-label><br>\r\n                            <mat-form-field>\r\n\r\n                                <input #modnmInput matInput formControlName=\"module_id\"\r\n                                    (keyup)=\"getModule(this.EmpTaskSummary.value.module_id)\" [matAutocomplete]=\"modnm\">\r\n                                <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                                <mat-autocomplete #modnm=\"matAutocomplete\" [displayWith]=\"displayFnmodnm\">\r\n                                    <mat-option *ngFor=\"let modnm of EmpTaskObj.moduleNameList\" [value]=\"modnm\">\r\n                                        {{modnm.name}}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </td> -->\r\n                    <td>\r\n                        <mat-label>From Date</mat-label><br>\r\n                        <mat-form-field class=\"widthsmall\">\r\n                            <input matInput readonly [matDatepicker]=\"picker1\" formControlName=\"from_date\"\r\n                                (dateChange)=\"ChangeDateFormatCommon('EmpTaskSummary', 'from_date', 'form')\">\r\n                            <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker1\">\r\n                            </mat-datepicker-toggle>\r\n                            <mat-datepicker #picker1></mat-datepicker>\r\n                        </mat-form-field>\r\n                    </td>\r\n                    <td class=\"padsize\">\r\n                        <mat-label class=\"gapBtween\">To Date</mat-label><br>\r\n                        <mat-form-field class=\"widthsmall gapBtween\">\r\n                            <input matInput readonly [matDatepicker]=\"picker2\" formControlName=\"to_date\"\r\n                                (dateChange)=\"ChangeDateFormatCommon('EmpTaskSummary', 'to_date', 'form')\"\r\n                                [min]=\"EmpTaskSummary.value.from_date\">\r\n                            <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker2\">\r\n                            </mat-datepicker-toggle>\r\n                            <mat-datepicker #picker2></mat-datepicker>\r\n                        </mat-form-field>\r\n\r\n                    </td>\r\n                    <td class=\"padsize\">\r\n                        <mat-label class=\"gapBtween\">Status</mat-label><br>\r\n                        <mat-form-field class=\"widthsmall gapBtween\">\r\n                            <mat-select formControlName=\"status\">\r\n                                <mat-option *ngFor=\"let status of EmpTaskObj.statusList\" [value]=\"status.id\">\r\n                                    {{status.text}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </td>\r\n\r\n                    <!-- <td  class=\"padsize\">\r\n                            <mat-label>Team Lead</mat-label><br>\r\n                            <mat-form-field>\r\n\r\n                                <input #teamldInput matInput formControlName=\"team_lead\" [matAutocomplete]=\"teamld\"\r\n                                    (keyup)=\"getTeamLead(this.EmpTaskSummary.value.team_lead)\">\r\n                                <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                                <mat-autocomplete #teamld=\"matAutocomplete\" [displayWith]=\"displayFnteamld\">\r\n\r\n                                    <mat-option *ngFor=\"let teamld of EmpTaskObj.teamldList\" [value]=\"teamld\">\r\n                                        {{teamld.name}}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </td> -->\r\n                    <!-- </tr>\r\n                    <tr> -->\r\n                    <td>\r\n                        <!-- <div class=\"col-md-4\"> -->\r\n                            <button type=\"button\" class=\"gapBtween\" mat-stroked-button  style=\"background-color: white;\"\r\n                            aria-label=\"Search\"\r\n                                (click)=\"TaskSearch('')\">\r\n                                <mat-icon matTooltip=\"Search\">search</mat-icon>\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"gapBtween\" mat-stroked-button  style=\"background-color: white;\"\r\n                            aria-label=\"Search\"  (click)=\"EmpTaskSummary.reset(); TaskSearch('')\">\r\n                                Reset\r\n                            </button>\r\n\r\n                        <!-- </div> -->\r\n                    </td>\r\n                    <!-- <td>\r\n                        <div class=\"col-md-4\">\r\n                            <button type=\"button\" mat-fab style=\"margin-left: 20px;background-color: #f5c68b;\"\r\n                                (click)=\"TaskSearch('')\">\r\n                                <mat-icon matTooltip=\"Search\">search</mat-icon>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </td> -->\r\n                    <td>\r\n                         \r\n                            <!-- <button type=\"button\" style=\"  border-radius: 10px;margin-left: 10px;border-color: #f5c68b;\r\n                            background-color: #f5c68b;\" class=\"btn btn-light\" \r\n                                (click)=\"getAddScreen()\">\r\n                                <mat-icon matTooltip=\"Add\">add</mat-icon> Add Task \r\n                            </button> -->\r\n\r\n                            <button type=\"button\" style=\"  border-radius: 10px ;border-color: #f5c68b;\r\n                                background-color: #f5c68b;\" class=\"btn btn-light gapBtween\" \r\n                                    (click)=\"getAddScreen()\"><i class=\"fa fa-plus-circle\"></i> Add Task</button>\r\n \r\n                    </td>\r\n\r\n                    <td>\r\n                        <!-- data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"  -->\r\n                        <button type=\"button\" class=\"btn btn-primary gapBtween\"   (click)=\"TaskHourReport()\">\r\n                            Task History\r\n                        </button>\r\n\r\n\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n\r\n        </form>\r\n\r\n\r\n        <div class=\"table-responsive\">\r\n\r\n            <table class=\"table table-bordered\" style=\"width: 90%\">\r\n                <thead class=\"table_header\">\r\n                    <tr>\r\n                        <th>S.No</th>\r\n                        <th>Task</th>\r\n                        <th>Labels</th>\r\n                        <th>Status</th>\r\n                        <th>Due Date </th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <ng-container *ngFor=\"let type of EmpTaskObj?.taskLists; index as i\">\r\n                        <tr>\r\n                            <td>{{(EmpTaskObj?.presentpageTask - 1) * EmpTaskObj.pagesize +i+1 }}</td>\r\n                            <td>\r\n                                <div> <span class=\"badge\" [ngClass]=\"'othersColor'\">{{type?.code}}</span> - <span\r\n                                        title=\"{{type?.task}}\"> {{ (type?.task.length>25)?\r\n                                        (type?.task | slice:0:25)+'..':(type.task) }} </span>\r\n                                </div>\r\n                            </td>\r\n\r\n                            <td> <span class=\"badge\" [ngClass]=\"type?.dev_type == 'New' ? 'primarycolor': \r\n                                    type?.dev_type == 'Bug Fix' ? 'othersColor':\r\n                                    type?.dev_type == 'Enhancement' ? 'infoStatement':\r\n                                    type?.dev_type == 'Training' ? 'othersColor': 'othersColor' \">\r\n                                    {{type?.dev_type}}\r\n                                </span> &nbsp;\r\n\r\n                            </td>\r\n                            <td><span class=\"badge\" [ngClass]=\"type?.task_status == 'Completed' ? 'successStatus': \r\n                            type?.task_status == 'Yet to Start' ? 'primarycolor': \r\n                            type?.task_status == 'Verified' ? 'successStatus': \r\n                            type?.task_status == 'Draft' ? 'infoStatement': \r\n                            type?.task_status == 'Work in Progress' ? 'othersColor': \r\n                            type?.task_status == 'Rejected' ? 'redcolor': 'othersColor'    \">\r\n                                    {{type?.task_status}}\r\n                                </span> </td>\r\n\r\n\r\n                            <!-- {id: 1, text: \"New\"} {id: 2, text: \"Bug Fix\"} {id: 3, text: \"Enhancement\"}\r\n                              {id: 4, text: \"Training\"} {id: 5, text: \"BAU Maintenance\"} -->\r\n                            <td>\r\n                                <span> {{type.end_date| date: 'dd-MMM-yyyy'}}\r\n                                </span>\r\n                            </td>\r\n\r\n\r\n                            <td>\r\n                                <span class=\"material-icons\" (click)=\"showPopUp(type); EndDateCalculate(type)\"> visibility\r\n                                </span>\r\n\r\n\r\n                            </td>\r\n\r\n                        </tr>\r\n                        <tr *ngIf=\"type?.DynamicStatusCall == true\">\r\n                            <td colspan=\"10\">\r\n                                <div class=\"marginAndpadding\">\r\n\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-8\">\r\n                                            <h3> <span class=\"badge badge-secondary\">{{type?.code}}</span> -\r\n                                                {{type?.task}} </h3>\r\n                                            <!-- <p class=\"createdby\">By: {{type?.assigned_by?.full_name}} </p> -->\r\n\r\n                                            <div class=\"flexdirection\">\r\n                                                <div class=\"marginsetMiddle\">\r\n                                                    <span class=\"badge badge-pill badge-light\">\r\n                                                        <span class=\"material-icons fontsize alignvertical\">tag</span>\r\n                                                        <span class=\"alignvertical\"> {{type?.client_name}} </span>\r\n                                                        <span\r\n                                                            class=\"material-icons fontsize alignvertical\">arrow_forward_ios</span>\r\n                                                        {{type?.app_id}}\r\n                                                        <span\r\n                                                            class=\"material-icons fontsize alignvertical\">arrow_forward_ios</span>\r\n                                                        <span class=\"alignvertical\"> {{type?.module_id}} </span>\r\n                                                        &nbsp;&nbsp;&nbsp;\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                                <div class=\"marginsetMiddle\">\r\n                                                    <span class=\"badge\"\r\n                                                        [ngClass]=\"type?.task_status == 'Completed' ? 'successStatus': \r\n                                                        type?.task_status == 'Yet to Start' ? 'primarycolor': \r\n                                                        type?.task_status == 'Verified' ? 'successStatus': \r\n                                                        type?.task_status == 'Draft' ? 'infoStatement': \r\n                                                        type?.task_status == 'Work in Progress' ? 'othersColor': \r\n                                                        type?.task_status == 'Rejected' ? 'redcolor': 'othersColor'    \">\r\n                                                        {{type?.task_status}}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"marginsetMiddle\">\r\n                                                    <span class=\"badge\" [ngClass]=\"type?.dev_type == 'New' ? 'primarycolor': \r\n                                                        type?.dev_type == 'Bug Fix' ? 'othersColor':\r\n                                                        type?.dev_type == 'Enhancement' ? 'infoStatement':\r\n                                                        type?.dev_type == 'Training' ? 'othersColor': 'othersColor' \">\r\n                                                        {{type?.dev_type}}\r\n                                                    </span> &nbsp;\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div *ngIf=\"type?.task_status == 'Completed'\">\r\n                                                <br>\r\n                                                <p>Remarks/Reason: <b><i>{{type?.reason_for_delay}}</i></b> </p>\r\n                                                <br>\r\n                                                <p>Delay Days: <button mat-mini-fab [ngClass]=\"type?.delay_days > 0 ? 'redcolor': 'successStatus' \" > {{type?.delay_days}} </button>  </p>\r\n\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <br>\r\n\r\n\r\n                                                <div *ngIf=\"type?.task_status_id == 0\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col\">\r\n                                                            <input readonly placeholder=\"Date\"\r\n                                                                [matDatepicker]=\"dynamic1\" style=\"width: 100px;\"\r\n                                                                [ngModel]=\"type.DynamicDate\"\r\n                                                                (ngModelChange)=\"type.DynamicDate = $event\"\r\n                                                                (dateChange)='ChangeDateFormat(type)'>\r\n                                                            <mat-datepicker-toggle class=\"maticonsize\" matSuffix\r\n                                                                [disabled]=\"type?.task_status == 'Completed'\"\r\n                                                                [for]=\"dynamic1\">\r\n                                                            </mat-datepicker-toggle>\r\n                                                            <mat-datepicker #dynamic1></mat-datepicker>\r\n                                                        </div>\r\n                                                        <div class=\"col\">\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div *ngIf=\"type?.task_status_id == 1\">\r\n                                                    <div class=\"table-responsive timertable\">\r\n                                                        <table class=\"tablestyle\">\r\n                                                            <tr>\r\n                                                                <th>Sl.No</th>\r\n                                                                <th>Task Days</th>\r\n                                                                <th>Hours</th>\r\n                                                                \r\n                                                            </tr>\r\n                                                            <tr *ngFor=\"let dateHours of type?.emp_hours?.hour_data; let index = index\">\r\n                                                                <td>{{index + 1}}</td>\r\n                                                                <td> \r\n                                                                    {{dateHours?.date | date: 'dd-MM-yyyy'}} \r\n                                                                    <ng-container *ngFor=\"let leaves of dateHours?.adt_ref\">\r\n                                                                        <div title=\"{{leaves | uppercase }}\" class=\"radleave\" \r\n                                                                        [ngClass]=\"'othersColor'\">\r\n                                                                            {{leaves == 'absent' ? 'A': leaves == 'weekend' ? 'W': leaves == 'holiday'? 'H': ''}}\r\n                                                                        </div>\r\n                                                                    </ng-container>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <input placeholder=\"Date\" style=\"width: 100px;\"\r\n                                                                        [readOnly]=\"type?.task_status == 'Completed'\"\r\n                                                                        [ngModel]=\"dateHours?.hour\"\r\n                                                                        (ngModelChange)=\"dateHours.hour = $event\">\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <table>\r\n                                                            <tr>\r\n                                                                <td>Actual Date</td>\r\n                                                                <td>\r\n                                                                    {{type?.actual_start_date| date:\r\n                                                                        'dd-MM-yyyy'}} - \r\n                                                                    <input readonly placeholder=\"Date\"\r\n                                                                        [matDatepicker]=\"dynamic2\" style=\"width: 100px;\"\r\n                                                                        [ngModel]=\"type.DynamicDate\"\r\n                                                                        (ngModelChange)=\"type.DynamicDate = $event\"\r\n                                                                        (dateChange)='ChangeDateFormat(type); EndDateCalculate(type)'>\r\n                                                                    <mat-datepicker-toggle class=\"maticonsize\" matSuffix\r\n                                                                        [for]=\"dynamic2\"\r\n                                                                        [disabled]=\"type?.task_status == 'Completed'\">\r\n                                                                    </mat-datepicker-toggle>\r\n                                                                    <mat-datepicker #dynamic2></mat-datepicker>\r\n                                                                </td>\r\n\r\n                                                            </tr>\r\n                                                            <tr>\r\n\r\n                                                                <td colspan=\"100\">\r\n                                                                    <input placeholder=\"Reason / Remarks\"\r\n                                                                        style=\"border: 0; outline: 0;width: 400px\"\r\n                                                                        [readOnly]=\"type?.task_status == 'Completed'\"\r\n                                                                        [ngModel]=\"type?.reason_for_delay\"\r\n                                                                        (ngModelChange)=\"type.reason_for_delay = $event\">\r\n                                                                </td>\r\n\r\n\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <br>\r\n                                                    <button type=\"button\" class=\"btn btn-primary gapBtween\"\r\n                                                        *ngIf=\"type?.task_status_id == 0\"\r\n                                                        (click)=\"ChaneStatus(1, type)\">Open</button>\r\n                                                    <button type=\"button\" class=\"btn btn-success gapBtween\"\r\n                                                        *ngIf=\"type?.task_status_id == 1\"\r\n                                                        (click)=\"ChaneStatus(2, type)\">Complete</button>\r\n                                                    <button type=\"button\" class=\"btn btn-secondary gapBtween\"\r\n                                                        *ngIf=\"type?.task_status_id == 1\"\r\n                                                        (click)=\"UpdateTask(type)\">Update</button>\r\n\r\n                                                    <button type=\"button\" class=\"btn btn-warning gapBtween\"\r\n                                                        *ngIf=\"type?.task_status_id == 1 \"\r\n                                                        (click)=\"ChaneStatus(3, type)\">Hold</button>\r\n                                                    <button type=\"button\" class=\"btn btn-primary gapBtween\"\r\n                                                        *ngIf=\"type?.task_status_id == 3 \"\r\n                                                        (click)=\"ChaneStatus(1, type)\">Reopen\r\n                                                    </button>\r\n\r\n                                                    <button type=\"button\" class=\"btn btn-secondary gapBtween\"\r\n                                                        (click)=\"showPopUp(type)\">Close\r\n                                                    </button>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        <div class=\"col-sm-4 col-md-4 col-lg-4\">\r\n                                            <div class=\"centerOfList\">\r\n\r\n                                                <ul class=\"list-group\">\r\n\r\n                                                    <li class=\"list-group-item\">\r\n                                                        <b>Assigned by:</b> {{type?.assigned_by?.full_name}}\r\n                                                    </li>\r\n                                                    <li class=\"list-group-item\"><b>Head/Lead:</b>\r\n                                                        {{type?.unit_head?.full_name}}/{{type?.team_lead?.full_name}}\r\n                                                    </li>\r\n                                                    <li class=\"list-group-item\"><b>Planned Date:</b> {{type?.start_date\r\n                                                        |\r\n                                                        date: 'dd-MM-yyyy'}} - {{type?.end_date| date:\r\n                                                        'dd-MM-yyyy'}}</li>\r\n                                                    <li class=\"list-group-item\"\r\n                                                        *ngIf=\"type?.actual_start_date != 'None'\">\r\n\r\n\r\n                                                        <b>Actual Date:</b> {{type?.actual_start_date| date:\r\n                                                        'dd-MM-yyyy'}}\r\n                                                        <span *ngIf=\"type?.actual_end_date != 'None'\"> -\r\n                                                            {{type?.actual_end_date| date: 'dd-MM-yyyy'}} </span>\r\n                                                    </li>\r\n                                                    <li class=\"list-group-item\">\r\n                                                        <b> Total: </b> {{type?.hours == 'None' ? '0': type?.hours}} hrs\r\n                                                    </li>\r\n\r\n                                                    <li class=\"list-group-item\" *ngIf=\"type?.task_status != 'Completed'\"\r\n                                                        [ngClass]=\"type?.DynamicDelayDaysCount > 0 ? 'bgAlertColor': ''\">\r\n                                                        <b>Delay Days: </b>\r\n                                                        <span class=\"blinks\"> {{type?.DynamicDelayDaysCount > 0 ?\r\n                                                            type?.DynamicDelayDaysCount: 0 }} </span>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n            <div *ngIf=\"EmpTaskObj.taskLists?.length == 0; else leavereqpage\" style=\"margin-left: 42%;\">\r\n                <h3>No Records Found.. </h3>\r\n            </div>\r\n            <ng-template #leavereqpage>\r\n                <div class=\"col-sm-12\" style=\"font-size: small;text-align: right; margin-bottom: 50px;\">\r\n                    <button mat-icon-button [disabled]=\"EmpTaskObj?.hasPreviousTask === false\" color=\"primary\"\r\n                        (click)=\"TaskSearch('previous')\">\r\n                        <mat-icon>arrow_back</mat-icon>\r\n                    </button>\r\n                    {{EmpTaskObj?.presentpageTask}}\r\n                    <button mat-icon-button [disabled]=\"EmpTaskObj?.hasNextTask === false\" color=\"primary\"\r\n                        (click)=\"TaskSearch('next')\">\r\n                        <mat-icon>arrow_forward</mat-icon>\r\n                    </button>\r\n                </div>\r\n            </ng-template>\r\n\r\n\r\n        </div>\r\n\r\n        <!-- Modal -->\r\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n            aria-hidden=\"true\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <!-- SelectedHourDate -->\r\n                        <div>\r\n                            <mat-label>Date</mat-label><br>\r\n                            <mat-form-field>\r\n                                <input matInput readonly [matDatepicker]=\"pickerSingle\" [formControl]=\"SelectedHourDate\"\r\n                                    (dateChange)=\"ChangeDateFormatCommon('EmpTaskSummary', 'end_date', '')\">\r\n                                <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"pickerSingle\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #pickerSingle></mat-datepicker>\r\n                            </mat-form-field>\r\n\r\n                            <button class=\"btn btn-light ml-50\" id=\"WhiteBtn\" (click)=\"getTaskHours()\">Choose</button>\r\n                        </div>\r\n                        <!-- <pre>{{SelectedHourDate.value}}</pre> -->\r\n\r\n\r\n                        <cdk-accordion class=\"example-accordion\">\r\n                            <cdk-accordion-item\r\n                                *ngFor=\"let item of this.EmpTaskObj.SelectedHoursList; let index = index;\"\r\n                                #accordionItem=\"cdkAccordionItem\" class=\"example-accordion-item\" role=\"button\"\r\n                                tabindex=\"0\" [attr.id]=\"'accordion-header-' + index\"\r\n                                [attr.aria-expanded]=\"accordionItem.expanded\"\r\n                                [attr.aria-controls]=\"'accordion-body-' + index\">\r\n                                <div class=\"example-accordion-item-header\"\r\n                                    (click)=\"accordionItem.toggle(); getdataForSelectedDate(item)\">\r\n                                    {{ item| date: 'dd-MM-yyyy' }}\r\n                                    <span class=\"example-accordion-item-description material-icons fontsizeicons\">\r\n                                        {{ accordionItem.expanded ? 'expand_less' : 'expand_more' }}\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"example-accordion-item-body\" role=\"region\"\r\n                                    [style.display]=\"accordionItem.expanded ? '' : 'none'\"\r\n                                    [attr.id]=\"'accordion-body-' + index\"\r\n                                    [attr.aria-labelledby]=\"'accordion-header-' + index\">\r\n\r\n                                    <h4>Task Details </h4>\r\n                                    <ng-container *ngFor=\"let datadate of EmpTaskObj?.taskHourList\">\r\n                                        <ul class=\"list-group\" *ngFor=\"let datatask of datadate?.task\">\r\n                                            <li\r\n                                                class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n\r\n                                                <p><span class=\"badge badge-secondary\">{{datatask?.code}}</span>\r\n                                                    {{datatask?.desc}} </p>\r\n                                                <span\r\n                                                    class=\"badge badge-primary badge-pill align-items-right\">{{datatask?.hours}}</span>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ng-container>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </cdk-accordion-item>\r\n                        </cdk-accordion>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"EmpTaskObj.EmpTaskCreate\">\r\n\r\n    <app-emptask-create (OnSubmit)=\"SubmitbackToSummary()\" (OnCancel)=\"CancelbackToSummary()\"></app-emptask-create>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"EmpTaskObj.EmpHoursHistory\">\r\n    <h3 (click)=\"BackToSummary()\"> <span class=\"material-icons alignmiddle\">arrow_back</span> Time Sheet</h3>\r\n\r\n    <!-- <app-time-sheet (OnCancel)=\"CancelbackToSummaryReport()\"></app-time-sheet> -->\r\n    <app-time-sheet ></app-time-sheet>\r\n\r\n\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}