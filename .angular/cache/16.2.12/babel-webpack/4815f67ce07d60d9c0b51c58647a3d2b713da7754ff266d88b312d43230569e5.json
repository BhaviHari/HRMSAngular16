{"ast":null,"code":"import { formatDate } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { NativeDateAdapter } from '@angular/material/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/notification.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../master-hrms.service\";\nimport * as i5 from \"src/app/service/error-handling-service.service\";\nimport * as i6 from \"ngx-spinner\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../../shared-hrms.service\";\nimport * as i9 from \"../../attendance-master-service.service\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/core\";\nimport * as i15 from \"@angular/material/autocomplete\";\nimport * as i16 from \"@angular/material/datepicker\";\nimport * as i17 from \"../../EMPData/employee-info/employee-info.component\";\nconst _c0 = [\"designauto\"];\nconst _c1 = [\"designInput\"];\nconst _c2 = [\"branchinfo\"];\nconst _c3 = [\"branchInput\"];\nconst _c4 = [\"bsinfo\"];\nconst _c5 = [\"bsInput\"];\nconst _c6 = [\"ccinfo\"];\nconst _c7 = [\"ccInput\"];\nconst _c8 = [\"pincodeinfo\"];\nconst _c9 = [\"pincodeInput\"];\nconst _c10 = [\"cityinfo\"];\nconst _c11 = [\"cityInput\"];\nconst _c12 = [\"districtinfo\"];\nconst _c13 = [\"districtInput\"];\nconst _c14 = [\"stateinfo\"];\nconst _c15 = [\"stateInput\"];\nconst _c16 = [\"condesigninfo\"];\nconst _c17 = [\"condesignInput\"];\nconst _c18 = [\"hierarchyinfo\"];\nconst _c19 = [\"hirarchyInput\"];\nconst _c20 = [\"deptinfo\"];\nconst _c21 = [\"deptInput\"];\nconst _c22 = [\"superinfo\"];\nconst _c23 = [\"superInput\"];\nfunction TrackemployeeComponent_div_0_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r12.full_name, \" \");\n  }\n}\nfunction TrackemployeeComponent_div_0_tr_53_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_tr_53_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const emp_r13 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.getemployeecomment(emp_r13.employee_id.id));\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"view_list\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"td\")(19, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_tr_53_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const emp_r13 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.getemployeelog(emp_r13));\n    });\n    i0.ɵɵelementStart(20, \"mat-icon\");\n    i0.ɵɵtext(21, \"visibility\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_tr_53_Template_button_click_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const emp_r13 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.getemployeelog(emp_r13));\n    });\n    i0.ɵɵelement(24, \"i\", 46);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const emp_r13 = ctx.$implicit;\n    const empindex_r14 = ctx.index;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((ctx_r8.presentpageEmployee - 1) * 10 + empindex_r14 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r13 == null ? null : emp_r13.employee_id == null ? null : emp_r13.employee_id.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r13 == null ? null : emp_r13.employee_id == null ? null : emp_r13.employee_id.full_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 6, emp_r13 == null ? null : emp_r13.log_date, \"MMM d, y\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(emp_r13 == null ? null : emp_r13.tracker[0] == null ? null : emp_r13.tracker[0].remarks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emp_r13 == null ? null : emp_r13.tracker[(emp_r13 == null ? null : emp_r13.tracker == null ? null : emp_r13.tracker.length) - 1] == null ? null : emp_r13.tracker[(emp_r13 == null ? null : emp_r13.tracker == null ? null : emp_r13.tracker.length) - 1].remarks);\n  }\n}\nfunction TrackemployeeComponent_div_0_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtext(1, \"No Records Found...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrackemployeeComponent_div_0_ng_template_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_ng_template_55_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.paginationsearch(\"previous\"));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"arrow_back\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_ng_template_55_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r21.paginationsearch(\"next\"));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"arrow_forward\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r11.has_previousEmployee === false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.presentpageEmployee, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r11.has_nextEmployee === false);\n  }\n}\nfunction TrackemployeeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"h2\");\n    i0.ɵɵtext(2, \"Employee Track Summary\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 21)(4, \"div\", 22)(5, \"div\", 23)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Employee Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"mat-form-field\", 24);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_Template_mat_form_field_click_9_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.ShiftMappingEmployeeget(\"\"));\n    });\n    i0.ɵɵelementStart(10, \"input\", 25);\n    i0.ɵɵlistener(\"keyup\", function TrackemployeeComponent_div_0_Template_input_keyup_10_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.ShiftMappingEmployeeget(ctx_r24.EmployeeSummarySearch.value.codename));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 26, 27);\n    i0.ɵɵtemplate(13, TrackemployeeComponent_div_0_mat_option_13_Template, 2, 2, \"mat-option\", 28);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 23)(15, \"mat-label\");\n    i0.ɵɵtext(16, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵelementStart(18, \"mat-form-field\");\n    i0.ɵɵelement(19, \"input\", 29)(20, \"mat-datepicker-toggle\", 30)(21, \"mat-datepicker\", 31, 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 33)(24, \"div\", 34)(25, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.serviceCallEmployeeSummary(ctx_r25.presentpageEmployee = 1));\n    });\n    i0.ɵɵelementStart(26, \"mat-icon\");\n    i0.ɵɵtext(27, \"search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function TrackemployeeComponent_div_0_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.resetEmployee());\n    });\n    i0.ɵɵtext(29, \"Clear\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(30, \"div\", 37)(31, \"table\", 38)(32, \"thead\", 39)(33, \"tr\")(34, \"th\");\n    i0.ɵɵtext(35, \"S.No\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"th\");\n    i0.ɵɵtext(37, \"Employee Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"th\");\n    i0.ɵɵtext(39, \"Employee Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"th\");\n    i0.ɵɵtext(41, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"th\");\n    i0.ɵɵtext(43, \"Location St.point\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"th\");\n    i0.ɵɵtext(45, \"Location Ed.point\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"th\");\n    i0.ɵɵtext(47, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"th\");\n    i0.ɵɵtext(49, \"View Route\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"th\");\n    i0.ɵɵtext(51, \"View\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(52, \"tbody\");\n    i0.ɵɵtemplate(53, TrackemployeeComponent_div_0_tr_53_Template, 25, 9, \"tr\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(54, TrackemployeeComponent_div_0_div_54_Template, 2, 0, \"div\", 40);\n    i0.ɵɵtemplate(55, TrackemployeeComponent_div_0_ng_template_55_Template, 8, 3, \"ng-template\", null, 41, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(12);\n    const _r7 = i0.ɵɵreference(22);\n    const _r10 = i0.ɵɵreference(56);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.EmployeeSummarySearch);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matAutocomplete\", _r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"displayWith\", ctx_r0.displayShiftmapping);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.employeesearchdata);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"matDatepicker\", _r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r7);\n    i0.ɵɵadvance(33);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.EmployeeList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.EmployeeList == null ? null : ctx_r0.EmployeeList.length) == 0 || ctx_r0.EmployeeList == undefined)(\"ngIfElse\", _r10);\n  }\n}\nfunction TrackemployeeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-employee-info\", 50);\n    i0.ɵɵlistener(\"backToSummary\", function TrackemployeeComponent_div_1_Template_app_employee_info_backToSummary_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.backSummary());\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TrackemployeeComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 51)(2, \"span\", 52);\n    i0.ɵɵtext(3, \"Date : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 51)(8, \"span\", 52);\n    i0.ɵɵtext(9, \"Time : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\", 51)(14, \"span\", 52);\n    i0.ɵɵtext(15, \"Location : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const point_r29 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(6, 3, point_r29 == null ? null : point_r29.log_time, \"dd-MMM-yyyy\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(12, 6, point_r29 == null ? null : point_r29.log_time, \"h:mm:ss a\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(point_r29 == null ? null : point_r29.remarks);\n  }\n}\nfunction TrackemployeeComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53)(1, \"div\", 54)(2, \"div\", 22)(3, \"div\", 55);\n    i0.ɵɵelement(4, \"img\", 56);\n    i0.ɵɵelementStart(5, \"p\", 57);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 58)(9, \"p\")(10, \"a\", 59)(11, \"strong\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(13, \"div\", 60);\n    i0.ɵɵelementStart(14, \"p\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const cmt_r31 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 3, cmt_r31.created_date, \"MMM d, y, h:mm:ss a\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(cmt_r31 == null ? null : cmt_r31.employee_id == null ? null : cmt_r31.employee_id.full_name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cmt_r31 == null ? null : cmt_r31.note);\n  }\n}\nfunction TrackemployeeComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 61)(1, \"p\");\n    i0.ɵɵtext(2, \"No Comments\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport const PICK_FORMATS = {\n  parse: {\n    dateInput: {\n      month: 'short',\n      year: 'numeric',\n      day: 'numeric'\n    }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nclass PickDateAdapter extends NativeDateAdapter {\n  format(date, displayFormat) {\n    if (displayFormat === 'input') {\n      return formatDate(date, 'dd-MMM-yyyy', this.locale);\n    } else {\n      return date.toDateString();\n    }\n  }\n}\nexport class TrackemployeeComponent {\n  fb;\n  notify;\n  datepipe;\n  masterservice;\n  error;\n  SpinnerService;\n  route;\n  share;\n  attendanceService;\n  points = [];\n  currentPos = [];\n  employeecomments = [];\n  employeesearchdata;\n  constructor(fb, notify, datepipe, masterservice, error, SpinnerService, route, share, attendanceService\n  // private apis: MasterServicesService\n  ) {\n    this.fb = fb;\n    this.notify = notify;\n    this.datepipe = datepipe;\n    this.masterservice = masterservice;\n    this.error = error;\n    this.SpinnerService = SpinnerService;\n    this.route = route;\n    this.share = share;\n    this.attendanceService = attendanceService;\n  }\n  EmployeeSummarySearch;\n  createemploys;\n  EmployeeSummaryPart = true;\n  EmployeeViewPart = false;\n  minLength = 10;\n  maxLength = 10;\n  today = new Date();\n  // points=[\n  //   {\n  //     lat: 12.973880208109474,\n  //     lng:  80.24956391195023\n  //   },\n  //   {\n  //     lat: 12.97367005517881,\n  //     lng:  80.24961555640975,\n  //   },\n  //   {\n  //     lat: 12.973433385294094,\n  //     lng:  80.24982146744344,\n  //   },\n  //   {\n  //     lat: 12.972479741434496,\n  //     lng:  80.2496513974263\n  //   },\n  //   {\n  //     lat: 12.97195278670074,\n  //     lng:  80.24910906273227\n  //   }\n  // ]\n  // currentPos = {\n  //   lat:  12.973880208109474,\n  //   lng:  80.24956391195023\n  // }\n  employeelistpagination = {\n    has_next: true,\n    has_false: true,\n    index: 1\n  };\n  ngOnInit() {\n    this.EmployeeSummarySearch = this.fb.group({\n      codename: '',\n      logdate: ''\n    });\n    this.createemploys = this.fb.group({\n      'code': new FormControl('', Validators.required),\n      'name': new FormControl('', Validators.required),\n      'dob': new FormControl(''),\n      'doj': new FormControl(''),\n      'gender': new FormControl(''),\n      'employeetype': new FormControl(''),\n      'designation': new FormControl(''),\n      'mobilenumber': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\n      'emailid': new FormControl('', [Validators.email]),\n      // 'supervisor':new FormControl(''),\n      // 'hierarchy':new FormControl(''),\n      'branch': new FormControl(''),\n      // 'bsname':new FormControl(''),\n      // 'ccname':new FormControl(''),\n      'line1': new FormControl(''),\n      'line2': new FormControl(''),\n      'line3': new FormControl(''),\n      'pincode': new FormControl(''),\n      'city': new FormControl(''),\n      'district': new FormControl(''),\n      'state': new FormControl(''),\n      'contacttype': new FormControl(''),\n      'personname': new FormControl(''),\n      'condesignation': new FormControl(''),\n      'landline1': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\n      'landline2': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\n      'contactnumber': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\n      'contactnumber2': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\n      'conemailid': new FormControl('', [Validators.email]),\n      'condob': new FormControl(''),\n      'conwedday': new FormControl('')\n    });\n    // this.EmployeeSearch('')\n    this.serviceCallEmployeeSummary(this.presentpageEmployee = 1);\n  }\n  EmployeeList;\n  has_nextEmployee;\n  has_previousEmployee;\n  presentpageEmployee = 1;\n  onSubmit = new EventEmitter();\n  onCancel = new EventEmitter();\n  autocompleteTrigger;\n  matdesign;\n  designinput;\n  matbranch;\n  branchinput;\n  matbsdata;\n  bsinput;\n  matccdata;\n  ccinput;\n  matpincode;\n  pincodeinput;\n  matcity;\n  cityinput;\n  matdistrict;\n  districtinput;\n  matstate;\n  stateinput;\n  matcondesign;\n  condesigninput;\n  mathierchy;\n  hierarchyinput;\n  matdept;\n  deptinput;\n  matsuper;\n  superinput;\n  isLoading = false;\n  designationlist = [];\n  hiearchylist = [];\n  bsdatalist = [];\n  ccdatalist = [];\n  branchdatalist = [];\n  pincodelist = [];\n  citylist = [];\n  districtlist = [];\n  statelist = [];\n  codedesignationlist = [];\n  employeetypelist = [];\n  hierarchylist = [];\n  supervisorlist = [];\n  designpage = 1;\n  has_designpre = false;\n  has_designnext = false;\n  date = new Date();\n  has_bsnxt = true;\n  has_bspre = false;\n  has_bspage = 1;\n  has_ccnxt = true;\n  has_ccpre = false;\n  has_ccpage = 1;\n  has_branchnxt = true;\n  has_bracchpre = false;\n  has_branchpage = 1;\n  has_pincodenxt = true;\n  has_pincodepre = false;\n  has_pincodepage = 1;\n  has_citynxt = true;\n  has_citypre = false;\n  has_citypage = 1;\n  has_districtnxt = true;\n  has_districtpre = false;\n  has_districtpage = 1;\n  has_statenxt = true;\n  has_statepre = false;\n  has_statepage = 1;\n  has_hiernxt = true;\n  has_hierpre = false;\n  has_hierpage = 1;\n  has_deptnxt = true;\n  has_deptpre = false;\n  has_deptpage = 1;\n  has_supernxt = true;\n  has_superpre = false;\n  has_superpage = 1;\n  serviceCallEmployeeSummary(page) {\n    // let datas = this.apis.Employee_Search_Summary(search, pageno)\n    // console.log(\"data summary employee APIS\", datas)\n    let emp = this.EmployeeSummarySearch.value.codename?.id ? this.EmployeeSummarySearch.value.codename?.id : '';\n    let date = this.EmployeeSummarySearch.value.logdate != '' ? this.datepipe.transform(this.EmployeeSummarySearch.value.logdate, 'yyyy-MM-dd') : '';\n    console.log('date', this.EmployeeSummarySearch.value.logdate);\n    this.SpinnerService.show();\n    this.masterservice.getemployeetrackdetails(emp, date, page).subscribe(result => {\n      this.SpinnerService.hide();\n      console.log(\"Employee summary\", result);\n      // this.EmployeeList = result['data']\n      this.EmployeeList = result['data'];\n      let dataPagination = result['pagination'];\n      if (this.EmployeeList.length > 0) {\n        this.has_nextEmployee = dataPagination.has_next;\n        this.has_previousEmployee = dataPagination.has_previous;\n        this.presentpageEmployee = dataPagination.index;\n      }\n    }, error => {\n      this.error.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  paginationsearch(value) {\n    value == 'next' ? this.serviceCallEmployeeSummary(this.presentpageEmployee + 1) : this.serviceCallEmployeeSummary(this.presentpageEmployee - 1);\n  }\n  getemployeelog(emp) {\n    this.SpinnerService.show();\n    const now = emp?.log_date;\n    // console.log(now.toISOString().slice(0, 10));\n    // let date=now.toISOString().slice(0, 10)\n    let date = this.datepipe.transform(emp?.log_date, 'yyyy-MM-dd');\n    this.masterservice.emplevellogdata(emp?.employee_id.id, date).subscribe(result => {\n      console.log(\"Employee summary\", result['data']);\n      // this.EmployeeList = result['data']\n      this.points = result?.data[0];\n      this.points = this.points?.tracker;\n      // this.getemployeetrackdetails(this.points)\n      this.currentPos = this.points[0];\n      console.log('test', this.points);\n      this.SpinnerService.hide();\n    }, error => {\n      this.error.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  EmployeeSearch(hint) {\n    let search = this.EmployeeSummarySearch.value;\n    let obj = {\n      codename: search?.codename\n    };\n    console.log(\"obj data b4 api\", obj);\n    for (let i in obj) {\n      if (obj[i] == undefined || obj[i] == null) {\n        obj[i] = '';\n      }\n    }\n    // this.SpinnerService.show();\n    // if (hint == 'next') {\n    //   this.serviceCallEmployeeSummary(obj, this.presentpageEmployee + 1, 10)\n    // }\n    // else if (hint == 'previous') {\n    //   this.serviceCallEmployeeSummary(obj, this.presentpageEmployee - 1, 10)\n    // }\n    // else {\n    //   this.serviceCallEmployeeSummary(obj, 1, 10)\n    // }\n  }\n  resetEmployee() {\n    this.EmployeeSummarySearch.patchValue({\n      logdate: '',\n      codename: ''\n    });\n    this.serviceCallEmployeeSummary(this.presentpageEmployee = 1);\n  }\n  // AddEmployee() {\n  //   // this.route.navigate(['hrms/employeeInfo'])\n  //   // return true \n  //   this.EmployeeCreateFormpart = true\n  //   this.EmployeeSummaryPart = false\n  //   this.EmployeeViewPart = false \n  // }\n  getdatadesignation(data) {\n    return data ? data.name : undefined;\n  }\n  getdatabranch(data) {\n    return data ? data.name : undefined;\n  }\n  getbsdatainterface(data) {\n    return data ? data.name : undefined;\n  }\n  gerccdatainterface(data) {\n    return data ? data.name : undefined;\n  }\n  getpincodeinterface(data) {\n    return data ? data.no : undefined;\n  }\n  getcityinterface(data) {\n    return data ? data.name : undefined;\n  }\n  getdistrictinterface(data) {\n    return data ? data.name : undefined;\n  }\n  getstateinterface(data) {\n    return data ? data.name : undefined;\n  }\n  gethierarchyinterface(data) {\n    return data ? data.layer : undefined;\n  }\n  getdepartmentinterface(data) {\n    return data ? data.name : undefined;\n  }\n  getsupervisorinterface(data) {\n    return data ? data.full_name : undefined;\n  }\n  //////////////////////////////////////////////////////////////// Designation \n  getdesignation(data) {\n    let dataDes = data;\n    this.masterservice.getDesignationList(dataDes, 1).subscribe(data => {\n      this.designationlist = data['data'];\n    });\n  }\n  getbranchsdata(data) {\n    let searchBranch = data;\n    this.masterservice.getbranchdatafilter(searchBranch, 1).subscribe(data => {\n      this.branchdatalist = data['data'];\n    });\n  }\n  getbsdata(data) {\n    let bssearch = data;\n    this.masterservice.getbsdatafilter(bssearch, 1).subscribe(data => {\n      this.bsdatalist = data['data'];\n    });\n  }\n  getccdata(bs, cc) {\n    if (bs == null || bs == '' || bs == undefined) {\n      this.notify.showWarning(\"Please fill BS\");\n      return false;\n    }\n    this.masterservice.getccdatafilter(bs, cc, 1).subscribe(data => {\n      this.ccdatalist = data['data'];\n    });\n  }\n  getpincodedata(data) {\n    let searchdata = data;\n    this.masterservice.getPinCodeDropDownscroll(searchdata, 1).subscribe(data => {\n      this.pincodelist = data['data'];\n    });\n  }\n  getpinlistfocus(data) {\n    console.log(data);\n    this.createemploys.get('city').patchValue(data['city']);\n    this.createemploys.get('district').patchValue(data['district']);\n    this.createemploys.get('state').patchValue(data['state']);\n  }\n  getcityfocus(data) {\n    console.log(data);\n    this.createemploys.get('pincode').patchValue(data['pincode']);\n    this.createemploys.get('district').patchValue(data['district']);\n    this.createemploys.get('state').patchValue(data['state']);\n  }\n  getcitydata(data) {\n    let searchData = data;\n    this.masterservice.getCityDropDownscroll(searchData, 1).subscribe(data => {\n      this.citylist = data['data'];\n    });\n  }\n  getdistrictdata(data) {\n    let searchData = data;\n    this.masterservice.getDistrictList(searchData, 'asc', 1, 10).subscribe(data => {\n      this.districtlist = data['data'];\n    });\n  }\n  getstatedata(data) {\n    let searchData = data;\n    this.masterservice.getStateList(searchData, 'asc', 1, 10).subscribe(data => {\n      this.statelist = data['data'];\n    });\n  }\n  gethierarchydata(data) {\n    let searchHirachy = data;\n    this.masterservice.getHierarchyList(\"\", 'asc', 1, searchHirachy).subscribe(data => {\n      this.hierarchylist = data['data'];\n    });\n  }\n  ///////////////////////////////////////////////////////////////////////Employee Type \n  getEmployeedepartmentdata(data) {\n    let dataEmp = data;\n    this.masterservice.getlistdepartment(dataEmp, 1).subscribe(results => {\n      this.employeetypelist = results['data'];\n    });\n  }\n  getsupervisorlist(data) {\n    let searchdata = data;\n    this.masterservice.getlistdepartmentsenoor(1, searchdata).subscribe(data => {\n      this.supervisorlist = data['data'];\n    });\n  }\n  autocompleteDeptScrolldesign() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matdesign &&\n    //     this.autocompleteTrigger &&\n    //     this.matdesign.panel\n    //   ) {\n    //     fromEvent(this.matdesign.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matdesign.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matdesign.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matdesign.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matdesign.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_designnext === true) {\n    //             this.masterservice.getDesignationList('','asc',this.designpage+1,this.designinput.nativeElement.value)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.designationlist = this.designationlist.concat(datas);\n    //                 if (this.designationlist.length >= 0) {\n    //                   this.has_designnext = datapagination.has_next;\n    //                   this.has_designpre = datapagination.has_previous;\n    //                   this.designpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteDeptScrollbranch() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matbranch &&\n    //     this.autocompleteTrigger &&\n    //     this.matbranch.panel\n    //   ) {\n    //     fromEvent(this.matbranch.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matbranch.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matbranch.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matbranch.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matbranch.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_branchnxt === true) {\n    //             this.masterservice.getbranchdatafilter(this.branchinput.nativeElement.value,this.has_branchpage+1)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.branchdatalist = this.branchdatalist.concat(datas);\n    //                 if (this.branchdatalist.length >= 0) {\n    //                   this.has_branchnxt = datapagination.has_next;\n    //                   this.has_bracchpre = datapagination.has_previous;\n    //                   this.has_branchpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollbs() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matbsdata &&\n    //     this.autocompleteTrigger &&\n    //     this.matbsdata.panel\n    //   ) {\n    //     fromEvent(this.matbsdata.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matbsdata.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matbsdata.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matbsdata.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matbsdata.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_branchnxt === true) {\n    //             this.masterservice.getbsdatafilter(this.bsinput.nativeElement.value,this.has_bspage+1)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.bsdatalist = this.bsdatalist.concat(datas);\n    //                 if (this.bsdatalist.length >= 0) {\n    //                   this.has_bsnxt = datapagination.has_next;\n    //                   this.has_bspre = datapagination.has_previous;\n    //                   this.has_bspage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollpincode() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matpincode &&\n    //     this.autocompleteTrigger &&\n    //     this.matpincode.panel\n    //   ) {\n    //     fromEvent(this.matpincode.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matpincode.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matpincode.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matpincode.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matpincode.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_pincodenxt === true) {\n    //             this.masterservice.getPinCodeDropDownscroll(this.pincodeinput.nativeElement.value,this.has_pincodepage+1)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.pincodelist = this.pincodelist.concat(datas);\n    //                 if (this.pincodelist.length >= 0) {\n    //                   this.has_pincodenxt = datapagination.has_next;\n    //                   this.has_pincodepre = datapagination.has_previous;\n    //                   this.has_pincodepage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollcity() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matcity &&\n    //     this.autocompleteTrigger &&\n    //     this.matcity.panel\n    //   ) {\n    //     fromEvent(this.matcity.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matcity.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matcity.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matcity.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matcity.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_citynxt === true) {\n    //             this.masterservice.getCityDropDownscroll(this.cityinput.nativeElement.value,this.has_citypage+1)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.citylist = this.citylist.concat(datas);\n    //                 if (this.citylist.length >= 0) {\n    //                   this.has_citynxt = datapagination.has_next;\n    //                   this.has_citypre = datapagination.has_previous;\n    //                   this.has_citypage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrolldistrict() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matdistrict &&\n    //     this.autocompleteTrigger &&\n    //     this.matdistrict.panel\n    //   ) {\n    //     fromEvent(this.matdistrict.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matdistrict.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matdistrict.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matdistrict.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matdistrict.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_districtnxt === true) {\n    //             this.masterservice.getDistrictList('','asc',this.has_districtpage+1,10)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.districtlist = this.districtlist.concat(datas);\n    //                 if (this.districtlist.length >= 0) {\n    //                   this.has_districtnxt = datapagination.has_next;\n    //                   this.has_districtpre = datapagination.has_previous;\n    //                   this.has_districtpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollstate() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matstate &&\n    //     this.autocompleteTrigger &&\n    //     this.matstate.panel\n    //   ) {\n    //     fromEvent(this.matstate.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matstate.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matstate.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matstate.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matstate.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_statenxt === true) {\n    //             this.masterservice.getStateList('','asc',this.has_statepage+1,10)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.statelist = this.statelist.concat(datas);\n    //                 if (this.statelist.length >= 0) {\n    //                   this.has_statenxt = datapagination.has_next;\n    //                   this.has_statepre = datapagination.has_previous;\n    //                   this.has_statepage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollhierarchy() {\n    // setTimeout(() => {\n    //   if (\n    //     this.mathierchy &&\n    //     this.autocompleteTrigger &&\n    //     this.mathierchy.panel\n    //   ) {\n    //     fromEvent(this.mathierchy.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.mathierchy.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.mathierchy.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.mathierchy.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.mathierchy.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_hiernxt === true) {\n    //             this.masterservice.getHierarchyList(\"\",'asc', this.has_hierpage+1, this.hierarchyinput.nativeElement.value)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.hierarchylist = this.hierarchylist.concat(datas);\n    //                 if (this.hierarchylist.length >= 0) {\n    //                   this.has_hiernxt = datapagination.has_next;\n    //                   this.has_hierpre = datapagination.has_previous;\n    //                   this.has_hierpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrolldept() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matdept &&\n    //     this.autocompleteTrigger &&\n    //     this.matdept.panel\n    //   ) {\n    //     fromEvent(this.matdept.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matdept.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matdept.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matdept.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matdept.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_deptnxt === true) {\n    //             this.masterservice.getlistdepartment(this.has_deptpage+1,this.deptinput.nativeElement.value)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.employeetypelist = this.employeetypelist.concat(datas);\n    //                 if (this.employeetypelist.length >= 0) {\n    //                   this.has_deptnxt = datapagination.has_next;\n    //                   this.has_deptpre = datapagination.has_previous;\n    //                   this.has_deptpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  autocompleteScrollsuper() {\n    // setTimeout(() => {\n    //   if (\n    //     this.matsuper &&\n    //     this.autocompleteTrigger &&\n    //     this.matsuper.panel\n    //   ) {\n    //     fromEvent(this.matsuper.panel.nativeElement, 'scroll')\n    //       .pipe(\n    //         map(x => this.matsuper.panel.nativeElement.scrollTop),\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\n    //       )\n    //       .subscribe(x => {\n    //         const scrollTop = this.matsuper.panel.nativeElement.scrollTop;\n    //         const scrollHeight = this.matsuper.panel.nativeElement.scrollHeight;\n    //         const elementHeight = this.matsuper.panel.nativeElement.clientHeight;\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n    //         if (atBottom) {\n    //           if (this.has_supernxt === true) {\n    //             this.masterservice.getEmployee('','asc', this.has_superpage+1,10)\n    //               .subscribe((results: any[]) => {\n    //                 let datas = results[\"data\"];\n    //                 let datapagination = results[\"pagination\"];\n    //                 this.supervisorlist = this.supervisorlist.concat(datas);\n    //                 if (this.supervisorlist.length >= 0) {\n    //                   this.has_supernxt = datapagination.has_next;\n    //                   this.has_superpre = datapagination.has_previous;\n    //                   this.has_superpage = datapagination.index;\n    //                 }\n    //               })\n    //           }\n    //         }\n    //       });\n    //   }\n    // });\n  }\n  keypress(event) {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n  employeecreatedata() {\n    console.log(this.createemploys.value);\n    if (this.createemploys.get('code').value.trim() == '' || this.createemploys.get('code').value == null || this.createemploys.get('code').value == undefined) {\n      this.notify.showError('Please Select The Code');\n      return false;\n    }\n    if (this.createemploys.get('name').value.trim() == '' || this.createemploys.get('name').value == null || this.createemploys.get('name').value == undefined) {\n      this.notify.showError('Please Select The Name');\n      return false;\n    }\n    if (this.createemploys.get('dob').value == '' || this.createemploys.get('dob').value == null || this.createemploys.get('dob').value == undefined) {\n      this.notify.showError('Please Select The DOB');\n      return false;\n    }\n    if (this.createemploys.get('doj').value == '' || this.createemploys.get('doj').value == null || this.createemploys.get('doj').value == undefined) {\n      this.notify.showError('Please Select The Date Of Joining');\n      return false;\n    }\n    if (this.createemploys.get('gender').value == '' || this.createemploys.get('gender').value == null || this.createemploys.get('gender').value == undefined) {\n      this.notify.showError('Please Select The Gender');\n      return false;\n    }\n    if (this.createemploys.get('employeetype').value == '' || this.createemploys.get('employeetype').value.id == null || this.createemploys.get('employeetype').value.id == undefined) {\n      this.notify.showError('Please Select The Department');\n      return false;\n    }\n    if (this.createemploys.get('designation').value == '' || this.createemploys.get('designation').value.id == null || this.createemploys.get('designation').value.id == undefined) {\n      this.notify.showError('Please Select The Designation');\n      return false;\n    }\n    if (this.createemploys.get('mobilenumber').value.length != 10 || this.createemploys.get('mobilenumber').value == null || this.createemploys.get('mobilenumber').value == undefined) {\n      this.notify.showError('Please Select The MobileNumber and 10 digits');\n      return false;\n    }\n    if (this.createemploys.get('emailid').valid == false || this.createemploys.get('emailid').value == null || this.createemploys.get('name').value == undefined) {\n      this.notify.showError('Please Enter The Emailid');\n      return false;\n    }\n    // if(this.createemploys.get('supervisor').value.id==null || this.createemploys.get('supervisor').value.id==null || this.createemploys.get('supervisor').value==undefined || this.createemploys.get('supervisor').value==''){\n    //   this.notify.showError('Please Enter The Supervisor');\n    //   return false;\n    // }\n    // if(this.createemploys.get('hierarchy').value.id==null || this.createemploys.get('hierarchy').value.id==null || this.createemploys.get('hierarchy').value==undefined || this.createemploys.get('hierarchy').value==''){\n    //   this.notify.showError('Please Enter The Hierarchy');\n    //   return false;\n    // }\n    if (this.createemploys.get('branch').value.id == null || this.createemploys.get('branch').value.id == null || this.createemploys.get('branch').value == undefined || this.createemploys.get('branch').value == '') {\n      this.notify.showError('Please Enter The Branch');\n      return false;\n    }\n    // if(this.createemploys.get('bsname').value.id==null || this.createemploys.get('bsname').value.id==null || this.createemploys.get('bsname').value==undefined || this.createemploys.get('bsname').value==''){\n    //   this.notify.showError('Please Enter The BS Name');\n    //   return false;\n    // }\n    // if(this.createemploys.get('ccname').value.id==null || this.createemploys.get('ccname').value.id==null || this.createemploys.get('ccname').value==undefined || this.createemploys.get('ccname').value==''){\n    //   this.notify.showError('Please Enter The CC Name');\n    //   return false;\n    // }\n    if (this.createemploys.get('line1').value == null || this.createemploys.get('line1').value == null || this.createemploys.get('line1').value == undefined || this.createemploys.get('line1').value == '') {\n      this.notify.showError('Please Enter The Line1');\n      return false;\n    }\n    if (this.createemploys.get('line2').value == null || this.createemploys.get('line2').value == null || this.createemploys.get('line2').value == undefined || this.createemploys.get('line2').value == '') {\n      this.notify.showError('Please Enter The Line2');\n      return false;\n    }\n    if (this.createemploys.get('line3').value == null || this.createemploys.get('line3').value == null || this.createemploys.get('line3').value == undefined || this.createemploys.get('line3').value == '') {\n      this.notify.showError('Please Enter The Line3');\n      return false;\n    }\n    if (this.createemploys.get('pincode').value.id == null || this.createemploys.get('pincode').value.id == undefined || this.createemploys.get('pincode').value == undefined || this.createemploys.get('pincode').value == '') {\n      this.notify.showError('Please Enter The Pincode');\n      return false;\n    }\n    if (this.createemploys.get('city').value.id == null || this.createemploys.get('city').value.id == undefined || this.createemploys.get('city').value == undefined || this.createemploys.get('city').value == '') {\n      this.notify.showError('Please Enter The City');\n      return false;\n    }\n    if (this.createemploys.get('district').value.id == null || this.createemploys.get('district').value.id == undefined || this.createemploys.get('district').value == undefined || this.createemploys.get('district').value == '') {\n      this.notify.showError('Please Enter The District');\n      return false;\n    }\n    if (this.createemploys.get('state').value.id == null || this.createemploys.get('state').value.id == undefined || this.createemploys.get('state').value == undefined || this.createemploys.get('state').value == '') {\n      this.notify.showError('Please Enter The State');\n      return false;\n    }\n    if (this.createemploys.get('contacttype').value == null || this.createemploys.get('contacttype').value == undefined || this.createemploys.get('contacttype').value == \"\" || this.createemploys.get('contacttype').value == '') {\n      this.notify.showError('Please Enter The ContactType');\n      return false;\n    }\n    if (this.createemploys.get('landline1').value.length != 10 || this.createemploys.get('landline1').value == undefined || this.createemploys.get('landline1').value == \"\" || this.createemploys.get('landline1').value == '') {\n      this.notify.showError('Please Enter The landline1');\n      return false;\n    }\n    if (this.createemploys.get('landline2').value.length != 10 || this.createemploys.get('landline2').value == undefined || this.createemploys.get('landline2').value == \"\" || this.createemploys.get('landline2').value == '') {\n      this.notify.showError('Please Enter The landline2');\n      return false;\n    }\n    if (this.createemploys.get('contactnumber').value.length != 10 || this.createemploys.get('contactnumber').value == undefined || this.createemploys.get('contactnumber').value == \"\" || this.createemploys.get('contactnumber').value == '') {\n      this.notify.showError('Please Enter The Contactnumber');\n      return false;\n    }\n    if (this.createemploys.get('contactnumber2').value.length != 10 || this.createemploys.get('contactnumber2').value == undefined || this.createemploys.get('contactnumber2').value == \"\" || this.createemploys.get('contactnumber2').value == '') {\n      this.notify.showError('Please Enter The Contactnumber');\n      return false;\n    }\n    if (this.createemploys.get('conemailid').valid == false || this.createemploys.get('conemailid').value == undefined || this.createemploys.get('conemailid').value == \"\" || this.createemploys.get('conemailid').value == '') {\n      this.notify.showError('Please Enter The Contact mailId');\n      return false;\n    }\n    if (this.createemploys.get('condob').value == null || this.createemploys.get('condob').value == undefined || this.createemploys.get('condob').value == \"\" || this.createemploys.get('condob').value == '') {\n      this.notify.showError('Please Enter The Contact DOB');\n      return false;\n    }\n    if (this.createemploys.get('conwedday').value == null || this.createemploys.get('conwedday').value == undefined || this.createemploys.get('conwedday').value == \"\" || this.createemploys.get('conwedday').value == '') {\n      this.notify.showError('Please Enter The Contact DOB');\n      return false;\n    }\n    console.log(this.createemploys.value);\n    let Gender = {\n      'Male': 1,\n      \"Female\": 2,\n      \"TransGender\": 3\n    };\n    let contactType = {\n      'EMPLOYEE': 5,\n      'GROUP123': 10,\n      'Individual': 10\n    };\n    let data = {\n      \"code\": this.createemploys.get('code').value.trim(),\n      \"full_name\": this.createemploys.get('name').value.trim(),\n      \"first_name\": \"Dwayne\",\n      \"middle_name\": \"Rock\",\n      \"last_name\": \"Johnson\",\n      \"dob\": this.datepipe.transform(this.createemploys.get('dob').value, 'yyyy-MM-dd'),\n      \"doj\": this.datepipe.transform(this.createemploys.get('doj').value, 'yyyy-MM-dd'),\n      \"department_id\": this.createemploys.get('employeetype').value.id,\n      \"gender\": Gender[this.createemploys.get('gender').value],\n      \"employee_type\": this.createemploys.get('employeetype').value.id,\n      \"designation\": this.createemploys.get('designation').value.name,\n      \"phone_no\": this.createemploys.get('mobilenumber').value,\n      \"email_id\": this.createemploys.get('emailid').value,\n      // \"supervisor\":this.createemploys.get('supervisor').value.id,\n      // \"hierarchy\":this.createemploys.get('hierarchy').value.id,\n      \"branch\": this.createemploys.get('branch').value.id,\n      // \"businesssegment\":this.createemploys.get('bsname').value.id,\n      // \"costcentre\":this.createemploys.get('ccname').value.id,\n      \"contact\": {\n        \"type_id\": contactType[this.createemploys.get('contacttype').value],\n        \"name\": this.createemploys.get('personname').value.trim(),\n        \"designation_id\": this.createemploys.get('condesignation').value.id,\n        \"landline\": this.createemploys.get('landline1').value,\n        \"landline2\": this.createemploys.get('landline1').value,\n        \"mobile\": this.createemploys.get('contactnumber').value,\n        \"mobile2\": this.createemploys.get('contactnumber2').value,\n        \"email\": this.createemploys.get('conemailid').value.trim(),\n        \"dob\": this.datepipe.transform(this.createemploys.get('condob').value, 'yyyy-MM-dd'),\n        \"wedding_date\": this.datepipe.transform(this.createemploys.get('conwedday').value, 'yyyy-MM-dd'),\n        \"status\": 1\n      },\n      \"address\": {\n        \"line1\": this.createemploys.get('line1').value.trim(),\n        \"line2\": this.createemploys.get('line2').value.trim(),\n        \"line3\": this.createemploys.get('line3').value.trim(),\n        \"pincode_id\": this.createemploys.get('pincode').value.id,\n        \"city_id\": this.createemploys.get('city').value.id,\n        \"district_id\": this.createemploys.get('district').value.id,\n        \"state_id\": this.createemploys.get('state').value.id\n      }\n    };\n    this.masterservice.getlistdepartmentcreate(data).subscribe(datas => {\n      console.log(datas);\n      this.createemploys.reset('');\n      this.EmployeeSummaryPart = true;\n      this.EmployeeViewPart = false;\n      this.notify.showSuccess('Created Successfully');\n    }, error => {\n      this.notify.showError(error.status + error.statusText);\n    });\n  }\n  BackEmployeeAdd() {\n    this.createemploys.reset('');\n    this.EmployeeSummaryPart = true;\n    this.EmployeeViewPart = false;\n  }\n  employeeViewPage(view) {\n    console.log(\"view data\", view);\n    let dataID = view.id;\n    this.masterservice.getEmpDetails(dataID).subscribe(results => {\n      console.log(\"result data for single emp get\", results);\n      let obj = {\n        id: dataID,\n        data: results\n      };\n      this.share.employeeview.next(obj);\n      this.EmployeeViewPart = true;\n      this.EmployeeSummaryPart = false;\n    });\n  }\n  backSummary() {\n    this.EmployeeViewPart = false;\n    this.EmployeeSummaryPart = true;\n  }\n  getemployeetrackdetails(data) {\n    // this.masterservice.getemployeetrackdetails().subscribe(\n    //   result=>{\n    //     console.log('employeetrack',result)\n    //   }\n    // )\n    // this.currentPos=data?.tracker[0]\n    // this.points=data?.tracker\n    // this.points=[]\n    console.log('aaaaaaaaaaa', data);\n    // for(let i=0;i<data.length;i++){\n    //   console.log()\n    //   let obj={\n    //     lat: /[a-zA-Z]/g.test(data[i]?.latitude)? this.converttodegree(data[i]?.latitude):data[i]?.latitude,\n    //     lng: /[a-zA-Z]/g.test(data[i]?.longitude)? this.converttodegree(data[i]?.longitude):data[i]?.longitude,\n    //   }\n    //   console.log(\"obj for lat long\", obj)\n    //   this.points.push(obj)\n    // }\n    this.currentPos = data[0];\n    console.log('aaaaaaaaaaa2', data, this.currentPos);\n  }\n  converttodegree(value) {\n    let data = value.split(/[^\\d\\w\\.]+/);\n    var dd = Number(data[0]) + Number(data[1]) / 60 + Number(data[2]) / (60 * 60);\n    if (data[3] == \"S\" || data[3] == \"W\") {\n      dd = dd * -1;\n    }\n    return dd;\n  }\n  onMouseOver(infoWindow, $event) {\n    infoWindow.open();\n  }\n  onMouseOut(infoWindow, $event) {\n    infoWindow.close();\n  }\n  getemployeecomment(id) {\n    this.masterservice.employeecomments(id).subscribe(result => {\n      this.employeecomments = result['data'];\n    });\n  }\n  ShiftMappingEmployeeget(data) {\n    this.attendanceService.getShiftMappingEmployee(data).subscribe(results => {\n      this.employeesearchdata = results[\"data\"];\n      console.log(results);\n    });\n  }\n  displayShiftmapping(typ) {\n    return typ ? typ.full_name : undefined;\n  }\n  static ɵfac = function TrackemployeeComponent_Factory(t) {\n    return new (t || TrackemployeeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.DatePipe), i0.ɵɵdirectiveInject(i4.MasterHrmsService), i0.ɵɵdirectiveInject(i5.ErrorHandlingServiceService), i0.ɵɵdirectiveInject(i6.NgxSpinnerService), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i8.SharedHrmsService), i0.ɵɵdirectiveInject(i9.AttendanceMasterServiceService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrackemployeeComponent,\n    selectors: [[\"app-trackemployee\"]],\n    viewQuery: function TrackemployeeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(_c13, 5);\n        i0.ɵɵviewQuery(_c14, 5);\n        i0.ɵɵviewQuery(_c15, 5);\n        i0.ɵɵviewQuery(_c16, 5);\n        i0.ɵɵviewQuery(_c17, 5);\n        i0.ɵɵviewQuery(_c18, 5);\n        i0.ɵɵviewQuery(_c19, 5);\n        i0.ɵɵviewQuery(_c20, 5);\n        i0.ɵɵviewQuery(_c21, 5);\n        i0.ɵɵviewQuery(_c22, 5);\n        i0.ɵɵviewQuery(_c23, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matdesign = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.designinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matbranch = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.branchinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matbsdata = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bsinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matccdata = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ccinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matpincode = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pincodeinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matcity = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cityinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matdistrict = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.districtinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matstate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stateinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matcondesign = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.condesigninput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mathierchy = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hierarchyinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matdept = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deptinput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matsuper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.superinput = _t.first);\n      }\n    },\n    outputs: {\n      onSubmit: \"onSubmit\",\n      onCancel: \"onCancel\"\n    },\n    decls: 40,\n    vars: 5,\n    consts: [[\"class\", \"col-md-12\", 4, \"ngIf\"], [4, \"ngIf\"], [\"id\", \"mapview\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-xl\"], [1, \"modal-content\"], [1, \"modal-header\", 2, \"background\", \"#21cbe5\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"id\", \"routeview\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\", \"modal-dialog-centered\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", 2, \"font-weight\", \"bold\"], [2, \"text-align\", \"center\", \"font-size\", \"18px\", \"margin\", \"auto\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"commentview\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"container\"], [\"class\", \"card\", \"style\", \"margin:10px\", 4, \"ngFor\", \"ngForOf\"], [\"style\", \"display:flex;justify-content: center;\", 4, \"ngIf\"], [1, \"col-md-12\"], [2, \"margin-left\", \"20px\", 3, \"formGroup\"], [1, \"row\"], [1, \"col-md-3\"], [\"appearance\", \"outline\", 1, \"matformfieldstyle\", 2, \"width\", \"250px\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Select\", \"formControlName\", \"codename\", \"autocomplete\", \"off\", 1, \"matformfieldinputstyle\", 3, \"matAutocomplete\", \"keyup\"], [3, \"displayWith\"], [\"shift\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"logdate\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"disabled\", \"false\"], [\"log_date\", \"\"], [1, \"col-md-4\"], [2, \"margin-top\", \"26px\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", \"aria-label\", \"Search\", 2, \"margin-left\", \"20px\", \"background-color\", \"white\", 3, \"click\"], [\"mat-stroked-button\", \"\", \"type\", \"button\", 2, \"margin-left\", \"20px\", \"background-color\", \"white\", 3, \"click\"], [1, \"col-sm-12\", \"col-md-12\", \"col-lg-12\"], [\"id\", \"commonstyle\", 1, \"table\", \"table-bordered\", \"tablepaddingsizeheader\", \"aligncenter\", 2, \"margin-top\", \"10px\", \"max-width\", \"100%\", \"text-align\", \"center\"], [1, \"table_header\"], [\"class\", \"NodataAlign text-center\", 4, \"ngIf\", \"ngIfElse\"], [\"paginationpro\", \"\"], [3, \"value\"], [\"mat-icon-button\", \"\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#commentview\", 3, \"click\"], [\"mat-icon-button\", \"\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#routeview\", 3, \"click\"], [\"mat-icon-button\", \"\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#mapview\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-map-marker\", \"iconcolor\"], [1, \"NodataAlign\", \"text-center\"], [1, \"col-sm-12\", 2, \"font-size\", \"small\", \"text-align\", \"right\", \"margin-bottom\", \"5%\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [3, \"backToSummary\"], [1, \"pad\"], [2, \"font-weight\", \"bold\"], [1, \"card\", 2, \"margin\", \"10px\"], [1, \"card-body\"], [1, \"col-md-2\"], [\"src\", \"https://image.ibb.co/jw55Ex/def_face.jpg\", 1, \"img\", \"img-rounded\", \"img-fluid\"], [1, \"text-secondary\", \"text-center\"], [1, \"col-md-10\"], [1, \"float-left\"], [1, \"clearfix\"], [2, \"display\", \"flex\", \"justify-content\", \"center\"]],\n    template: function TrackemployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TrackemployeeComponent_div_0_Template, 57, 9, \"div\", 0);\n        i0.ɵɵtemplate(1, TrackemployeeComponent_div_1_Template, 2, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6);\n        i0.ɵɵtext(7, \"Map\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 7)(9, \"span\", 8);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(11, \"div\", 9)(12, \"div\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"div\", 12)(15, \"div\", 4)(16, \"div\", 5)(17, \"h2\", 13);\n        i0.ɵɵtext(18, \"Route\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 7)(20, \"span\", 8);\n        i0.ɵɵtext(21, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 9)(23, \"table\", 14);\n        i0.ɵɵtemplate(24, TrackemployeeComponent_tr_24_Template, 18, 9, \"tr\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"div\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 16)(27, \"div\", 12)(28, \"div\", 4)(29, \"div\", 5)(30, \"h2\", 13);\n        i0.ɵɵtext(31, \"Comments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 7)(33, \"span\", 8);\n        i0.ɵɵtext(34, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 9)(36, \"div\", 17);\n        i0.ɵɵtemplate(37, TrackemployeeComponent_div_37_Template, 16, 6, \"div\", 18);\n        i0.ɵɵtemplate(38, TrackemployeeComponent_div_38_Template, 3, 0, \"div\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"div\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.EmployeeSummaryPart);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.EmployeeViewPart);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.points);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employeecomments);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.employeecomments == null ? null : ctx.employeecomments.length) == 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i10.MatButton, i10.MatIconButton, i11.MatIcon, i12.MatInput, i13.MatFormField, i13.MatLabel, i13.MatSuffix, i14.MatOption, i15.MatAutocomplete, i15.MatAutocompleteTrigger, i16.MatDatepicker, i16.MatDatepickerInput, i16.MatDatepickerToggle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i17.EmployeeInfoComponent, i3.DatePipe],\n    styles: [\"agm-map[_ngcontent-%COMP%] {\\n  height: 500px;\\n}\\n\\n.iconcolor[_ngcontent-%COMP%] {\\n  font-size: 21px;\\n  color: green;\\n}\\n\\n.pad[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  width: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaHJtcy9BdHRlbmRhbmNlL3RyYWNrZW1wbG95ZWUvdHJhY2tlbXBsb3llZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7QUFDSjs7QUFDQTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBRUo7O0FBQ0E7RUFDSSxhQUFBO0VBQ0EsVUFBQTtBQUVKIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcHtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbn1cclxuLmljb25jb2xvcntcclxuICAgIGZvbnQtc2l6ZTogMjFweDtcclxuICAgIGNvbG9yOiBncmVlbjtcclxufVxyXG5cclxuLnBhZHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICB3aWR0aDogMjAlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["formatDate","EventEmitter","FormControl","Validators","MatAutocompleteTrigger","NativeDateAdapter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","employee_r12","ɵɵadvance","ɵɵtextInterpolate1","full_name","ɵɵlistener","TrackemployeeComponent_div_0_tr_53_Template_button_click_15_listener","restoredCtx","ɵɵrestoreView","_r16","emp_r13","$implicit","ctx_r15","ɵɵnextContext","ɵɵresetView","getemployeecomment","employee_id","id","TrackemployeeComponent_div_0_tr_53_Template_button_click_19_listener","ctx_r17","getemployeelog","TrackemployeeComponent_div_0_tr_53_Template_button_click_23_listener","ctx_r18","ɵɵelement","ɵɵtextInterpolate","ctx_r8","presentpageEmployee","empindex_r14","code","ɵɵpipeBind2","log_date","tracker","remarks","length","TrackemployeeComponent_div_0_ng_template_55_Template_button_click_1_listener","_r20","ctx_r19","paginationsearch","TrackemployeeComponent_div_0_ng_template_55_Template_button_click_5_listener","ctx_r21","ctx_r11","has_previousEmployee","has_nextEmployee","TrackemployeeComponent_div_0_Template_mat_form_field_click_9_listener","_r23","ctx_r22","ShiftMappingEmployeeget","TrackemployeeComponent_div_0_Template_input_keyup_10_listener","ctx_r24","EmployeeSummarySearch","value","codename","ɵɵtemplate","TrackemployeeComponent_div_0_mat_option_13_Template","TrackemployeeComponent_div_0_Template_button_click_25_listener","ctx_r25","serviceCallEmployeeSummary","TrackemployeeComponent_div_0_Template_button_click_28_listener","ctx_r26","resetEmployee","TrackemployeeComponent_div_0_tr_53_Template","TrackemployeeComponent_div_0_div_54_Template","TrackemployeeComponent_div_0_ng_template_55_Template","ɵɵtemplateRefExtractor","ctx_r0","_r5","displayShiftmapping","employeesearchdata","_r7","EmployeeList","undefined","_r10","TrackemployeeComponent_div_1_Template_app_employee_info_backToSummary_1_listener","_r28","ctx_r27","backSummary","point_r29","log_time","cmt_r31","created_date","note","PICK_FORMATS","parse","dateInput","month","year","day","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","PickDateAdapter","format","date","displayFormat","locale","toDateString","TrackemployeeComponent","fb","notify","datepipe","masterservice","error","SpinnerService","route","share","attendanceService","points","currentPos","employeecomments","constructor","createemploys","EmployeeSummaryPart","EmployeeViewPart","minLength","maxLength","today","Date","employeelistpagination","has_next","has_false","index","ngOnInit","group","logdate","required","email","onSubmit","onCancel","autocompleteTrigger","matdesign","designinput","matbranch","branchinput","matbsdata","bsinput","matccdata","ccinput","matpincode","pincodeinput","matcity","cityinput","matdistrict","districtinput","matstate","stateinput","matcondesign","condesigninput","mathierchy","hierarchyinput","matdept","deptinput","matsuper","superinput","isLoading","designationlist","hiearchylist","bsdatalist","ccdatalist","branchdatalist","pincodelist","citylist","districtlist","statelist","codedesignationlist","employeetypelist","hierarchylist","supervisorlist","designpage","has_designpre","has_designnext","has_bsnxt","has_bspre","has_bspage","has_ccnxt","has_ccpre","has_ccpage","has_branchnxt","has_bracchpre","has_branchpage","has_pincodenxt","has_pincodepre","has_pincodepage","has_citynxt","has_citypre","has_citypage","has_districtnxt","has_districtpre","has_districtpage","has_statenxt","has_statepre","has_statepage","has_hiernxt","has_hierpre","has_hierpage","has_deptnxt","has_deptpre","has_deptpage","has_supernxt","has_superpre","has_superpage","page","emp","transform","console","log","show","getemployeetrackdetails","subscribe","result","hide","dataPagination","has_previous","handleError","now","emplevellogdata","data","EmployeeSearch","hint","search","obj","i","patchValue","getdatadesignation","name","getdatabranch","getbsdatainterface","gerccdatainterface","getpincodeinterface","no","getcityinterface","getdistrictinterface","getstateinterface","gethierarchyinterface","layer","getdepartmentinterface","getsupervisorinterface","getdesignation","dataDes","getDesignationList","getbranchsdata","searchBranch","getbranchdatafilter","getbsdata","bssearch","getbsdatafilter","getccdata","bs","cc","showWarning","getccdatafilter","getpincodedata","searchdata","getPinCodeDropDownscroll","getpinlistfocus","get","getcityfocus","getcitydata","searchData","getCityDropDownscroll","getdistrictdata","getDistrictList","getstatedata","getStateList","gethierarchydata","searchHirachy","getHierarchyList","getEmployeedepartmentdata","dataEmp","getlistdepartment","results","getsupervisorlist","getlistdepartmentsenoor","autocompleteDeptScrolldesign","autocompleteDeptScrollbranch","autocompleteScrollbs","autocompleteScrollpincode","autocompleteScrollcity","autocompleteScrolldistrict","autocompleteScrollstate","autocompleteScrollhierarchy","autocompleteScrolldept","autocompleteScrollsuper","keypress","event","charCode","which","keyCode","employeecreatedata","trim","showError","valid","Gender","contactType","getlistdepartmentcreate","datas","reset","showSuccess","status","statusText","BackEmployeeAdd","employeeViewPage","view","dataID","getEmpDetails","employeeview","next","converttodegree","split","dd","Number","onMouseOver","infoWindow","$event","open","onMouseOut","close","getShiftMappingEmployee","typ","ɵɵdirectiveInject","i1","FormBuilder","i2","NotificationService","i3","DatePipe","i4","MasterHrmsService","i5","ErrorHandlingServiceService","i6","NgxSpinnerService","i7","Router","i8","SharedHrmsService","i9","AttendanceMasterServiceService","selectors","viewQuery","TrackemployeeComponent_Query","rf","ctx","TrackemployeeComponent_div_0_Template","TrackemployeeComponent_div_1_Template","TrackemployeeComponent_tr_24_Template","TrackemployeeComponent_div_37_Template","TrackemployeeComponent_div_38_Template"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\Attendance\\trackemployee\\trackemployee.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\Attendance\\trackemployee\\trackemployee.component.html"],"sourcesContent":["import { DatePipe, formatDate } from '@angular/common';\r\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { NativeDateAdapter } from '@angular/material/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ErrorHandlingServiceService } from 'src/app/service/error-handling-service.service';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\nimport { AttendanceMasterServiceService } from '../../attendance-master-service.service';\r\nimport { AttendanceService } from '../../attendance.service';\r\nimport { MasterHrmsService } from '../../master-hrms.service';\r\nimport { SharedHrmsService } from '../../shared-hrms.service';\r\n\r\n\r\nexport interface designationdata {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface branchdata {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface bsdata {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface ccdata {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface pincode {\r\n  id: string;\r\n  no: string;\r\n}\r\nexport interface city {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface disrict {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface state {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface codedesignation {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface hirerarchy {\r\n  id: string;\r\n  layer: string;\r\n}\r\nexport interface department {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface supervisor {\r\n  id: string;\r\n  full_name: string;\r\n}\r\n\r\nexport interface typelistss {\r\n  id: string;\r\n  name: any;\r\n  code: any;\r\n  full_name: any;\r\n}\r\n\r\nexport const PICK_FORMATS = {\r\n  parse: { dateInput: { month: 'short', year: 'numeric', day: 'numeric' } },\r\n  display: {\r\n    dateInput: 'input',\r\n    monthYearLabel: { year: 'numeric', month: 'short' },\r\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n    monthYearA11yLabel: { year: 'numeric', month: 'long' }\r\n  }\r\n};\r\n\r\n\r\nclass PickDateAdapter extends NativeDateAdapter {\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (displayFormat === 'input') {\r\n      return formatDate(date, 'dd-MMM-yyyy', this.locale);\r\n    } else {\r\n      return date.toDateString();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-trackemployee',\r\n  templateUrl: './trackemployee.component.html',\r\n  styleUrls: ['./trackemployee.component.scss']\r\n})\r\nexport class TrackemployeeComponent implements OnInit {\r\n  points:any=[];\r\n  currentPos:any = [];\r\n  employeecomments=[];\r\n  employeesearchdata: any;\r\n\r\n  constructor(private fb: FormBuilder, private notify: NotificationService, private datepipe: DatePipe,\r\n    private masterservice: MasterHrmsService, private error: ErrorHandlingServiceService, private SpinnerService: NgxSpinnerService,\r\n    private route: Router, private share: SharedHrmsService, private attendanceService:AttendanceMasterServiceService\r\n    // private apis: MasterServicesService\r\n    ) { }\r\n\r\n  EmployeeSummarySearch: FormGroup\r\n  createemploys: FormGroup\r\n\r\n  EmployeeSummaryPart: boolean = true \r\n  EmployeeViewPart: boolean = false \r\n\r\n  minLength: number = 10;\r\n  maxLength: number = 10;\r\n  today = new Date();\r\n\r\n  // points=[\r\n  //   {\r\n  //     lat: 12.973880208109474,\r\n  //     lng:  80.24956391195023\r\n  //   },\r\n  //   {\r\n  //     lat: 12.97367005517881,\r\n  //     lng:  80.24961555640975,\r\n  //   },\r\n  //   {\r\n  //     lat: 12.973433385294094,\r\n  //     lng:  80.24982146744344,\r\n  //   },\r\n  //   {\r\n  //     lat: 12.972479741434496,\r\n  //     lng:  80.2496513974263\r\n  //   },\r\n  //   {\r\n  //     lat: 12.97195278670074,\r\n  //     lng:  80.24910906273227\r\n  //   }\r\n  // ]\r\n  // currentPos = {\r\n  //   lat:  12.973880208109474,\r\n  //   lng:  80.24956391195023\r\n  // }\r\n\r\n  employeelistpagination={\r\n    has_next:true,\r\n    has_false:true,\r\n    index:1\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.EmployeeSummarySearch = this.fb.group({\r\n      codename: '',\r\n      logdate:''\r\n    })\r\n\r\n    this.createemploys = this.fb.group({\r\n      'code': new FormControl('', Validators.required),\r\n      'name': new FormControl('', Validators.required),\r\n      'dob': new FormControl(''),\r\n      'doj': new FormControl(''),\r\n      'gender': new FormControl(''),\r\n      'employeetype': new FormControl(''),\r\n      'designation': new FormControl(''),\r\n      'mobilenumber': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\r\n      'emailid': new FormControl('', [Validators.email]),\r\n      // 'supervisor':new FormControl(''),\r\n      // 'hierarchy':new FormControl(''),\r\n      'branch': new FormControl(''),\r\n      // 'bsname':new FormControl(''),\r\n      // 'ccname':new FormControl(''),\r\n      'line1': new FormControl(''),\r\n      'line2': new FormControl(''),\r\n      'line3': new FormControl(''),\r\n      'pincode': new FormControl(''),\r\n      'city': new FormControl(''),\r\n      'district': new FormControl(''),\r\n      'state': new FormControl(''),\r\n      'contacttype': new FormControl(''),\r\n      'personname': new FormControl(''),\r\n      'condesignation': new FormControl(''),\r\n      'landline1': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\r\n      'landline2': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\r\n      'contactnumber': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\r\n      'contactnumber2': new FormControl('', [Validators.minLength(10), Validators.maxLength(10)]),\r\n      'conemailid': new FormControl('', [Validators.email]),\r\n      'condob': new FormControl(''),\r\n      'conwedday': new FormControl('')\r\n    });\r\n    // this.EmployeeSearch('')\r\n    this.serviceCallEmployeeSummary(this.presentpageEmployee=1)\r\n  }\r\n\r\n  EmployeeList: any\r\n  has_nextEmployee: boolean\r\n  has_previousEmployee: boolean\r\n  presentpageEmployee: any = 1\r\n\r\n  @Output() onSubmit = new EventEmitter<any>();\r\n  @Output() onCancel = new EventEmitter<any>();\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('designauto') matdesign: MatAutocomplete;\r\n  @ViewChild('designInput') designinput: ElementRef;\r\n  @ViewChild('branchinfo') matbranch: MatAutocomplete;\r\n  @ViewChild('branchInput') branchinput: ElementRef;\r\n  @ViewChild('bsinfo') matbsdata: MatAutocomplete;\r\n  @ViewChild('bsInput') bsinput: ElementRef;\r\n  @ViewChild('ccinfo') matccdata: MatAutocomplete;\r\n  @ViewChild('ccInput') ccinput: ElementRef;\r\n  @ViewChild('pincodeinfo') matpincode: MatAutocomplete;\r\n  @ViewChild('pincodeInput') pincodeinput: ElementRef;\r\n  @ViewChild('cityinfo') matcity: MatAutocomplete;\r\n  @ViewChild('cityInput') cityinput: ElementRef;\r\n  @ViewChild('districtinfo') matdistrict: MatAutocomplete;\r\n  @ViewChild('districtInput') districtinput: ElementRef;\r\n  @ViewChild('stateinfo') matstate: MatAutocomplete;\r\n  @ViewChild('stateInput') stateinput: ElementRef;\r\n  @ViewChild('condesigninfo') matcondesign: MatAutocomplete;\r\n  @ViewChild('condesignInput') condesigninput: ElementRef;\r\n  @ViewChild('hierarchyinfo') mathierchy: MatAutocomplete;\r\n  @ViewChild('hirarchyInput') hierarchyinput: ElementRef;\r\n  @ViewChild('deptinfo') matdept: MatAutocomplete;\r\n  @ViewChild('deptInput') deptinput: ElementRef;\r\n  @ViewChild('superinfo') matsuper: MatAutocomplete;\r\n  @ViewChild('superInput') superinput: ElementRef; \r\n  isLoading: boolean = false;\r\n  designationlist: Array<any> = [];\r\n  hiearchylist: Array<any> = [];\r\n  bsdatalist: Array<any> = [];\r\n  ccdatalist: Array<any> = [];\r\n  branchdatalist: Array<any> = [];\r\n  pincodelist: Array<any> = [];\r\n  citylist: Array<any> = [];\r\n  districtlist: Array<any> = [];\r\n  statelist: Array<any> = [];\r\n  codedesignationlist: Array<any> = [];\r\n  employeetypelist: Array<any> = [];\r\n  hierarchylist: Array<any> = [];\r\n  supervisorlist: Array<any> = [];\r\n  designpage: number = 1;\r\n  has_designpre: boolean = false;\r\n  has_designnext: boolean = false;\r\n  date: any = new Date();\r\n  has_bsnxt: boolean = true;\r\n  has_bspre: boolean = false;\r\n  has_bspage: number = 1;\r\n\r\n  has_ccnxt: boolean = true;\r\n  has_ccpre: boolean = false;\r\n  has_ccpage: number = 1;\r\n\r\n  has_branchnxt: boolean = true;\r\n  has_bracchpre: boolean = false;\r\n  has_branchpage: number = 1;\r\n  has_pincodenxt: boolean = true;\r\n  has_pincodepre: boolean = false;\r\n  has_pincodepage: number = 1;\r\n  has_citynxt: boolean = true;\r\n  has_citypre: boolean = false;\r\n  has_citypage: number = 1;\r\n  has_districtnxt: boolean = true;\r\n  has_districtpre: boolean = false;\r\n  has_districtpage: number = 1;\r\n  has_statenxt: boolean = true;\r\n  has_statepre: boolean = false;\r\n  has_statepage: number = 1;\r\n  has_hiernxt: boolean = true;\r\n  has_hierpre: boolean = false;\r\n  has_hierpage: number = 1;\r\n  has_deptnxt: boolean = true;\r\n  has_deptpre: boolean = false;\r\n  has_deptpage: number = 1;\r\n  has_supernxt: boolean = true;\r\n  has_superpre: boolean = false;\r\n  has_superpage: number = 1;\r\n\r\n\r\n  serviceCallEmployeeSummary(page) {\r\n    // let datas = this.apis.Employee_Search_Summary(search, pageno)\r\n    // console.log(\"data summary employee APIS\", datas)\r\n\r\n    let emp=this.EmployeeSummarySearch.value.codename?.id ? this.EmployeeSummarySearch.value.codename?.id:'' \r\n    let date= this.EmployeeSummarySearch.value.logdate != '' ? this.datepipe.transform(this.EmployeeSummarySearch.value.logdate, 'yyyy-MM-dd'):''\r\n\r\n    console.log('date',this.EmployeeSummarySearch.value.logdate)\r\n\r\n    this.SpinnerService.show()\r\n    this.masterservice.getemployeetrackdetails(emp,date,page)\r\n      .subscribe(result => {\r\n        this.SpinnerService.hide();\r\n        console.log(\"Employee summary\", result)\r\n        // this.EmployeeList = result['data']\r\n        this.EmployeeList =result['data']\r\n        let dataPagination = result['pagination'];\r\n        if (this.EmployeeList.length > 0) {\r\n          this.has_nextEmployee = dataPagination.has_next;\r\n          this.has_previousEmployee = dataPagination.has_previous;\r\n          this.presentpageEmployee = dataPagination.index;\r\n        }\r\n      }, (error) => {\r\n        this.error.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  paginationsearch(value){\r\n\r\n    (value == 'next')? this.serviceCallEmployeeSummary(this.presentpageEmployee+1):this.serviceCallEmployeeSummary(this.presentpageEmployee-1)\r\n\r\n  }\r\n\r\n\r\n  getemployeelog(emp){\r\n    this.SpinnerService.show();\r\n    const now = emp?.log_date\r\n    // console.log(now.toISOString().slice(0, 10));\r\n    // let date=now.toISOString().slice(0, 10)\r\n    let date= this.datepipe.transform(emp?.log_date, 'yyyy-MM-dd')\r\n\r\n    this.masterservice.emplevellogdata(emp?.employee_id.id,date).subscribe(result => {\r\n    console.log(\"Employee summary\", result['data'])\r\n    // this.EmployeeList = result['data']\r\n    this.points =result?.data[0]\r\n    this.points=this.points?.tracker\r\n    // this.getemployeetrackdetails(this.points)\r\n    this.currentPos=this.points[0]\r\n\r\n    console.log('test',this.points)\r\n    this.SpinnerService.hide();\r\n\r\n    \r\n  }, (error) => {\r\n    this.error.handleError(error);\r\n    this.SpinnerService.hide();\r\n    \r\n  })}\r\n\r\n\r\n  EmployeeSearch(hint: any) {\r\n    let search = this.EmployeeSummarySearch.value;\r\n    let obj = {\r\n      codename: search?.codename\r\n    }\r\n    console.log(\"obj data b4 api\", obj)\r\n    for (let i in obj) {\r\n      if (obj[i] == undefined || obj[i] == null) {\r\n        obj[i] = '';\r\n      }\r\n    }\r\n    // this.SpinnerService.show();\r\n\r\n    // if (hint == 'next') {\r\n    //   this.serviceCallEmployeeSummary(obj, this.presentpageEmployee + 1, 10)\r\n    // }\r\n    // else if (hint == 'previous') {\r\n    //   this.serviceCallEmployeeSummary(obj, this.presentpageEmployee - 1, 10)\r\n    // }\r\n    // else {\r\n    //   this.serviceCallEmployeeSummary(obj, 1, 10)\r\n    // }\r\n\r\n  }\r\n\r\n  resetEmployee() {\r\n    this.EmployeeSummarySearch.patchValue({\r\n      logdate:'',\r\n      codename:''\r\n    })\r\n    this.serviceCallEmployeeSummary(this.presentpageEmployee=1)\r\n  }\r\n\r\n\r\n  // AddEmployee() {\r\n  //   // this.route.navigate(['hrms/employeeInfo'])\r\n  //   // return true \r\n  //   this.EmployeeCreateFormpart = true\r\n  //   this.EmployeeSummaryPart = false\r\n  //   this.EmployeeViewPart = false \r\n\r\n  // }\r\n\r\n\r\n\r\n  getdatadesignation(data?: designationdata): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getdatabranch(data?: branchdata): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getbsdatainterface(data?: bsdata): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  gerccdatainterface(data?: ccdata): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getpincodeinterface(data?: pincode): string | undefined {\r\n    return data ? data.no : undefined;\r\n  }\r\n  getcityinterface(data?: city): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getdistrictinterface(data?: disrict): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getstateinterface(data?: state): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  gethierarchyinterface(data?: hirerarchy): string | undefined {\r\n    return data ? data.layer : undefined;\r\n  }\r\n  getdepartmentinterface(data?: department): string | undefined {\r\n    return data ? data.name : undefined;\r\n  }\r\n  getsupervisorinterface(data?: supervisor): string | undefined {\r\n    return data ? data.full_name : undefined;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////// Designation \r\n  getdesignation(data) {\r\n    let dataDes = data\r\n    this.masterservice.getDesignationList(dataDes, 1).subscribe(data => {\r\n      this.designationlist = data['data'];\r\n    });\r\n  }\r\n\r\n\r\n  getbranchsdata(data) {\r\n    let searchBranch: any = data\r\n    this.masterservice.getbranchdatafilter(searchBranch, 1).subscribe(data => {\r\n      this.branchdatalist = data['data'];\r\n    });\r\n\r\n  }\r\n  getbsdata(data) {\r\n    let bssearch: any = data\r\n    this.masterservice.getbsdatafilter(bssearch, 1).subscribe(data => {\r\n      this.bsdatalist = data['data'];\r\n    });\r\n  }\r\n  getccdata(bs, cc) {\r\n\r\n    if (bs == null || bs == '' || bs == undefined) {\r\n      this.notify.showWarning(\"Please fill BS\")\r\n      return false\r\n    }\r\n\r\n    this.masterservice.getccdatafilter(bs, cc, 1).subscribe(data => {\r\n      this.ccdatalist = data['data'];\r\n    });\r\n\r\n  }\r\n  getpincodedata(data) {\r\n    let searchdata: any = data;\r\n    this.masterservice.getPinCodeDropDownscroll(searchdata, 1).subscribe(data => {\r\n      this.pincodelist = data['data'];\r\n    });\r\n  }\r\n  getpinlistfocus(data: any) {\r\n    console.log(data);\r\n    this.createemploys.get('city').patchValue(data['city']);\r\n    this.createemploys.get('district').patchValue(data['district']);\r\n    this.createemploys.get('state').patchValue(data['state']);\r\n  }\r\n  getcityfocus(data: any) {\r\n    console.log(data);\r\n    this.createemploys.get('pincode').patchValue(data['pincode']);\r\n    this.createemploys.get('district').patchValue(data['district']);\r\n    this.createemploys.get('state').patchValue(data['state']);\r\n  }\r\n  getcitydata(data) {\r\n    let searchData: any = data;\r\n    this.masterservice.getCityDropDownscroll(searchData, 1).subscribe(data => {\r\n      this.citylist = data['data'];\r\n    });\r\n\r\n  }\r\n  getdistrictdata(data) {\r\n    let searchData: any = data\r\n    this.masterservice.getDistrictList(searchData, 'asc', 1, 10).subscribe(data => {\r\n      this.districtlist = data['data'];\r\n    });\r\n  }\r\n  getstatedata(data) {\r\n    let searchData: any = data;\r\n    this.masterservice.getStateList(searchData, 'asc', 1, 10).subscribe(data => {\r\n      this.statelist = data['data'];\r\n    });\r\n  }\r\n  gethierarchydata(data) {\r\n    let searchHirachy: any = data\r\n    this.masterservice.getHierarchyList(\"\", 'asc', 1, searchHirachy).subscribe(data => {\r\n      this.hierarchylist = data['data'];\r\n    });\r\n  }\r\n  ///////////////////////////////////////////////////////////////////////Employee Type \r\n  getEmployeedepartmentdata(data) {\r\n    let dataEmp = data\r\n    this.masterservice.getlistdepartment(dataEmp, 1).subscribe(results => {\r\n      this.employeetypelist = results['data'];\r\n    })\r\n  }\r\n  getsupervisorlist(data) {\r\n    let searchdata: any = data\r\n    this.masterservice.getlistdepartmentsenoor(1, searchdata).subscribe(data => {\r\n      this.supervisorlist = data['data'];\r\n    });\r\n  }\r\n  autocompleteDeptScrolldesign() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matdesign &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matdesign.panel\r\n    //   ) {\r\n    //     fromEvent(this.matdesign.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matdesign.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matdesign.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matdesign.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matdesign.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_designnext === true) {\r\n    //             this.masterservice.getDesignationList('','asc',this.designpage+1,this.designinput.nativeElement.value)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.designationlist = this.designationlist.concat(datas);\r\n    //                 if (this.designationlist.length >= 0) {\r\n    //                   this.has_designnext = datapagination.has_next;\r\n    //                   this.has_designpre = datapagination.has_previous;\r\n    //                   this.designpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteDeptScrollbranch() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matbranch &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matbranch.panel\r\n    //   ) {\r\n    //     fromEvent(this.matbranch.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matbranch.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matbranch.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matbranch.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matbranch.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_branchnxt === true) {\r\n    //             this.masterservice.getbranchdatafilter(this.branchinput.nativeElement.value,this.has_branchpage+1)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.branchdatalist = this.branchdatalist.concat(datas);\r\n    //                 if (this.branchdatalist.length >= 0) {\r\n    //                   this.has_branchnxt = datapagination.has_next;\r\n    //                   this.has_bracchpre = datapagination.has_previous;\r\n    //                   this.has_branchpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollbs() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matbsdata &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matbsdata.panel\r\n    //   ) {\r\n    //     fromEvent(this.matbsdata.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matbsdata.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matbsdata.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matbsdata.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matbsdata.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_branchnxt === true) {\r\n    //             this.masterservice.getbsdatafilter(this.bsinput.nativeElement.value,this.has_bspage+1)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.bsdatalist = this.bsdatalist.concat(datas);\r\n    //                 if (this.bsdatalist.length >= 0) {\r\n    //                   this.has_bsnxt = datapagination.has_next;\r\n    //                   this.has_bspre = datapagination.has_previous;\r\n    //                   this.has_bspage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollpincode() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matpincode &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matpincode.panel\r\n    //   ) {\r\n    //     fromEvent(this.matpincode.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matpincode.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matpincode.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matpincode.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matpincode.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_pincodenxt === true) {\r\n    //             this.masterservice.getPinCodeDropDownscroll(this.pincodeinput.nativeElement.value,this.has_pincodepage+1)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.pincodelist = this.pincodelist.concat(datas);\r\n    //                 if (this.pincodelist.length >= 0) {\r\n    //                   this.has_pincodenxt = datapagination.has_next;\r\n    //                   this.has_pincodepre = datapagination.has_previous;\r\n    //                   this.has_pincodepage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollcity() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matcity &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matcity.panel\r\n    //   ) {\r\n    //     fromEvent(this.matcity.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matcity.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matcity.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matcity.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matcity.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_citynxt === true) {\r\n    //             this.masterservice.getCityDropDownscroll(this.cityinput.nativeElement.value,this.has_citypage+1)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.citylist = this.citylist.concat(datas);\r\n    //                 if (this.citylist.length >= 0) {\r\n    //                   this.has_citynxt = datapagination.has_next;\r\n    //                   this.has_citypre = datapagination.has_previous;\r\n    //                   this.has_citypage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrolldistrict() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matdistrict &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matdistrict.panel\r\n    //   ) {\r\n    //     fromEvent(this.matdistrict.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matdistrict.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matdistrict.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matdistrict.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matdistrict.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_districtnxt === true) {\r\n    //             this.masterservice.getDistrictList('','asc',this.has_districtpage+1,10)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.districtlist = this.districtlist.concat(datas);\r\n    //                 if (this.districtlist.length >= 0) {\r\n    //                   this.has_districtnxt = datapagination.has_next;\r\n    //                   this.has_districtpre = datapagination.has_previous;\r\n    //                   this.has_districtpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollstate() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matstate &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matstate.panel\r\n    //   ) {\r\n    //     fromEvent(this.matstate.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matstate.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matstate.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matstate.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matstate.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_statenxt === true) {\r\n    //             this.masterservice.getStateList('','asc',this.has_statepage+1,10)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.statelist = this.statelist.concat(datas);\r\n    //                 if (this.statelist.length >= 0) {\r\n    //                   this.has_statenxt = datapagination.has_next;\r\n    //                   this.has_statepre = datapagination.has_previous;\r\n    //                   this.has_statepage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollhierarchy() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.mathierchy &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.mathierchy.panel\r\n    //   ) {\r\n    //     fromEvent(this.mathierchy.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.mathierchy.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.mathierchy.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.mathierchy.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.mathierchy.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_hiernxt === true) {\r\n    //             this.masterservice.getHierarchyList(\"\",'asc', this.has_hierpage+1, this.hierarchyinput.nativeElement.value)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.hierarchylist = this.hierarchylist.concat(datas);\r\n    //                 if (this.hierarchylist.length >= 0) {\r\n    //                   this.has_hiernxt = datapagination.has_next;\r\n    //                   this.has_hierpre = datapagination.has_previous;\r\n    //                   this.has_hierpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrolldept() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matdept &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matdept.panel\r\n    //   ) {\r\n    //     fromEvent(this.matdept.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matdept.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matdept.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matdept.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matdept.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_deptnxt === true) {\r\n    //             this.masterservice.getlistdepartment(this.has_deptpage+1,this.deptinput.nativeElement.value)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.employeetypelist = this.employeetypelist.concat(datas);\r\n    //                 if (this.employeetypelist.length >= 0) {\r\n    //                   this.has_deptnxt = datapagination.has_next;\r\n    //                   this.has_deptpre = datapagination.has_previous;\r\n    //                   this.has_deptpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n  autocompleteScrollsuper() {\r\n    // setTimeout(() => {\r\n    //   if (\r\n    //     this.matsuper &&\r\n    //     this.autocompleteTrigger &&\r\n    //     this.matsuper.panel\r\n    //   ) {\r\n    //     fromEvent(this.matsuper.panel.nativeElement, 'scroll')\r\n    //       .pipe(\r\n    //         map(x => this.matsuper.panel.nativeElement.scrollTop),\r\n    //         takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n    //       )\r\n    //       .subscribe(x => {\r\n    //         const scrollTop = this.matsuper.panel.nativeElement.scrollTop;\r\n    //         const scrollHeight = this.matsuper.panel.nativeElement.scrollHeight;\r\n    //         const elementHeight = this.matsuper.panel.nativeElement.clientHeight;\r\n    //         const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n    //         if (atBottom) {\r\n    //           if (this.has_supernxt === true) {\r\n    //             this.masterservice.getEmployee('','asc', this.has_superpage+1,10)\r\n    //               .subscribe((results: any[]) => {\r\n    //                 let datas = results[\"data\"];\r\n    //                 let datapagination = results[\"pagination\"];\r\n    //                 this.supervisorlist = this.supervisorlist.concat(datas);\r\n    //                 if (this.supervisorlist.length >= 0) {\r\n    //                   this.has_supernxt = datapagination.has_next;\r\n    //                   this.has_superpre = datapagination.has_previous;\r\n    //                   this.has_superpage = datapagination.index;\r\n    //                 }\r\n    //               })\r\n    //           }\r\n    //         }\r\n    //       });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  keypress(event) {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  employeecreatedata() {\r\n    console.log(this.createemploys.value)\r\n    if (this.createemploys.get('code').value.trim() == '' || this.createemploys.get('code').value == null || this.createemploys.get('code').value == undefined) {\r\n      this.notify.showError('Please Select The Code');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('name').value.trim() == '' || this.createemploys.get('name').value == null || this.createemploys.get('name').value == undefined) {\r\n      this.notify.showError('Please Select The Name');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('dob').value == '' || this.createemploys.get('dob').value == null || this.createemploys.get('dob').value == undefined) {\r\n      this.notify.showError('Please Select The DOB');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('doj').value == '' || this.createemploys.get('doj').value == null || this.createemploys.get('doj').value == undefined) {\r\n      this.notify.showError('Please Select The Date Of Joining');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('gender').value == '' || this.createemploys.get('gender').value == null || this.createemploys.get('gender').value == undefined) {\r\n      this.notify.showError('Please Select The Gender');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('employeetype').value == '' || this.createemploys.get('employeetype').value.id == null || this.createemploys.get('employeetype').value.id == undefined) {\r\n      this.notify.showError('Please Select The Department');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('designation').value == '' || this.createemploys.get('designation').value.id == null || this.createemploys.get('designation').value.id == undefined) {\r\n      this.notify.showError('Please Select The Designation');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('mobilenumber').value.length != 10 || this.createemploys.get('mobilenumber').value == null || this.createemploys.get('mobilenumber').value == undefined) {\r\n      this.notify.showError('Please Select The MobileNumber and 10 digits');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('emailid').valid == false || this.createemploys.get('emailid').value == null || this.createemploys.get('name').value == undefined) {\r\n      this.notify.showError('Please Enter The Emailid');\r\n      return false;\r\n    }\r\n    // if(this.createemploys.get('supervisor').value.id==null || this.createemploys.get('supervisor').value.id==null || this.createemploys.get('supervisor').value==undefined || this.createemploys.get('supervisor').value==''){\r\n    //   this.notify.showError('Please Enter The Supervisor');\r\n    //   return false;\r\n    // }\r\n    // if(this.createemploys.get('hierarchy').value.id==null || this.createemploys.get('hierarchy').value.id==null || this.createemploys.get('hierarchy').value==undefined || this.createemploys.get('hierarchy').value==''){\r\n    //   this.notify.showError('Please Enter The Hierarchy');\r\n    //   return false;\r\n    // }\r\n    if (this.createemploys.get('branch').value.id == null || this.createemploys.get('branch').value.id == null || this.createemploys.get('branch').value == undefined || this.createemploys.get('branch').value == '') {\r\n      this.notify.showError('Please Enter The Branch');\r\n      return false;\r\n    }\r\n    // if(this.createemploys.get('bsname').value.id==null || this.createemploys.get('bsname').value.id==null || this.createemploys.get('bsname').value==undefined || this.createemploys.get('bsname').value==''){\r\n    //   this.notify.showError('Please Enter The BS Name');\r\n    //   return false;\r\n    // }\r\n    // if(this.createemploys.get('ccname').value.id==null || this.createemploys.get('ccname').value.id==null || this.createemploys.get('ccname').value==undefined || this.createemploys.get('ccname').value==''){\r\n    //   this.notify.showError('Please Enter The CC Name');\r\n    //   return false;\r\n    // }\r\n    if (this.createemploys.get('line1').value == null || this.createemploys.get('line1').value == null || this.createemploys.get('line1').value == undefined || this.createemploys.get('line1').value == '') {\r\n      this.notify.showError('Please Enter The Line1');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('line2').value == null || this.createemploys.get('line2').value == null || this.createemploys.get('line2').value == undefined || this.createemploys.get('line2').value == '') {\r\n      this.notify.showError('Please Enter The Line2');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('line3').value == null || this.createemploys.get('line3').value == null || this.createemploys.get('line3').value == undefined || this.createemploys.get('line3').value == '') {\r\n      this.notify.showError('Please Enter The Line3');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('pincode').value.id == null || this.createemploys.get('pincode').value.id == undefined || this.createemploys.get('pincode').value == undefined || this.createemploys.get('pincode').value == '') {\r\n      this.notify.showError('Please Enter The Pincode');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('city').value.id == null || this.createemploys.get('city').value.id == undefined || this.createemploys.get('city').value == undefined || this.createemploys.get('city').value == '') {\r\n      this.notify.showError('Please Enter The City');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('district').value.id == null || this.createemploys.get('district').value.id == undefined || this.createemploys.get('district').value == undefined || this.createemploys.get('district').value == '') {\r\n      this.notify.showError('Please Enter The District');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('state').value.id == null || this.createemploys.get('state').value.id == undefined || this.createemploys.get('state').value == undefined || this.createemploys.get('state').value == '') {\r\n      this.notify.showError('Please Enter The State');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('contacttype').value == null || this.createemploys.get('contacttype').value == undefined || this.createemploys.get('contacttype').value == \"\" || this.createemploys.get('contacttype').value == '') {\r\n      this.notify.showError('Please Enter The ContactType');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('landline1').value.length != 10 || this.createemploys.get('landline1').value == undefined || this.createemploys.get('landline1').value == \"\" || this.createemploys.get('landline1').value == '') {\r\n      this.notify.showError('Please Enter The landline1');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('landline2').value.length != 10 || this.createemploys.get('landline2').value == undefined || this.createemploys.get('landline2').value == \"\" || this.createemploys.get('landline2').value == '') {\r\n      this.notify.showError('Please Enter The landline2');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('contactnumber').value.length != 10 || this.createemploys.get('contactnumber').value == undefined || this.createemploys.get('contactnumber').value == \"\" || this.createemploys.get('contactnumber').value == '') {\r\n      this.notify.showError('Please Enter The Contactnumber');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('contactnumber2').value.length != 10 || this.createemploys.get('contactnumber2').value == undefined || this.createemploys.get('contactnumber2').value == \"\" || this.createemploys.get('contactnumber2').value == '') {\r\n      this.notify.showError('Please Enter The Contactnumber');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('conemailid').valid == false || this.createemploys.get('conemailid').value == undefined || this.createemploys.get('conemailid').value == \"\" || this.createemploys.get('conemailid').value == '') {\r\n      this.notify.showError('Please Enter The Contact mailId');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('condob').value == null || this.createemploys.get('condob').value == undefined || this.createemploys.get('condob').value == \"\" || this.createemploys.get('condob').value == '') {\r\n      this.notify.showError('Please Enter The Contact DOB');\r\n      return false;\r\n    }\r\n    if (this.createemploys.get('conwedday').value == null || this.createemploys.get('conwedday').value == undefined || this.createemploys.get('conwedday').value == \"\" || this.createemploys.get('conwedday').value == '') {\r\n      this.notify.showError('Please Enter The Contact DOB');\r\n      return false;\r\n    }\r\n    console.log(this.createemploys.value);\r\n    let Gender: any = { 'Male': 1, \"Female\": 2, \"TransGender\": 3 };\r\n    let contactType = { 'EMPLOYEE': 5, 'GROUP123': 10, 'Individual': 10 };\r\n    let data: any = {\r\n      \"code\": this.createemploys.get('code').value.trim(),\r\n      \"full_name\": this.createemploys.get('name').value.trim(),\r\n      \"first_name\": \"Dwayne\",\r\n      \"middle_name\": \"Rock\",\r\n      \"last_name\": \"Johnson\",\r\n      \"dob\": this.datepipe.transform(this.createemploys.get('dob').value, 'yyyy-MM-dd'),\r\n      \"doj\": this.datepipe.transform(this.createemploys.get('doj').value, 'yyyy-MM-dd'),\r\n      \"department_id\": this.createemploys.get('employeetype').value.id,\r\n      \"gender\": Gender[this.createemploys.get('gender').value],\r\n      \"employee_type\": this.createemploys.get('employeetype').value.id,\r\n      \"designation\": this.createemploys.get('designation').value.name,\r\n      \"phone_no\": this.createemploys.get('mobilenumber').value,\r\n      \"email_id\": this.createemploys.get('emailid').value,\r\n      // \"supervisor\":this.createemploys.get('supervisor').value.id,\r\n      // \"hierarchy\":this.createemploys.get('hierarchy').value.id,\r\n      \"branch\": this.createemploys.get('branch').value.id,\r\n      // \"businesssegment\":this.createemploys.get('bsname').value.id,\r\n      // \"costcentre\":this.createemploys.get('ccname').value.id,\r\n      \"contact\": {\r\n        \"type_id\": contactType[this.createemploys.get('contacttype').value],\r\n        \"name\": this.createemploys.get('personname').value.trim(),\r\n        \"designation_id\": this.createemploys.get('condesignation').value.id,\r\n        \"landline\": this.createemploys.get('landline1').value,\r\n        \"landline2\": this.createemploys.get('landline1').value,\r\n        \"mobile\": this.createemploys.get('contactnumber').value,\r\n        \"mobile2\": this.createemploys.get('contactnumber2').value,\r\n        \"email\": this.createemploys.get('conemailid').value.trim(),\r\n        \"dob\": this.datepipe.transform(this.createemploys.get('condob').value, 'yyyy-MM-dd'),\r\n        \"wedding_date\": this.datepipe.transform(this.createemploys.get('conwedday').value, 'yyyy-MM-dd'),\r\n        \"status\": 1\r\n      },\r\n      \"address\": {\r\n        \"line1\": this.createemploys.get('line1').value.trim(),\r\n        \"line2\": this.createemploys.get('line2').value.trim(),\r\n        \"line3\": this.createemploys.get('line3').value.trim(),\r\n        \"pincode_id\": this.createemploys.get('pincode').value.id,\r\n        \"city_id\": this.createemploys.get('city').value.id,\r\n        \"district_id\": this.createemploys.get('district').value.id,\r\n        \"state_id\": this.createemploys.get('state').value.id\r\n      }\r\n    };\r\n    this.masterservice.getlistdepartmentcreate(data).subscribe(datas => {\r\n      console.log(datas);\r\n      this.createemploys.reset(''); \r\n      this.EmployeeSummaryPart = true\r\n      this.EmployeeViewPart = false \r\n      this.notify.showSuccess('Created Successfully')\r\n    },\r\n      (error) => {\r\n        this.notify.showError(error.status + error.statusText);\r\n      }\r\n    );\r\n  }\r\n\r\n  BackEmployeeAdd() {\r\n    this.createemploys.reset('') \r\n    this.EmployeeSummaryPart = true\r\n    this.EmployeeViewPart = false \r\n  }\r\n\r\n  employeeViewPage(view){\r\n    console.log(\"view data\", view)\r\n    let dataID = view.id \r\n    this.masterservice.getEmpDetails(dataID)\r\n    .subscribe(results=>{\r\n      console.log(\"result data for single emp get\", results)\r\n      let obj: any={\r\n        id: dataID,\r\n        data: results \r\n      }\r\n      this.share.employeeview.next(obj)\r\n      this.EmployeeViewPart = true  \r\n      this.EmployeeSummaryPart = false \r\n    })\r\n\r\n  }\r\n\r\n  backSummary(){\r\n\r\n    this.EmployeeViewPart = false   \r\n    this.EmployeeSummaryPart = true  \r\n\r\n  }\r\n\r\n  getemployeetrackdetails(data){\r\n    // this.masterservice.getemployeetrackdetails().subscribe(\r\n    //   result=>{\r\n    //     console.log('employeetrack',result)\r\n    //   }\r\n    // )\r\n\r\n    // this.currentPos=data?.tracker[0]\r\n    // this.points=data?.tracker\r\n\r\n    // this.points=[]\r\n    console.log('aaaaaaaaaaa',data)\r\n\r\n\r\n    // for(let i=0;i<data.length;i++){\r\n    //   console.log()\r\n    //   let obj={\r\n    //     lat: /[a-zA-Z]/g.test(data[i]?.latitude)? this.converttodegree(data[i]?.latitude):data[i]?.latitude,\r\n    //     lng: /[a-zA-Z]/g.test(data[i]?.longitude)? this.converttodegree(data[i]?.longitude):data[i]?.longitude,\r\n    //   }\r\n    //   console.log(\"obj for lat long\", obj)\r\n    //   this.points.push(obj)\r\n    // }\r\n    this.currentPos=data[0]\r\n\r\n    console.log('aaaaaaaaaaa2', data,this.currentPos)\r\n\r\n\r\n  }\r\n\r\n  converttodegree(value){\r\n    let data=value.split(/[^\\d\\w\\.]+/); \r\n    \r\n    var dd = Number(data[0]) + Number(data[1])/60 + Number(data[2])/(60*60);\r\n    if (data[3] == \"S\" || data[3] == \"W\") {\r\n      dd = dd * -1;\r\n  } \r\n  return dd\r\n  }\r\n\r\n  onMouseOver(infoWindow, $event: MouseEvent) {\r\n    infoWindow.open();\r\n}\r\n\r\nonMouseOut(infoWindow, $event: MouseEvent) {\r\n    infoWindow.close();\r\n}\r\n\r\ngetemployeecomment(id){\r\n  this.masterservice.employeecomments(id).subscribe(\r\n    result=>{\r\n      this.employeecomments=result['data']\r\n    }\r\n  )\r\n}\r\n\r\n\r\nShiftMappingEmployeeget(data) {\r\n  this.attendanceService.getShiftMappingEmployee(data)\r\n    .subscribe((results) => {\r\n      this.employeesearchdata = results[\"data\"];\r\n      console.log(results);\r\n    });\r\n}\r\n\r\npublic displayShiftmapping(typ?: typelistss): string | undefined {\r\n  return typ ? typ.full_name : undefined;\r\n}\r\n\r\n}\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"col-md-12\" *ngIf=\"EmployeeSummaryPart\">\r\n    <h2>Employee Track Summary</h2>\r\n    <form [formGroup]=\"EmployeeSummarySearch\" style=\"margin-left: 20px;\">\r\n        <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-md-3\">\r\n                <!-- <mat-label>Code/Name</mat-label><br>\r\n                <mat-form-field class=\"matformfieldstyle\">\r\n                    <input class=\"matformfieldinputstyle\" type=\"text\" matInput autocomplete=\"off\"\r\n                        placeholder=\"Code/Name\" formControlName=\"codename\">\r\n                </mat-form-field> -->\r\n                <mat-label>Employee Name</mat-label><br>\r\n                            <mat-form-field appearance=\"outline\" class=\"matformfieldstyle\" style=\"width: 250px;\"\r\n                                (click)=\"ShiftMappingEmployeeget('')\">\r\n                                <input class=\"matformfieldinputstyle\" matInput placeholder=\"Select\"\r\n                                    [matAutocomplete]=\"shift\"\r\n                                    (keyup)=\"ShiftMappingEmployeeget(EmployeeSummarySearch.value.codename)\"\r\n                                    formControlName=\"codename\" autocomplete=\"off\">\r\n                                <mat-autocomplete #shift=\"matAutocomplete\" [displayWith]=\"displayShiftmapping\">\r\n                                    <mat-option *ngFor=\"let employee of employeesearchdata\" [value]=\"employee\">\r\n                                        {{employee.full_name}}\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-3\" >\r\n                <mat-label>Date</mat-label><br>\r\n                <mat-form-field >\r\n                   \r\n                    <input matInput [matDatepicker]=\"log_date\" formControlName=\"logdate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"log_date\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #log_date disabled=\"false\"></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div style=\"margin-top: 26px;\">\r\n                    <button mat-stroked-button type=\"button\" style=\"margin-left: 20px;background-color: white;\"\r\n                        aria-label=\"Search\" (click)=\"serviceCallEmployeeSummary(this.presentpageEmployee=1)\">\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                    <button mat-stroked-button type=\"button\" style=\"margin-left: 20px;background-color: white;\"\r\n                        (click)=\"resetEmployee()\">Clear</button>\r\n\r\n                    <!-- <button mat-stroked-button type=\"button\" style=\"margin-left: 20px;background-color: white;\"\r\n                        (click)=\"AddEmployee()\">Add Employee</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n\r\n\r\n    <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n\r\n        <table class=\"table table-bordered tablepaddingsizeheader aligncenter\"\r\n            style=\"margin-top: 10px;max-width: 100%;text-align: center;\" id='commonstyle'>\r\n            <thead class=\"table_header\">\r\n                <tr>\r\n                    <th>S.No</th>\r\n                    <th>Employee Code</th>\r\n                    <th>Employee Name</th>\r\n                    <!-- <th>Employee Designation</th> -->\r\n                    <th>Date</th>\r\n                    <th>Location St.point</th>\r\n                    <th>Location Ed.point</th>\r\n                    <th>Comments</th>\r\n                    <th>View Route</th>\r\n                    <th>View</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let emp of EmployeeList; let empindex = index\">\r\n                    <td>{{(presentpageEmployee-1)*10+empindex+1}}</td>\r\n                    <td>{{emp?.employee_id?.code}}</td>\r\n                    <td>{{emp?.employee_id?.full_name}}</td>\r\n                    <td>{{emp?.log_date | date:'MMM d, y'}}</td>\r\n                    <td>{{emp?.tracker[0]?.remarks}}</td>\r\n                    <td>{{emp?.tracker[emp?.tracker?.length-1]?.remarks}}</td>\r\n\r\n                    <!-- <td>Chennai</td> -->\r\n                    <td>\r\n                        <button mat-icon-button data-bs-toggle=\"modal\" (click)=\"getemployeecomment(emp.employee_id.id)\"\r\n                            data-bs-target=\"#commentview\">\r\n                            <mat-icon>view_list</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <button mat-icon-button data-bs-toggle=\"modal\" (click)=\"getemployeelog(emp)\"\r\n                            data-bs-target=\"#routeview\">\r\n                            <mat-icon>visibility</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                    <!-- <td>{{emp?.designation}}</td> -->\r\n                    <!-- <td><span class=\"material-icons\" (click)=\"employeeViewPage(emp)\">visibility</span></td> -->\r\n                    <td>\r\n                        <button mat-icon-button data-bs-toggle=\"modal\" (click)=\"getemployeelog(emp)\"\r\n                            data-bs-target=\"#mapview\"><i class=\"fa fa-map-marker iconcolor\"\r\n                                aria-hidden=\"true\"></i></button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <div *ngIf=\"EmployeeList?.length==0 || EmployeeList == undefined ; else paginationpro\"\r\n            class=\"NodataAlign text-center\">No Records Found...</div>\r\n        <ng-template #paginationpro>\r\n            <div class=\"col-sm-12\" style=\"font-size: small;text-align: right;margin-bottom: 5%;\">\r\n                <button type=\"button\" mat-icon-button [disabled]=\"has_previousEmployee === false\" color=\"primary\"\r\n                    (click)=\"paginationsearch('previous')\">\r\n                    <mat-icon>arrow_back</mat-icon>\r\n                </button> {{presentpageEmployee}}\r\n                <button type=\"button\" mat-icon-button [disabled]=\"has_nextEmployee === false\" color=\"primary\"\r\n                    (click)=\"paginationsearch('next')\">\r\n                    <mat-icon>arrow_forward</mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf=\"EmployeeViewPart\">\r\n\r\n    <app-employee-info (backToSummary)=\"backSummary()\"></app-employee-info>\r\n\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"mapview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-xl\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\" style=\"background:#21cbe5;\">\r\n                <h2 class=\"modal-title\" id=\"exampleModalLabel\">Map</h2>\r\n                <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-body\">\r\n                <!-- <p>{{currentPos?.latitude}} {{currentPos?.longitude}} </p>\r\n                <tr *ngFor=\"let point of points\">\r\n                    <td>{{point?.latitude}} {{point?.longitude}}</td>\r\n                </tr> -->\r\n                <!-- <agm-map [latitude]=\"+ currentPos?.latitude\" [longitude]=\"+ currentPos?.longitude\" [zoom]=\"15\"\r\n                    [disableDefaultUI]=\"false\" [zoomControl]=\"false\"  [fullscreenControl]='true' [mapTypeControl]='true'  >\r\n                    <agm-marker *ngFor=\"let point of points;let i=index\" [latitude]=\"+ point?.latitude\" label=\"{{i+1}}\" [animation]=\"'DROP'\"\r\n                        [longitude]=\"+ point?.longitude\" (mouseOver)=\"onMouseOver(infoWindow, $event)\"\r\n                        (mouseOut)=\"onMouseOut(infoWindow, $event)\">\r\n\r\n                        <agm-info-window [disableAutoPan]=\"true\" #infoWindow>\r\n\r\n                            <div>\r\n                                <p>Login Time - {{point.log_time | date:'MMM d, y, h:mm:ss a'}}</p>\r\n                                <p>{{point.remarks}}</p>\r\n                            </div>\r\n                          \r\n\r\n                        </agm-info-window>\r\n                    </agm-marker>\r\n                    \r\n                    <agm-polyline strokeColor=\"red\">\r\n                        <agm-polyline-point *ngFor=\"let point of points\" [latitude]=\"+ point.latitude\"\r\n                            [longitude]=\"+ point.longitude\"></agm-polyline-point>\r\n                    </agm-polyline>\r\n\r\n                </agm-map> -->\r\n\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <!-- <button type=\"button\" class=\"btn btn-light\" style=\"border-radius: 7px;margin-left: 10px;\r\n                                            border-color: black;\r\n                                            background-color: white;\" data-bs-dismiss=\"modal\">Close</button>\r\n\r\n            <button type=\"button\" style=\"border-radius: 10px;margin-left: 10px;\r\n                                        border-color: #f5c68b; background-color: #f5c68b;\"\r\n                class=\"btn btn-light\"  data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#exampleModal\">Submit</button> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"routeview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\" style=\"background:#21cbe5;\">\r\n                <h2 class=\"modal-title\" id=\"exampleModalLabel\" style=\"font-weight:bold\">Route</h2>\r\n                <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-body\">\r\n\r\n                <table style=\"text-align:center;font-size: 18px;margin:auto\">\r\n                    <!-- <tr>\r\n                    <th>S.No</th>\r\n                    <th>Date</th>\r\n                    <th>Route</th>\r\n                </tr> -->\r\n                    <tr *ngFor=\"let point of points;let i=index\">\r\n                        <td class=\"pad\"><span style=\"font-weight: bold;\">Date : </span><span>{{point?.log_time |\r\n                                date:\"dd-MMM-yyyy\" }}</span></td>\r\n                        <td class=\"pad\"><span style=\"font-weight: bold;\">Time : </span><span>{{point?.log_time |\r\n                                date:\"h:mm:ss a\"}}</span></td>\r\n                        <td class=\"pad\"><span style=\"font-weight: bold;\">Location :\r\n                            </span><span>{{point?.remarks}}</span></td>\r\n                    </tr>\r\n                </table>\r\n\r\n\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <!-- <button type=\"button\" class=\"btn btn-light\" style=\"border-radius: 7px;margin-left: 10px;\r\n                                            border-color: black;\r\n                                            background-color: white;\" data-bs-dismiss=\"modal\">Close</button>\r\n\r\n            <button type=\"button\" style=\"border-radius: 10px;margin-left: 10px;\r\n                                        border-color: #f5c68b; background-color: #f5c68b;\"\r\n                class=\"btn btn-light\"  data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#exampleModal\">Submit</button> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"commentview\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n    aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\" style=\"background:#21cbe5;\">\r\n                <h2 class=\"modal-title\" id=\"exampleModalLabel\" style=\"font-weight:bold\">Comments</h2>\r\n                <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-body\">\r\n\r\n                <!-- <table  style=\"text-align:center;font-size: 18px;margin:auto\">\r\n                 \r\n                <tr *ngFor=\"let point of points;let i=index\" > \r\n                    <td class=\"pad\" ><span style=\"font-weight: bold;\" >Date : </span><span>{{point?.log_time | date:\"dd-MMM-yyyy\" }}</span></td>\r\n                    <td class=\"pad\" ><span style=\"font-weight: bold;\" >Time : </span><span>{{point?.log_time  | date:\"h:mm:ss a\"}}</span></td>\r\n                    <td class=\"pad\" ><span style=\"font-weight: bold;\" >Location : </span><span>{{point?.remarks}}</span></td>\r\n                </tr>\r\n                </table> -->\r\n\r\n                <div class=\"container\">\r\n                    <div class=\"card\" style=\"margin:10px\" *ngFor=\"let cmt of employeecomments;let i=index\" >\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-2\">\r\n                                    <img src=\"https://image.ibb.co/jw55Ex/def_face.jpg\"\r\n                                        class=\"img img-rounded img-fluid\" />\r\n                                    <p class=\"text-secondary text-center\">{{cmt.created_date | date:'MMM d, y, h:mm:ss a'}}</p>\r\n                                </div>\r\n                                <div class=\"col-md-10\">\r\n                                    <p>\r\n                                        <a class=\"float-left\"><strong>{{cmt?.employee_id?.full_name}}</strong></a>\r\n                                    </p>\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <p>{{cmt?.note}}</p>\r\n                                    <!-- <p>\r\n                                        <a class=\"float-right btn btn-outline-primary ml-2\"> <i class=\"fa fa-reply\"></i> Reply</a>\r\n                                        <a class=\"float-right btn text-white btn-danger\"> <i class=\"fa fa-heart\"></i> Like</a>\r\n                                   </p> -->\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div style=\"display:flex;justify-content: center;\"  *ngIf=\"employeecomments?.length ==0\" >\r\n                        <p>No Comments</p>\r\n                    </div>  \r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <!-- <button type=\"button\" class=\"btn btn-light\" style=\"border-radius: 7px;margin-left: 10px;\r\n                                            border-color: black;\r\n                                            background-color: white;\" data-bs-dismiss=\"modal\">Close</button>\r\n\r\n            <button type=\"button\" style=\"border-radius: 10px;margin-left: 10px;\r\n                                        border-color: #f5c68b; background-color: #f5c68b;\"\r\n                class=\"btn btn-light\"  data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#exampleModal\">Submit</button> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"mappings":"AAAA,SAAmBA,UAAU,QAAQ,iBAAiB;AACtD,SAAgCC,YAAY,QAAmC,eAAe;AAC9F,SAAsBC,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;AAChF,SAA0BC,sBAAsB,QAAQ,gCAAgC;AACxF,SAASC,iBAAiB,QAAQ,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICgBtBC,EAAA,CAAAC,cAAA,qBAA2E;IACvED,EAAA,CAAAE,MAAA,GACJ;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF2CH,EAAA,CAAAI,UAAA,UAAAC,YAAA,CAAkB;IACtEL,EAAA,CAAAM,SAAA,GACJ;IADIN,EAAA,CAAAO,kBAAA,MAAAF,YAAA,CAAAG,SAAA,MACJ;;;;;;IAkDpBR,EAAA,CAAAC,cAAA,SAA2D;IACnDD,EAAA,CAAAE,MAAA,GAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClDH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmC;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5CH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAA4B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACrCH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,IAAiD;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAG1DH,EAAA,CAAAC,cAAA,UAAI;IAC+CD,EAAA,CAAAS,UAAA,mBAAAC,qEAAA;MAAA,MAAAC,WAAA,GAAAX,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,OAAA,GAAAhB,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAF,OAAA,CAAAG,kBAAA,CAAAL,OAAA,CAAAM,WAAA,CAAAC,EAAA,CAAsC;IAAA,EAAC;IAE3FrB,EAAA,CAAAC,cAAA,gBAAU;IAAAD,EAAA,CAAAE,MAAA,iBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAGtCH,EAAA,CAAAC,cAAA,UAAI;IAC+CD,EAAA,CAAAS,UAAA,mBAAAa,qEAAA;MAAA,MAAAX,WAAA,GAAAX,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAQ,OAAA,GAAAvB,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAK,OAAA,CAAAC,cAAA,CAAAV,OAAA,CAAmB;IAAA,EAAC;IAExEd,EAAA,CAAAC,cAAA,gBAAU;IAAAD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAKvCH,EAAA,CAAAC,cAAA,UAAI;IAC+CD,EAAA,CAAAS,UAAA,mBAAAgB,qEAAA;MAAA,MAAAd,WAAA,GAAAX,EAAA,CAAAY,aAAA,CAAAC,IAAA;MAAA,MAAAC,OAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAW,OAAA,GAAA1B,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAQ,OAAA,CAAAF,cAAA,CAAAV,OAAA,CAAmB;IAAA,EAAC;IAC9Cd,EAAA,CAAA2B,SAAA,aACC;IAAA3B,EAAA,CAAAG,YAAA,EAAS;;;;;;IAzBxCH,EAAA,CAAAM,SAAA,GAAyC;IAAzCN,EAAA,CAAA4B,iBAAA,EAAAC,MAAA,CAAAC,mBAAA,aAAAC,YAAA,KAAyC;IACzC/B,EAAA,CAAAM,SAAA,GAA0B;IAA1BN,EAAA,CAAA4B,iBAAA,CAAAd,OAAA,kBAAAA,OAAA,CAAAM,WAAA,kBAAAN,OAAA,CAAAM,WAAA,CAAAY,IAAA,CAA0B;IAC1BhC,EAAA,CAAAM,SAAA,GAA+B;IAA/BN,EAAA,CAAA4B,iBAAA,CAAAd,OAAA,kBAAAA,OAAA,CAAAM,WAAA,kBAAAN,OAAA,CAAAM,WAAA,CAAAZ,SAAA,CAA+B;IAC/BR,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAA4B,iBAAA,CAAA5B,EAAA,CAAAiC,WAAA,OAAAnB,OAAA,kBAAAA,OAAA,CAAAoB,QAAA,cAAmC;IACnClC,EAAA,CAAAM,SAAA,GAA4B;IAA5BN,EAAA,CAAA4B,iBAAA,CAAAd,OAAA,kBAAAA,OAAA,CAAAqB,OAAA,qBAAArB,OAAA,CAAAqB,OAAA,IAAAC,OAAA,CAA4B;IAC5BpC,EAAA,CAAAM,SAAA,GAAiD;IAAjDN,EAAA,CAAA4B,iBAAA,CAAAd,OAAA,kBAAAA,OAAA,CAAAqB,OAAA,EAAArB,OAAA,kBAAAA,OAAA,CAAAqB,OAAA,kBAAArB,OAAA,CAAAqB,OAAA,CAAAE,MAAA,wBAAAvB,OAAA,CAAAqB,OAAA,EAAArB,OAAA,kBAAAA,OAAA,CAAAqB,OAAA,kBAAArB,OAAA,CAAAqB,OAAA,CAAAE,MAAA,OAAAD,OAAA,CAAiD;;;;;IAyBjEpC,EAAA,CAAAC,cAAA,cACoC;IAAAD,EAAA,CAAAE,MAAA,0BAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAEzDH,EAAA,CAAAC,cAAA,cAAqF;IAE7ED,EAAA,CAAAS,UAAA,mBAAA6B,6EAAA;MAAAtC,EAAA,CAAAY,aAAA,CAAA2B,IAAA;MAAA,MAAAC,OAAA,GAAAxC,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAsB,OAAA,CAAAC,gBAAA,CAAiB,UAAU,CAAC;IAAA,EAAC;IACtCzC,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAW;IACzBH,EAAA,CAAAE,MAAA,GACV;IAAAF,EAAA,CAAAC,cAAA,iBACuC;IAAnCD,EAAA,CAAAS,UAAA,mBAAAiC,6EAAA;MAAA1C,EAAA,CAAAY,aAAA,CAAA2B,IAAA;MAAA,MAAAI,OAAA,GAAA3C,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAyB,OAAA,CAAAF,gBAAA,CAAiB,MAAM,CAAC;IAAA,EAAC;IAClCzC,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAW;;;;IANAH,EAAA,CAAAM,SAAA,GAA2C;IAA3CN,EAAA,CAAAI,UAAA,aAAAwC,OAAA,CAAAC,oBAAA,WAA2C;IAGvE7C,EAAA,CAAAM,SAAA,GACV;IADUN,EAAA,CAAAO,kBAAA,MAAAqC,OAAA,CAAAd,mBAAA,MACV;IAAsC9B,EAAA,CAAAM,SAAA,GAAuC;IAAvCN,EAAA,CAAAI,UAAA,aAAAwC,OAAA,CAAAE,gBAAA,WAAuC;;;;;;IA/G7F9C,EAAA,CAAAC,cAAA,cAAmD;IAC3CD,EAAA,CAAAE,MAAA,6BAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/BH,EAAA,CAAAC,cAAA,eAAqE;IAU9CD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAAAH,EAAA,CAAA2B,SAAA,SAAI;IAC5B3B,EAAA,CAAAC,cAAA,yBAC0C;IAAtCD,EAAA,CAAAS,UAAA,mBAAAsC,sEAAA;MAAA/C,EAAA,CAAAY,aAAA,CAAAoC,IAAA;MAAA,MAAAC,OAAA,GAAAjD,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAA+B,OAAA,CAAAC,uBAAA,CAAwB,EAAE,CAAC;IAAA,EAAC;IACrClD,EAAA,CAAAC,cAAA,iBAGkD;IAD9CD,EAAA,CAAAS,UAAA,mBAAA0C,8DAAA;MAAAnD,EAAA,CAAAY,aAAA,CAAAoC,IAAA;MAAA,MAAAI,OAAA,GAAApD,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAkC,OAAA,CAAAF,uBAAA,CAAAE,OAAA,CAAAC,qBAAA,CAAAC,KAAA,CAAAC,QAAA,CAA6D;IAAA,EAAC;IAF3EvD,EAAA,CAAAG,YAAA,EAGkD;IAClDH,EAAA,CAAAC,cAAA,gCAA+E;IAC3ED,EAAA,CAAAwD,UAAA,KAAAC,mDAAA,yBAEa;IACjBzD,EAAA,CAAAG,YAAA,EAAmB;IAGvCH,EAAA,CAAAC,cAAA,eAAuB;IACRD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAY;IAAAH,EAAA,CAAA2B,SAAA,UAAI;IAC/B3B,EAAA,CAAAC,cAAA,sBAAiB;IAEbD,EAAA,CAAA2B,SAAA,iBAAqE;IAGzE3B,EAAA,CAAAG,YAAA,EAAiB;IAErBH,EAAA,CAAAC,cAAA,eAAsB;IAGUD,EAAA,CAAAS,UAAA,mBAAAiD,+DAAA;MAAA1D,EAAA,CAAAY,aAAA,CAAAoC,IAAA;MAAA,MAAAW,OAAA,GAAA3D,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAAyC,OAAA,CAAAC,0BAAA,CAAAD,OAAA,CAAA7B,mBAAA,GAAoD,CAAC,CAAC;IAAA,EAAC;IACpF9B,EAAA,CAAAC,cAAA,gBAAU;IAAAD,EAAA,CAAAE,MAAA,cAAM;IAAAF,EAAA,CAAAG,YAAA,EAAW;IAE/BH,EAAA,CAAAC,cAAA,kBAC8B;IAA1BD,EAAA,CAAAS,UAAA,mBAAAoD,+DAAA;MAAA7D,EAAA,CAAAY,aAAA,CAAAoC,IAAA;MAAA,MAAAc,OAAA,GAAA9D,EAAA,CAAAiB,aAAA;MAAA,OAASjB,EAAA,CAAAkB,WAAA,CAAA4C,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAAC/D,EAAA,CAAAE,MAAA,aAAK;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAW5DH,EAAA,CAAAC,cAAA,eAA2C;IAMvBD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACbH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,qBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACtBH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,qBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAEtBH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACbH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,yBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,yBAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,gBAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACjBH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,kBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACnBH,EAAA,CAAAC,cAAA,UAAI;IAAAD,EAAA,CAAAE,MAAA,YAAI;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAGrBH,EAAA,CAAAC,cAAA,aAAO;IACHD,EAAA,CAAAwD,UAAA,KAAAQ,2CAAA,kBA4BK;IACThE,EAAA,CAAAG,YAAA,EAAQ;IAEZH,EAAA,CAAAwD,UAAA,KAAAS,4CAAA,kBAC6D;IAC7DjE,EAAA,CAAAwD,UAAA,KAAAU,oDAAA,iCAAAlE,EAAA,CAAAmE,sBAAA,CAWc;IAGlBnE,EAAA,CAAAG,YAAA,EAAM;;;;;;;IArHAH,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAAI,UAAA,cAAAgE,MAAA,CAAAf,qBAAA,CAAmC;IAcTrD,EAAA,CAAAM,SAAA,GAAyB;IAAzBN,EAAA,CAAAI,UAAA,oBAAAiE,GAAA,CAAyB;IAGcrE,EAAA,CAAAM,SAAA,GAAmC;IAAnCN,EAAA,CAAAI,UAAA,gBAAAgE,MAAA,CAAAE,mBAAA,CAAmC;IACzCtE,EAAA,CAAAM,SAAA,GAAqB;IAArBN,EAAA,CAAAI,UAAA,YAAAgE,MAAA,CAAAG,kBAAA,CAAqB;IAUtDvE,EAAA,CAAAM,SAAA,GAA0B;IAA1BN,EAAA,CAAAI,UAAA,kBAAAoE,GAAA,CAA0B;IACTxE,EAAA,CAAAM,SAAA,GAAgB;IAAhBN,EAAA,CAAAI,UAAA,QAAAoE,GAAA,CAAgB;IAyCjCxE,EAAA,CAAAM,SAAA,IAAiB;IAAjBN,EAAA,CAAAI,UAAA,YAAAgE,MAAA,CAAAK,YAAA,CAAiB;IA+BvCzE,EAAA,CAAAM,SAAA,GAA6D;IAA7DN,EAAA,CAAAI,UAAA,UAAAgE,MAAA,CAAAK,YAAA,kBAAAL,MAAA,CAAAK,YAAA,CAAApC,MAAA,UAAA+B,MAAA,CAAAK,YAAA,IAAAC,SAAA,CAA6D,aAAAC,IAAA;;;;;;IAuB3E3E,EAAA,CAAAC,cAAA,UAA8B;IAEPD,EAAA,CAAAS,UAAA,2BAAAmE,iFAAA;MAAA5E,EAAA,CAAAY,aAAA,CAAAiE,IAAA;MAAA,MAAAC,OAAA,GAAA9E,EAAA,CAAAiB,aAAA;MAAA,OAAiBjB,EAAA,CAAAkB,WAAA,CAAA4D,OAAA,CAAAC,WAAA,EAAa;IAAA,EAAC;IAAC/E,EAAA,CAAAG,YAAA,EAAoB;;;;;IAgFvDH,EAAA,CAAAC,cAAA,SAA6C;IACQD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAAAH,EAAA,CAAAC,cAAA,WAAM;IAAAD,EAAA,CAAAE,MAAA,GACxC;;IAAAF,EAAA,CAAAG,YAAA,EAAO;IACpCH,EAAA,CAAAC,cAAA,aAAgB;IAAiCD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAAAH,EAAA,CAAAC,cAAA,YAAM;IAAAD,EAAA,CAAAE,MAAA,IAC3C;;IAAAF,EAAA,CAAAG,YAAA,EAAO;IACjCH,EAAA,CAAAC,cAAA,cAAgB;IAAiCD,EAAA,CAAAE,MAAA,mBAC7C;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAAAH,EAAA,CAAAC,cAAA,YAAM;IAAAD,EAAA,CAAAE,MAAA,IAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;IAL2BH,EAAA,CAAAM,SAAA,GACxC;IADwCN,EAAA,CAAA4B,iBAAA,CAAA5B,EAAA,CAAAiC,WAAA,OAAA+C,SAAA,kBAAAA,SAAA,CAAAC,QAAA,iBACxC;IACwCjF,EAAA,CAAAM,SAAA,GAC3C;IAD2CN,EAAA,CAAA4B,iBAAA,CAAA5B,EAAA,CAAAiC,WAAA,QAAA+C,SAAA,kBAAAA,SAAA,CAAAC,QAAA,eAC3C;IAETjF,EAAA,CAAAM,SAAA,GAAkB;IAAlBN,EAAA,CAAA4B,iBAAA,CAAAoD,SAAA,kBAAAA,SAAA,CAAA5C,OAAA,CAAkB;;;;;IA6CvCpC,EAAA,CAAAC,cAAA,cAAwF;IAIxED,EAAA,CAAA2B,SAAA,cACwC;IACxC3B,EAAA,CAAAC,cAAA,YAAsC;IAAAD,EAAA,CAAAE,MAAA,GAAiD;;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAE/FH,EAAA,CAAAC,cAAA,cAAuB;IAEeD,EAAA,CAAAE,MAAA,IAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAE1EH,EAAA,CAAA2B,SAAA,eAA4B;IAC5B3B,EAAA,CAAAC,cAAA,SAAG;IAAAD,EAAA,CAAAE,MAAA,IAAa;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAPkBH,EAAA,CAAAM,SAAA,GAAiD;IAAjDN,EAAA,CAAA4B,iBAAA,CAAA5B,EAAA,CAAAiC,WAAA,OAAAiD,OAAA,CAAAC,YAAA,yBAAiD;IAIrDnF,EAAA,CAAAM,SAAA,GAA+B;IAA/BN,EAAA,CAAA4B,iBAAA,CAAAsD,OAAA,kBAAAA,OAAA,CAAA9D,WAAA,kBAAA8D,OAAA,CAAA9D,WAAA,CAAAZ,SAAA,CAA+B;IAG9DR,EAAA,CAAAM,SAAA,GAAa;IAAbN,EAAA,CAAA4B,iBAAA,CAAAsD,OAAA,kBAAAA,OAAA,CAAAE,IAAA,CAAa;;;;;IAUhCpF,EAAA,CAAAC,cAAA,cAA0F;IACnFD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;ADpN1C,OAAO,MAAMkF,YAAY,GAAG;EAC1BC,KAAK,EAAE;IAAEC,SAAS,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,IAAI,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAS;EAAE,CAAE;EACzEC,OAAO,EAAE;IACPJ,SAAS,EAAE,OAAO;IAClBK,cAAc,EAAE;MAAEH,IAAI,EAAE,SAAS;MAAED,KAAK,EAAE;IAAO,CAAE;IACnDK,aAAa,EAAE;MAAEJ,IAAI,EAAE,SAAS;MAAED,KAAK,EAAE,MAAM;MAAEE,GAAG,EAAE;IAAS,CAAE;IACjEI,kBAAkB,EAAE;MAAEL,IAAI,EAAE,SAAS;MAAED,KAAK,EAAE;IAAM;;CAEvD;AAGD,MAAMO,eAAgB,SAAQhG,iBAAiB;EAC7CiG,MAAMA,CAACC,IAAU,EAAEC,aAAqB;IACtC,IAAIA,aAAa,KAAK,OAAO,EAAE;MAC7B,OAAOxG,UAAU,CAACuG,IAAI,EAAE,aAAa,EAAE,IAAI,CAACE,MAAM,CAAC;KACpD,MAAM;MACL,OAAOF,IAAI,CAACG,YAAY,EAAE;;EAE9B;;AAQF,OAAM,MAAOC,sBAAsB;EAMbC,EAAA;EAAyBC,MAAA;EAAqCC,QAAA;EACxEC,aAAA;EAA0CC,KAAA;EAA4CC,cAAA;EACtFC,KAAA;EAAuBC,KAAA;EAAkCC,iBAAA;EAPnEC,MAAM,GAAK,EAAE;EACbC,UAAU,GAAO,EAAE;EACnBC,gBAAgB,GAAC,EAAE;EACnB1C,kBAAkB;EAElB2C,YAAoBZ,EAAe,EAAUC,MAA2B,EAAUC,QAAkB,EAC1FC,aAAgC,EAAUC,KAAkC,EAAUC,cAAiC,EACvHC,KAAa,EAAUC,KAAwB,EAAUC;EACjE;EAAA,E;IAHkB,KAAAR,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAA+B,KAAAC,QAAQ,GAARA,QAAQ;IAChF,KAAAC,aAAa,GAAbA,aAAa;IAA6B,KAAAC,KAAK,GAALA,KAAK;IAAuC,KAAAC,cAAc,GAAdA,cAAc;IACpG,KAAAC,KAAK,GAALA,KAAK;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAA6B,KAAAC,iBAAiB,GAAjBA,iBAAiB;EAE9E;EAENzD,qBAAqB;EACrB8D,aAAa;EAEbC,mBAAmB,GAAY,IAAI;EACnCC,gBAAgB,GAAY,KAAK;EAEjCC,SAAS,GAAW,EAAE;EACtBC,SAAS,GAAW,EAAE;EACtBC,KAAK,GAAG,IAAIC,IAAI,EAAE;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,sBAAsB,GAAC;IACrBC,QAAQ,EAAC,IAAI;IACbC,SAAS,EAAC,IAAI;IACdC,KAAK,EAAC;GACP;EAEDC,QAAQA,CAAA;IAEN,IAAI,CAACzE,qBAAqB,GAAG,IAAI,CAACiD,EAAE,CAACyB,KAAK,CAAC;MACzCxE,QAAQ,EAAE,EAAE;MACZyE,OAAO,EAAC;KACT,CAAC;IAEF,IAAI,CAACb,aAAa,GAAG,IAAI,CAACb,EAAE,CAACyB,KAAK,CAAC;MACjC,MAAM,EAAE,IAAInI,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACoI,QAAQ,CAAC;MAChD,MAAM,EAAE,IAAIrI,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACoI,QAAQ,CAAC;MAChD,KAAK,EAAE,IAAIrI,WAAW,CAAC,EAAE,CAAC;MAC1B,KAAK,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC1B,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,cAAc,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACnC,aAAa,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAClC,cAAc,EAAE,IAAIA,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyH,SAAS,CAAC,EAAE,CAAC,EAAEzH,UAAU,CAAC0H,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACzF,SAAS,EAAE,IAAI3H,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqI,KAAK,CAAC,CAAC;MAClD;MACA;MACA,QAAQ,EAAE,IAAItI,WAAW,CAAC,EAAE,CAAC;MAC7B;MACA;MACA,OAAO,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC5B,OAAO,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC5B,OAAO,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC5B,SAAS,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC9B,MAAM,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC3B,UAAU,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC/B,OAAO,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC5B,aAAa,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAClC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,gBAAgB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACrC,WAAW,EAAE,IAAIA,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyH,SAAS,CAAC,EAAE,CAAC,EAAEzH,UAAU,CAAC0H,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACtF,WAAW,EAAE,IAAI3H,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyH,SAAS,CAAC,EAAE,CAAC,EAAEzH,UAAU,CAAC0H,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACtF,eAAe,EAAE,IAAI3H,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyH,SAAS,CAAC,EAAE,CAAC,EAAEzH,UAAU,CAAC0H,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1F,gBAAgB,EAAE,IAAI3H,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACyH,SAAS,CAAC,EAAE,CAAC,EAAEzH,UAAU,CAAC0H,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3F,YAAY,EAAE,IAAI3H,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACqI,KAAK,CAAC,CAAC;MACrD,QAAQ,EAAE,IAAItI,WAAW,CAAC,EAAE,CAAC;MAC7B,WAAW,EAAE,IAAIA,WAAW,CAAC,EAAE;KAChC,CAAC;IACF;IACA,IAAI,CAACgE,0BAA0B,CAAC,IAAI,CAAC9B,mBAAmB,GAAC,CAAC,CAAC;EAC7D;EAEA2C,YAAY;EACZ3B,gBAAgB;EAChBD,oBAAoB;EACpBf,mBAAmB,GAAQ,CAAC;EAElBqG,QAAQ,GAAG,IAAIxI,YAAY,EAAO;EAClCyI,QAAQ,GAAG,IAAIzI,YAAY,EAAO;EACT0I,mBAAmB;EAC7BC,SAAS;EACRC,WAAW;EACZC,SAAS;EACRC,WAAW;EAChBC,SAAS;EACRC,OAAO;EACRC,SAAS;EACRC,OAAO;EACHC,UAAU;EACTC,YAAY;EAChBC,OAAO;EACNC,SAAS;EACNC,WAAW;EACVC,aAAa;EACjBC,QAAQ;EACPC,UAAU;EACPC,YAAY;EACXC,cAAc;EACfC,UAAU;EACVC,cAAc;EACnBC,OAAO;EACNC,SAAS;EACTC,QAAQ;EACPC,UAAU;EACnCC,SAAS,GAAY,KAAK;EAC1BC,eAAe,GAAe,EAAE;EAChCC,YAAY,GAAe,EAAE;EAC7BC,UAAU,GAAe,EAAE;EAC3BC,UAAU,GAAe,EAAE;EAC3BC,cAAc,GAAe,EAAE;EAC/BC,WAAW,GAAe,EAAE;EAC5BC,QAAQ,GAAe,EAAE;EACzBC,YAAY,GAAe,EAAE;EAC7BC,SAAS,GAAe,EAAE;EAC1BC,mBAAmB,GAAe,EAAE;EACpCC,gBAAgB,GAAe,EAAE;EACjCC,aAAa,GAAe,EAAE;EAC9BC,cAAc,GAAe,EAAE;EAC/BC,UAAU,GAAW,CAAC;EACtBC,aAAa,GAAY,KAAK;EAC9BC,cAAc,GAAY,KAAK;EAC/B7E,IAAI,GAAQ,IAAIwB,IAAI,EAAE;EACtBsD,SAAS,GAAY,IAAI;EACzBC,SAAS,GAAY,KAAK;EAC1BC,UAAU,GAAW,CAAC;EAEtBC,SAAS,GAAY,IAAI;EACzBC,SAAS,GAAY,KAAK;EAC1BC,UAAU,GAAW,CAAC;EAEtBC,aAAa,GAAY,IAAI;EAC7BC,aAAa,GAAY,KAAK;EAC9BC,cAAc,GAAW,CAAC;EAC1BC,cAAc,GAAY,IAAI;EAC9BC,cAAc,GAAY,KAAK;EAC/BC,eAAe,GAAW,CAAC;EAC3BC,WAAW,GAAY,IAAI;EAC3BC,WAAW,GAAY,KAAK;EAC5BC,YAAY,GAAW,CAAC;EACxBC,eAAe,GAAY,IAAI;EAC/BC,eAAe,GAAY,KAAK;EAChCC,gBAAgB,GAAW,CAAC;EAC5BC,YAAY,GAAY,IAAI;EAC5BC,YAAY,GAAY,KAAK;EAC7BC,aAAa,GAAW,CAAC;EACzBC,WAAW,GAAY,IAAI;EAC3BC,WAAW,GAAY,KAAK;EAC5BC,YAAY,GAAW,CAAC;EACxBC,WAAW,GAAY,IAAI;EAC3BC,WAAW,GAAY,KAAK;EAC5BC,YAAY,GAAW,CAAC;EACxBC,YAAY,GAAY,IAAI;EAC5BC,YAAY,GAAY,KAAK;EAC7BC,aAAa,GAAW,CAAC;EAGzBhJ,0BAA0BA,CAACiJ,IAAI;IAC7B;IACA;IAEA,IAAIC,GAAG,GAAC,IAAI,CAACzJ,qBAAqB,CAACC,KAAK,CAACC,QAAQ,EAAElC,EAAE,GAAG,IAAI,CAACgC,qBAAqB,CAACC,KAAK,CAACC,QAAQ,EAAElC,EAAE,GAAC,EAAE;IACxG,IAAI4E,IAAI,GAAE,IAAI,CAAC5C,qBAAqB,CAACC,KAAK,CAAC0E,OAAO,IAAI,EAAE,GAAG,IAAI,CAACxB,QAAQ,CAACuG,SAAS,CAAC,IAAI,CAAC1J,qBAAqB,CAACC,KAAK,CAAC0E,OAAO,EAAE,YAAY,CAAC,GAAC,EAAE;IAE7IgF,OAAO,CAACC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAC5J,qBAAqB,CAACC,KAAK,CAAC0E,OAAO,CAAC;IAE5D,IAAI,CAACrB,cAAc,CAACuG,IAAI,EAAE;IAC1B,IAAI,CAACzG,aAAa,CAAC0G,uBAAuB,CAACL,GAAG,EAAC7G,IAAI,EAAC4G,IAAI,CAAC,CACtDO,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAAC1G,cAAc,CAAC2G,IAAI,EAAE;MAC1BN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,MAAM,CAAC;MACvC;MACA,IAAI,CAAC5I,YAAY,GAAE4I,MAAM,CAAC,MAAM,CAAC;MACjC,IAAIE,cAAc,GAAGF,MAAM,CAAC,YAAY,CAAC;MACzC,IAAI,IAAI,CAAC5I,YAAY,CAACpC,MAAM,GAAG,CAAC,EAAE;QAChC,IAAI,CAACS,gBAAgB,GAAGyK,cAAc,CAAC5F,QAAQ;QAC/C,IAAI,CAAC9E,oBAAoB,GAAG0K,cAAc,CAACC,YAAY;QACvD,IAAI,CAAC1L,mBAAmB,GAAGyL,cAAc,CAAC1F,KAAK;;IAEnD,CAAC,EAAGnB,KAAK,IAAI;MACX,IAAI,CAACA,KAAK,CAAC+G,WAAW,CAAC/G,KAAK,CAAC;MAC7B,IAAI,CAACC,cAAc,CAAC2G,IAAI,EAAE;IAC5B,CAAC,CAAC;EACN;EAEA7K,gBAAgBA,CAACa,KAAK;IAEnBA,KAAK,IAAI,MAAM,GAAG,IAAI,CAACM,0BAA0B,CAAC,IAAI,CAAC9B,mBAAmB,GAAC,CAAC,CAAC,GAAC,IAAI,CAAC8B,0BAA0B,CAAC,IAAI,CAAC9B,mBAAmB,GAAC,CAAC,CAAC;EAE5I;EAGAN,cAAcA,CAACsL,GAAG;IAChB,IAAI,CAACnG,cAAc,CAACuG,IAAI,EAAE;IAC1B,MAAMQ,GAAG,GAAGZ,GAAG,EAAE5K,QAAQ;IACzB;IACA;IACA,IAAI+D,IAAI,GAAE,IAAI,CAACO,QAAQ,CAACuG,SAAS,CAACD,GAAG,EAAE5K,QAAQ,EAAE,YAAY,CAAC;IAE9D,IAAI,CAACuE,aAAa,CAACkH,eAAe,CAACb,GAAG,EAAE1L,WAAW,CAACC,EAAE,EAAC4E,IAAI,CAAC,CAACmH,SAAS,CAACC,MAAM,IAAG;MAChFL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,MAAM,CAAC,MAAM,CAAC,CAAC;MAC/C;MACA,IAAI,CAACtG,MAAM,GAAEsG,MAAM,EAAEO,IAAI,CAAC,CAAC,CAAC;MAC5B,IAAI,CAAC7G,MAAM,GAAC,IAAI,CAACA,MAAM,EAAE5E,OAAO;MAChC;MACA,IAAI,CAAC6E,UAAU,GAAC,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC;MAE9BiG,OAAO,CAACC,GAAG,CAAC,MAAM,EAAC,IAAI,CAAClG,MAAM,CAAC;MAC/B,IAAI,CAACJ,cAAc,CAAC2G,IAAI,EAAE;IAG5B,CAAC,EAAG5G,KAAK,IAAI;MACX,IAAI,CAACA,KAAK,CAAC+G,WAAW,CAAC/G,KAAK,CAAC;MAC7B,IAAI,CAACC,cAAc,CAAC2G,IAAI,EAAE;IAE5B,CAAC,CAAC;EAAA;EAGFO,cAAcA,CAACC,IAAS;IACtB,IAAIC,MAAM,GAAG,IAAI,CAAC1K,qBAAqB,CAACC,KAAK;IAC7C,IAAI0K,GAAG,GAAG;MACRzK,QAAQ,EAAEwK,MAAM,EAAExK;KACnB;IACDyJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEe,GAAG,CAAC;IACnC,KAAK,IAAIC,CAAC,IAAID,GAAG,EAAE;MACjB,IAAIA,GAAG,CAACC,CAAC,CAAC,IAAIvJ,SAAS,IAAIsJ,GAAG,CAACC,CAAC,CAAC,IAAI,IAAI,EAAE;QACzCD,GAAG,CAACC,CAAC,CAAC,GAAG,EAAE;;;IAGf;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEF;EAEAlK,aAAaA,CAAA;IACX,IAAI,CAACV,qBAAqB,CAAC6K,UAAU,CAAC;MACpClG,OAAO,EAAC,EAAE;MACVzE,QAAQ,EAAC;KACV,CAAC;IACF,IAAI,CAACK,0BAA0B,CAAC,IAAI,CAAC9B,mBAAmB,GAAC,CAAC,CAAC;EAC7D;EAGA;EACA;EACA;EACA;EACA;EACA;EAEA;EAIAqM,kBAAkBA,CAACP,IAAsB;IACvC,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACA2J,aAAaA,CAACT,IAAiB;IAC7B,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACA4J,kBAAkBA,CAACV,IAAa;IAC9B,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACA6J,kBAAkBA,CAACX,IAAa;IAC9B,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACA8J,mBAAmBA,CAACZ,IAAc;IAChC,OAAOA,IAAI,GAAGA,IAAI,CAACa,EAAE,GAAG/J,SAAS;EACnC;EACAgK,gBAAgBA,CAACd,IAAW;IAC1B,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACAiK,oBAAoBA,CAACf,IAAc;IACjC,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACAkK,iBAAiBA,CAAChB,IAAY;IAC5B,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACAmK,qBAAqBA,CAACjB,IAAiB;IACrC,OAAOA,IAAI,GAAGA,IAAI,CAACkB,KAAK,GAAGpK,SAAS;EACtC;EACAqK,sBAAsBA,CAACnB,IAAiB;IACtC,OAAOA,IAAI,GAAGA,IAAI,CAACQ,IAAI,GAAG1J,SAAS;EACrC;EACAsK,sBAAsBA,CAACpB,IAAiB;IACtC,OAAOA,IAAI,GAAGA,IAAI,CAACpN,SAAS,GAAGkE,SAAS;EAC1C;EAEA;EACAuK,cAAcA,CAACrB,IAAI;IACjB,IAAIsB,OAAO,GAAGtB,IAAI;IAClB,IAAI,CAACnH,aAAa,CAAC0I,kBAAkB,CAACD,OAAO,EAAE,CAAC,CAAC,CAAC9B,SAAS,CAACQ,IAAI,IAAG;MACjE,IAAI,CAAC7D,eAAe,GAAG6D,IAAI,CAAC,MAAM,CAAC;IACrC,CAAC,CAAC;EACJ;EAGAwB,cAAcA,CAACxB,IAAI;IACjB,IAAIyB,YAAY,GAAQzB,IAAI;IAC5B,IAAI,CAACnH,aAAa,CAAC6I,mBAAmB,CAACD,YAAY,EAAE,CAAC,CAAC,CAACjC,SAAS,CAACQ,IAAI,IAAG;MACvE,IAAI,CAACzD,cAAc,GAAGyD,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC,CAAC;EAEJ;EACA2B,SAASA,CAAC3B,IAAI;IACZ,IAAI4B,QAAQ,GAAQ5B,IAAI;IACxB,IAAI,CAACnH,aAAa,CAACgJ,eAAe,CAACD,QAAQ,EAAE,CAAC,CAAC,CAACpC,SAAS,CAACQ,IAAI,IAAG;MAC/D,IAAI,CAAC3D,UAAU,GAAG2D,IAAI,CAAC,MAAM,CAAC;IAChC,CAAC,CAAC;EACJ;EACA8B,SAASA,CAACC,EAAE,EAAEC,EAAE;IAEd,IAAID,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,EAAE,IAAIA,EAAE,IAAIjL,SAAS,EAAE;MAC7C,IAAI,CAAC6B,MAAM,CAACsJ,WAAW,CAAC,gBAAgB,CAAC;MACzC,OAAO,KAAK;;IAGd,IAAI,CAACpJ,aAAa,CAACqJ,eAAe,CAACH,EAAE,EAAEC,EAAE,EAAE,CAAC,CAAC,CAACxC,SAAS,CAACQ,IAAI,IAAG;MAC7D,IAAI,CAAC1D,UAAU,GAAG0D,IAAI,CAAC,MAAM,CAAC;IAChC,CAAC,CAAC;EAEJ;EACAmC,cAAcA,CAACnC,IAAI;IACjB,IAAIoC,UAAU,GAAQpC,IAAI;IAC1B,IAAI,CAACnH,aAAa,CAACwJ,wBAAwB,CAACD,UAAU,EAAE,CAAC,CAAC,CAAC5C,SAAS,CAACQ,IAAI,IAAG;MAC1E,IAAI,CAACxD,WAAW,GAAGwD,IAAI,CAAC,MAAM,CAAC;IACjC,CAAC,CAAC;EACJ;EACAsC,eAAeA,CAACtC,IAAS;IACvBZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;IACjB,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,MAAM,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,MAAM,CAAC,CAAC;IACvD,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,UAAU,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/D,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,OAAO,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,OAAO,CAAC,CAAC;EAC3D;EACAwC,YAAYA,CAACxC,IAAS;IACpBZ,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;IACjB,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,SAAS,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7D,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,UAAU,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/D,IAAI,CAACzG,aAAa,CAACgJ,GAAG,CAAC,OAAO,CAAC,CAACjC,UAAU,CAACN,IAAI,CAAC,OAAO,CAAC,CAAC;EAC3D;EACAyC,WAAWA,CAACzC,IAAI;IACd,IAAI0C,UAAU,GAAQ1C,IAAI;IAC1B,IAAI,CAACnH,aAAa,CAAC8J,qBAAqB,CAACD,UAAU,EAAE,CAAC,CAAC,CAAClD,SAAS,CAACQ,IAAI,IAAG;MACvE,IAAI,CAACvD,QAAQ,GAAGuD,IAAI,CAAC,MAAM,CAAC;IAC9B,CAAC,CAAC;EAEJ;EACA4C,eAAeA,CAAC5C,IAAI;IAClB,IAAI0C,UAAU,GAAQ1C,IAAI;IAC1B,IAAI,CAACnH,aAAa,CAACgK,eAAe,CAACH,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAClD,SAAS,CAACQ,IAAI,IAAG;MAC5E,IAAI,CAACtD,YAAY,GAAGsD,IAAI,CAAC,MAAM,CAAC;IAClC,CAAC,CAAC;EACJ;EACA8C,YAAYA,CAAC9C,IAAI;IACf,IAAI0C,UAAU,GAAQ1C,IAAI;IAC1B,IAAI,CAACnH,aAAa,CAACkK,YAAY,CAACL,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAClD,SAAS,CAACQ,IAAI,IAAG;MACzE,IAAI,CAACrD,SAAS,GAAGqD,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC,CAAC;EACJ;EACAgD,gBAAgBA,CAAChD,IAAI;IACnB,IAAIiD,aAAa,GAAQjD,IAAI;IAC7B,IAAI,CAACnH,aAAa,CAACqK,gBAAgB,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAED,aAAa,CAAC,CAACzD,SAAS,CAACQ,IAAI,IAAG;MAChF,IAAI,CAAClD,aAAa,GAAGkD,IAAI,CAAC,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ;EACA;EACAmD,yBAAyBA,CAACnD,IAAI;IAC5B,IAAIoD,OAAO,GAAGpD,IAAI;IAClB,IAAI,CAACnH,aAAa,CAACwK,iBAAiB,CAACD,OAAO,EAAE,CAAC,CAAC,CAAC5D,SAAS,CAAC8D,OAAO,IAAG;MACnE,IAAI,CAACzG,gBAAgB,GAAGyG,OAAO,CAAC,MAAM,CAAC;IACzC,CAAC,CAAC;EACJ;EACAC,iBAAiBA,CAACvD,IAAI;IACpB,IAAIoC,UAAU,GAAQpC,IAAI;IAC1B,IAAI,CAACnH,aAAa,CAAC2K,uBAAuB,CAAC,CAAC,EAAEpB,UAAU,CAAC,CAAC5C,SAAS,CAACQ,IAAI,IAAG;MACzE,IAAI,CAACjD,cAAc,GAAGiD,IAAI,CAAC,MAAM,CAAC;IACpC,CAAC,CAAC;EACJ;EACAyD,4BAA4BA,CAAA;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,4BAA4BA,CAAA;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,oBAAoBA,CAAA;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,yBAAyBA,CAAA;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,sBAAsBA,CAAA;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,0BAA0BA,CAAA;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,uBAAuBA,CAAA;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,2BAA2BA,CAAA;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,sBAAsBA,CAAA;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,uBAAuBA,CAAA;IACrB;IACA;IACA;IACA;IACA;IAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}