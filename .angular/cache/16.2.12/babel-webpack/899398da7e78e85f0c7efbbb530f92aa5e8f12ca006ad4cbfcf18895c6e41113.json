{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n// import { ComponentPortal } from '@angular/cdk/portal';\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../AppAutoEngine/import-services/CommonimportFiles\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../task-manager.service\";\nimport * as i6 from \"src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/autocomplete\";\nconst _c0 = [\"labelImport\"];\nconst _c1 = [\"fileInput\"];\nfunction IssuecreationComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵlistener(\"click\", function IssuecreationComponent_mat_option_10_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.resetProjectAndModule());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const clt_r16 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", clt_r16.name);\n    i0.ɵɵproperty(\"value\", clt_r16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", clt_r16.name, \" \");\n  }\n}\nfunction IssuecreationComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IssuecreationComponent_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵlistener(\"click\", function IssuecreationComponent_mat_option_20_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.resetModule());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const appnm_r19 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", appnm_r19.name);\n    i0.ɵɵproperty(\"value\", appnm_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", appnm_r19.name, \" \");\n  }\n}\nfunction IssuecreationComponent_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IssuecreationComponent_mat_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const modnm_r22 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", modnm_r22.name);\n    i0.ɵɵproperty(\"value\", modnm_r22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", modnm_r22.name, \" \");\n  }\n}\nfunction IssuecreationComponent_mat_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IssuecreationComponent_mat_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pry_r23 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", pry_r23.text);\n    i0.ɵɵproperty(\"value\", pry_r23.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pry_r23.text, \" \");\n  }\n}\nfunction IssuecreationComponent_tr_64_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Normal\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction IssuecreationComponent_tr_64_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"High\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction IssuecreationComponent_tr_64_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Low\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction IssuecreationComponent_tr_64_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function IssuecreationComponent_tr_64_div_10_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const file_r30 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.fileview(file_r30));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const file_r30 = ctx.$implicit;\n    const i_r31 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"title\", file_r30.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i_r31 + 1, \".\", file_r30.name, \" \");\n  }\n}\nfunction IssuecreationComponent_tr_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, IssuecreationComponent_tr_64_ng_container_6_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(7, IssuecreationComponent_tr_64_ng_container_7_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵtemplate(8, IssuecreationComponent_tr_64_ng_container_8_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 31);\n    i0.ɵɵtemplate(10, IssuecreationComponent_tr_64_div_10_Template, 2, 3, \"div\", 32);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const display_r24 = ctx.$implicit;\n    const i_r25 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r25 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(display_r24 == null ? null : display_r24.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (display_r24 == null ? null : display_r24.priority_type) == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (display_r24 == null ? null : display_r24.priority_type) == 2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (display_r24 == null ? null : display_r24.priority_type) == 3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", display_r24.filekey);\n  }\n}\nfunction IssuecreationComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function IssuecreationComponent_div_65_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.BackToSummary());\n    });\n    i0.ɵɵtext(2, \" Close \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function IssuecreationComponent_div_65_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.SubmitIssue());\n    });\n    i0.ɵɵtext(4, \" Save \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class IssuecreationComponent {\n  fb;\n  router;\n  SpinnerService;\n  errorHandler;\n  datePipe;\n  notify;\n  taskmanagerservice;\n  apicall;\n  taskapi;\n  projectList;\n  priorityList;\n  reuploadfileArr = [];\n  addData = false;\n  constructor(fb, router, SpinnerService, errorHandler, datePipe, notify, taskmanagerservice, apicall, taskapi) {\n    this.fb = fb;\n    this.router = router;\n    this.SpinnerService = SpinnerService;\n    this.errorHandler = errorHandler;\n    this.datePipe = datePipe;\n    this.notify = notify;\n    this.taskmanagerservice = taskmanagerservice;\n    this.apicall = apicall;\n    this.taskapi = taskapi;\n  }\n  issueForm;\n  OnSubmit = new EventEmitter();\n  OnCancel = new EventEmitter();\n  labelImport;\n  EmpTaskCreateObj = {\n    QuickAccessList: [],\n    selectedNav: '',\n    clientList: [],\n    projectList: [],\n    moduleList: [],\n    createArray: [],\n    from_date: '',\n    to_date: '',\n    task: '',\n    type: '',\n    devtypelist: [],\n    statusListData: '',\n    toSelectDropDown: null,\n    toSelectDependency: null,\n    submitValidation: false,\n    dependencylist: [],\n    priorityList: []\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\n  };\n  images = [];\n  docFunctionList = [];\n  fileInput;\n  ngOnInit() {\n    this.issueForm = this.fb.group({\n      description: new FormControl(\"\"),\n      project: new FormControl(\"\"),\n      // status: new FormControl(\"\",[Validators.required]),\n      priority_type: new FormControl(\"\"),\n      client: '',\n      project_map_id: '',\n      files: ''\n    });\n    this.docFunctionList = [];\n    this.getPriority();\n    this.clientsearch('');\n    // this.Projectsearch(1,'')\n  }\n  BackToSummary() {\n    this.OnCancel.emit();\n  }\n  SubmitIssue() {\n    //   if (this.issueForm.value.description === \"\") {\n    //     this.notify.error('Please Enter Issue Name');\n    //     return false;\n    //   }\n    //   if (this.issueForm.value.project === \"\") {\n    //     this.notify.error('Please Select Project');\n    //     return false;\n    //   }\n    //   if (this.issueForm.value.priority === \"\") {\n    //     this.notify.error('Please Select Priority');\n    //     return false;\n    //   }\n    //   let currValue = this.issueForm.value;\n    //   let payload = {\n    //     \"project_id\": currValue.project_map_id.mapping_id,\n    //     \"description\": currValue.description,\n    //     \"priority_type\":currValue.priority_type,\n    // }\n    // const formData: FormData = new FormData(); \n    // let reuploadfiles = this.reuploadfileArr\n    // if(reuploadfiles.length!=0){\n    //   for (let reuploadindividual in reuploadfiles ) {\n    //     let reuploadfilekeydata = 'file'\n    //     let datavalue = JSON.stringify(payload)\n    //   formData.append('data', datavalue);\n    //     formData.append(reuploadfilekeydata, reuploadfiles[reuploadindividual])\n    //   }\n    // }\n    // else{\n    //   let datavalue = JSON.stringify(payload)\n    //   formData.append('data', datavalue);\n    // }\n    this.SpinnerService.show();\n    console.log(\"submit\", this.docFunctionList);\n    if (this.docFunctionList.length === 0) {\n      this.notify.error('Please Fill All Details');\n      this.SpinnerService.hide();\n      return false;\n    }\n    let count = 1;\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      this.docFunctionList[i].attachment = 'file' + count++;\n    }\n    console.log(\"ffff\", this.docFunctionList);\n    // for (let i = 0; i < this.docFunctionList.length; i++) {\n    //   if (this.docFunctionList[i].docgroup_id.id != undefined) {\n    //     this.docFunctionList[i].docgroup_id = this.docFunctionList[i].docgroup_id.id;\n    //   }\n    // }\n    console.log(\"docgp\", this.docFunctionList);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionList[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      const string_value = this.docFunctionList[index].attachment;\n      const file_list = this.docFunctionList[index].filekey;\n      formData.append(string_value, file_list[0]);\n      this.SpinnerService.show();\n      this.taskmanagerservice.issueCreation(formData).subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Created') {\n          this.notify.success(\"Created Successfully!...\");\n          this.docFunctionList = [];\n          this.OnSubmit.emit();\n          this.SpinnerService.hide();\n          this.issueForm.reset();\n          this;\n        } else {\n          this.notify.error(res.description);\n          this.SpinnerService.hide();\n          return false;\n        }\n      }, error => {\n        this.errorHandler.handleError(error);\n        this.SpinnerService.hide();\n      });\n      this.SpinnerService.hide();\n    };\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      processSubmission(i);\n    }\n    this.SpinnerService.hide();\n    this.issueForm.reset();\n  }\n  // displayFnappnm(appnm?: interfacedatas): string | undefined {\n  //   return appnm ? appnm.name : undefined;\n  // }\n  // Projectsearch(clientdata, Typedata) {\n  //   this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch+'/'+clientdata?.id+'?'+ this.taskapi.tasksApi.queries.query + Typedata +\n  //    '&' + this.taskapi.tasksApi.queries.status + 2) \n  //     .subscribe(results => {\n  //       this.projectList = results['data']\n  //     }, (error) => {\n  //       this.errorHandler.handleError(error);\n  //       this.SpinnerService.hide();\n  //     })\n  // }\n  getPriority() {\n    this.SpinnerService.show();\n    this.taskmanagerservice.get_Priority().subscribe(results => {\n      this.SpinnerService.hide();\n      // let datas = results[\"data\"];\n      this.priorityList = results;\n      console.log(\"priority dropdown\", this.priorityList);\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  clientsearch(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.clientList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnclt(clt) {\n    return clt ? clt.name : undefined;\n  }\n  Projectsearch(clientdata, Typedata) {\n    if (clientdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + '/' + clientdata?.id + '?' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.projectList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnappnm(appnm) {\n    return appnm ? appnm.name : undefined;\n  }\n  getModule(clientdata, projectdata, Typedata) {\n    if (clientdata?.id == undefined || projectdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch + projectdata?.id + '?' + 'client_id=' + clientdata?.id + '&' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.moduleList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnmodnm(mod) {\n    return mod ? mod.name : undefined;\n  }\n  resetProjectAndModule() {\n    // this.EmpTaskCreate.controls['project'].reset()\n    // this.EmpTaskCreate.controls['project_map_id'].reset()\n  }\n  resetModule() {\n    // this.EmpTaskCreate.controls['project_map_id'].reset()\n  }\n  // fileChange(file, files:FileList) {\n  //   this.labelImport.nativeElement.innerText = Array.from(files)\n  //   .map(f => f.name)\n  //   .join(', ');\n  //   this.images = <File>file.target.files[0];\n  // }\n  attachmentDelete(file, index) {\n    this.reuploadfileArr.splice(index, 1);\n  }\n  onFileSelect(e) {\n    // this.selectedFile = e.target.files;\n    let reuploaddatavalue = e.target.files;\n    for (var i = 0; i < e.target.files.length; i++) {\n      this.reuploadfileArr.push(e.target.files[i]);\n    }\n  }\n  fileChange(event) {\n    // let imagesList = [];\n    this.images = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n  }\n  showimageHeaderPreviewPDF;\n  showimageHeaderPreview;\n  jpgUrls;\n  pdfurl;\n  fileview(files) {\n    console.log(\"file data to view \", files);\n    let stringValue = files.name.split('.');\n    if (stringValue[1] === \"PNG\" || stringValue[1] === \"png\" || stringValue[1] === \"jpeg\" || stringValue[1] === \"jpg\" || stringValue[1] === \"JPG\" || stringValue[1] === \"JPEG\") {\n      this.showimageHeaderPreview = true;\n      this.showimageHeaderPreviewPDF = false;\n      const reader = new FileReader();\n      reader.readAsDataURL(files);\n      reader.onload = _event => {\n        this.jpgUrls = reader.result;\n      };\n    }\n    if (stringValue[1] === \"pdf\") {\n      this.showimageHeaderPreview = false;\n      this.showimageHeaderPreviewPDF = true;\n      const reader = new FileReader();\n      reader.readAsDataURL(files);\n      reader.onload = _event => {\n        this.pdfurl = reader.result;\n      };\n    }\n    if (stringValue[1] === \"csv\" || stringValue[1] === \"ods\" || stringValue[1] === \"xlsx\" || stringValue[1] === \"txt\") {\n      this.showimageHeaderPreview = false;\n      this.showimageHeaderPreviewPDF = false;\n    }\n  }\n  adddocformarray() {\n    this.addData = true;\n    if (this.issueForm.value.description == undefined || this.issueForm.value.description == null) {\n      this.notify.error('Please Enter Description');\n      this.SpinnerService.hide();\n      return false;\n    }\n    if (this.issueForm.value.project === \"\") {\n      this.notify.error('Please Select Project');\n      this.SpinnerService.hide();\n      return false;\n    }\n    //  if(this.images.length == 0){\n    //    this.notify.error('', 'Choose Upload Files ', { timeOut: 1500 });\n    //    this.SpinnerService.hide();\n    //    return false;\n    //  }\n    let dataArray = this.issueForm.value;\n    let data = {\n      project_id: dataArray.project_map_id.mapping_id,\n      description: dataArray.description,\n      priority_type: dataArray.priority_type,\n      attachment: \"\",\n      filekey: this.images\n    };\n    console.log(\"dataArray\", data);\n    this.docFunctionList.push(data);\n    console.log(\"array\", this.docFunctionList);\n    this.issueForm.controls[\"description\"].reset('');\n    this.issueForm.controls[\"priority_type\"].reset('');\n    this.images = [];\n    this.fileInput.nativeElement.value = \"\";\n  }\n  savetemp() {\n    this.SpinnerService.show();\n    console.log(\"submit\", this.docFunctionList);\n    if (this.docFunctionList.length === 0) {\n      this.notify.error('Please Fill All Details');\n      this.SpinnerService.hide();\n      return false;\n    }\n    let count = 1;\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      this.docFunctionList[i].attachment = 'file' + count++;\n    }\n    console.log(\"ffff\", this.docFunctionList);\n    console.log(\"docgp\", this.docFunctionList);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionList[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      const string_value = this.docFunctionList[index].attachment;\n      const file_list = this.docFunctionList[index].filekey;\n      formData.append(string_value, file_list[0]);\n      this.SpinnerService.show();\n      this.taskmanagerservice.issueCreation(formData).subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Created') {\n          this.notify.success(\"Created Successfully!...\");\n          this.docFunctionList = [];\n          this.OnSubmit.emit();\n          this.SpinnerService.hide();\n          this.issueForm.reset();\n          this;\n        } else {\n          this.notify.error(res.description);\n          this.SpinnerService.hide();\n          return false;\n        }\n      }, error => {\n        this.errorHandler.handleError(error);\n        this.SpinnerService.hide();\n      });\n      this.SpinnerService.hide();\n    };\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      processSubmission(i);\n    }\n    this.SpinnerService.hide();\n    this.issueForm.reset();\n  }\n  static ɵfac = function IssuecreationComponent_Factory(t) {\n    return new (t || IssuecreationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ErrorHandlingServiceService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i5.TaskManagerService), i0.ɵɵdirectiveInject(i6.ApicallserviceService), i0.ɵɵdirectiveInject(i3.TaskApi));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IssuecreationComponent,\n    selectors: [[\"app-issuecreation\"]],\n    viewQuery: function IssuecreationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelImport = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    outputs: {\n      OnSubmit: \"OnSubmit\",\n      OnCancel: \"OnCancel\"\n    },\n    features: [i0.ɵɵProvidersFeature([imp.TaskApi])],\n    decls: 66,\n    vars: 16,\n    consts: [[3, \"formGroup\"], [1, \"modal-body\", \"cus-createForm\"], [2, \"width\", \"100%\"], [\"matInput\", \"\", \"formControlName\", \"client\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"cltInput\", \"\"], [3, \"displayWith\"], [\"clt\", \"matAutocomplete\"], [3, \"value\", \"title\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"width\", \"100%\", 3, \"click\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"project\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"appnmInput\", \"\"], [\"appnm\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"project_map_id\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"modnmInput\", \"\"], [\"modnm\", \"matAutocomplete\"], [3, \"value\", \"title\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"priority_type\", 1, \"\"], [2, \"width\", \"208%\", \"height\", \"250%\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"description\", 2, \"height\", \"250% !important\"], [2, \"margin-right\", \"1em\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\\n        .dotx,.dotm,.docb,\\n        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"multiple\", \"true\", \"name\", \"images\", 1, \"borderremove\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"btn\", \"cus-sprintFormIcon2\", 2, \"width\", \"26%\", 3, \"click\"], [1, \"table-responsive\", 2, \"width\", \"90%\", \"margin-top\", \"10px\", \"overflow-x\", \"hidden\"], [\"id\", \"commonstyle\", 1, \"table\"], [1, \"table_header\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"modal-footer\", 4, \"ngIf\"], [3, \"value\", \"title\", \"click\"], [3, \"value\", \"title\"], [2, \"font-size\", \"small\", \"width\", \"150px\", \"cursor\", \"pointer\"], [\"class\", \" btn-link\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modalpreview\", 3, \"title\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modalpreview\", 1, \"btn-link\", 3, \"title\", \"click\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", \"color\", \"white\", 3, \"click\"]],\n    template: function IssuecreationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\")(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 3, 4);\n        i0.ɵɵlistener(\"keyup\", function IssuecreationComponent_Template_input_keyup_6_listener() {\n          return ctx.clientsearch(ctx.issueForm.value.client);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-autocomplete\", 5, 6);\n        i0.ɵɵtemplate(10, IssuecreationComponent_mat_option_10_Template, 2, 3, \"mat-option\", 7);\n        i0.ɵɵtemplate(11, IssuecreationComponent_mat_option_11_Template, 2, 0, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\")(13, \"mat-form-field\", 9);\n        i0.ɵɵlistener(\"click\", function IssuecreationComponent_Template_mat_form_field_click_13_listener() {\n          return ctx.Projectsearch(ctx.issueForm.value.client, ctx.issueForm.value.project);\n        });\n        i0.ɵɵelementStart(14, \"mat-label\");\n        i0.ɵɵtext(15, \"Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 10, 11);\n        i0.ɵɵlistener(\"keyup\", function IssuecreationComponent_Template_input_keyup_16_listener() {\n          return ctx.Projectsearch(ctx.issueForm.value.client, ctx.issueForm.value.project);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-autocomplete\", 5, 12);\n        i0.ɵɵtemplate(20, IssuecreationComponent_mat_option_20_Template, 2, 3, \"mat-option\", 7);\n        i0.ɵɵtemplate(21, IssuecreationComponent_mat_option_21_Template, 2, 0, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\")(23, \"mat-form-field\", 9);\n        i0.ɵɵlistener(\"click\", function IssuecreationComponent_Template_mat_form_field_click_23_listener() {\n          return ctx.getModule(ctx.issueForm.value.client, ctx.issueForm.value.project, ctx.issueForm.value.project_map_id);\n        });\n        i0.ɵɵelementStart(24, \"mat-label\");\n        i0.ɵɵtext(25, \"Module\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"input\", 13, 14);\n        i0.ɵɵlistener(\"keyup\", function IssuecreationComponent_Template_input_keyup_26_listener() {\n          return ctx.getModule(ctx.issueForm.value.client, ctx.issueForm.value.project, ctx.issueForm.value.project_map_id);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-autocomplete\", 5, 15);\n        i0.ɵɵtemplate(30, IssuecreationComponent_mat_option_30_Template, 2, 3, \"mat-option\", 16);\n        i0.ɵɵtemplate(31, IssuecreationComponent_mat_option_31_Template, 2, 0, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\")(33, \"mat-form-field\", 9);\n        i0.ɵɵlistener(\"click\", function IssuecreationComponent_Template_mat_form_field_click_33_listener() {\n          return ctx.getPriority();\n        });\n        i0.ɵɵelementStart(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-select\", 17);\n        i0.ɵɵtemplate(37, IssuecreationComponent_mat_option_37_Template, 2, 3, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\")(39, \"mat-form-field\", 18)(40, \"mat-label\");\n        i0.ɵɵtext(41, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"textarea\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(43, \"div\");\n        i0.ɵɵelementStart(44, \"div\")(45, \"label\", 20)(46, \"input\", 21, 22);\n        i0.ɵɵlistener(\"change\", function IssuecreationComponent_Template_input_change_46_listener($event) {\n          return ctx.fileChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\")(49, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function IssuecreationComponent_Template_button_click_49_listener() {\n          return ctx.adddocformarray();\n        });\n        i0.ɵɵtext(50, \"Add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"div\", 24)(52, \"table\", 25)(53, \"thead\", 26)(54, \"tr\")(55, \"th\");\n        i0.ɵɵtext(56, \"S.No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"th\");\n        i0.ɵɵtext(58, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"th\");\n        i0.ɵɵtext(60, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"th\");\n        i0.ɵɵtext(62, \"File\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"tbody\");\n        i0.ɵɵtemplate(64, IssuecreationComponent_tr_64_Template, 11, 6, \"tr\", 27);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(65, IssuecreationComponent_div_65_Template, 5, 0, \"div\", 28);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n        const _r5 = i0.ɵɵreference(19);\n        const _r9 = i0.ɵɵreference(29);\n        i0.ɵɵproperty(\"formGroup\", ctx.issueForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnclt);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.clientList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.clientList || !ctx.EmpTaskCreateObj.clientList.length);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r5);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnappnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.projectList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.projectList || !ctx.EmpTaskCreateObj.projectList.length);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r9);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnmodnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.moduleList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.moduleList || !ctx.EmpTaskCreateObj.moduleList.length);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.priorityList);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngForOf\", ctx.docFunctionList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addData);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.MatInput, i8.MatFormField, i8.MatLabel, i9.MatSelect, i10.MatOption, i11.MatAutocomplete, i11.MatAutocompleteTrigger],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];*[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.cus-createScreenContainer[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100dvh;\\n  display: flex;\\n}\\n\\n.cus-createContent[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: 100%;\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: scroll;\\n}\\n\\n.cus-createHeader[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: center;\\n  gap: 6px;\\n  width: 96%;\\n  margin: 20px auto;\\n}\\n\\n.cus-createHeader[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: 600;\\n  text-align: left;\\n}\\n\\n.cus-createHeaderNav[_ngcontent-%COMP%] {\\n  background-color: #eeeeef;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  width: 100%;\\n  padding: 6px;\\n  border-radius: 5px;\\n}\\n\\n.cus-createHeaderNav[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 16px;\\n  margin-bottom: 0;\\n  max-width: 326.5px;\\n  width: 100%;\\n  padding: 6px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.cus-createHeaderNavActive[_ngcontent-%COMP%] {\\n  background-color: white;\\n  font-weight: 600;\\n}\\n\\n.cus-createForm[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  align-items: center;\\n  row-gap: 16px;\\n  -moz-column-gap: 16px;\\n       column-gap: 16px;\\n  justify-content: space-between;\\n  margin: 0 auto;\\n}\\n\\n.cus-createForm[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  font-weight: 400;\\n}\\n\\n.cus-createInput1[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 44px;\\n  border-radius: 5px;\\n  border: 1px solid #dedede;\\n  display: block;\\n}\\n\\n.cus-createInput2[_ngcontent-%COMP%] {\\n  grid-column-start: 1;\\n  grid-column-end: 4;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n  gap: 10px;\\n}\\n\\n.cus-createInput2[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\n.cus-createInputSub[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 10px;\\n}\\n\\n.cus-createInput3[_ngcontent-%COMP%] {\\n  grid-column-start: 1;\\n  grid-column-end: 4;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  padding: 24px;\\n  border-radius: 5px;\\n  border: 1px solid #dedede;\\n}\\n\\n.cus-createInput3[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 44px;\\n  border-radius: 5px;\\n  border: 1px solid #dedede;\\n}\\n\\n.cus-createFormBtns[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  gap: 10px;\\n  margin: 10px 0 20px 0;\\n}\\n\\n.cus-createAddressForm[_ngcontent-%COMP%], .cus-createContactForm[_ngcontent-%COMP%], .cus-createProfileForm[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.cus-attachCard[_ngcontent-%COMP%] {\\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.171);\\n  padding: 4px 10px;\\n  max-width: 205px;\\n  width: 100%;\\n  margin: 3px 0 0 0;\\n  border-radius: 6px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-left: 10px;\\n}\\n\\n.icons[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.borderremove[_ngcontent-%COMP%] {\\n  border: none;\\n  background-color: transparent;\\n  resize: none;\\n  outline: none;\\n}\\n\\n.cus-sprintFormIcon2[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  width: 40px;\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 4px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1tYW5hZ2VyL2lzc3VlY3JlYXRpb24vaXNzdWVjcmVhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGtDQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLFdBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtBQUFGOztBQUdBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0EsUUFBQTtFQUNBLFVBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFBRjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxxQ0FBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO09BQUEsZ0JBQUE7RUFDQSw4QkFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtBQUFGOztBQUdBO0VBQ0Usb0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDJCQUFBO0VBQ0EsU0FBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFBRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0EsU0FBQTtBQUFGOztBQUdBO0VBQ0Usb0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFNBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLFNBQUE7RUFDQSxxQkFBQTtBQUFGOztBQUdBOzs7RUFHRSxhQUFBO0FBQUY7O0FBR0E7RUFDRSx3Q0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFHQTtFQUNFLGVBQUE7QUFBRjs7QUFFQTtFQUNFLHlDQUFBO0FBQ0Y7O0FBQ0E7RUFDRSxZQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUVGOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UG9wcGluczp3Z2h0QDQwMDs1MDA7NjAwOzcwMDs4MDA7OTAwJmRpc3BsYXk9c3dhcFwiKTtcclxuXHJcbioge1xyXG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZVNjcmVlbkNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDBkdmg7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLmN1cy1jcmVhdGVDb250ZW50IHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUhlYWRlciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGdhcDogNnB4O1xyXG4gIHdpZHRoOiA5NiU7XHJcbiAgbWFyZ2luOiAyMHB4IGF1dG87XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSGVhZGVyIGgzIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUhlYWRlck5hdiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDZweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSGVhZGVyTmF2IHAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBtYXgtd2lkdGg6IDMyNi41cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogNnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSGVhZGVyTmF2QWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUZvcm0ge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHJvdy1nYXA6IDE2cHg7XHJcbiAgY29sdW1uLWdhcDogMTZweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlRm9ybSBsYWJlbCB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSW5wdXQxIGlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDQ0cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZWRlZGU7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSW5wdXQyIHtcclxuICBncmlkLWNvbHVtbi1zdGFydDogMTtcclxuICBncmlkLWNvbHVtbi1lbmQ6IDQ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICBnYXA6IDEwcHg7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSW5wdXQyIGlucHV0IHtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSW5wdXRTdWIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBnYXA6IDEwcHg7XHJcbn1cclxuXHJcbi5jdXMtY3JlYXRlSW5wdXQzIHtcclxuICBncmlkLWNvbHVtbi1zdGFydDogMTtcclxuICBncmlkLWNvbHVtbi1lbmQ6IDQ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMTBweDtcclxuICBwYWRkaW5nOiAyNHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGVkZWRlO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUlucHV0MyBpbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA0NHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGVkZWRlO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUZvcm1CdG5zIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBnYXA6IDEwcHg7XHJcbiAgbWFyZ2luOiAxMHB4IDAgMjBweCAwO1xyXG59XHJcblxyXG4uY3VzLWNyZWF0ZUFkZHJlc3NGb3JtLFxyXG4uY3VzLWNyZWF0ZUNvbnRhY3RGb3JtLFxyXG4uY3VzLWNyZWF0ZVByb2ZpbGVGb3JtIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY3VzLWF0dGFjaENhcmQge1xyXG4gIGJveC1zaGFkb3c6IDAgMCA0cHggcmdiYSgwLCAwLCAwLCAwLjE3MSk7XHJcbiAgcGFkZGluZzogNHB4IDEwcHg7XHJcbiAgbWF4LXdpZHRoOiAyMDVweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW46IDNweCAwIDAgMDtcclxuICBib3JkZXItcmFkaXVzOiA2cHg7IFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbi5pY29ucyB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbi5tYXRlcmlhbC1pY29ucyB7XHJcbiAgZm9udC1mYW1pbHk6ICdNYXRlcmlhbCBJY29ucycsIHNhbnMtc2VyaWY7XHJcbn1cclxuLmJvcmRlcnJlbW92ZSB7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIHJlc2l6ZTogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4uY3VzLXNwcmludEZvcm1JY29uMiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA0NDA2MztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgd2lkdGg6IDQwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormControl","imp","i0","ɵɵelementStart","ɵɵlistener","IssuecreationComponent_mat_option_10_Template_mat_option_click_0_listener","ɵɵrestoreView","_r18","ctx_r17","ɵɵnextContext","ɵɵresetView","resetProjectAndModule","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","clt_r16","name","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","IssuecreationComponent_mat_option_20_Template_mat_option_click_0_listener","_r21","ctx_r20","resetModule","appnm_r19","modnm_r22","pry_r23","text","id","ɵɵelementContainerStart","ɵɵelementContainerEnd","IssuecreationComponent_tr_64_div_10_Template_div_click_0_listener","restoredCtx","_r33","file_r30","$implicit","ctx_r32","fileview","ɵɵtextInterpolate2","i_r31","ɵɵtemplate","IssuecreationComponent_tr_64_ng_container_6_Template","IssuecreationComponent_tr_64_ng_container_7_Template","IssuecreationComponent_tr_64_ng_container_8_Template","IssuecreationComponent_tr_64_div_10_Template","ɵɵtextInterpolate","i_r25","display_r24","description","priority_type","filekey","IssuecreationComponent_div_65_Template_button_click_1_listener","_r35","ctx_r34","BackToSummary","IssuecreationComponent_div_65_Template_button_click_3_listener","ctx_r36","SubmitIssue","IssuecreationComponent","fb","router","SpinnerService","errorHandler","datePipe","notify","taskmanagerservice","apicall","taskapi","projectList","priorityList","reuploadfileArr","addData","constructor","issueForm","OnSubmit","OnCancel","labelImport","EmpTaskCreateObj","QuickAccessList","selectedNav","clientList","moduleList","createArray","from_date","to_date","task","type","devtypelist","statusListData","toSelectDropDown","toSelectDependency","submitValidation","dependencylist","images","docFunctionList","fileInput","ngOnInit","group","project","client","project_map_id","files","getPriority","clientsearch","emit","show","console","log","length","error","hide","count","i","attachment","successfulSubmissions","processSubmission","index","dataset","formData","FormData","Finaldata","datavalue","JSON","stringify","append","string_value","file_list","issueCreation","subscribe","res","message","success","reset","handleError","get_Priority","results","Typedata","ApiCall","tasksApi","api","queries","query","status","displayFnclt","clt","undefined","Projectsearch","clientdata","projectSearch","displayFnappnm","appnm","getModule","projectdata","moduleSearch","displayFnmodnm","mod","attachmentDelete","file","splice","onFileSelect","e","reuploaddatavalue","target","push","fileChange","event","showimageHeaderPreviewPDF","showimageHeaderPreview","jpgUrls","pdfurl","stringValue","split","reader","FileReader","readAsDataURL","onload","_event","result","adddocformarray","value","dataArray","data","project_id","mapping_id","controls","nativeElement","savetemp","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","NgxSpinnerService","ErrorHandlingServiceService","i4","DatePipe","ToastrService","i5","TaskManagerService","i6","ApicallserviceService","TaskApi","selectors","viewQuery","IssuecreationComponent_Query","rf","ctx","decls","vars","consts","template","IssuecreationComponent_Template","IssuecreationComponent_Template_input_keyup_6_listener","IssuecreationComponent_mat_option_10_Template","IssuecreationComponent_mat_option_11_Template","IssuecreationComponent_Template_mat_form_field_click_13_listener","IssuecreationComponent_Template_input_keyup_16_listener","IssuecreationComponent_mat_option_20_Template","IssuecreationComponent_mat_option_21_Template","IssuecreationComponent_Template_mat_form_field_click_23_listener","IssuecreationComponent_Template_input_keyup_26_listener","IssuecreationComponent_mat_option_30_Template","IssuecreationComponent_mat_option_31_Template","IssuecreationComponent_Template_mat_form_field_click_33_listener","IssuecreationComponent_mat_option_37_Template","ɵɵelement","IssuecreationComponent_Template_input_change_46_listener","$event","IssuecreationComponent_Template_button_click_49_listener","IssuecreationComponent_tr_64_Template","IssuecreationComponent_div_65_Template","_r1","_r5","_r9"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\issuecreation\\issuecreation.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\issuecreation\\issuecreation.component.html"],"sourcesContent":["\r\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, FormGroupDirective, FormArrayName } from '@angular/forms';\r\n\r\n\r\nimport { Overlay, OverlayPositionBuilder } from '@angular/cdk/overlay';\r\n// import { ComponentPortal } from '@angular/cdk/portal';\r\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles'\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ApicallserviceService } from 'src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service';\r\n\r\nimport { debounceTime, distinctUntilChanged, tap, filter, switchMap, finalize, takeUntil, map } from 'rxjs/operators';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ViewChild } from '@angular/core';\r\nimport { TaskManagerService } from '../task-manager.service';\r\nimport { SharedService } from 'src/app/service/shared.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IconDialogComponent } from '../icon-dialog/icon-dialog.component';\r\nimport { MatDatepicker, MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { Moment } from 'moment';\r\nimport * as moment from 'moment';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { MatSelectTrigger } from '@angular/material/select';\r\n// import { MatDialog } from '@angular/material/dialog';\r\nimport { DevTypeDialogComponent } from '../dev-type-dialog/dev-type-dialog.component';\r\nimport { ShareddataService } from '../shareddata.service';\r\n\r\nexport interface interfacedatas {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-issuecreation',\r\n  templateUrl: './issuecreation.component.html',\r\n  styleUrls: ['./issuecreation.component.scss'],\r\n  providers: [imp.TaskApi]\r\n})\r\nexport class IssuecreationComponent implements OnInit {\r\n  projectList: any;\r\n  priorityList: any[];\r\n  reuploadfileArr: any = [];\r\n  addData: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private SpinnerService: imp.NgxSpinnerService,\r\n    private errorHandler: imp.ErrorHandlingServiceService, private datePipe: DatePipe, private notify: imp.ToastrService,\r\n    private taskmanagerservice: TaskManagerService, private apicall: ApicallserviceService, private taskapi: imp.TaskApi,\r\n  ) { }\r\n\r\n  issueForm: FormGroup;\r\n  @Output() OnSubmit = new EventEmitter<any>();\r\n  @Output() OnCancel = new EventEmitter<any>();\r\n  @ViewChild('labelImport') labelImport: ElementRef;\r\n  EmpTaskCreateObj = {\r\n    QuickAccessList: [],\r\n    selectedNav: '',\r\n    clientList: [],\r\n    projectList: [],\r\n    moduleList: [],\r\n    createArray: [],\r\n    from_date: '',\r\n    to_date: '',\r\n    task: '',\r\n    type: '',\r\n    devtypelist: [],\r\n    statusListData: '',\r\n    toSelectDropDown: null,\r\n    toSelectDependency: null,\r\n    submitValidation: false,\r\n    dependencylist: [],\r\n    priorityList: []\r\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\r\n  }\r\n  images: string[] = [];\r\n  docFunctionList = [];\r\n  @ViewChild('fileInput') fileInput: any;\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.issueForm = this.fb.group({\r\n      description: new FormControl(\"\"),\r\n      project: new FormControl(\"\"),\r\n      // status: new FormControl(\"\",[Validators.required]),\r\n      priority_type: new FormControl(\"\"),\r\n      client: '',\r\n      project_map_id: '',\r\n      files: ''\r\n\r\n    })\r\n    this.docFunctionList = [];\r\n\r\n    this.getPriority();\r\n    this.clientsearch('');\r\n    // this.Projectsearch(1,'')\r\n  }\r\n\r\n\r\n  BackToSummary() {\r\n    this.OnCancel.emit()\r\n\r\n  }\r\n  SubmitIssue() {\r\n\r\n    //   if (this.issueForm.value.description === \"\") {\r\n    //     this.notify.error('Please Enter Issue Name');\r\n\r\n    //     return false;\r\n    //   }\r\n    //   if (this.issueForm.value.project === \"\") {\r\n    //     this.notify.error('Please Select Project');\r\n\r\n    //     return false;\r\n    //   }\r\n\r\n    //   if (this.issueForm.value.priority === \"\") {\r\n    //     this.notify.error('Please Select Priority');\r\n\r\n    //     return false;\r\n    //   }\r\n    //   let currValue = this.issueForm.value;\r\n    //   let payload = {\r\n    //     \"project_id\": currValue.project_map_id.mapping_id,\r\n    //     \"description\": currValue.description,\r\n    //     \"priority_type\":currValue.priority_type,\r\n    // }\r\n    // const formData: FormData = new FormData(); \r\n    // let reuploadfiles = this.reuploadfileArr\r\n    // if(reuploadfiles.length!=0){\r\n    //   for (let reuploadindividual in reuploadfiles ) {\r\n    //     let reuploadfilekeydata = 'file'\r\n    //     let datavalue = JSON.stringify(payload)\r\n    //   formData.append('data', datavalue);\r\n    //     formData.append(reuploadfilekeydata, reuploadfiles[reuploadindividual])\r\n\r\n    //   }\r\n    // }\r\n    // else{\r\n    //   let datavalue = JSON.stringify(payload)\r\n    //   formData.append('data', datavalue);\r\n    // }\r\n\r\n    this.SpinnerService.show();\r\n    console.log(\"submit\", this.docFunctionList);\r\n\r\n    if (this.docFunctionList.length === 0) {\r\n      this.notify.error('Please Fill All Details');\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n\r\n    let count = 1;\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      this.docFunctionList[i].attachment = 'file' + count++;\r\n    }\r\n    console.log(\"ffff\", this.docFunctionList);\r\n\r\n    // for (let i = 0; i < this.docFunctionList.length; i++) {\r\n    //   if (this.docFunctionList[i].docgroup_id.id != undefined) {\r\n    //     this.docFunctionList[i].docgroup_id = this.docFunctionList[i].docgroup_id.id;\r\n    //   }\r\n    // }\r\n    console.log(\"docgp\", this.docFunctionList);\r\n\r\n    let successfulSubmissions = 0;\r\n\r\n    const processSubmission = (index) => {\r\n      const dataset = this.docFunctionList[index];\r\n      const formData: FormData = new FormData();\r\n      const Finaldata = [dataset];\r\n      const datavalue = JSON.stringify(Finaldata);\r\n      formData.append('data', datavalue);\r\n\r\n      const string_value = this.docFunctionList[index].attachment;\r\n      const file_list = this.docFunctionList[index].filekey;\r\n\r\n      formData.append(string_value, file_list[0]);\r\n      this.SpinnerService.show();\r\n      this.taskmanagerservice.issueCreation(formData)\r\n        .subscribe(res => {\r\n          console.log(\"issue click\", res)\r\n\r\n          if (res.message == 'Successfully Created') {\r\n            this.notify.success(\"Created Successfully!...\");\r\n            this.docFunctionList = [];\r\n            this.OnSubmit.emit();\r\n            this.SpinnerService.hide();\r\n            this.issueForm.reset();\r\n\r\n            this\r\n          } else {\r\n            this.notify.error(res.description)\r\n            this.SpinnerService.hide();\r\n            return false;\r\n          }\r\n        },\r\n          error => {\r\n            this.errorHandler.handleError(error);\r\n            this.SpinnerService.hide();\r\n          }\r\n\r\n        )\r\n\r\n      this.SpinnerService.hide();\r\n\r\n    }\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      processSubmission(i);\r\n    }\r\n    this.SpinnerService.hide();\r\n    this.issueForm.reset();\r\n  }\r\n\r\n  // displayFnappnm(appnm?: interfacedatas): string | undefined {\r\n  //   return appnm ? appnm.name : undefined;\r\n  // }\r\n\r\n  // Projectsearch(clientdata, Typedata) {\r\n\r\n  //   this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch+'/'+clientdata?.id+'?'+ this.taskapi.tasksApi.queries.query + Typedata +\r\n  //    '&' + this.taskapi.tasksApi.queries.status + 2) \r\n  //     .subscribe(results => {\r\n  //       this.projectList = results['data']\r\n  //     }, (error) => {\r\n  //       this.errorHandler.handleError(error);\r\n  //       this.SpinnerService.hide();\r\n  //     })\r\n  // }\r\n  getPriority() {\r\n    this.SpinnerService.show()\r\n    this.taskmanagerservice.get_Priority()\r\n      .subscribe((results: any[]) => {\r\n        this.SpinnerService.hide()\r\n        // let datas = results[\"data\"];\r\n        this.priorityList = results;\r\n        console.log(\"priority dropdown\", this.priorityList)\r\n\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  clientsearch(Typedata) {\r\n\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch +\r\n      this.taskapi.tasksApi.queries.query + Typedata + '&' +\r\n      this.taskapi.tasksApi.queries.status + 2)\r\n\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.clientList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n\r\n  }\r\n\r\n  displayFnclt(clt?: interfacedatas): string | undefined {\r\n    return clt ? clt.name : undefined;\r\n  }\r\n\r\n\r\n  Projectsearch(clientdata, Typedata) {\r\n    if (clientdata?.id == undefined) {\r\n      return false\r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + '/' + clientdata?.id + '?' + this.taskapi.tasksApi.queries.query + Typedata +\r\n      '&' + this.taskapi.tasksApi.queries.status + 2)\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.projectList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  displayFnappnm(appnm?: interfacedatas): string | undefined {\r\n    return appnm ? appnm.name : undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n  getModule(clientdata, projectdata, Typedata) {\r\n    if (clientdata?.id == undefined || projectdata?.id == undefined) {\r\n      return false\r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch + projectdata?.id + '?' + 'client_id=' + clientdata?.id + '&' + this.taskapi.tasksApi.queries.query +\r\n      Typedata + '&' + this.taskapi.tasksApi.queries.status + 2)\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.moduleList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n  displayFnmodnm(mod?: interfacedatas): string | undefined {\r\n    return mod ? mod.name : undefined;\r\n  }\r\n\r\n\r\n  resetProjectAndModule() {\r\n    // this.EmpTaskCreate.controls['project'].reset()\r\n    // this.EmpTaskCreate.controls['project_map_id'].reset()\r\n  }\r\n  resetModule() {\r\n    // this.EmpTaskCreate.controls['project_map_id'].reset()\r\n  }\r\n  // fileChange(file, files:FileList) {\r\n  //   this.labelImport.nativeElement.innerText = Array.from(files)\r\n  //   .map(f => f.name)\r\n  //   .join(', ');\r\n  //   this.images = <File>file.target.files[0];\r\n  // }\r\n  attachmentDelete(file, index) {\r\n\r\n    this.reuploadfileArr.splice(index, 1)\r\n\r\n  }\r\n\r\n  onFileSelect(e) {\r\n    // this.selectedFile = e.target.files;\r\n    let reuploaddatavalue = e.target.files\r\n\r\n    for (var i = 0; i < e.target.files.length; i++) {\r\n\r\n      this.reuploadfileArr.push(e.target.files[i])\r\n    }\r\n  }\r\n\r\n  fileChange(event) {\r\n    // let imagesList = [];\r\n    this.images = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n  }\r\n\r\n  showimageHeaderPreviewPDF: boolean\r\n  showimageHeaderPreview: boolean\r\n  jpgUrls: any;\r\n  pdfurl: any;\r\n  fileview(files) {\r\n    console.log(\"file data to view \", files)\r\n    let stringValue = files.name.split('.')\r\n    if (stringValue[1] === \"PNG\" || stringValue[1] === \"png\" || stringValue[1] === \"jpeg\" || stringValue[1] === \"jpg\" || stringValue[1] === \"JPG\" || stringValue[1] === \"JPEG\") {\r\n      this.showimageHeaderPreview = true\r\n      this.showimageHeaderPreviewPDF = false\r\n      const reader: any = new FileReader();\r\n      reader.readAsDataURL(files);\r\n      reader.onload = (_event) => {\r\n        this.jpgUrls = reader.result\r\n      }\r\n    }\r\n    if (stringValue[1] === \"pdf\") {\r\n      this.showimageHeaderPreview = false\r\n      this.showimageHeaderPreviewPDF = true\r\n      const reader: any = new FileReader();\r\n      reader.readAsDataURL(files);\r\n      reader.onload = (_event) => {\r\n        this.pdfurl = reader.result\r\n      }\r\n    }\r\n    if (stringValue[1] === \"csv\" || stringValue[1] === \"ods\" || stringValue[1] === \"xlsx\" || stringValue[1] === \"txt\") {\r\n      this.showimageHeaderPreview = false\r\n      this.showimageHeaderPreviewPDF = false\r\n    }\r\n  }\r\n\r\n  adddocformarray() {\r\n    this.addData = true;\r\n    if (this.issueForm.value.description == undefined || this.issueForm.value.description == null) {\r\n      this.notify.error('Please Enter Description');\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    if (this.issueForm.value.project === \"\") {\r\n      this.notify.error('Please Select Project');\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    //  if(this.images.length == 0){\r\n    //    this.notify.error('', 'Choose Upload Files ', { timeOut: 1500 });\r\n    //    this.SpinnerService.hide();\r\n    //    return false;\r\n    //  }\r\n    let dataArray = this.issueForm.value\r\n    let data = {\r\n      project_id: dataArray.project_map_id.mapping_id,\r\n      description: dataArray.description,\r\n      priority_type: dataArray.priority_type,\r\n      attachment: \"\",\r\n      filekey: this.images\r\n    }\r\n\r\n    console.log(\"dataArray\", data)\r\n    this.docFunctionList.push(data)\r\n    console.log(\"array\", this.docFunctionList)\r\n\r\n    this.issueForm.controls[\"description\"].reset('');\r\n    this.issueForm.controls[\"priority_type\"].reset('');\r\n    this.images = [];\r\n    this.fileInput.nativeElement.value = \"\"\r\n  }\r\n\r\n\r\n  savetemp() {\r\n    this.SpinnerService.show();\r\n    console.log(\"submit\", this.docFunctionList);\r\n\r\n    if (this.docFunctionList.length === 0) {\r\n      this.notify.error('Please Fill All Details');\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n\r\n    let count = 1;\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      this.docFunctionList[i].attachment = 'file' + count++;\r\n    }\r\n    console.log(\"ffff\", this.docFunctionList);\r\n    console.log(\"docgp\", this.docFunctionList);\r\n    let successfulSubmissions = 0;\r\n    const processSubmission = (index) => {\r\n      const dataset = this.docFunctionList[index];\r\n      const formData: FormData = new FormData();\r\n      const Finaldata = [dataset];\r\n      const datavalue = JSON.stringify(Finaldata);\r\n      formData.append('data', datavalue);\r\n\r\n      const string_value = this.docFunctionList[index].attachment;\r\n      const file_list = this.docFunctionList[index].filekey;\r\n\r\n      formData.append(string_value, file_list[0]);\r\n      this.SpinnerService.show();\r\n      this.taskmanagerservice.issueCreation(formData)\r\n        .subscribe(res => {\r\n          console.log(\"issue click\", res)\r\n\r\n          if (res.message == 'Successfully Created') {\r\n            this.notify.success(\"Created Successfully!...\");\r\n            this.docFunctionList = [];\r\n            this.OnSubmit.emit();\r\n            this.SpinnerService.hide();\r\n            this.issueForm.reset();\r\n\r\n            this\r\n          } else {\r\n            this.notify.error(res.description)\r\n            this.SpinnerService.hide();\r\n            return false;\r\n          }\r\n        },\r\n          error => {\r\n            this.errorHandler.handleError(error);\r\n            this.SpinnerService.hide();\r\n          }\r\n\r\n        )\r\n\r\n      this.SpinnerService.hide();\r\n\r\n    }\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      processSubmission(i);\r\n    }\r\n    this.SpinnerService.hide();\r\n    this.issueForm.reset();\r\n  }\r\n\r\n}\r\n   \r\n\r\n","<!-- \r\n<br><br><br>\r\n<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <h1 class=\"storyheading\">Issue Creations</h1>\r\n\r\n\r\n    \r\n  <form [formGroup]=\"issueForm\">\r\n    <table>\r\n        <tr>\r\n            <td>\r\n                <mat-label >Name</mat-label><br>\r\n                        <mat-form-field class=\"inputSizeWidth\">\r\n                            <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"description\">\r\n                            <mat-placeholder>Name</mat-placeholder>\r\n                </mat-form-field>\r\n            </td>\r\n            <td class=\"padsize\">\r\n                <mat-label>Project</mat-label><br>\r\n                <mat-form-field class=\"inputSizeWidth\">\r\n                    <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"project\">\r\n                    <mat-placeholder>Name</mat-placeholder>\r\n        </mat-form-field>\r\n            </td>\r\n            <td class=\"padsize\">\r\n                \r\n            </td><mat-label>Status</mat-label><br>\r\n                <mat-form-field class=\"inputSizeWidth\">\r\n                    <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"status\">\r\n                    <mat-placeholder>Name</mat-placeholder>\r\n        </mat-form-field>\r\n            <td class=\"padsize\">\r\n                <mat-label>Priority</mat-label><br>\r\n                <mat-form-field class=\"inputSizeWidth\">\r\n                    <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"priority\">\r\n                    <mat-placeholder>Name</mat-placeholder>\r\n        </mat-form-field>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    \r\n  </form>\r\n\r\n\r\n  <br>\r\n\r\n        <div style=\"margin-bottom: 100px;\">\r\n            <button class=\"btn btn-light\" id=\"submitBtn\" [disabled]=\"!issueForm.valid\" (click)=\"SubmitIssue()\">Submit</button>\r\n            <button class=\"btn btn-light\" id=\"WhiteBtn\" (click)=\"BackToSummary()\">Back</button>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>     -->\r\n\r\n<!-- <pre>{{sprintForm?.value | json}}</pre>  -->\r\n\r\n<!-- <div class=\"cus-createHeader\">\r\n  <h3>New Issue Creation</h3>\r\n  <nav class=\"cus-createHeaderNav\">\r\n    <p class=\"cus-createHeaderNavActive\" id=\"cus-createDetailsBtn\">\r\n      New Issue Creation\r\n    </p>\r\n  </nav>\r\n</div> -->\r\n\r\n<form [formGroup]=\"issueForm\">\r\n  <!-- <div>\r\n\r\n        <mat-form-field style=\"width: 100%\">\r\n            <mat-label>Status</mat-label>\r\n            <input type=\"text\" matInput autocomplete=\"off\" formControlName=\"status\">\r\n            <mat-placeholder>Name</mat-placeholder>\r\n</mat-form-field>\r\n    </div> -->\r\n  <div class=\"modal-body cus-createForm\">\r\n    <div>\r\n      <mat-form-field style=\"width: 100%\">\r\n        <mat-label>Client</mat-label>\r\n        <input\r\n          #cltInput\r\n          matInput\r\n          formControlName=\"client\"\r\n          [matAutocomplete]=\"clt\"\r\n          autocomplete=\"off\"\r\n          (keyup)=\"clientsearch(this.issueForm.value.client)\"\r\n        />\r\n        <!-- <mat-icon matSuffix>unfold_more</mat-icon> -->\r\n        <mat-autocomplete #clt=\"matAutocomplete\" [displayWith]=\"displayFnclt\">\r\n          <mat-option\r\n            *ngFor=\"let clt of EmpTaskCreateObj.clientList\"\r\n            [value]=\"clt\"\r\n            (click)=\"resetProjectAndModule()\" title=\"{{clt.name}}\"\r\n          >\r\n            {{ clt.name }}\r\n          </mat-option>\r\n          <mat-option *ngIf=\"!EmpTaskCreateObj.clientList || !EmpTaskCreateObj.clientList.length\">\r\n            No Records Found\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div>\r\n      <mat-form-field\r\n        style=\"width: 100%\"\r\n        (click)=\"\r\n          Projectsearch(\r\n            this.issueForm.value.client,\r\n            this.issueForm.value.project\r\n          )\r\n        \"\r\n      >\r\n        <mat-label>Project</mat-label>\r\n        <input\r\n          #appnmInput\r\n          matInput\r\n          type=\"text\"\r\n          formControlName=\"project\"\r\n          [matAutocomplete]=\"appnm\"\r\n          autocomplete=\"off\"\r\n          (keyup)=\"\r\n            Projectsearch(\r\n              this.issueForm.value.client,\r\n              this.issueForm.value.project\r\n            )\r\n          \"\r\n        />\r\n        <!-- <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon> -->\r\n        <mat-autocomplete\r\n          #appnm=\"matAutocomplete\"\r\n          [displayWith]=\"displayFnappnm\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let appnm of EmpTaskCreateObj.projectList\"\r\n            [value]=\"appnm\"\r\n            (click)=\"resetModule()\" title=\"{{appnm.name}}\"\r\n          >\r\n            {{ appnm.name }}\r\n          </mat-option>\r\n          <mat-option *ngIf=\"!EmpTaskCreateObj.projectList ||!EmpTaskCreateObj.projectList.length\">\r\n            No Records Found\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div>\r\n      <mat-form-field\r\n        style=\"width: 100%\"\r\n        (click)=\"\r\n          getModule(\r\n            this.issueForm.value.client,\r\n            this.issueForm.value.project,\r\n            this.issueForm.value.project_map_id\r\n          )\r\n        \"\r\n      >\r\n        <mat-label>Module</mat-label>\r\n        <input\r\n          #modnmInput\r\n          matInput\r\n          formControlName=\"project_map_id\"\r\n          autocomplete=\"off\"\r\n          (keyup)=\"\r\n            getModule(\r\n              this.issueForm.value.client,\r\n              this.issueForm.value.project,\r\n              this.issueForm.value.project_map_id\r\n            )\r\n          \"\r\n          [matAutocomplete]=\"modnm\"\r\n        />\r\n        <!-- <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon> -->\r\n        <mat-autocomplete\r\n          #modnm=\"matAutocomplete\"\r\n          [displayWith]=\"displayFnmodnm\"\r\n        >\r\n          <mat-option\r\n            *ngFor=\"let modnm of EmpTaskCreateObj.moduleList\"\r\n            [value]=\"modnm\" title=\"{{modnm.name}}\"\r\n          >\r\n            {{ modnm.name }}\r\n          </mat-option>\r\n          <mat-option *ngIf=\"!EmpTaskCreateObj.moduleList ||!EmpTaskCreateObj.moduleList.length\">\r\n            No Records Found\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    \r\n\r\n    <div>\r\n      <mat-form-field style=\"width: 100%\" (click)=\"getPriority()\">\r\n        <mat-label>Priority</mat-label>\r\n        <mat-select formControlName=\"priority_type\" class=\"\">\r\n          <mat-option [value]=\"pry.id\" *ngFor=\"let pry of priorityList\" title=\"{{pry.text}}\">\r\n            {{ pry.text }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    \r\n    <div >\r\n      <mat-form-field style=\"width: 208%;height: 250%;\">\r\n        <mat-label>Description</mat-label>\r\n        <textarea\r\n          type=\"text\"\r\n          matInput\r\n          autocomplete=\"off\"\r\n          formControlName=\"description\"\r\n          style=\"height: 250% !important;\" \r\n        ></textarea>\r\n        \r\n      </mat-form-field>\r\n    </div>\r\n    <div></div>\r\n    <div>\r\n      <label  style=\"margin-right: 1em;\">\r\n        <input type=\"file\" class=\"borderremove\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n        .dotx,.dotm,.docb,\r\n        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\"\r\n            multiple=\"true\"  name=\"images\" \r\n            (change)=\"fileChange($event)\">\r\n    </label>\r\n    </div>\r\n    <div >\r\n      <button  class=\"btn cus-sprintFormIcon2\" (click)=\"adddocformarray()\" style=\"width: 26%;\">Add</button>\r\n    </div>\r\n\r\n   \r\n\r\n    \r\n    <!-- <div>\r\n      <div class=\"input-group\">\r\n        <div class=\"custom-file\">\r\n          <input\r\n          formControlName=\"files\"\r\n            type=\"file\"\r\n            class=\"custom-file-input\"\r\n            id=\"importFile\"\r\n            multiple\r\n             (change)=\"onFileSelect($event)\"\r\n          />\r\n          <label class=\"custom-file-label\" #labelImport for=\"importFile\"\r\n            >Choose file</label\r\n          >\r\n        </div>\r\n        </div>\r\n    </div> -->\r\n  </div>\r\n  <div class=\"table-responsive\" style=\"width: 90%;margin-top: 10px;overflow-x: hidden;\">\r\n            \r\n    <table class=\"table\" id ='commonstyle'>\r\n    <thead class=\"table_header\" >\r\n        <tr>\r\n        <th>S.No</th>\r\n        <th>Description</th>\r\n        <th>Priority</th>\r\n        <th>File</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody >\r\n        <tr *ngFor=\"let display of docFunctionList; let i = index; \">\r\n            <td>{{i+1}}</td>\r\n            <td>{{display?.description}}</td>\r\n            <td>\r\n              <ng-container *ngIf=\"display?.priority_type == 1\">Normal</ng-container>\r\n              <ng-container *ngIf=\"display?.priority_type == 2\">High</ng-container>\r\n              <ng-container *ngIf=\"display?.priority_type == 3\">Low</ng-container>\r\n            </td>\r\n        \r\n            <td style=\"font-size: small;width: 150px;cursor: pointer;\">\r\n                <div *ngFor=\"let file of display.filekey ;index as i;\" title=\"{{file.name }}\" class=\" btn-link\"\r\n                data-bs-toggle=\"modal\" data-bs-target=\"#my-modalpreview\"\r\n                    (click)=\"fileview(file)\">\r\n                    {{i+1}}.{{file.name }}\r\n\r\n                </div>\r\n            </td>\r\n           \r\n        </tr>\r\n  </tbody>\r\n</table>\r\n</div>\r\n  <!-- <div *ngFor=\"let file of reuploadfileArr;let index = index\" class=\"cus-attachCard\">\r\n    <span>{{ file.name }}</span>\r\n    <button mat-icon-button type=\"button\" (click)=\"attachmentDelete(file.name, index)\">\r\n      <button class=\"btn\" style=\"color: blue;\"><i class=\"fa fa-trash\"></i></button>\r\n    </button>\r\n</div> -->\r\n  <div class=\"modal-footer\" *ngIf=\"addData\">\r\n    <!-- <button class=\"btn btn-outline-secondary\" (click)=\"BackToSummary()\">\r\n        Cancel\r\n      </button> -->\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"BackToSummary()\"\r\n      class=\"btn btn-secondary\"\r\n      data-bs-dismiss=\"modal\"\r\n    >\r\n      Close\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-primary\"\r\n     \r\n      (click)=\"SubmitIssue()\"\r\n      style=\"background-color: #044063;color: white;\"\r\n    >\r\n      Save\r\n    </button>\r\n  </div>\r\n</form>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}