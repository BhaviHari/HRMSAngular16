{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/hrms/master-hrms.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/autocomplete\";\nimport * as i13 from \"ng2-pdf-viewer\";\nconst _c0 = [\"closeButton\"];\nconst _c1 = [\"closeButtons\"];\nconst _c2 = [\"closebutton\"];\nconst _c3 = [\"bankInputs\"];\nfunction EmployeeBankDetailsComponent_ng_container_15_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 94)(1, \"i\", 95);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_ng_container_15_div_10_Template_i_click_1_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const bank_r38 = i0.ɵɵnextContext().$implicit;\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.downloadfiles(bank_r38));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmployeeBankDetailsComponent_ng_container_15_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 0);\n  }\n}\nfunction EmployeeBankDetailsComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 83)(2, \"div\", 1)(3, \"div\", 84)(4, \"p\", 85);\n    i0.ɵɵtext(5, \" Bank Info\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 86)(7, \"i\", 87);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_ng_container_15_Template_i_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const bank_r38 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.editBankRow(bank_r38));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 76)(9, \"i\", 88);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_ng_container_15_Template_i_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const bank_r38 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.deleteBank(bank_r38 == null ? null : bank_r38.id));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, EmployeeBankDetailsComponent_ng_container_15_div_10_Template, 2, 0, \"div\", 89);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 1)(12, \"div\", 90)(13, \"span\", 91);\n    i0.ɵɵtext(14, \"Account Number\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 90)(16, \"p\", 92);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(18, \"div\", 1)(19, \"div\", 90)(20, \"span\", 91);\n    i0.ɵɵtext(21, \"Account Holder Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 90)(23, \"p\", 92);\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"div\", 1)(26, \"div\", 90)(27, \"span\", 91);\n    i0.ɵɵtext(28, \"Bank Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 90)(30, \"p\", 92);\n    i0.ɵɵtext(31);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 1)(33, \"div\", 90)(34, \"span\", 91);\n    i0.ɵɵtext(35, \"IFSC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"div\", 90)(37, \"p\", 92);\n    i0.ɵɵtext(38);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(39, EmployeeBankDetailsComponent_ng_container_15_div_39_Template, 1, 0, \"div\", 93);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const bank_r38 = ctx.$implicit;\n    const i_r39 = ctx.index;\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", (bank_r38 == null ? null : bank_r38.employee_document) !== null);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(bank_r38 == null ? null : bank_r38.account_no);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(bank_r38 == null ? null : bank_r38.account_name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(bank_r38 == null ? null : bank_r38.bank_id == null ? null : bank_r38.bank_id.name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(bank_r38 == null ? null : bank_r38.ifsc);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (i_r39 + 1) % 3 === 0);\n  }\n}\nfunction EmployeeBankDetailsComponent_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 96);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bank_r48 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bank_r48);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bank_r48.text, \" \");\n  }\n}\nfunction EmployeeBankDetailsComponent_mat_option_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 96);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ifsc_r49 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ifsc_r49);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ifsc_r49.ifsccode, \" \");\n  }\n}\nfunction EmployeeBankDetailsComponent_div_77_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r52 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 97)(2, \"input\", 98, 99);\n    i0.ɵɵlistener(\"change\", function EmployeeBankDetailsComponent_div_77_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r52);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r51.fileChange($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction EmployeeBankDetailsComponent_div_78_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 102)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 103);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_div_78_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r54 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r54.viewfiles(ctx_r54.reuploadfileArr));\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\", 104);\n    i0.ɵɵtext(5, \"visibility\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 105);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_div_78_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r55);\n      const ctx_r56 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r56.deletefile(ctx_r56.reuploadfileArr));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\", 106);\n    i0.ɵɵtext(8, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r53.reuploadfileArr == null ? null : ctx_r53.reuploadfileArr.file_name);\n  }\n}\nfunction EmployeeBankDetailsComponent_div_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 100);\n    i0.ɵɵtemplate(2, EmployeeBankDetailsComponent_div_78_div_2_Template, 9, 1, \"div\", 101);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r9.reuploadfileArr == null ? null : ctx_r9.reuploadfileArr.file_name) !== null);\n  }\n}\nfunction EmployeeBankDetailsComponent_button_81_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 107);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_81_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r58);\n      const ctx_r57 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r57.onSubmitss());\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_button_82_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 108);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_82_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r59.onUpdatebank());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_button_83_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 109);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_83_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r61.addIfsc());\n    });\n    i0.ɵɵtext(1, \"Add IFSC\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_button_84_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 110);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_84_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r64);\n      const ctx_r63 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r63.addIfsc());\n    });\n    i0.ɵɵtext(1, \"Add IFSC\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_mat_option_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 96);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bank_r65 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bank_r65);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bank_r65.text, \" \");\n  }\n}\nfunction EmployeeBankDetailsComponent_span_112_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Acc Type required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_mat_option_123_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 96);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ifsc_r66 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ifsc_r66);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ifsc_r66.ifsccode, \" \");\n  }\n}\nfunction EmployeeBankDetailsComponent_span_124_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Ifsc required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_span_131_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Bank Name required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_span_139_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Branch Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_span_145_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Account Number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_button_157_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r68 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 112);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_157_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r68);\n      const ctx_r67 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r67.onSave());\n    });\n    i0.ɵɵtext(1, \"Save\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_button_158_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r70 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 113);\n    i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_button_158_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r70);\n      const ctx_r69 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r69.onUpdate());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_mat_option_199_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 96);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bank_r71 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bank_r71);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bank_r71.name, \" \");\n  }\n}\nfunction EmployeeBankDetailsComponent_span_228_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 111);\n    i0.ɵɵtext(1, \" *Remarks required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeBankDetailsComponent_pdf_viewer_247_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pdf-viewer\", 114);\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r36.filesrc)(\"original-size\", false)(\"render-text\", false)(\"show-borders\", true)(\"fit-to-page\", true)(\"show-all\", true)(\"fit-to-page\", true);\n  }\n}\nfunction EmployeeBankDetailsComponent_img_249_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 115);\n  }\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r37.filesrc, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class EmployeeBankDetailsComponent {\n  activateroute;\n  hrmsService;\n  toastr;\n  fb;\n  renderer;\n  spinner;\n  closeButton;\n  closeButtons;\n  closebutton;\n  EmpInfoObjects = {\n    datafrom: null,\n    booleanList: [{\n      text: \"Yes\",\n      value: true\n    }, {\n      text: \"No\",\n      value: false\n    }]\n  };\n  EmpId;\n  EmpBankDetails;\n  addingMode = true;\n  bankBranchInput;\n  bankIfscInput;\n  BankTypeDropdownList;\n  BankIfscDropdownList;\n  selectedBankId;\n  BankDropdownNameList;\n  selectedBank;\n  bankForms;\n  addbank;\n  bankbranchPatch;\n  bankIdPatch;\n  ifscform;\n  bankInput;\n  BankDropdownList;\n  bankBranchsInput;\n  BankBranchDropdownList;\n  branchform;\n  BranchValue;\n  showBranch = false;\n  ifscpatch;\n  fileUploadForm;\n  EmployeeDocuments;\n  typeValue;\n  images = [];\n  docFunctionList = [];\n  dataname;\n  filenames;\n  fileextension;\n  file_ext;\n  filesrc;\n  pdfshow = false;\n  imgshow = false;\n  imageUrls = environment.apiURL;\n  imageUrl = null;\n  reuploadfileArr;\n  fileupdate;\n  docFunctionLists = [];\n  displayBankName(bank) {\n    return bank && bank.text ? bank.text : '';\n  }\n  displayIfscName(ifsc) {\n    return ifsc && ifsc.ifsccode ? ifsc.ifsccode : '';\n  }\n  bankInputs;\n  displayBankBranch(bankbranch) {\n    return bankbranch && bankbranch.name ? bankbranch.name : '';\n  }\n  constructor(activateroute, hrmsService, toastr, fb, renderer, spinner) {\n    this.activateroute = activateroute;\n    this.hrmsService = hrmsService;\n    this.toastr = toastr;\n    this.fb = fb;\n    this.renderer = renderer;\n    this.spinner = spinner;\n    this.bankForm = this.fb.group({\n      account_name: [''],\n      account_no: [''],\n      bank_branch: [''],\n      ifsc: ['']\n    });\n    this.bankForms = this.fb.group({\n      account_name: [''],\n      account_no: [''],\n      bank_branch: [''],\n      ifsc: ['']\n    });\n    this.account_type = this.fb.group({\n      id: [''],\n      text: ['']\n    });\n    this.bank_id = this.fb.group({\n      code: [''],\n      id: [''],\n      name: ['']\n    });\n    this.branchform = this.fb.group({\n      bank_id: \"\",\n      name: '',\n      ifsccode: ''\n    });\n    this.branch = this.fb.group({\n      code: [''],\n      id: [''],\n      name: ['']\n    });\n    this.addbank = this.fb.group({\n      name: ''\n    });\n    this.ifscform = this.fb.group({\n      ifsc: '',\n      bankname: '',\n      branchname: ''\n    });\n  }\n  get accType() {\n    return this.account_type.get(\"text\");\n  }\n  get ifscNum() {\n    return this.bankForm.get(\"ifsc\");\n  }\n  get bankName() {\n    return this.bank_id.get(\"name\");\n  }\n  get branchName() {\n    return this.branch.get(\"name\");\n  }\n  get accNum() {\n    return this.bankForm.get(\"account_no\");\n  }\n  get beneficiary() {\n    return this.bankForm.get(\"account_name\");\n  }\n  selectedIfsc;\n  selectedIfscBank;\n  onBankIfscSelected(event) {\n    this.selectedIfsc = event.option.value;\n    this.bank_id.get('name')?.setValue(this.selectedIfsc.bank.name);\n    this.branch.get('name')?.setValue(this.selectedIfsc.branch.name);\n  }\n  bankForm = new FormGroup({\n    // bank: new FormControl(),\n    account_name: new FormControl(),\n    account_no: new FormControl(),\n    bank_branch: new FormControl(),\n    // bank_id: new FormGroup({\n    //   code: new FormControl(),\n    //   id: new FormControl(),\n    //   name: new FormControl(),\n    // }),\n    ifsc: new FormControl()\n  });\n  account_type = new FormGroup({\n    id: new FormControl(),\n    text: new FormControl()\n  });\n  bank_id = new FormGroup({\n    code: new FormControl(),\n    id: new FormControl(),\n    name: new FormControl()\n  });\n  branch = new FormGroup({\n    code: new FormControl(),\n    id: new FormControl(),\n    name: new FormControl()\n  });\n  EmpObjects = {\n    employeeList: null,\n    employeeFirstLetter: null,\n    ActivityStatus: null,\n    TimeLogList: null,\n    empId: null,\n    pendingCounts: null\n  };\n  ngOnInit() {\n    this.activateroute.queryParams.subscribe(params => {\n      this.EmpInfoObjects.datafrom = params['datafrom'];\n      this.EmpId = params['id'];\n    });\n    this.getEmployeeBasicDetails();\n    this.getEmpBankDetails();\n    this.getBankTypeAutocomplete();\n    // this.getBankIfscAutocomplete()\n    this.getBankAutocomplete();\n    this.getEmployee();\n    this.initializeForm();\n    this.getEmpDocs();\n  }\n  Emprole;\n  getEmpBankDetails() {\n    this.spinner.show();\n    this.hrmsService.getEmpBankDetailsNew(this.EmpId).subscribe(results => {\n      if (results.code) {\n        this.spinner.hide();\n        this.toastr.error(results.code);\n      } else {\n        this.spinner.hide();\n        this.EmpBankDetails = results['bank'];\n      }\n    });\n  }\n  keyPressNumbers(event) {\n    var charCode = event.which ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      event.preventDefault();\n      return false;\n    } else {\n      return true;\n    }\n  }\n  showSaveButton() {\n    this.addingMode = true;\n    this.bankForm.reset();\n    this.account_type.reset();\n    this.branch.reset();\n    this.bank_id.reset();\n  }\n  selectedItem;\n  editId;\n  branchId;\n  branchIdValue;\n  patchBranch;\n  bankNameQuery;\n  EmpBasicDetails;\n  getEmployeeBasicDetails() {\n    this.spinner.show();\n    this.hrmsService.getEmpDetails(this.EmpId).subscribe(results => {\n      this.spinner.hide();\n      this.EmpBasicDetails = results;\n    });\n  }\n  editIfsc;\n  editBankRow(item) {\n    // Store the selected item\n    this.addingMode = false;\n    this.selectedItem = item;\n    this.editId = item?.id;\n    this.editIfsc = item?.ifsc;\n    this.account_type.patchValue({\n      text: item?.account_type\n    });\n    this.bank_id.patchValue({\n      name: item?.bank_id?.name\n    });\n    this.branch.patchValue({\n      name: item?.bank_branch\n    });\n    this.ifscpatch = item?.ifsc;\n    this.bankForm.patchValue({\n      account_name: item?.account_name,\n      account_no: item?.account_no,\n      ifsc: {\n        ifsccode: item?.ifsc\n      },\n      bank_branch: item?.bank_branch\n    });\n    this.bankbranchPatch = item?.bank_branch;\n    this.bankIdPatch = item?.bank_id?.id;\n    this.bankNameQuery = item?.account_type?.name;\n    this.branchIdValue = item?.branch?.id;\n    this.reuploadfileArr = item?.employee_document;\n    if (this.reuploadfileArr == undefined || this.reuploadfileArr == null || this.reuploadfileArr == '') {\n      {\n        this.fileupdate = true;\n      }\n    } else {\n      this.fileupdate = false;\n    }\n  }\n  selectedBranchIfsc;\n  selectedBranchId;\n  selectedBranchIfscOptions = [];\n  allBankBranch;\n  bankIdNumber;\n  getBankTypeAutocomplete() {\n    this.bankBranchInput = \"account_type\";\n    this.hrmsService.getBankTypeDropdownList(this.bankBranchInput).subscribe(results => {\n      this.BankTypeDropdownList = results;\n    });\n  }\n  getBankIfscAutocomplete() {\n    this.bankIfscInput = this.bankForm.value.ifsc;\n    if (this.bankIfscInput.ifsccode) {\n      this.bankIfscInput = this.bankIfscInput.ifsccode;\n      this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe(results => {\n        if (results['data'].length == 0) {\n          // this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\");\n          this.BankIfscDropdownList = results[\"data\"];\n        } else {\n          this.BankIfscDropdownList = results[\"data\"];\n        }\n      });\n    } else {\n      this.bankIfscInput = this.bankForm.value.ifsc;\n      this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe(results => {\n        if (results['data'].length == 0) {\n          this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\");\n          this.BankIfscDropdownList = results[\"data\"];\n        } else {\n          this.BankIfscDropdownList = results[\"data\"];\n        }\n      });\n    }\n    //   this.bankIfscInput = this.bankForm.value.ifsc;\n    //   if(this.ifscpatch === '' || this.ifscpatch === null || this.ifscpatch === undefined)\n    //   {\n    //   this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe((results) => {\n    //     if (results['data'].length == 0) {\n    //       this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\")\n    //     }\n    //     else {\n    //       this.BankIfscDropdownList = results[\"data\"];\n    //     }\n    //   });\n    // }\n    // else\n    // {\n    //   this.hrmsService.getBankIfscList(this.ifscpatch).subscribe((results) => {\n    //     if (results['data'].length == 0) {\n    //       this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\")\n    //     }\n    //     else {\n    //       this.BankIfscDropdownList = results[\"data\"];\n    //     }\n    //   });\n    // }\n  }\n  selectedBankNameId;\n  getBankBranchNameAutocomplete() {\n    this.bankBranchInput = this.bankForm.value.bank;\n    if (this.selectedBankId !== undefined && this.selectedBankId !== null) {\n      this.hrmsService.getBankBranchDropdownNameList(this.selectedBankId).subscribe(results => {\n        this.BankDropdownNameList = results['bankbranch'];\n        if (this.BankDropdownNameList.length > 0) {\n          this.selectedBankNameId = this.BankDropdownNameList[0].id;\n        }\n      });\n    } else {}\n  }\n  bankFullName;\n  onUpdate() {\n    if (this.account_type.get('text').value == '' || this.account_type.get('text').value == null || this.account_type.get('text').value == undefined) {\n      this.toastr.error(\"Please select the Account Type\");\n      return false;\n    }\n    if (this.bankForm.get('ifsc').value == '' || this.bankForm.get('ifsc').value == null || this.bankForm.get('ifsc').value == undefined) {\n      this.toastr.error(\"Please select the IFSC Code \");\n      return false;\n    }\n    if (this.bankForm.get(\"account_no\").value == '' || this.bankForm.get(\"account_no\").value == null || this.bankForm.get(\"account_no\").value == undefined) {\n      this.toastr.error(\"Please Enter the Account No\");\n      return false;\n    }\n    if (this.bankForm.get('account_name').value == '' || this.bankForm.get('account_name').value == null || this.bankForm.get('account_name').value == undefined) {\n      this.toastr.error(\"Please Enter the Benificiary Name\");\n      return false;\n    }\n    if (this.bankForm.get('account_name').value !== null) {\n      this.getBankIfscAutocomplete();\n      let formValue = this.bankForm.value;\n      const bankIdVal = this.account_type.value;\n      formValue.id = this.editId;\n      let nameid = this.account_type.get('text').value;\n      formValue.account_type = bankIdVal.text.id;\n      let bankId = this.bankForm.get(\"bank_branch\").value;\n      let newBankId = this.bankForm.get(\"ifsc\").value;\n      if (newBankId.bank) {\n        const formIntoJson = {\n          account_type: formValue.account_type || null,\n          account_name: formValue.account_name || null,\n          bank_branch: newBankId.branch.name || null,\n          account_no: formValue.account_no || null,\n          bank_id: this.bankIdPatch || null,\n          ifsc: newBankId.ifsccode || null,\n          id: this.editId || null\n        };\n        const jsonData = JSON.stringify([formIntoJson]);\n        this.spinner.show();\n        this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(response => {\n          this.spinner.hide();\n          this.toastr.success('Successfully posted/updated bank info');\n          this.getEmpBankDetails();\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        }, error => {\n          this.spinner.hide();\n          this.toastr.error('Error while posting/updated bank info');\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        });\n      } else {\n        const formIntoJson = {\n          account_type: formValue.account_type || null,\n          account_name: formValue.account_name || null,\n          bank_branch: this.bankbranchPatch || null,\n          account_no: formValue.account_no || null,\n          bank_id: this.bankIdPatch || null,\n          ifsc: newBankId.ifsccode || null,\n          id: this.editId || null\n        };\n        const jsonData = JSON.stringify([formIntoJson]);\n        this.spinner.show();\n        this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(response => {\n          this.spinner.hide();\n          this.toastr.success('Successfully posted/updated bank info');\n          this.getEmpBankDetails();\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        }, error => {\n          this.spinner.hide();\n          console.error('Error while posting/updated bank info:', error);\n          this.toastr.error('Error while posting/updated bank info');\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        });\n      }\n    } else {\n      this.toastr.warning('All details need to be filled');\n    }\n  }\n  formIntoJson;\n  onSave() {\n    if (this.account_type.get('text').value == '' || this.account_type.get('text').value == null || this.account_type.get('text').value == undefined) {\n      this.toastr.error(\"Please select the Account Type\");\n      return false;\n    }\n    if (this.bankForm.get('ifsc').value == '' || this.bankForm.get('ifsc').value == null || this.bankForm.get('ifsc').value == undefined) {\n      this.toastr.error(\"Please select the IFSC Code \");\n      return false;\n    }\n    if (this.bankForm.get(\"account_no\").value == '' || this.bankForm.get(\"account_no\").value == null || this.bankForm.get(\"account_no\").value == undefined) {\n      this.toastr.error(\"Please Enter the Account No\");\n      return false;\n    }\n    if (this.bankForm.get('account_name').value == '' || this.bankForm.get('account_name').value == null || this.bankForm.get('account_name').value == undefined) {\n      this.toastr.error(\"Please Enter the Benificiary Name\");\n      return false;\n    }\n    if (this.bankForm.get('account_name').value !== null) {\n      const formValue = this.bankForm.value;\n      let ifsc = this.bankForm.get('ifsc').value;\n      let textid = this.account_type.get('text').value;\n      let bankBranch = this.bankForm.get('bank_branch').value;\n      this.formIntoJson = {\n        account_type: textid.id || null,\n        account_name: formValue.account_name || null,\n        bank_branch: this.branch.get(\"name\").value || null,\n        account_no: this.bankForm.get(\"account_no\").value || null,\n        bank_id: ifsc.bank.id || null,\n        ifsc: ifsc.ifsccode || null,\n        branch_id: ifsc.branch.id || null\n      };\n      const jsonData = JSON.stringify([this.formIntoJson]);\n      this.spinner.show();\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success('Successfully posted bank info');\n        this.getEmpBankDetails();\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n      }, error => {\n        this.toastr.error('Error while posting bank info');\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n      });\n    } else {\n      for (const control in this.bankForm.controls) {\n        if (this.bankForm.controls.hasOwnProperty(control)) {\n          this.bankForm.get(control).markAsTouched();\n        }\n        for (const control in this.account_type.controls) {\n          if (this.account_type.controls.hasOwnProperty(control)) {\n            this.account_type.get(control).markAsTouched();\n          }\n          for (const control in this.bank_id.controls) {\n            if (this.bank_id.controls.hasOwnProperty(control)) {\n              this.bank_id.get(control).markAsTouched();\n            }\n            for (const control in this.branch.controls) {\n              if (this.branch.controls.hasOwnProperty(control)) {\n                this.branch.get(control).markAsTouched();\n              }\n            }\n          }\n        }\n      }\n      this.toastr.warning('All details needed to be filled');\n    }\n  }\n  deleteBankRecord(recordId) {\n    if (confirm('Are you sure you want to delete this bank record?')) {\n      this.spinner.show();\n      this.hrmsService.deleteEmployeeBankRecord(recordId, this.EmpId).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success(\"Bank record deleted successfully\");\n        this.getEmpBankDetails();\n      }, error => {\n        this.toastr.error(\"Error while deleting bank record\");\n      });\n    }\n  }\n  getEmployee() {\n    const getDataid = localStorage.getItem(\"sessionData\");\n    let idValue = JSON.parse(getDataid);\n    let id = idValue.employee_id;\n    this.EmpObjects.empId = idValue.employee_id;\n    this.hrmsService.getEmpDetails(id).subscribe(res => {\n      this.EmpObjects.employeeList = res;\n      if (res?.id) {\n        this.gettingProfilename(res?.full_name);\n      }\n    }, error => {});\n  }\n  gettingProfilename(data) {\n    let name = data;\n    let letter = name[0];\n    this.EmpObjects.employeeFirstLetter = letter;\n  }\n  addIfsc() {\n    this.ifscform.reset();\n    this.bankInputs.value = '';\n  }\n  onSubmit() {\n    this.spinner.show();\n    this.hrmsService.checkIfsc(this.ifscform.get('ifsc').value).subscribe(res => {\n      this.showBranch = true;\n      this.BranchValue = res.BRANCH;\n      this.ifscform.get('branchname')?.setValue(res.BRANCH);\n      this.spinner.hide();\n    }, error => {\n      if (error.status === 404) {\n        this.toastr.error('Invalid IFSC Code');\n        this.spinner.hide();\n      } else {\n        this.spinner.hide();\n      }\n    });\n  }\n  getBankAutocomplete() {\n    this.bankInput = this.ifscform.value.bankname;\n    // this.bankBranchInput = \"account_type\";\n    this.hrmsService.get_singleBank(this.bankInput).subscribe(results => {\n      this.BankDropdownList = results[\"data\"];\n    });\n  }\n  displayBankNames(ifsc) {\n    return ifsc.name ? ifsc.name : '';\n  }\n  getBankBranchAutocomplete() {\n    this.bankBranchsInput = this.ifscform.value.branchname;\n    // this.bankBranchInput = \"account_type\";\n    this.hrmsService.get_singleBankBranch(this.bankBranchsInput).subscribe(results => {\n      this.BankBranchDropdownList = results[\"data\"];\n    });\n  }\n  displayBankBranchNames(ifsc) {\n    return ifsc.name ? ifsc.name : '';\n  }\n  AddBank() {\n    let payload = {\n      'name': this.addbank.get('name').value\n    };\n    this.hrmsService.createBankForm(payload).subscribe(res => {\n      this.toastr.success(\"Bank Added\");\n    });\n  }\n  newBranch() {\n    let payload = {\n      'bank_id': this.branchform.get('bank_id')?.value?.id,\n      \"name\": this.branchform.get('name')?.value,\n      \"ifsccode\": this.branchform.get('ifsccode')?.value,\n      \"microcode\": ''\n    };\n    this.hrmsService.branchCreateForm(payload).subscribe(res => {\n      this.toastr.success(\"branch Added\");\n    });\n  }\n  onAdd() {\n    if (this.ifscform.get('ifsc')?.value == '' || this.ifscform.get('ifsc')?.value == null) {\n      this.toastr.error(\"Enter IFSC Code\");\n      return false;\n    }\n    if (this.ifscform.get('bankname')?.value == '' || this.ifscform.get('bankname')?.value == null) {\n      this.toastr.error(\"Select Bank Name\");\n      return false;\n    }\n    if (this.ifscform.get('branchname')?.value == '' || this.ifscform.get('branchname')?.value == null) {\n      this.toastr.error(\"Verify IFSC Code\");\n      return false;\n    }\n    let payload = {\n      'bank_id': this.ifscform.get('bankname')?.value?.id,\n      \"name\": this.ifscform.get('branchname')?.value,\n      \"ifsccode\": this.ifscform.get('ifsc')?.value\n    };\n    this.hrmsService.branchCreateForm(payload).subscribe(res => {\n      this.toastr.success(\"branch Added\");\n      // this.hrmsService.getBankIfscList(this.ifscform.get('ifsc')?.value).subscribe((results) => {\n      //   this.BankIfscDropdownList = results[\"data\"];\n      this.ifscform.reset();\n      this.ifscform.get('bankname').reset();\n      this.closeButtons.nativeElement.click();\n      this.bankForm.reset();\n      this.account_type.reset();\n      this.branch.reset();\n      this.bank_id.reset();\n      // });\n    });\n  }\n  typeid() {\n    const data = this.EmployeeDocuments.data.find(document => document.type.name === 'Bank proof');\n    return data ? data?.type?.id : null;\n  }\n  onSubmits() {\n    console.log(this.fileUploadForm.value);\n    const typeIdFromForm = this.fileUploadForm.get('type').value;\n    // const typeIdFromMethod = this.getTypeId();\n    // if (typeIdFromForm !== typeIdFromMethod) {\n    //   this.fileUploadForm.get('type').setValue(typeIdFromMethod);\n    // }\n    if (this.fileUploadForm.valid) {\n      const formDataArray = [];\n      this.typeValue = this.typeid();\n      const typeAndRemarksObject = {\n        type: this.typeid(),\n        remarks: this.fileUploadForm.get('remarks').value\n      };\n      formDataArray.push(typeAndRemarksObject);\n      const formData = new FormData();\n      formData.append(`${this.typeValue}`, this.fileUploadForm.get('file').value);\n      console.log('Formatted Array:', formDataArray);\n      this.hrmsService.postDocumentDetails(this.EmpId, formDataArray, formData).subscribe(response => {\n        console.log('File uploaded successfully', response);\n        this.toastr.success(\"File uploaded Successfully\");\n        this.closebutton.nativeElement.click();\n        this.fileUploadForm.reset();\n      }, error => {\n        console.error('Error uploading file', error);\n        this.toastr.error(\"Error uploading file\");\n      });\n    } else {\n      for (const control in this.fileUploadForm.controls) {\n        if (this.fileUploadForm.controls.hasOwnProperty(control)) {\n          this.fileUploadForm.get(control).markAsTouched();\n        }\n      }\n      console.log(\"not valid\");\n      this.toastr.warning('All details needed to be filled');\n    }\n  }\n  getEmpDocs() {\n    this.hrmsService.getEmpDocuments(this.EmpId).subscribe(results => {\n      this.EmployeeDocuments = results;\n      console.log(\"docs details\", this.EmployeeDocuments);\n    });\n  }\n  initializeForm() {\n    // const typeValue = this.getTypeId();\n    this.fileUploadForm = this.fb.group({\n      type: [null],\n      remarks: [null, Validators.required],\n      file: [null, Validators.required]\n    });\n    // this.fileUploadForm.patchValue({\n    //   type: 4\n    // });\n  }\n  get remarkInfo() {\n    return this.fileUploadForm.get(\"remarks\");\n  }\n  get docsFile() {\n    return this.fileUploadForm.get(\"file\");\n  }\n  onFileChange(event) {\n    const allowedFileTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\n    const maxFileSize = 5 * 1024 * 1024;\n    const fileInput = event.target;\n    const selectedFiles = fileInput.files;\n    if (selectedFiles.length > 0) {\n      const file = selectedFiles[0];\n      if (!allowedFileTypes.includes(file.type)) {\n        this.toastr.error('Invalid file type. Please select a PDF, JPEG, PNG, or JPG file.');\n        fileInput.value = '';\n        return;\n      }\n      if (file.size > maxFileSize) {\n        this.toastr.error('File size exceeds the maximum limit (5 MB). Please select a smaller file.');\n        fileInput.value = '';\n        return;\n      }\n      console.log('File is valid:', file.name);\n    }\n    const file = event.target.files[0];\n    this.fileUploadForm.patchValue({\n      file\n    });\n  }\n  fileChange(event) {\n    // let imagesList = [];\n    this.images = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    // this.adddocformarray();\n  }\n  adddocformarray() {\n    // this.addData = true;\n    // if (this.issueForm.value.description == undefined || this.issueForm.value.description == null) {\n    //   this.notify.error('Please Enter Description');\n    //   this.SpinnerService.hide();\n    //   return false;\n    // }\n    // if (this.issueForm.value.project === \"\") {\n    //   this.notify.error('Please Select Project');\n    //   this.SpinnerService.hide();\n    //   return false;\n    // }\n    //  if(this.images.length == 0){\n    //    this.notify.error('', 'Choose Upload Files ', { timeOut: 1500 });\n    //    this.SpinnerService.hide();\n    //    return false;\n    //  }\n    // let dataArray = this.issueForm.value\n    // let data = {\n    //   project_id: dataArray.project_map_id.mapping_id,\n    //   description: dataArray.description,\n    //   priority_type: dataArray.priority_type,\n    //   attachment: \"\",\n    //   filekey: this.images\n    // } \n    const formValue = this.bankForm.value;\n    let ifsc = this.bankForm.get('ifsc').value;\n    let textid = this.account_type.get('text').value;\n    let bankBranch = this.bankForm.get('bank_branch').value;\n    let data = {\n      account_type: textid.id || null,\n      account_name: formValue.account_name || null,\n      bank_branch: this.branch.get(\"name\").value || null,\n      account_no: this.bankForm.get(\"account_no\").value || null,\n      bank_id: ifsc.bank.id || null,\n      ifsc: ifsc.ifsccode || null,\n      branch_id: ifsc.branch.id || null,\n      type: 3,\n      attachment: \"\",\n      filekey: this.images\n    };\n    console.log(\"dataArray\", data);\n    this.docFunctionList.push(data);\n    console.log(\"array docs\", this.docFunctionList);\n    // this.issueForm.controls[\"description\"].reset('');\n    // this.issueForm.controls[\"priority_type\"].reset('');\n    // this.images = [];\n    // this.fileInput.nativeElement.value = \"\"\n  }\n  onSubmitss() {\n    // this.SpinnerService.show();\n    this.adddocformarray();\n    console.log(\"submit\", this.docFunctionList);\n    // if (this.docFunctionList.length === 0) {\n    //   this.notify.error('Please Fill All Details');\n    //   this.SpinnerService.hide();\n    //   return false;\n    // }\n    let count = 1;\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      this.docFunctionList[i].attachment = 'file' + count++;\n    }\n    console.log(\"ffff\", this.docFunctionList);\n    console.log(\"docgp\", this.docFunctionList);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionList[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      const string_value = this.docFunctionList[index].attachment;\n      const file_list = this.docFunctionList[index].filekey;\n      formData.append(string_value, file_list[0]);\n      // this.SpinnerService.show();\n      // this.taskmanagerservice.issueCreation(formData)\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData).subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Created') {\n          this.toastr.success(\"Created Successfully!...\");\n          this.docFunctionList = [];\n          this.closeButton.nativeElement.click();\n          this.getEmpBankDetails();\n          // this.OnSubmit.emit();\n          // this.SpinnerService.hide();\n          // this.issueForm.reset();\n          this;\n        } else {\n          // this.notify.error(res.description)\n          // this.SpinnerService.hide();\n          // return false;\n        }\n      }, error => {\n        // this.errorHandler.handleError(error);\n        // this.SpinnerService.hide();\n      });\n      // this.SpinnerService.hide();\n    };\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      processSubmission(i);\n    }\n    // this.SpinnerService.hide();\n    // this.issueForm.reset();\n  }\n  viewfile(data) {\n    let filedata = data.employee_document;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    // this.spinner.show();\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      const getToken = localStorage.getItem(\"sessionData\");\n      let tokenValue = JSON.parse(getToken);\n      let token = tokenValue.token;\n      if (this.file_ext.includes(this.fileextension.toLowerCase())) {\n        // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\n        this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\n      } else {\n        let binaryData = [];\n        binaryData.push(results);\n        let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n        this.filesrc = downloadUrl;\n      }\n      if (msg == 1) {\n        this.pdfshow = false;\n        this.imgshow = true;\n      } else {\n        this.pdfshow = true;\n        this.imgshow = false;\n      }\n    });\n    // this.spinner.hide();\n    // this.getEmpDocs();\n    this.filesrc = null;\n  }\n  filetype_check2(i) {\n    let file_name = i;\n    let stringValue = file_name.split('.');\n    this.fileextension = stringValue.pop();\n    this.file_ext = ['jpg', 'png', 'JPG', 'JPEG', 'jpeg', 'image'];\n    if (this.file_ext.includes(this.fileextension)) {\n      var msg = 1;\n    } else {\n      var msg = 0;\n    }\n    return msg;\n  }\n  attachmentDelete(filedata) {\n    const fileID = filedata.id;\n    this.hrmsService.getEmployeeDocumentDetails(this.EmpId, fileID).subscribe(results => {\n      // this.EmployeeDocuments = results;\n      // console.log(\"Docs details\", this.EmployeeDocuments);       \n      this.fileupdate = true;\n      this.toastr.success(\"File deleted successfully\");\n      this.getEmpBankDetails();\n    }, error => {\n      console.error('Error deleting document:', error);\n    });\n  }\n  fileChanges(event) {\n    // let imagesList = [];\n    this.images = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    // this.adddocformarray();\n  }\n  adddocformarrays() {\n    let formValue = this.bankForm.value;\n    const bankIdVal = this.account_type.value;\n    formValue.id = this.editId;\n    let nameid = this.account_type.get('text').value;\n    formValue.account_type = bankIdVal.text.id;\n    let bankId = this.bankForm.get(\"bank_branch\").value;\n    let newBankId = this.bankForm.get(\"ifsc\").value;\n    // newBankId = newBankId.replace(/'/g, '\"');\n    // const bankIdObject = JSON.parse(newBankId);\n    // const ifsccodes = bankIdObject.ifsccode;    // console.log(ifsccode); // Output: IDIB000A013\n    // if (newBankId.bank) {\n    let data = {\n      account_type: formValue.account_type || null,\n      account_name: formValue.account_name || null,\n      bank_branch: formValue.bank_branch || null,\n      account_no: formValue.account_no || null,\n      bank_id: this.bankIdPatch || null,\n      ifsc: newBankId?.ifsccode || null,\n      id: this.editId || null,\n      type: 3,\n      attachment: \"\",\n      filekey: this.images\n    };\n    console.log(\"dataArray\", data);\n    this.docFunctionLists.push(data);\n    console.log(\"array docs\", this.docFunctionList);\n  }\n  // onUpdatebank() {\n  //   this.adddocformarrays();\n  //   console.log(\"submit\", this.docFunctionLists);\n  //   let count = 1;\n  //   for (let i = 0; i < this.docFunctionLists.length; i++) {\n  //     this.docFunctionLists[i].attachment = 'file' + count++;\n  //   }\n  //   console.log(\"ffff\", this.docFunctionLists);\n  //   console.log(\"docgp\", this.docFunctionLists);\n  //   let successfulSubmissions = 0;\n  //   const processSubmission = (index) => {\n  //     const dataset = this.docFunctionLists[index];\n  //     const formData: FormData = new FormData();\n  //     const Finaldata = [dataset];\n  //     const datavalue = JSON.stringify(Finaldata);\n  //     formData.append('data', datavalue);      const string_value = this.docFunctionLists[index].attachment;\n  //     const file_list = this.docFunctionLists[index].filekey;\n  //     formData.append(string_value, file_list[0]);\n  //     this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData)\n  //       .subscribe(res => {\n  //         console.log(\"issue click\", res)\n  //         if (res.message == 'Successfully Created') {\n  //           this.toastr.success(\"Created Successfully!...\");\n  //           this.docFunctionLists = [];\n  //           this.closeButton.nativeElement.click();\n  //           this.getEmpBankDetails();\n  //         } else {\n  //         }\n  //       },\n  //         error => {\n  //         }\n  //       )\n  //   }\n  //   for (let i = 0; i < this.docFunctionList.length; i++) {\n  //     processSubmission(i);\n  //   }\n  // }\n  onUpdatebank() {\n    this.adddocformarrays();\n    console.log(\"submit\", this.docFunctionLists);\n    let count = 1;\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\n      this.docFunctionLists[i].attachment = this.docFunctionLists[i].filekey.length > 0 ? 'file' + count++ : \"\"; // Check if filekey exists to set attachment\n    }\n    console.log(\"ffff\", this.docFunctionLists);\n    console.log(\"docgp\", this.docFunctionLists);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionLists[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      // Append file only if it exists\n      if (dataset.attachment !== \"\") {\n        formData.append(dataset.attachment, dataset.filekey[0]);\n      }\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData) // Assuming this is an update operation\n      .subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Updated') {\n          this.toastr.success(\"Updated Successfully!...\");\n          this.docFunctionLists = [];\n          this.getEmpBankDetails();\n          this.bankForms.reset();\n          this.closeButton.nativeElement.click();\n        } else {\n          // Handle error condition if required\n        }\n      }, error => {\n        // Handle error condition if required\n      });\n    };\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\n      processSubmission(i);\n    }\n    // this.adddocformarrays();\n    // if (this.docFunctionLists.length === 0) {\n    //   this.toastr.error('Please Fill All Details');\n    //   return;\n    // }\n    // this.docFunctionLists.forEach((doc, index) => {\n    //   const formData: FormData = new FormData();\n    //   formData.append('data', JSON.stringify([doc]));\n    //   formData.append(doc.attachment, doc.filekey[0]);\n    //   this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData)\n    //     .subscribe(res => {\n    //       if (res.message === 'Successfully Created') {\n    //         this.toastr.success(\"Created Successfully!...\");\n    //         this.docFunctionLists = [];\n    //         this.closeButton.nativeElement.click();\n    //         this.getEmpBankDetails();\n    //       } else {\n    //         // Handle error or notify user accordingly\n    //       }\n    //     },\n    //     error => {\n    //       // Handle error or notify user accordingly\n    //     });\n    // });\n  }\n  downloadfiles(data) {\n    // this.spinner.show();\n    let filedata = data.employee_document;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      let binaryData = [];\n      binaryData.push(results);\n      let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n      let link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = this.filenames;\n      link.click();\n    });\n    // this.spinner.hide();\n    // this.getEmpDocs();\n  }\n  deleteBank(recordId) {\n    if (confirm('Are you sure you want to delete this bank record?')) {\n      this.spinner.show();\n      this.hrmsService.deleteBankInfo(recordId, this.EmpId).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success(\"Bank Record Deleted successfully\");\n        // this.getEmpExperienceInfo()\n        this.getEmpBankDetails();\n      }, error => {\n        this.spinner.hide();\n        this.toastr.error(\"Delete failed\");\n      });\n    }\n  }\n  viewfiles(data) {\n    let filedata = data;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    this.spinner.show();\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      const getToken = localStorage.getItem(\"sessionData\");\n      let tokenValue = JSON.parse(getToken);\n      let token = tokenValue.token;\n      if (this.file_ext.includes(this.fileextension.toLowerCase())) {\n        // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\n        this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\n      } else {\n        let binaryData = [];\n        binaryData.push(results);\n        let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n        this.filesrc = downloadUrl;\n      }\n      if (msg == 1) {\n        this.pdfshow = false;\n        this.imgshow = true;\n      } else {\n        this.pdfshow = true;\n        this.imgshow = false;\n      }\n    });\n    this.spinner.hide();\n    // this.getEmpDocs();\n    this.filesrc = null;\n  }\n  deletefile(data) {\n    console.log('File ID:', data?.id);\n    this.hrmsService.getEmployeeDocumentDetails(this.EmpId, data?.id).subscribe(results => {\n      this.EmployeeDocuments = results;\n      console.log(\"Docs details\", this.EmployeeDocuments);\n      this.toastr.success(\"File deleted successfully\");\n      this.getEmpDocs();\n      this.fileupdate = true;\n    }, error => {\n      console.error('Error deleting document:', error);\n      this.toastr.error(\"Error deleting file\", \"Error\");\n    });\n  }\n  static ɵfac = function EmployeeBankDetailsComponent_Factory(t) {\n    return new (t || EmployeeBankDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MasterHrmsService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmployeeBankDetailsComponent,\n    selectors: [[\"app-employee-bank-details\"]],\n    viewQuery: function EmployeeBankDetailsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeButtons = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closebutton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bankInputs = _t.first);\n      }\n    },\n    decls: 251,\n    vars: 45,\n    consts: [[2, \"width\", \"100%\"], [1, \"row\"], [1, \"col-sm-1\", \"col-md-1\", \"col-1\", \"col-lg-1\", \"col-xl-1\"], [1, \"cardspaceListProfile\", \"color\", \"display\"], [1, \"col-sm-3\", \"col-md-3\", \"col-3\", \"col-lg-3\", \"col-xl-3\"], [2, \"color\", \"#046ba8\", \"font-size\", \"x-large\", \"font-weight\", \"700\", \"margin-top\", \"7%\"], [1, \"col-sm-4\", \"col-md-4\", \"col-4\", \"col-lg-4\", \"col-xl-4\"], [1, \"col-sm-2\", \"col-md-2\", \"col-2\", \"col-lg-2\", \"col-xl-2\", 2, \"margin-top\", \"1.2%\", \"padding-left\", \"6%\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#bankModal\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", 3, \"click\"], [2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"20px\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"bankModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"bottom-modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\", 2, \"width\", \"800px\"], [\"id\", \"educationHeader\", 1, \"modal-header\", 2, \"width\", \"800px\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", 2, \"text-align\", \"center\", \"font-size\", \"large\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 2, \"color\", \"white\", \"opacity\", \"1\"], [\"closeButton\", \"\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"formAbove\", 3, \"formGroup\"], [1, \"container\"], [1, \"row\", \"g-3\"], [1, \"col\"], [3, \"formGroup\"], [1, \"formField\"], [\"placeholder\", \"Select Account Type\", \"name\", \"accType\", \"matInput\", \"\", \"formControlName\", \"text\", 3, \"matAutocomplete\", \"input\"], [\"bankInput\", \"\"], [\"matSuffix\", \"\", 1, \"maticonsize\"], [3, \"displayWith\"], [\"bankdet\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"formField\", 3, \"click\"], [\"placeholder\", \"Select Ifsc\", \"name\", \"ifscNum\", \"matInput\", \"\", \"formControlName\", \"ifsc\", 3, \"matAutocomplete\", \"input\"], [3, \"displayWith\", \"optionSelected\"], [\"bankifsc\", \"matAutocomplete\"], [\"matInput\", \"\", \"name\", \"bankName\", \"placeholder\", \"Bank Name\", \"formControlName\", \"name\", \"readonly\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Bank branch\", \"name\", \"branchName\", \"formControlName\", \"name\", \"readonly\", \"\"], [\"matInput\", \"\", \"name\", \"accNum\", \"placeholder\", \"acc no\", \"formControlName\", \"account_no\", 3, \"keypress\"], [\"matInput\", \"\", \"name\", \"beneficiary\", \"placeholder\", \"Enter Beneficiary Name\", \"formControlName\", \"account_name\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", 2, \"margin-top\", \"3%\"], [\"class\", \"btn btn-primary\", \"style\", \"background-color: #044063;\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-dark\", \"style\", \"background-color: #044063;\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-warning\", \"style\", \"margin-left: 74%;\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#ifscmodal\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-warning\", \"style\", \"margin-left: 70%;\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#ifscmodal\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"bankModals\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"bottom-modal\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"placeholder\", \"Select Bank\", \"name\", \"accType\", \"matInput\", \"\", \"formControlName\", \"text\", 3, \"matAutocomplete\", \"input\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"placeholder\", \"Select Bank\", \"name\", \"ifscNum\", \"matInput\", \"\", \"formControlName\", \"ifsc\", 3, \"matAutocomplete\", \"input\"], [\"matInput\", \"\", \"name\", \"bankName\", \"placeholder\", \"AccNo\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"placeholder\", \"Bank branch\", \"name\", \"branchName\", \"formControlName\", \"name\"], [\"matInput\", \"\", \"name\", \"accNum\", \"placeholder\", \"acc no\", \"formControlName\", \"account_no\"], [\"matInput\", \"\", \"name\", \"beneficiary\", \"placeholder\", \"account name\", \"formControlName\", \"account_name\"], [1, \"saveUpdate\"], [\"class\", \"btn btn-primary insidePopup\", \"id\", \"saveEdu\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-dark insidePopup\", \"id\", \"saveEdu\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"ifscmodal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"bottom-modal\"], [\"closeButtons\", \"\"], [\"matInput\", \"\", \"formControlName\", \"ifsc\"], [\"id\", \"saveEdu\", 1, \"btn\", \"btn-dark\", 2, \"margin-left\", \"8%\", \"margin-top\", \"-3%\", \"padding\", \"9px\", \"border-radius\", \"24px\", 3, \"click\"], [1, \"formField\", 2, \"margin-left\", \"2%\"], [\"matInput\", \"\", \"formControlName\", \"branchname\", \"readonly\", \"\"], [\"bankInputs\", \"\"], [\"matInput\", \"\", \"formControlName\", \"bankname\", 3, \"matAutocomplete\", \"input\"], [\"bankifscs\", \"matAutocomplete\"], [\"id\", \"saveEdu\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", 3, \"click\"], [\"id\", \"docsModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"bottom-modal\"], [\"closebutton\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\"], [\"type\", \"file\", \"id\", \"file\", \"name\", \"docsFile\", \"accept\", \".pdf, .jpeg, .jpg, .png\", \"id\", \"inputGroupFile01\", \"formControlName\", \"file\", 1, \"form-control\", 3, \"change\"], [1, \"col-md-4\"], [1, \"remarks\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Remarks\", \"name\", \"remarkInfo\", \"formControlName\", \"remarks\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"inputFile\"], [\"id\", \"viewDownload\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\"], [\"fxLayoutAlign\", \"space-between\", 1, \"col-lg-12\", \"col-sm-12\"], [\"style\", \"display: block; height: 500px;\", 3, \"src\", \"original-size\", \"render-text\", \"show-borders\", \"fit-to-page\", \"show-all\", 4, \"ngIf\"], [\"class\", \"img-responsive\", \"style\", \"display: block;border-width: 2px;border-style: solid;width: 100%;\", 3, \"src\", 4, \"ngIf\"], [1, \"modal-footer\"], [1, \"matCard\", 2, \"width\", \"44%\", \"margin-top\", \"2%\"], [1, \"col-md-9\"], [2, \"margin-left\", \"7%\", \"font-size\", \"medium\", \"font-weight\", \"600\"], [1, \"col-md-1\", 2, \"margin-left\", \"-7%\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#bankModal\", 1, \"fa\", \"solid\", \"fa-pencil\", 3, \"click\"], [1, \"fa\", \"solid\", \"fa-trash-can\", 2, \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"col-md-1\", \"style\", \"margin-left: 5px;margin-top: 2px;\", 4, \"ngIf\"], [1, \"col-sm-5\"], [2, \"margin-left\", \"13%\"], [2, \"margin-left\", \"7%\", \"color\", \"#A9A9A9\", \"font-size\", \"small\", \"font-weight\", \"600\"], [\"style\", \"width: 100%;\", 4, \"ngIf\"], [1, \"col-md-1\", 2, \"margin-left\", \"5px\", \"margin-top\", \"2px\"], [1, \"fa\", \"solid\", \"fa-download\", 3, \"click\"], [3, \"value\"], [1, \"col-sm-7\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\\n                .dotx,.dotm,.docb,\\n                .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"placeholder\", \"Select files\", \"multiple\", \"true\", \"name\", \"images\", 1, \"borderremove\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"col-sm-9\", 2, \"margin-left\", \"2%\"], [\"class\", \"cus-attachCard\", \"style\", \"margin-left: -2%;\", 4, \"ngIf\"], [1, \"cus-attachCard\", 2, \"margin-left\", \"-2%\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"data-bs-target\", \"#viewDownload\", \"data-bs-toggle\", \"modal\", 2, \"margin-left\", \"37%\", 3, \"click\"], [\"aria-label\", \"View\", 2, \"font-size\", \"x-large\", \"color\", \"blue\", \"margin-top\", \"-19px\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"aria-label\", \"Delete\", 2, \"font-size\", \"x-large\", \"color\", \"blue\", \"margin-top\", \"-19px\"], [1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", 3, \"click\"], [1, \"btn\", \"btn-dark\", 2, \"background-color\", \"#044063\", 3, \"click\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#ifscmodal\", 1, \"btn\", \"btn-warning\", 2, \"margin-left\", \"74%\", 3, \"click\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#ifscmodal\", 1, \"btn\", \"btn-warning\", 2, \"margin-left\", \"70%\", 3, \"click\"], [1, \"error-message\"], [\"id\", \"saveEdu\", 1, \"btn\", \"btn-primary\", \"insidePopup\", 3, \"click\"], [\"id\", \"saveEdu\", 1, \"btn\", \"btn-dark\", \"insidePopup\", 3, \"click\"], [2, \"display\", \"block\", \"height\", \"500px\", 3, \"src\", \"original-size\", \"render-text\", \"show-borders\", \"fit-to-page\", \"show-all\"], [1, \"img-responsive\", 2, \"display\", \"block\", \"border-width\", \"2px\", \"border-style\", \"solid\", \"width\", \"100%\", 3, \"src\"]],\n    template: function EmployeeBankDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"uppercase\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"p\", 5);\n        i0.ɵɵtext(8, \"Bank Details\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_Template_button_click_11_listener() {\n          return ctx.showSaveButton();\n        });\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13, \"+ Add\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 9);\n        i0.ɵɵtemplate(15, EmployeeBankDetailsComponent_ng_container_15_Template, 40, 6, \"ng-container\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 12)(18, \"div\", 13)(19, \"div\", 14)(20, \"h5\", 15)(21, \"b\");\n        i0.ɵɵtext(22, \"Bank Details\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"button\", 16, 17)(25, \"span\", 18);\n        i0.ɵɵtext(26, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"form\", 20)(29, \"div\", 21)(30, \"div\", 22)(31, \"div\", 23)(32, \"form\", 24)(33, \"mat-form-field\", 25)(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Account Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"input\", 26, 27);\n        i0.ɵɵlistener(\"input\", function EmployeeBankDetailsComponent_Template_input_input_36_listener() {\n          return ctx.getBankTypeAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"mat-icon\", 28);\n        i0.ɵɵtext(39, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-autocomplete\", 29, 30);\n        i0.ɵɵtemplate(42, EmployeeBankDetailsComponent_mat_option_42_Template, 2, 2, \"mat-option\", 31);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"div\", 23)(44, \"mat-form-field\", 32);\n        i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_Template_mat_form_field_click_44_listener() {\n          return ctx.getBankIfscAutocomplete();\n        });\n        i0.ɵɵelementStart(45, \"mat-label\");\n        i0.ɵɵtext(46, \"Ifsc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"input\", 33, 27);\n        i0.ɵɵlistener(\"input\", function EmployeeBankDetailsComponent_Template_input_input_47_listener() {\n          return ctx.getBankIfscAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"mat-icon\", 28);\n        i0.ɵɵtext(50, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"mat-autocomplete\", 34, 35);\n        i0.ɵɵlistener(\"optionSelected\", function EmployeeBankDetailsComponent_Template_mat_autocomplete_optionSelected_51_listener($event) {\n          return ctx.onBankIfscSelected($event);\n        });\n        i0.ɵɵtemplate(53, EmployeeBankDetailsComponent_mat_option_53_Template, 2, 2, \"mat-option\", 31);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 23)(55, \"form\", 24)(56, \"mat-form-field\", 25)(57, \"mat-label\");\n        i0.ɵɵtext(58, \"Bank Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"input\", 36);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(60, \"div\", 22)(61, \"div\", 23)(62, \"form\", 24)(63, \"mat-form-field\", 25)(64, \"mat-label\");\n        i0.ɵɵtext(65, \"Bank Branch\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(66, \"input\", 37);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(67, \"div\", 23)(68, \"mat-form-field\", 25)(69, \"mat-label\");\n        i0.ɵɵtext(70, \"Account Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"input\", 38);\n        i0.ɵɵlistener(\"keypress\", function EmployeeBankDetailsComponent_Template_input_keypress_71_listener($event) {\n          return ctx.keyPressNumbers($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(72, \"div\", 23)(73, \"mat-form-field\", 25)(74, \"mat-label\");\n        i0.ɵɵtext(75, \"Beneficiary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(76, \"input\", 39);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(77, EmployeeBankDetailsComponent_div_77_Template, 4, 0, \"div\", 40);\n        i0.ɵɵtemplate(78, EmployeeBankDetailsComponent_div_78_Template, 3, 1, \"div\", 40);\n        i0.ɵɵelementStart(79, \"div\", 41)(80, \"div\", 23);\n        i0.ɵɵtemplate(81, EmployeeBankDetailsComponent_button_81_Template, 2, 0, \"button\", 42);\n        i0.ɵɵtemplate(82, EmployeeBankDetailsComponent_button_82_Template, 2, 0, \"button\", 43);\n        i0.ɵɵtemplate(83, EmployeeBankDetailsComponent_button_83_Template, 2, 0, \"button\", 44);\n        i0.ɵɵtemplate(84, EmployeeBankDetailsComponent_button_84_Template, 2, 0, \"button\", 45);\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(85, \"div\", 46)(86, \"div\", 12)(87, \"div\", 13)(88, \"div\", 14)(89, \"h5\", 15)(90, \"b\");\n        i0.ɵɵtext(91, \"Bank Details\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(92, \"button\", 47, 17)(94, \"span\", 18);\n        i0.ɵɵtext(95, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(96, \"div\", 19)(97, \"form\", 20)(98, \"div\", 21)(99, \"div\", 22)(100, \"div\", 23)(101, \"form\", 24)(102, \"mat-form-field\", 25)(103, \"mat-label\");\n        i0.ɵɵtext(104, \"Account Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"input\", 48, 27);\n        i0.ɵɵlistener(\"input\", function EmployeeBankDetailsComponent_Template_input_input_105_listener() {\n          return ctx.getBankTypeAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(107, \"mat-icon\", 28);\n        i0.ɵɵtext(108, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(109, \"mat-autocomplete\", 29, 30);\n        i0.ɵɵtemplate(111, EmployeeBankDetailsComponent_mat_option_111_Template, 2, 2, \"mat-option\", 31);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(112, EmployeeBankDetailsComponent_span_112_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(113, \"div\", 23)(114, \"mat-form-field\", 25)(115, \"mat-label\");\n        i0.ɵɵtext(116, \"Ifsc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(117, \"input\", 50, 27);\n        i0.ɵɵlistener(\"input\", function EmployeeBankDetailsComponent_Template_input_input_117_listener() {\n          return ctx.getBankIfscAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(119, \"mat-icon\", 28);\n        i0.ɵɵtext(120, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(121, \"mat-autocomplete\", 34, 35);\n        i0.ɵɵlistener(\"optionSelected\", function EmployeeBankDetailsComponent_Template_mat_autocomplete_optionSelected_121_listener($event) {\n          return ctx.onBankIfscSelected($event);\n        });\n        i0.ɵɵtemplate(123, EmployeeBankDetailsComponent_mat_option_123_Template, 2, 2, \"mat-option\", 31);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(124, EmployeeBankDetailsComponent_span_124_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(125, \"div\", 23)(126, \"form\", 24)(127, \"mat-form-field\", 25)(128, \"mat-label\");\n        i0.ɵɵtext(129, \"Bank Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(130, \"input\", 51);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(131, EmployeeBankDetailsComponent_span_131_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(132, \"div\", 22)(133, \"div\", 23)(134, \"form\", 24)(135, \"mat-form-field\", 25)(136, \"mat-label\");\n        i0.ɵɵtext(137, \"Bank Branch\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(138, \"input\", 52);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(139, EmployeeBankDetailsComponent_span_139_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(140, \"div\", 23)(141, \"mat-form-field\", 25)(142, \"mat-label\");\n        i0.ɵɵtext(143, \"Account Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(144, \"input\", 53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(145, EmployeeBankDetailsComponent_span_145_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(146, \"div\", 23)(147, \"mat-form-field\", 25)(148, \"mat-label\");\n        i0.ɵɵtext(149, \"Beneficiary\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(150, \"input\", 54);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(151, \"div\", 21)(152, \"div\", 1);\n        i0.ɵɵelement(153, \"div\", 23);\n        i0.ɵɵelementStart(154, \"div\", 23)(155, \"div\", 55)(156, \"div\");\n        i0.ɵɵtemplate(157, EmployeeBankDetailsComponent_button_157_Template, 2, 0, \"button\", 56);\n        i0.ɵɵtemplate(158, EmployeeBankDetailsComponent_button_158_Template, 2, 0, \"button\", 57);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(159, \"br\")(160, \"br\");\n        i0.ɵɵelementEnd()()()()()()()()();\n        i0.ɵɵelementStart(161, \"div\", 58)(162, \"div\", 12)(163, \"div\", 13)(164, \"div\", 14)(165, \"h5\", 15)(166, \"b\");\n        i0.ɵɵtext(167, \"Add IFSC\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(168, \"button\", 47, 59)(170, \"span\", 18);\n        i0.ɵɵtext(171, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(172, \"div\", 19)(173, \"form\", 20)(174, \"div\", 21)(175, \"div\", 22)(176, \"div\", 23)(177, \"mat-form-field\", 25)(178, \"mat-label\");\n        i0.ɵɵtext(179, \"Ifsc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(180, \"input\", 60);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(181, \"button\", 61);\n        i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_Template_button_click_181_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(182, \"Verify\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(183, \"div\", 23)(184, \"mat-form-field\", 62)(185, \"mat-label\");\n        i0.ɵɵtext(186, \"Branch Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(187, \"input\", 63, 64);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(189, \"div\", 22)(190, \"mat-form-field\", 62)(191, \"mat-label\");\n        i0.ɵɵtext(192, \"Bank Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(193, \"input\", 65, 64);\n        i0.ɵɵlistener(\"input\", function EmployeeBankDetailsComponent_Template_input_input_193_listener() {\n          return ctx.getBankAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(195, \"mat-icon\", 28);\n        i0.ɵɵtext(196, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(197, \"mat-autocomplete\", 29, 66);\n        i0.ɵɵtemplate(199, EmployeeBankDetailsComponent_mat_option_199_Template, 2, 2, \"mat-option\", 31);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(200, \"div\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(201, \"div\", 21)(202, \"div\", 1)(203, \"div\", 23)(204, \"button\", 67);\n        i0.ɵɵlistener(\"click\", function EmployeeBankDetailsComponent_Template_button_click_204_listener() {\n          return ctx.onAdd();\n        });\n        i0.ɵɵtext(205, \"Add\");\n        i0.ɵɵelementEnd()()()()()()()()();\n        i0.ɵɵelementStart(206, \"div\", 68)(207, \"div\", 12)(208, \"div\", 13)(209, \"div\", 14)(210, \"h5\", 15)(211, \"b\");\n        i0.ɵɵtext(212, \" Upload Bank Proof \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(213, \"button\", 16, 69)(215, \"span\", 18);\n        i0.ɵɵtext(216, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(217, \"div\", 19)(218, \"form\", 70);\n        i0.ɵɵlistener(\"ngSubmit\", function EmployeeBankDetailsComponent_Template_form_ngSubmit_218_listener() {\n          return ctx.onSubmits();\n        });\n        i0.ɵɵelementStart(219, \"div\", 1)(220, \"div\", 71)(221, \"input\", 72);\n        i0.ɵɵlistener(\"change\", function EmployeeBankDetailsComponent_Template_input_change_221_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(222, \"div\", 73)(223, \"mat-form-field\", 74)(224, \"mat-label\");\n        i0.ɵɵtext(225, \"Remarks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(226, \"input\", 75);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(227, \"br\");\n        i0.ɵɵtemplate(228, EmployeeBankDetailsComponent_span_228_Template, 2, 0, \"span\", 49);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(229, \"div\", 76)(230, \"button\", 77)(231, \"mat-icon\");\n        i0.ɵɵtext(232, \"cloud_upload\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(233, \"br\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(234, \"div\", 78)(235, \"div\", 12)(236, \"div\", 13)(237, \"div\", 14)(238, \"h5\", 15);\n        i0.ɵɵtext(239, \" View File \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(240, \"button\", 16, 69)(242, \"span\", 18);\n        i0.ɵɵtext(243, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(244, \"div\", 19)(245, \"div\", 1)(246, \"div\", 79);\n        i0.ɵɵtemplate(247, EmployeeBankDetailsComponent_pdf_viewer_247_Template, 1, 7, \"pdf-viewer\", 80);\n        i0.ɵɵelement(248, \"br\");\n        i0.ɵɵtemplate(249, EmployeeBankDetailsComponent_img_249_Template, 1, 1, \"img\", 81);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(250, \"div\", 82);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(41);\n        const _r6 = i0.ɵɵreference(52);\n        const _r31 = i0.ɵɵreference(198);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.EmpObjects.employeeFirstLetter == null ? \"VS\" : i0.ɵɵpipeBind1(5, 43, ctx.EmpObjects.employeeFirstLetter), \" \");\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpBankDetails);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.bankForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.account_type);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayBankName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BankTypeDropdownList);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayIfscName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BankIfscDropdownList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.bank_id);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.branch);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode || ctx.fileupdate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.fileupdate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.addingMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.addingMode);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.bankForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.account_type);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matAutocomplete\", _r3);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayBankName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BankTypeDropdownList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accType == null ? null : ctx.accType.valid) && ((ctx.accType == null ? null : ctx.accType.touched) || (ctx.accType == null ? null : ctx.accType.dirty)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayIfscName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BankIfscDropdownList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.ifscNum == null ? null : ctx.ifscNum.valid) && ((ctx.ifscNum == null ? null : ctx.ifscNum.touched) || (ctx.ifscNum == null ? null : ctx.ifscNum.dirty)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.bank_id);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.bankName == null ? null : ctx.bankName.valid) && ((ctx.bankName == null ? null : ctx.bankName.touched) || (ctx.bankName == null ? null : ctx.bankName.dirty)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.branch);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.branchName == null ? null : ctx.branchName.valid) && ((ctx.branchName == null ? null : ctx.branchName.touched) || (ctx.branchName == null ? null : ctx.branchName.dirty)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accNum == null ? null : ctx.accNum.valid) && ((ctx.accNum == null ? null : ctx.accNum.touched) || (ctx.accNum == null ? null : ctx.accNum.dirty)));\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.addingMode);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.ifscform);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"matAutocomplete\", _r31);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayBankNames);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BankDropdownList);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"formGroup\", ctx.fileUploadForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.remarkInfo == null ? null : ctx.remarkInfo.valid) && ((ctx.remarkInfo == null ? null : ctx.remarkInfo.touched) || (ctx.remarkInfo == null ? null : ctx.remarkInfo.dirty)));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngIf\", ctx.pdfshow);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.imgshow);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.MatIconButton, i8.MatIcon, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatSuffix, i11.MatOption, i12.MatAutocomplete, i12.MatAutocompleteTrigger, i13.PdfViewerComponent, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i6.UpperCasePipe],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];.mat-form-field[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  cursor: pointer;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-radius: 3px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n\\n\\n.cus-tableContainer[_ngcontent-%COMP%] {\\n  border-width: 1px 0px 1px 0px;\\n  border-style: solid;\\n  border-color: #dedede;\\n  padding: 16px 30px;\\n}\\n\\n\\n\\n.cus-tableSearch[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 10px 0 20px 0;\\n}\\n\\n.cus-tableSearchContent[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 10px;\\n}\\n\\n.cus-tableSearchHead[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n  font-size: 20px;\\n  font-weight: 600;\\n  line-height: 27px;\\n  letter-spacing: 0em;\\n  text-align: left;\\n}\\n\\n#editicon[_ngcontent-%COMP%] {\\n  color: rgb(23, 111, 244);\\n}\\n\\n#deleteicon[_ngcontent-%COMP%] {\\n  color: rgb(23, 111, 244);\\n}\\n\\n.insidePopup[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 4rem;\\n  right: 24rem;\\n}\\n\\n.addbutton[_ngcontent-%COMP%] {\\n  background-color: #f5c68b;\\n  width: 60px;\\n  height: 60px;\\n  border-radius: 50%;\\n}\\n\\n#educationHeader[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n.cus-badgeGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #d7f8e1;\\n  color: #057926;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeBlue[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ededfd;\\n  color: #2d2e8e;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  font-size: 15px;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 12px;\\n  position: relative;\\n  bottom: 1rem;\\n}\\n\\n.saveUpdate[_ngcontent-%COMP%] {\\n  position: relative;\\n  bottom: 3rem;\\n}\\n\\n.formField[_ngcontent-%COMP%] {\\n  width: 14rem;\\n}\\n\\n.newCard[_ngcontent-%COMP%] {\\n  border: 1px solid rgb(0, 0, 0);\\n  border-radius: 10px;\\n  margin-bottom: 10px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.cus-badgeGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #d7f8e1;\\n  color: #057926;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cardspaceListProfile[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  width: 50px;\\n  height: 50px;\\n  font-size: 32px;\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.color[_ngcontent-%COMP%] {\\n  color: #525CEB;\\n}\\n\\n*[_ngcontent-%COMP%] {\\n  font-family: \\\"Inter\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.matCard[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  padding: 3px;\\n}\\n\\n.fa-pencil[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 23%;\\n  cursor: pointer;\\n}\\n\\n.fa-trash-can[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 23%;\\n  cursor: pointer;\\n}\\n\\n.matCard[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.1); \\n\\n  border-radius: 10px;\\n  padding: 10px;\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\n  transition: background 0.3s, border-color 0.3s, box-shadow 0.3s;\\n}\\n\\n.matCard[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.15); \\n\\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);\\n  transform: scale(1.05);\\n}\\n\\n.inputFile[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n  background-color: #f5c68b;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.inputFile[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n\\n.remarks[_ngcontent-%COMP%] {\\n  margin-top: 0px;\\n}\\n\\n.fa-download[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 7%;\\n  cursor: pointer;\\n}\\n\\n.cus-attachCard[_ngcontent-%COMP%] {\\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.171);\\n  padding: 4px 10px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 10px 0 0 0;\\n  border-radius: 6px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","environment","i0","ɵɵelementStart","ɵɵlistener","EmployeeBankDetailsComponent_ng_container_15_div_10_Template_i_click_1_listener","ɵɵrestoreView","_r44","bank_r38","ɵɵnextContext","$implicit","ctx_r42","ɵɵresetView","downloadfiles","ɵɵelementEnd","ɵɵelement","ɵɵelementContainerStart","ɵɵtext","EmployeeBankDetailsComponent_ng_container_15_Template_i_click_7_listener","restoredCtx","_r46","ctx_r45","editBankRow","EmployeeBankDetailsComponent_ng_container_15_Template_i_click_9_listener","ctx_r47","deleteBank","id","ɵɵtemplate","EmployeeBankDetailsComponent_ng_container_15_div_10_Template","EmployeeBankDetailsComponent_ng_container_15_div_39_Template","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","employee_document","ɵɵtextInterpolate","account_no","account_name","bank_id","name","ifsc","i_r39","bank_r48","ɵɵtextInterpolate1","text","ifsc_r49","ifsccode","EmployeeBankDetailsComponent_div_77_Template_input_change_2_listener","$event","_r52","ctx_r51","fileChange","EmployeeBankDetailsComponent_div_78_div_2_Template_button_click_3_listener","_r55","ctx_r54","viewfiles","reuploadfileArr","EmployeeBankDetailsComponent_div_78_div_2_Template_button_click_6_listener","ctx_r56","deletefile","ctx_r53","file_name","EmployeeBankDetailsComponent_div_78_div_2_Template","ctx_r9","EmployeeBankDetailsComponent_button_81_Template_button_click_0_listener","_r58","ctx_r57","onSubmitss","EmployeeBankDetailsComponent_button_82_Template_button_click_0_listener","_r60","ctx_r59","onUpdatebank","EmployeeBankDetailsComponent_button_83_Template_button_click_0_listener","_r62","ctx_r61","addIfsc","EmployeeBankDetailsComponent_button_84_Template_button_click_0_listener","_r64","ctx_r63","bank_r65","ifsc_r66","EmployeeBankDetailsComponent_button_157_Template_button_click_0_listener","_r68","ctx_r67","onSave","EmployeeBankDetailsComponent_button_158_Template_button_click_0_listener","_r70","ctx_r69","onUpdate","bank_r71","ctx_r36","filesrc","ɵɵpropertyInterpolate","ctx_r37","ɵɵsanitizeUrl","EmployeeBankDetailsComponent","activateroute","hrmsService","toastr","fb","renderer","spinner","closeButton","closeButtons","closebutton","EmpInfoObjects","datafrom","booleanList","value","EmpId","EmpBankDetails","addingMode","bankBranchInput","bankIfscInput","BankTypeDropdownList","BankIfscDropdownList","selectedBankId","BankDropdownNameList","selectedBank","bankForms","addbank","bankbranchPatch","bankIdPatch","ifscform","bankInput","BankDropdownList","bankBranchsInput","BankBranchDropdownList","branchform","BranchValue","showBranch","ifscpatch","fileUploadForm","EmployeeDocuments","typeValue","images","docFunctionList","dataname","filenames","fileextension","file_ext","pdfshow","imgshow","imageUrls","apiURL","imageUrl","fileupdate","docFunctionLists","displayBankName","bank","displayIfscName","bankInputs","displayBankBranch","bankbranch","constructor","bankForm","group","bank_branch","account_type","code","branch","bankname","branchname","accType","get","ifscNum","bankName","branchName","accNum","beneficiary","selectedIfsc","selectedIfscBank","onBankIfscSelected","event","option","setValue","EmpObjects","employeeList","employeeFirstLetter","ActivityStatus","TimeLogList","empId","pendingCounts","ngOnInit","queryParams","subscribe","params","getEmployeeBasicDetails","getEmpBankDetails","getBankTypeAutocomplete","getBankAutocomplete","getEmployee","initializeForm","getEmpDocs","Emprole","show","getEmpBankDetailsNew","results","hide","error","keyPressNumbers","charCode","which","keyCode","preventDefault","showSaveButton","reset","selectedItem","editId","branchId","branchIdValue","patchBranch","bankNameQuery","EmpBasicDetails","getEmpDetails","editIfsc","item","patchValue","undefined","selectedBranchIfsc","selectedBranchId","selectedBranchIfscOptions","allBankBranch","bankIdNumber","getBankTypeDropdownList","getBankIfscAutocomplete","getBankIfscList","length","warning","selectedBankNameId","getBankBranchNameAutocomplete","getBankBranchDropdownNameList","bankFullName","formValue","bankIdVal","nameid","bankId","newBankId","formIntoJson","jsonData","JSON","stringify","postEmployeeBankDetailsNew","response","success","selectRootElement","nativeElement","click","console","textid","bankBranch","branch_id","control","controls","hasOwnProperty","markAsTouched","deleteBankRecord","recordId","confirm","deleteEmployeeBankRecord","getDataid","localStorage","getItem","idValue","parse","employee_id","res","gettingProfilename","full_name","data","letter","onSubmit","checkIfsc","BRANCH","status","get_singleBank","displayBankNames","getBankBranchAutocomplete","get_singleBankBranch","displayBankBranchNames","AddBank","payload","createBankForm","newBranch","branchCreateForm","onAdd","typeid","find","document","type","onSubmits","log","typeIdFromForm","valid","formDataArray","typeAndRemarksObject","remarks","push","formData","FormData","append","postDocumentDetails","getEmpDocuments","required","file","remarkInfo","docsFile","onFileChange","allowedFileTypes","maxFileSize","fileInput","target","selectedFiles","files","includes","size","i","adddocformarray","attachment","filekey","count","successfulSubmissions","processSubmission","index","dataset","Finaldata","datavalue","string_value","file_list","message","viewfile","filedata","file_id","msg","filetype_check2","viewDocumentDetails","getToken","tokenValue","token","toLowerCase","binaryData","downloadUrl","window","URL","createObjectURL","Blob","stringValue","split","pop","attachmentDelete","fileID","getEmployeeDocumentDetails","fileChanges","adddocformarrays","link","createElement","href","download","deleteBankInfo","ɵɵdirectiveInject","i1","ActivatedRoute","i2","MasterHrmsService","i3","ToastrService","i4","FormBuilder","Renderer2","i5","NgxSpinnerService","selectors","viewQuery","EmployeeBankDetailsComponent_Query","rf","ctx","EmployeeBankDetailsComponent_Template_button_click_11_listener","EmployeeBankDetailsComponent_ng_container_15_Template","EmployeeBankDetailsComponent_Template_input_input_36_listener","EmployeeBankDetailsComponent_mat_option_42_Template","EmployeeBankDetailsComponent_Template_mat_form_field_click_44_listener","EmployeeBankDetailsComponent_Template_input_input_47_listener","EmployeeBankDetailsComponent_Template_mat_autocomplete_optionSelected_51_listener","EmployeeBankDetailsComponent_mat_option_53_Template","EmployeeBankDetailsComponent_Template_input_keypress_71_listener","EmployeeBankDetailsComponent_div_77_Template","EmployeeBankDetailsComponent_div_78_Template","EmployeeBankDetailsComponent_button_81_Template","EmployeeBankDetailsComponent_button_82_Template","EmployeeBankDetailsComponent_button_83_Template","EmployeeBankDetailsComponent_button_84_Template","EmployeeBankDetailsComponent_Template_input_input_105_listener","EmployeeBankDetailsComponent_mat_option_111_Template","EmployeeBankDetailsComponent_span_112_Template","EmployeeBankDetailsComponent_Template_input_input_117_listener","EmployeeBankDetailsComponent_Template_mat_autocomplete_optionSelected_121_listener","EmployeeBankDetailsComponent_mat_option_123_Template","EmployeeBankDetailsComponent_span_124_Template","EmployeeBankDetailsComponent_span_131_Template","EmployeeBankDetailsComponent_span_139_Template","EmployeeBankDetailsComponent_span_145_Template","EmployeeBankDetailsComponent_button_157_Template","EmployeeBankDetailsComponent_button_158_Template","EmployeeBankDetailsComponent_Template_button_click_181_listener","EmployeeBankDetailsComponent_Template_input_input_193_listener","EmployeeBankDetailsComponent_mat_option_199_Template","EmployeeBankDetailsComponent_Template_button_click_204_listener","EmployeeBankDetailsComponent_Template_form_ngSubmit_218_listener","EmployeeBankDetailsComponent_Template_input_change_221_listener","EmployeeBankDetailsComponent_span_228_Template","EmployeeBankDetailsComponent_pdf_viewer_247_Template","EmployeeBankDetailsComponent_img_249_Template","ɵɵpipeBind1","_r3","_r6","touched","dirty","_r31"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\EMPData\\AllEmployeeDetails\\employee-bank-details\\employee-bank-details.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\EMPData\\AllEmployeeDetails\\employee-bank-details\\employee-bank-details.component.html"],"sourcesContent":["import { Component, OnInit, ElementRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MasterHrmsService } from 'src/app/hrms/master-hrms.service';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-bank-details',\r\n  templateUrl: './employee-bank-details.component.html',\r\n  styleUrls: ['./employee-bank-details.component.scss']\r\n})\r\nexport class EmployeeBankDetailsComponent implements OnInit {\r\n  @ViewChild('closeButton', { static: false }) closeButton: ElementRef;\r\n  @ViewChild('closeButtons', { static: false }) closeButtons: ElementRef;\r\n  @ViewChild('closebutton') closebutton: ElementRef\r\n\r\n  EmpInfoObjects = {\r\n    datafrom: null,\r\n    booleanList: [{ text: \"Yes\", value: true }, { text: \"No\", value: false }]\r\n  }\r\n  EmpId: any\r\n  EmpBankDetails: any\r\n  addingMode: boolean = true;\r\n  bankBranchInput: any\r\n  bankIfscInput: any\r\n\r\n\r\n  BankTypeDropdownList: any\r\n  BankIfscDropdownList: any\r\n  selectedBankId: number\r\n  BankDropdownNameList: any\r\n  selectedBank: any;\r\n  bankForms: FormGroup;\r\n  addbank: FormGroup;\r\n  bankbranchPatch: any;\r\n  bankIdPatch: any;\r\n  ifscform: FormGroup;\r\n  bankInput: any;\r\n  BankDropdownList: any;\r\n  bankBranchsInput: any;\r\n  BankBranchDropdownList: any;\r\n  branchform: FormGroup;\r\n  BranchValue: any;\r\n  showBranch: boolean = false;\r\n  ifscpatch: any;\r\n  fileUploadForm: any;\r\n  EmployeeDocuments: any;\r\n  typeValue: any;\r\n  images: string[] = [];\r\n  docFunctionList = [];\r\n  dataname: any;\r\n  filenames: any;\r\n  fileextension: any;\r\n  file_ext: string[];\r\n  filesrc: string;\r\n  pdfshow: boolean = false;\r\n  imgshow: boolean = false;\r\n  imageUrls = environment.apiURL;\r\n  imageUrl: string | ArrayBuffer | null = null;\r\n  reuploadfileArr: any;\r\n  fileupdate: boolean;\r\n  docFunctionLists: any = [];\r\n\r\n  displayBankName(bank: any): string {\r\n    return bank && bank.text ? bank.text : '';\r\n  }\r\n\r\n  displayIfscName(ifsc: any): string {\r\n    return ifsc && ifsc.ifsccode ? ifsc.ifsccode : '';\r\n  }\r\n  @ViewChild('bankInputs') bankInputs: MatInput;\r\n\r\n\r\n\r\n  displayBankBranch(bankbranch: any): string {\r\n    return bankbranch && bankbranch.name ? bankbranch.name : '';\r\n  }\r\n  constructor(private activateroute: ActivatedRoute, private hrmsService: MasterHrmsService, private toastr: ToastrService,\r\n    private fb: FormBuilder, private renderer: Renderer2, private spinner: NgxSpinnerService) {\r\n\r\n    this.bankForm = this.fb.group({\r\n      account_name: [''],\r\n      account_no: [''],\r\n      bank_branch: [''],\r\n      ifsc: ['']\r\n    });\r\n    this.bankForms = this.fb.group({\r\n      account_name: [''],\r\n      account_no: [''],\r\n      bank_branch: [''],\r\n      ifsc: ['']\r\n    });\r\n\r\n    this.account_type = this.fb.group({\r\n      id: [''],\r\n      text: [''],\r\n    });\r\n\r\n    this.bank_id = this.fb.group({\r\n      code: [''],\r\n      id: [''],\r\n      name: ['']\r\n    });\r\n\r\n    this.branchform = this.fb.group({\r\n      bank_id: \"\",\r\n      name: '',\r\n      ifsccode: '',\r\n    })\r\n\r\n    this.branch = this.fb.group({\r\n      code: [''],\r\n      id: [''],\r\n      name: ['']\r\n    });\r\n\r\n    this.addbank = this.fb.group({\r\n      name: ''\r\n    })\r\n    this.ifscform = this.fb.group({\r\n\r\n\r\n      ifsc: '',\r\n      bankname: '',\r\n      branchname: '',\r\n\r\n\r\n    })\r\n  }\r\n\r\n  get accType() {\r\n    return this.account_type.get(\"text\")\r\n  }\r\n\r\n  get ifscNum() {\r\n    return this.bankForm.get(\"ifsc\")\r\n  }\r\n\r\n  get bankName() {\r\n    return this.bank_id.get(\"name\")\r\n  }\r\n\r\n  get branchName() {\r\n    return this.branch.get(\"name\")\r\n  }\r\n\r\n  get accNum() {\r\n    return this.bankForm.get(\"account_no\")\r\n  }\r\n\r\n  get beneficiary() {\r\n    return this.bankForm.get(\"account_name\")\r\n  }\r\n\r\n\r\n\r\n  selectedIfsc: any\r\n  selectedIfscBank: any\r\n  onBankIfscSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectedIfsc = event.option.value;\r\n    this.bank_id.get('name')?.setValue(this.selectedIfsc.bank.name);\r\n    this.branch.get('name')?.setValue(this.selectedIfsc.branch.name);\r\n  }\r\n\r\n\r\n\r\n  bankForm: FormGroup = new FormGroup({\r\n    // bank: new FormControl(),\r\n    account_name: new FormControl(),\r\n    account_no: new FormControl(),\r\n    bank_branch: new FormControl(),\r\n    // bank_id: new FormGroup({\r\n    //   code: new FormControl(),\r\n    //   id: new FormControl(),\r\n    //   name: new FormControl(),\r\n    // }),\r\n    ifsc: new FormControl()\r\n  });\r\n\r\n\r\n  account_type: FormGroup = new FormGroup({\r\n    id: new FormControl(),\r\n    text: new FormControl(),\r\n  })\r\n\r\n  bank_id: FormGroup = new FormGroup({\r\n    code: new FormControl(),\r\n    id: new FormControl(),\r\n    name: new FormControl(),\r\n\r\n  })\r\n\r\n  branch: FormGroup = new FormGroup({\r\n    code: new FormControl(),\r\n    id: new FormControl(),\r\n    name: new FormControl(),\r\n\r\n  })\r\n\r\n  EmpObjects = {\r\n    employeeList: null,\r\n    employeeFirstLetter: null,\r\n    ActivityStatus: null,\r\n    TimeLogList: null,\r\n    empId: null,\r\n    pendingCounts: null\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activateroute.queryParams.subscribe((params) => {\r\n      this.EmpInfoObjects.datafrom = params['datafrom'];\r\n      this.EmpId = params['id'];\r\n    })\r\n    this.getEmployeeBasicDetails();\r\n    this.getEmpBankDetails();\r\n    this.getBankTypeAutocomplete();\r\n    // this.getBankIfscAutocomplete()\r\n    this.getBankAutocomplete();\r\n    this.getEmployee();\r\n    this.initializeForm()\r\n    this.getEmpDocs()\r\n  }\r\n  Emprole: any;\r\n  getEmpBankDetails() {\r\n    this.spinner.show();\r\n    this.hrmsService.getEmpBankDetailsNew(this.EmpId)\r\n      .subscribe(results => {\r\n        if (results.code) {\r\n          this.spinner.hide();\r\n          this.toastr.error(results.code);\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          this.EmpBankDetails = results['bank'];\r\n        }\r\n      });\r\n  }\r\n  keyPressNumbers(event) {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if ((charCode < 48 || charCode > 57)) {\r\n      event.preventDefault();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  showSaveButton() {\r\n    this.addingMode = true;\r\n    this.bankForm.reset();\r\n    this.account_type.reset();\r\n    this.branch.reset();\r\n    this.bank_id.reset();\r\n  }\r\n  selectedItem: any;\r\n  editId: any;\r\n  branchId: any\r\n  branchIdValue: any;\r\n  patchBranch: any\r\n  bankNameQuery: string\r\n  EmpBasicDetails: any;\r\n  getEmployeeBasicDetails() {\r\n    this.spinner.show();\r\n    this.hrmsService.getEmpDetails(this.EmpId).subscribe(results => {\r\n      this.spinner.hide();\r\n      this.EmpBasicDetails = results;\r\n    }\r\n    )\r\n  }\r\n  editIfsc: any;\r\n  editBankRow(item: any) {\r\n\r\n    // Store the selected item\r\n    this.addingMode = false;\r\n    this.selectedItem = item;\r\n    this.editId = item?.id\r\n    this.editIfsc = item?.ifsc\r\n    this.account_type.patchValue({\r\n      text: item?.account_type\r\n    });\r\n    this.bank_id.patchValue({\r\n      name: item?.bank_id?.name,\r\n    })\r\n\r\n    this.branch.patchValue({\r\n      name: item?.bank_branch,\r\n    })\r\n    this.ifscpatch = item?.ifsc;\r\n\r\n    this.bankForm.patchValue({\r\n      account_name: item?.account_name,\r\n      account_no: item?.account_no,\r\n      ifsc:  { ifsccode: item?.ifsc },\r\n      bank_branch: item?.bank_branch,\r\n    });\r\n\r\n    this.bankbranchPatch = item?.bank_branch;\r\n    this.bankIdPatch = item?.bank_id?.id\r\n    this.bankNameQuery = item?.account_type?.name\r\n    this.branchIdValue = item?.branch?.id\r\n\r\n    this.reuploadfileArr = item?.employee_document;\r\n    if (this.reuploadfileArr == undefined || this.reuploadfileArr == null || this.reuploadfileArr == '') {\r\n      {\r\n        this.fileupdate = true;\r\n      }\r\n    }\r\n    else {\r\n      this.fileupdate = false;\r\n    }\r\n  }\r\n  selectedBranchIfsc: any;\r\n  selectedBranchId: any;\r\n  selectedBranchIfscOptions: string[] = [];\r\n  allBankBranch: any[];\r\n  bankIdNumber: number\r\n  getBankTypeAutocomplete() {\r\n    this.bankBranchInput = \"account_type\";\r\n    this.hrmsService.getBankTypeDropdownList(this.bankBranchInput).subscribe((results) => {\r\n      this.BankTypeDropdownList = results;\r\n    });\r\n  }\r\n\r\n  getBankIfscAutocomplete() {\r\n    this.bankIfscInput = this.bankForm.value.ifsc;\r\n    if (this.bankIfscInput.ifsccode) {\r\n      this.bankIfscInput = this.bankIfscInput.ifsccode;\r\n      this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe((results) => {\r\n        if (results['data'].length == 0) {\r\n          // this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\");\r\n          this.BankIfscDropdownList = results[\"data\"];\r\n        }\r\n        else {\r\n          this.BankIfscDropdownList = results[\"data\"];\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.bankIfscInput = this.bankForm.value.ifsc;\r\n      this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe((results) => {\r\n        if (results['data'].length == 0) {\r\n          this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\");\r\n          this.BankIfscDropdownList = results[\"data\"];\r\n        }\r\n        else {\r\n          this.BankIfscDropdownList = results[\"data\"];\r\n        }\r\n      });\r\n    }\r\n\r\n    //   this.bankIfscInput = this.bankForm.value.ifsc;\r\n    //   if(this.ifscpatch === '' || this.ifscpatch === null || this.ifscpatch === undefined)\r\n    //   {\r\n    //   this.hrmsService.getBankIfscList(this.bankIfscInput).subscribe((results) => {\r\n    //     if (results['data'].length == 0) {\r\n    //       this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\")\r\n    //     }\r\n    //     else {\r\n    //       this.BankIfscDropdownList = results[\"data\"];\r\n    //     }\r\n    //   });\r\n    // }\r\n    // else\r\n    // {\r\n    //   this.hrmsService.getBankIfscList(this.ifscpatch).subscribe((results) => {\r\n    //     if (results['data'].length == 0) {\r\n    //       this.toastr.warning(\"IFSC Code not in Master, Please add IFSC code\")\r\n    //     }\r\n    //     else {\r\n    //       this.BankIfscDropdownList = results[\"data\"];\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n\r\n  selectedBankNameId: any\r\n  getBankBranchNameAutocomplete() {\r\n    this.bankBranchInput = this.bankForm.value.bank;\r\n    if (this.selectedBankId !== undefined && this.selectedBankId !== null) {\r\n      this.hrmsService.getBankBranchDropdownNameList(this.selectedBankId).subscribe((results) => {\r\n        this.BankDropdownNameList = results['bankbranch'];\r\n        if (this.BankDropdownNameList.length > 0) {\r\n          this.selectedBankNameId = this.BankDropdownNameList[0].id;\r\n        }\r\n\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n\r\n\r\n  bankFullName: any;\r\n\r\n  onUpdate() {\r\n\r\n    if (this.account_type.get('text').value == '' || this.account_type.get('text').value == null || this.account_type.get('text').value == undefined) {\r\n      this.toastr.error(\"Please select the Account Type\")\r\n      return false;\r\n    }\r\n    if (this.bankForm.get('ifsc').value == '' || this.bankForm.get('ifsc').value == null || this.bankForm.get('ifsc').value == undefined) {\r\n      this.toastr.error(\"Please select the IFSC Code \")\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.bankForm.get(\"account_no\").value == '' || this.bankForm.get(\"account_no\").value == null || this.bankForm.get(\"account_no\").value == undefined) {\r\n      this.toastr.error(\"Please Enter the Account No\")\r\n      return false;\r\n    }\r\n    if (this.bankForm.get('account_name').value == '' || this.bankForm.get('account_name').value == null || this.bankForm.get('account_name').value == undefined) {\r\n      this.toastr.error(\"Please Enter the Benificiary Name\")\r\n      return false;\r\n    }\r\n\r\n    if (this.bankForm.get('account_name').value !== null) {\r\n      this.getBankIfscAutocomplete()\r\n      let formValue = this.bankForm.value;\r\n      const bankIdVal = this.account_type.value;\r\n      formValue.id = this.editId\r\n      let nameid = this.account_type.get('text').value;\r\n      formValue.account_type = bankIdVal.text.id;\r\n      let bankId = this.bankForm.get(\"bank_branch\").value\r\n      let newBankId = this.bankForm.get(\"ifsc\").value\r\n      if (newBankId.bank) {\r\n        const formIntoJson = {\r\n          account_type: formValue.account_type || null,\r\n          account_name: formValue.account_name || null,\r\n          bank_branch: newBankId.branch.name || null,\r\n          account_no: formValue.account_no || null,\r\n          bank_id: this.bankIdPatch || null,\r\n          ifsc: newBankId.ifsccode || null,\r\n          id: this.editId || null\r\n        };\r\n        const jsonData = JSON.stringify([formIntoJson]);\r\n        this.spinner.show();\r\n        this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(\r\n          (response) => {\r\n            this.spinner.hide();\r\n            this.toastr.success('Successfully posted/updated bank info');\r\n            this.getEmpBankDetails();\r\n            this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n          },\r\n          (error) => {\r\n            this.spinner.hide();\r\n            this.toastr.error('Error while posting/updated bank info');\r\n            this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n          });\r\n      }\r\n      else {\r\n        const formIntoJson = {\r\n          account_type: formValue.account_type || null,\r\n          account_name: formValue.account_name || null,\r\n          bank_branch: this.bankbranchPatch || null,\r\n          account_no: formValue.account_no || null,\r\n          bank_id: this.bankIdPatch || null,\r\n          ifsc: newBankId.ifsccode || null,\r\n          id: this.editId || null\r\n        };\r\n        const jsonData = JSON.stringify([formIntoJson]);\r\n        this.spinner.show();\r\n        this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(\r\n          (response) => {\r\n            this.spinner.hide();\r\n            this.toastr.success('Successfully posted/updated bank info');\r\n            this.getEmpBankDetails();\r\n            this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n          },\r\n          (error) => {\r\n            this.spinner.hide();\r\n            console.error('Error while posting/updated bank info:', error);\r\n            this.toastr.error('Error while posting/updated bank info');\r\n            this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n          });\r\n      }\r\n    } else {\r\n      this.toastr.warning('All details need to be filled');\r\n    }\r\n\r\n\r\n  }\r\n  formIntoJson: any;\r\n  onSave() {\r\n    if (this.account_type.get('text').value == '' || this.account_type.get('text').value == null || this.account_type.get('text').value == undefined) {\r\n      this.toastr.error(\"Please select the Account Type\")\r\n      return false;\r\n    }\r\n    if (this.bankForm.get('ifsc').value == '' || this.bankForm.get('ifsc').value == null || this.bankForm.get('ifsc').value == undefined) {\r\n      this.toastr.error(\"Please select the IFSC Code \")\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.bankForm.get(\"account_no\").value == '' || this.bankForm.get(\"account_no\").value == null || this.bankForm.get(\"account_no\").value == undefined) {\r\n      this.toastr.error(\"Please Enter the Account No\")\r\n      return false;\r\n    }\r\n    if (this.bankForm.get('account_name').value == '' || this.bankForm.get('account_name').value == null || this.bankForm.get('account_name').value == undefined) {\r\n      this.toastr.error(\"Please Enter the Benificiary Name\")\r\n      return false;\r\n    }\r\n\r\n\r\n    if (this.bankForm.get('account_name').value !== null) {\r\n      const formValue = this.bankForm.value;\r\n      let ifsc = this.bankForm.get('ifsc').value\r\n      let textid = this.account_type.get('text').value;\r\n      let bankBranch = this.bankForm.get('bank_branch').value\r\n      this.formIntoJson = {\r\n        account_type: textid.id || null,\r\n        account_name: formValue.account_name || null,\r\n        bank_branch: this.branch.get(\"name\").value || null,\r\n        account_no: this.bankForm.get(\"account_no\").value || null,\r\n        bank_id: ifsc.bank.id || null,\r\n        ifsc: ifsc.ifsccode || null,\r\n        branch_id: ifsc.branch.id || null,\r\n      };\r\n      const jsonData = JSON.stringify([this.formIntoJson]);\r\n      this.spinner.show();\r\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, jsonData).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success('Successfully posted bank info');\r\n          this.getEmpBankDetails();\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Error while posting bank info');\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n        }\r\n      );\r\n    } else {\r\n      for (const control in this.bankForm.controls) {\r\n        if (this.bankForm.controls.hasOwnProperty(control)) {\r\n          this.bankForm.get(control).markAsTouched();\r\n        }\r\n        for (const control in this.account_type.controls) {\r\n          if (this.account_type.controls.hasOwnProperty(control)) {\r\n            this.account_type.get(control).markAsTouched();\r\n          }\r\n          for (const control in this.bank_id.controls) {\r\n            if (this.bank_id.controls.hasOwnProperty(control)) {\r\n              this.bank_id.get(control).markAsTouched();\r\n            }\r\n\r\n            for (const control in this.branch.controls) {\r\n              if (this.branch.controls.hasOwnProperty(control)) {\r\n                this.branch.get(control).markAsTouched();\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n      }\r\n      this.toastr.warning('All details needed to be filled');\r\n    }\r\n  }\r\n  deleteBankRecord(recordId: number) {\r\n    if (confirm('Are you sure you want to delete this bank record?')) {\r\n      this.spinner.show();\r\n      this.hrmsService.deleteEmployeeBankRecord(recordId, this.EmpId).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success(\"Bank record deleted successfully\")\r\n          this.getEmpBankDetails();\r\n        },\r\n        (error) => {\r\n          this.toastr.error(\"Error while deleting bank record\")\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getEmployee() {\r\n\r\n    const getDataid = localStorage.getItem(\"sessionData\")\r\n    let idValue = JSON.parse(getDataid);\r\n    let id = idValue.employee_id;\r\n    this.EmpObjects.empId = idValue.employee_id;\r\n    this.hrmsService.getEmpDetails(id)\r\n      .subscribe(res => {\r\n        this.EmpObjects.employeeList = res\r\n        if (res?.id) {\r\n          this.gettingProfilename(res?.full_name)\r\n        }\r\n      }, error => {\r\n\r\n      })\r\n  }\r\n\r\n  gettingProfilename(data) {\r\n    let name: any = data\r\n    let letter = name[0]\r\n    this.EmpObjects.employeeFirstLetter = letter\r\n  }\r\n  addIfsc() {\r\n    this.ifscform.reset();\r\n    this.bankInputs.value = ''\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.spinner.show();\r\n    this.hrmsService.checkIfsc(this.ifscform.get('ifsc').value).subscribe(\r\n      (res) => {\r\n        this.showBranch = true;\r\n        this.BranchValue = res.BRANCH;\r\n        this.ifscform.get('branchname')?.setValue(res.BRANCH);\r\n        this.spinner.hide();\r\n      },\r\n      (error) => {\r\n        if (error.status === 404) {\r\n          this.toastr.error('Invalid IFSC Code');\r\n          this.spinner.hide();\r\n        } else {\r\n          this.spinner.hide();\r\n        }\r\n      }\r\n\r\n    )\r\n  }\r\n  getBankAutocomplete() {\r\n    this.bankInput = this.ifscform.value.bankname;\r\n    // this.bankBranchInput = \"account_type\";\r\n    this.hrmsService.get_singleBank(this.bankInput).subscribe((results) => {\r\n      this.BankDropdownList = results[\"data\"];\r\n    });\r\n  }\r\n\r\n  displayBankNames(ifsc: any): string {\r\n    return ifsc.name ? ifsc.name : '';\r\n  }\r\n\r\n  getBankBranchAutocomplete() {\r\n    this.bankBranchsInput = this.ifscform.value.branchname;\r\n    // this.bankBranchInput = \"account_type\";\r\n    this.hrmsService.get_singleBankBranch(this.bankBranchsInput).subscribe((results) => {\r\n      this.BankBranchDropdownList = results[\"data\"];\r\n    });\r\n  }\r\n\r\n  displayBankBranchNames(ifsc: any): string {\r\n    return ifsc.name ? ifsc.name : '';\r\n  }\r\n\r\n  AddBank() {\r\n    let payload =\r\n    {\r\n      'name': this.addbank.get('name').value\r\n    }\r\n    this.hrmsService.createBankForm(payload).subscribe((res) => {\r\n      this.toastr.success(\"Bank Added\")\r\n    })\r\n  }\r\n\r\n  newBranch() {\r\n    let payload =\r\n    {\r\n      'bank_id': this.branchform.get('bank_id')?.value?.id,\r\n      \"name\": this.branchform.get('name')?.value,\r\n      \"ifsccode\": this.branchform.get('ifsccode')?.value,\r\n      \"microcode\": ''\r\n    }\r\n    this.hrmsService.branchCreateForm(payload).subscribe((res) => {\r\n      this.toastr.success(\"branch Added\")\r\n    })\r\n  }\r\n  onAdd() {\r\n    if (this.ifscform.get('ifsc')?.value == '' || this.ifscform.get('ifsc')?.value == null) {\r\n      this.toastr.error(\"Enter IFSC Code\");\r\n      return false;\r\n    }\r\n    if (this.ifscform.get('bankname')?.value == '' || this.ifscform.get('bankname')?.value == null) {\r\n      this.toastr.error(\"Select Bank Name\");\r\n      return false;\r\n    }\r\n    if (this.ifscform.get('branchname')?.value == '' || this.ifscform.get('branchname')?.value == null) {\r\n      this.toastr.error(\"Verify IFSC Code\");\r\n      return false;\r\n    }\r\n    let payload =\r\n    {\r\n      'bank_id': this.ifscform.get('bankname')?.value?.id,\r\n      \"name\": this.ifscform.get('branchname')?.value,\r\n      \"ifsccode\": this.ifscform.get('ifsc')?.value,\r\n\r\n    }\r\n    this.hrmsService.branchCreateForm(payload).subscribe((res) => {\r\n      this.toastr.success(\"branch Added\")\r\n      // this.hrmsService.getBankIfscList(this.ifscform.get('ifsc')?.value).subscribe((results) => {\r\n      //   this.BankIfscDropdownList = results[\"data\"];\r\n      this.ifscform.reset();\r\n      this.ifscform.get('bankname').reset();\r\n      this.closeButtons.nativeElement.click();\r\n      this.bankForm.reset();\r\n      this.account_type.reset();\r\n      this.branch.reset();\r\n      this.bank_id.reset();\r\n\r\n\r\n      // });\r\n    })\r\n  }\r\n  typeid() {\r\n    const data = this.EmployeeDocuments.data.find(document => document.type.name === 'Bank proof')\r\n    return data ? data?.type?.id : null\r\n  }\r\n  onSubmits(): void {\r\n    console.log(this.fileUploadForm.value);\r\n    const typeIdFromForm = this.fileUploadForm.get('type').value;\r\n    // const typeIdFromMethod = this.getTypeId();\r\n\r\n    // if (typeIdFromForm !== typeIdFromMethod) {\r\n    //   this.fileUploadForm.get('type').setValue(typeIdFromMethod);\r\n    // }\r\n    if (this.fileUploadForm.valid) {\r\n\r\n      const formDataArray: any[] = [];\r\n      this.typeValue = this.typeid()\r\n\r\n      const typeAndRemarksObject = {\r\n        type: this.typeid(),\r\n        remarks: this.fileUploadForm.get('remarks').value\r\n      };\r\n\r\n      formDataArray.push(typeAndRemarksObject);\r\n\r\n      const formData = new FormData();\r\n      formData.append(`${this.typeValue}`, this.fileUploadForm.get('file').value);\r\n\r\n      console.log('Formatted Array:', formDataArray);\r\n\r\n      this.hrmsService.postDocumentDetails(this.EmpId, formDataArray, formData).subscribe(\r\n        (response) => {\r\n          console.log('File uploaded successfully', response);\r\n\r\n          this.toastr.success(\"File uploaded Successfully\");\r\n          this.closebutton.nativeElement.click()\r\n          this.fileUploadForm.reset()\r\n\r\n        },\r\n        (error) => {\r\n          console.error('Error uploading file', error);\r\n          this.toastr.error(\"Error uploading file\");\r\n\r\n\r\n        }\r\n\r\n      );\r\n\r\n    } else {\r\n      for (const control in this.fileUploadForm.controls) {\r\n        if (this.fileUploadForm.controls.hasOwnProperty(control)) {\r\n          this.fileUploadForm.get(control).markAsTouched();\r\n        }\r\n      }\r\n      console.log(\"not valid\");\r\n      this.toastr.warning('All details needed to be filled');\r\n    }\r\n  }\r\n  getEmpDocs() {\r\n    this.hrmsService.getEmpDocuments(this.EmpId)\r\n      .subscribe(results => {\r\n        this.EmployeeDocuments = results;\r\n\r\n        console.log(\"docs details\", this.EmployeeDocuments)\r\n      });\r\n\r\n  }\r\n  initializeForm(): void {\r\n    // const typeValue = this.getTypeId();\r\n\r\n    this.fileUploadForm = this.fb.group({\r\n      type: [null],\r\n      remarks: [null, Validators.required],\r\n      file: [null, Validators.required]\r\n    });\r\n    // this.fileUploadForm.patchValue({\r\n    //   type: 4\r\n    // });\r\n  }\r\n  get remarkInfo() {\r\n    return this.fileUploadForm.get(\"remarks\")\r\n  }\r\n  get docsFile() {\r\n    return this.fileUploadForm.get(\"file\")\r\n  }\r\n  onFileChange(event): void {\r\n    const allowedFileTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\r\n    const maxFileSize = 5 * 1024 * 1024;\r\n\r\n    const fileInput = event.target;\r\n    const selectedFiles = fileInput.files;\r\n\r\n\r\n    if (selectedFiles.length > 0) {\r\n      const file = selectedFiles[0];\r\n      if (!allowedFileTypes.includes(file.type)) {\r\n        this.toastr.error('Invalid file type. Please select a PDF, JPEG, PNG, or JPG file.');\r\n        fileInput.value = '';\r\n        return;\r\n      }\r\n      if (file.size > maxFileSize) {\r\n        this.toastr.error('File size exceeds the maximum limit (5 MB). Please select a smaller file.');\r\n        fileInput.value = '';\r\n        return;\r\n      }\r\n\r\n\r\n      console.log('File is valid:', file.name);\r\n    }\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.fileUploadForm.patchValue({\r\n      file\r\n    });\r\n  }\r\n\r\n  fileChange(event) {\r\n    // let imagesList = [];\r\n    this.images = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    // this.adddocformarray();\r\n  }\r\n\r\n  adddocformarray() {\r\n    // this.addData = true;\r\n    // if (this.issueForm.value.description == undefined || this.issueForm.value.description == null) {\r\n    //   this.notify.error('Please Enter Description');\r\n    //   this.SpinnerService.hide();\r\n    //   return false;\r\n    // }\r\n    // if (this.issueForm.value.project === \"\") {\r\n    //   this.notify.error('Please Select Project');\r\n    //   this.SpinnerService.hide();\r\n    //   return false;\r\n    // }\r\n    //  if(this.images.length == 0){\r\n    //    this.notify.error('', 'Choose Upload Files ', { timeOut: 1500 });\r\n    //    this.SpinnerService.hide();\r\n    //    return false;\r\n    //  }\r\n    // let dataArray = this.issueForm.value\r\n    // let data = {\r\n    //   project_id: dataArray.project_map_id.mapping_id,\r\n    //   description: dataArray.description,\r\n    //   priority_type: dataArray.priority_type,\r\n    //   attachment: \"\",\r\n    //   filekey: this.images\r\n    // } \r\n\r\n\r\n    const formValue = this.bankForm.value;\r\n    let ifsc = this.bankForm.get('ifsc').value\r\n    let textid = this.account_type.get('text').value;\r\n    let bankBranch = this.bankForm.get('bank_branch').value\r\n    let data = {\r\n      account_type: textid.id || null,\r\n      account_name: formValue.account_name || null,\r\n      bank_branch: this.branch.get(\"name\").value || null,\r\n      account_no: this.bankForm.get(\"account_no\").value || null,\r\n      bank_id: ifsc.bank.id || null,\r\n      ifsc: ifsc.ifsccode || null,\r\n      branch_id: ifsc.branch.id || null,\r\n      type: 3,\r\n      attachment: \"\",\r\n      filekey: this.images\r\n    };\r\n\r\n    console.log(\"dataArray\", data)\r\n    this.docFunctionList.push(data)\r\n    console.log(\"array docs\", this.docFunctionList)\r\n\r\n    // this.issueForm.controls[\"description\"].reset('');\r\n    // this.issueForm.controls[\"priority_type\"].reset('');\r\n    // this.images = [];\r\n    // this.fileInput.nativeElement.value = \"\"\r\n\r\n\r\n  }\r\n\r\n  onSubmitss() {\r\n    // this.SpinnerService.show();\r\n    this.adddocformarray();\r\n\r\n    console.log(\"submit\", this.docFunctionList);\r\n\r\n    // if (this.docFunctionList.length === 0) {\r\n    //   this.notify.error('Please Fill All Details');\r\n    //   this.SpinnerService.hide();\r\n    //   return false;\r\n    // }\r\n\r\n    let count = 1;\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      this.docFunctionList[i].attachment = 'file' + count++;\r\n    }\r\n    console.log(\"ffff\", this.docFunctionList);\r\n    console.log(\"docgp\", this.docFunctionList);\r\n    let successfulSubmissions = 0;\r\n    const processSubmission = (index) => {\r\n      const dataset = this.docFunctionList[index];\r\n      const formData: FormData = new FormData();\r\n      const Finaldata = [dataset];\r\n      const datavalue = JSON.stringify(Finaldata);\r\n      formData.append('data', datavalue);\r\n\r\n      const string_value = this.docFunctionList[index].attachment;\r\n      const file_list = this.docFunctionList[index].filekey;\r\n\r\n      formData.append(string_value, file_list[0]);\r\n      // this.SpinnerService.show();\r\n      // this.taskmanagerservice.issueCreation(formData)\r\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData)\r\n        .subscribe(res => {\r\n          console.log(\"issue click\", res)\r\n\r\n          if (res.message == 'Successfully Created') {\r\n            this.toastr.success(\"Created Successfully!...\");\r\n            this.docFunctionList = [];\r\n            this.closeButton.nativeElement.click();\r\n            this.getEmpBankDetails();\r\n            // this.OnSubmit.emit();\r\n            // this.SpinnerService.hide();\r\n            // this.issueForm.reset();\r\n\r\n            this\r\n          } else {\r\n            // this.notify.error(res.description)\r\n            // this.SpinnerService.hide();\r\n            // return false;\r\n          }\r\n        },\r\n          error => {\r\n            // this.errorHandler.handleError(error);\r\n            // this.SpinnerService.hide();\r\n          }\r\n\r\n        )\r\n\r\n      // this.SpinnerService.hide();\r\n\r\n    }\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      processSubmission(i);\r\n    }\r\n    // this.SpinnerService.hide();\r\n    // this.issueForm.reset();\r\n  }\r\n\r\n  viewfile(data) {\r\n    let filedata = data.employee_document\r\n    this.dataname = filedata.file_id;\r\n    this.filenames = filedata.file_name\r\n    // this.spinner.show();\r\n    let option = 'view'\r\n    let msg = this.filetype_check2(this.filenames);\r\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname)\r\n      .subscribe(\r\n        results => {\r\n          const getToken = localStorage.getItem(\"sessionData\");\r\n          let tokenValue = JSON.parse(getToken);\r\n\r\n          let token = tokenValue.token;\r\n          if (this.file_ext.includes(this.fileextension.toLowerCase())) {\r\n            // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\r\n            this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\r\n\r\n          }\r\n          else {\r\n            let binaryData = [];\r\n            binaryData.push(results)\r\n            let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n            this.filesrc = downloadUrl;\r\n\r\n          }\r\n\r\n          if (msg == 1) {\r\n            this.pdfshow = false;\r\n            this.imgshow = true;\r\n\r\n\r\n          }\r\n          else {\r\n            this.pdfshow = true;\r\n            this.imgshow = false\r\n          }\r\n\r\n        })\r\n    // this.spinner.hide();\r\n    // this.getEmpDocs();\r\n    this.filesrc = null;\r\n\r\n  }\r\n\r\n  filetype_check2(i) {\r\n    let file_name = i;\r\n    let stringValue = file_name.split('.')\r\n    this.fileextension = stringValue.pop();\r\n    this.file_ext = ['jpg', 'png', 'JPG', 'JPEG', 'jpeg', 'image']\r\n    if (this.file_ext.includes(this.fileextension)) {\r\n      var msg = 1;\r\n    }\r\n    else {\r\n      var msg = 0;\r\n    }\r\n    return msg\r\n\r\n\r\n  }\r\n\r\n  attachmentDelete(filedata) {\r\n    const fileID = filedata.id\r\n    this.hrmsService.getEmployeeDocumentDetails(this.EmpId, fileID)\r\n      .subscribe(\r\n        results => {\r\n          // this.EmployeeDocuments = results;\r\n          // console.log(\"Docs details\", this.EmployeeDocuments);       \r\n          this.fileupdate = true;\r\n          this.toastr.success(\"File deleted successfully\");\r\n          this.getEmpBankDetails();\r\n        },\r\n        error => {\r\n          console.error('Error deleting document:', error);\r\n\r\n        }\r\n      );\r\n  }\r\n  fileChanges(event) {\r\n    // let imagesList = [];\r\n    this.images = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    // this.adddocformarray();\r\n  }\r\n\r\n  adddocformarrays() {\r\n   \r\n    let formValue = this.bankForm.value;\r\n    const bankIdVal = this.account_type.value;\r\n    formValue.id = this.editId\r\n    let nameid = this.account_type.get('text').value;\r\n    formValue.account_type = bankIdVal.text.id;\r\n    let bankId = this.bankForm.get(\"bank_branch\").value\r\n    let newBankId = this.bankForm.get(\"ifsc\").value\r\n    // newBankId = newBankId.replace(/'/g, '\"');\r\n    // const bankIdObject = JSON.parse(newBankId);\r\n    // const ifsccodes = bankIdObject.ifsccode;    // console.log(ifsccode); // Output: IDIB000A013\r\n    \r\n    // if (newBankId.bank) {\r\n    let data = {\r\n      account_type: formValue.account_type || null,\r\n      account_name: formValue.account_name || null,\r\n      bank_branch: formValue.bank_branch || null,\r\n      account_no: formValue.account_no || null,\r\n      bank_id: this.bankIdPatch || null,\r\n      ifsc: newBankId?.ifsccode || null,\r\n      id: this.editId || null,\r\n      type: 3,\r\n      attachment: \"\",\r\n      filekey: this.images\r\n    };\r\n    console.log(\"dataArray\", data)\r\n    this.docFunctionLists.push(data)\r\n    console.log(\"array docs\", this.docFunctionList)\r\n  }\r\n\r\n  // onUpdatebank() {\r\n\r\n  //   this.adddocformarrays();\r\n  //   console.log(\"submit\", this.docFunctionLists);\r\n  //   let count = 1;\r\n  //   for (let i = 0; i < this.docFunctionLists.length; i++) {\r\n  //     this.docFunctionLists[i].attachment = 'file' + count++;\r\n  //   }\r\n  //   console.log(\"ffff\", this.docFunctionLists);\r\n  //   console.log(\"docgp\", this.docFunctionLists);\r\n  //   let successfulSubmissions = 0;\r\n  //   const processSubmission = (index) => {\r\n  //     const dataset = this.docFunctionLists[index];\r\n  //     const formData: FormData = new FormData();\r\n  //     const Finaldata = [dataset];\r\n  //     const datavalue = JSON.stringify(Finaldata);\r\n  //     formData.append('data', datavalue);      const string_value = this.docFunctionLists[index].attachment;\r\n  //     const file_list = this.docFunctionLists[index].filekey;\r\n  //     formData.append(string_value, file_list[0]);\r\n  //     this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData)\r\n  //       .subscribe(res => {\r\n  //         console.log(\"issue click\", res)\r\n  //         if (res.message == 'Successfully Created') {\r\n  //           this.toastr.success(\"Created Successfully!...\");\r\n  //           this.docFunctionLists = [];\r\n  //           this.closeButton.nativeElement.click();\r\n  //           this.getEmpBankDetails();\r\n            \r\n  //         } else {\r\n\r\n  //         }\r\n  //       },\r\n  //         error => {\r\n\r\n  //         }\r\n\r\n  //       )\r\n\r\n\r\n\r\n  //   }\r\n  //   for (let i = 0; i < this.docFunctionList.length; i++) {\r\n  //     processSubmission(i);\r\n  //   }\r\n\r\n  // }\r\n\r\n  onUpdatebank() {\r\n    this.adddocformarrays();\r\n    console.log(\"submit\", this.docFunctionLists);\r\n    let count = 1;\r\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\r\n      this.docFunctionLists[i].attachment = this.docFunctionLists[i].filekey.length > 0 ? 'file' + count++ : \"\"; // Check if filekey exists to set attachment\r\n    }\r\n    console.log(\"ffff\", this.docFunctionLists);\r\n    console.log(\"docgp\", this.docFunctionLists);\r\n    let successfulSubmissions = 0;\r\n    const processSubmission = (index) => {\r\n      const dataset = this.docFunctionLists[index];\r\n      const formData: FormData = new FormData();\r\n      const Finaldata = [dataset];\r\n      const datavalue = JSON.stringify(Finaldata);\r\n      formData.append('data', datavalue);\r\n  \r\n      // Append file only if it exists\r\n      if (dataset.attachment !== \"\") {\r\n        formData.append(dataset.attachment, dataset.filekey[0]);\r\n      }\r\n  \r\n      this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData) // Assuming this is an update operation\r\n        .subscribe(res => {\r\n          console.log(\"issue click\", res)\r\n          if (res.message == 'Successfully Updated') {\r\n            this.toastr.success(\"Updated Successfully!...\");\r\n            this.docFunctionLists = [];\r\n            this.getEmpBankDetails();\r\n            this.bankForms.reset();\r\n            this.closeButton.nativeElement.click();\r\n          } else {\r\n            // Handle error condition if required\r\n          }\r\n        },\r\n        error => {\r\n          // Handle error condition if required\r\n        });\r\n    };\r\n  \r\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\r\n      processSubmission(i);\r\n    }\r\n    // this.adddocformarrays();\r\n  \r\n    // if (this.docFunctionLists.length === 0) {\r\n    //   this.toastr.error('Please Fill All Details');\r\n    //   return;\r\n    // }\r\n  \r\n    // this.docFunctionLists.forEach((doc, index) => {\r\n    //   const formData: FormData = new FormData();\r\n    //   formData.append('data', JSON.stringify([doc]));\r\n    //   formData.append(doc.attachment, doc.filekey[0]);\r\n  \r\n    //   this.hrmsService.postEmployeeBankDetailsNew(this.EmpId, formData)\r\n    //     .subscribe(res => {\r\n    //       if (res.message === 'Successfully Created') {\r\n    //         this.toastr.success(\"Created Successfully!...\");\r\n    //         this.docFunctionLists = [];\r\n    //         this.closeButton.nativeElement.click();\r\n    //         this.getEmpBankDetails();\r\n    //       } else {\r\n    //         // Handle error or notify user accordingly\r\n    //       }\r\n    //     },\r\n    //     error => {\r\n    //       // Handle error or notify user accordingly\r\n    //     });\r\n    // });\r\n  }\r\n  \r\n\r\n  downloadfiles(data) {\r\n    // this.spinner.show();\r\n    let filedata = data.employee_document\r\n    this.dataname = filedata.file_id;\r\n    this.filenames = filedata.file_name\r\n    let option = 'view'\r\n    let msg = this.filetype_check2(this.filenames);\r\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname)\r\n      .subscribe(\r\n        results => {\r\n          let binaryData = [];\r\n          binaryData.push(results)\r\n          let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n          let link = document.createElement('a');\r\n          link.href = downloadUrl;\r\n          link.download = this.filenames;\r\n          link.click();\r\n        })\r\n    // this.spinner.hide();\r\n    // this.getEmpDocs();\r\n\r\n  }\r\n\r\n  deleteBank(recordId: number) {\r\n    if (confirm('Are you sure you want to delete this bank record?')) {\r\n      this.spinner.show();\r\n      this.hrmsService.deleteBankInfo(recordId, this.EmpId).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success(\"Bank Record Deleted successfully\")\r\n          // this.getEmpExperienceInfo()\r\n          this.getEmpBankDetails();\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.toastr.error(\"Delete failed\")\r\n        }\r\n      );\r\n    }\r\n  }\r\n  viewfiles(data) {\r\n    let filedata = data;\r\n    this.dataname = filedata.file_id;\r\n    this.filenames = filedata.file_name\r\n    this.spinner.show();\r\n    let option = 'view'\r\n    let msg = this.filetype_check2(this.filenames);\r\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname)\r\n      .subscribe(\r\n        results => {\r\n          const getToken = localStorage.getItem(\"sessionData\");\r\n          let tokenValue = JSON.parse(getToken);\r\n\r\n          let token = tokenValue.token;\r\n          if (this.file_ext.includes(this.fileextension.toLowerCase())) {\r\n            // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\r\n            this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\r\n\r\n          }\r\n          else {\r\n            let binaryData = [];\r\n            binaryData.push(results)\r\n            let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n            this.filesrc = downloadUrl;\r\n\r\n          }\r\n\r\n          if (msg == 1) {\r\n            this.pdfshow = false;\r\n            this.imgshow = true;\r\n\r\n\r\n          }\r\n          else {\r\n            this.pdfshow = true;\r\n            this.imgshow = false\r\n          }\r\n\r\n        })\r\n    this.spinner.hide();\r\n    // this.getEmpDocs();\r\n    this.filesrc = null;\r\n  }\r\n  deletefile(data) {\r\n    console.log('File ID:', data?.id);\r\n    this.hrmsService.getEmployeeDocumentDetails(this.EmpId, data?.id)\r\n      .subscribe(\r\n        results => {\r\n          this.EmployeeDocuments = results;\r\n          console.log(\"Docs details\", this.EmployeeDocuments);\r\n          this.toastr.success(\"File deleted successfully\");\r\n          this.getEmpDocs();\r\n          this.fileupdate = true;\r\n        },\r\n        error => {\r\n          console.error('Error deleting document:', error);\r\n          this.toastr.error(\"Error deleting file\", \"Error\");\r\n        }\r\n      );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div style=\"  width: 100%; \">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-1 col-md-1 col-1 col-lg-1 col-xl-1\">\r\n      <div class=\"cardspaceListProfile color display\">\r\n        {{EmpObjects.employeeFirstLetter == null ? 'VS': EmpObjects.employeeFirstLetter | uppercase}}\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-3 col-md-3 col-3 col-lg-3 col-xl-3\">\r\n      <p style=\"color: #046ba8;font-size:x-large;font-weight: 700;margin-top: 7%;\">Bank Details</p>\r\n    </div>\r\n    <div class=\"col-sm-4 col-md-4 col-4 col-lg-4 col-xl-4\">\r\n    </div>\r\n\r\n    <div class=\"col-sm-2 col-md-2 col-2 col-lg-2 col-xl-2\" style=\"margin-top: 1.2%;padding-left:6%\">\r\n\r\n      <button class=\"btn btn-primary\" style=\"background-color: #044063;\" type=\"button\" (click)=\"showSaveButton()\"\r\n        data-bs-toggle=\"modal\" data-bs-target=\"#bankModal\">\r\n        <span>+ Add</span>\r\n      </button>\r\n\r\n    </div>\r\n    <!-- <div class=\"col-sm-2 col-md-2 col-2 col-lg-2 col-xl-2\" style=\"margin-top: 1.2%;\">\r\n      <div class=\"popup-btn\">\r\n        <button class=\"btn btn-primary\" style=\"background-color: #044063;\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#docsModal\">\r\n          <span>Upload</span>\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <div style=\"display: flex; flex-wrap: wrap; gap: 20px;\">\r\n    <ng-container *ngFor=\"let bank of EmpBankDetails; let i = index\">\r\n      <div style=\"width: 44%; margin-top: 2%;\" class=\"matCard\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-9\">\r\n            <p style=\"margin-left: 7%;font-size: medium;font-weight: 600;\">\r\n              Bank Info</p>\r\n          </div>\r\n          <div class=\"col-md-1\" style=\"margin-left: -7%;\">\r\n            <i class=\"fa solid fa-pencil\" (click)=\"editBankRow(bank)\" data-bs-toggle=\"modal\" data-bs-target=\"#bankModal\"></i>\r\n          </div>\r\n          <div class=\"col-md-1\">\r\n            <i style=\"margin-left: 5px;\" class=\"fa solid fa-trash-can\" (click)=\"deleteBank(bank?.id)\"></i>\r\n          </div>\r\n          <div *ngIf=\"bank?.employee_document !== null\" class=\"col-md-1\" style=\"margin-left: 5px;margin-top: 2px;\">\r\n            <i class=\"fa solid fa-download\" (click)=\"downloadfiles(bank)\"></i>\r\n          </div>\r\n          <!-- <div class=\"col-md-1\">\r\n            <i style=\"margin-left: 5px;\" class=\"fa solid fa-trash-can\" (click)=\"downloadfiles(bank)\"></i>\r\n          </div> -->\r\n          <!-- <div class=\"col-md-1\">\r\n            <i class=\"fa solid fa-trash-can\" (click)=\"deleteBankRecord(bank.id)\" ></i>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <span style=\"margin-left: 13%;\">Account Number</span>\r\n          </div>\r\n          <div class=\"col-sm-5\">\r\n            <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.account_no}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <span style=\"margin-left: 13%;\">Account Holder Name</span>\r\n          </div>\r\n          <div class=\"col-sm-5\">\r\n            <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.account_name}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <span style=\"margin-left: 13%;\">Bank Name</span>\r\n          </div>\r\n          <div class=\"col-sm-5\">\r\n            <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.bank_id?.name}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <span style=\"margin-left: 13%;\">IFSC</span>\r\n          </div>\r\n          <div class=\"col-sm-5\">\r\n            <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.ifsc}}</p>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-sm-5\">\r\n            <span style=\"margin-left: 13%;\">Account Type</span>\r\n          </div>\r\n          <div class=\"col-sm-5\">\r\n            <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.account_type?.text}}\r\n            </p>\r\n          </div>\r\n        </div> -->\r\n        <!-- <div class=\"row\">\r\n          <p style=\"margin-left: 7%; color: #A9A9A9;font-size: small;font-weight: 600;\">{{bank?.ifsc}}</p>\r\n        </div> -->\r\n      </div>\r\n\r\n      <div *ngIf=\"(i + 1) % 3 === 0\" style=\"width: 100%;\"></div>\r\n    </ng-container>\r\n  </div>\r\n\r\n\r\n</div>\r\n<div class=\"modal bottom-modal\" id=\"bankModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"bankModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b>Bank Details</b>\r\n\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closeButton\r\n          style=\"color: white;opacity: 1;\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"bankForm\" class=\"formAbove\">\r\n          <div class=\"container\">\r\n            <div class=\"row g-3\">\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"account_type\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Account Type</mat-label>\r\n                    <input #bankInput placeholder=\"Select Account Type\" name=\"accType\" matInput formControlName=\"text\"\r\n                      [matAutocomplete]=\"bankdet\" (input)=\"getBankTypeAutocomplete()\">\r\n                    <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                    <mat-autocomplete #bankdet=\"matAutocomplete\" [displayWith]=\"displayBankName\">\r\n                      <mat-option *ngFor=\"let bank of BankTypeDropdownList\" [value]=\"bank\">\r\n                        {{ bank.text}}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n                  </mat-form-field>\r\n\r\n                </form>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\" (click)=\"getBankIfscAutocomplete()\">\r\n                  <mat-label>Ifsc</mat-label>\r\n                  <input #bankInput placeholder=\"Select Ifsc\" name=\"ifscNum\" matInput formControlName=\"ifsc\"\r\n                    [matAutocomplete]=\"bankifsc\" (input)=\"getBankIfscAutocomplete()\">\r\n                  <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                  <mat-autocomplete #bankifsc=\"matAutocomplete\" [displayWith]=\"displayIfscName\"\r\n                    (optionSelected)=\"onBankIfscSelected($event)\">\r\n                    <mat-option *ngFor=\"let ifsc of BankIfscDropdownList\" [value]=\"ifsc\">\r\n                      {{ ifsc.ifsccode}}\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"bank_id\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Bank Name</mat-label>\r\n                    <input matInput name=\"bankName\" placeholder=\"Bank Name\" formControlName=\"name\" readonly>\r\n                  </mat-form-field>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div class=\"row g-3\">\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"branch\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Bank Branch</mat-label>\r\n                    <input matInput placeholder=\"Bank branch\" name=\"branchName\" formControlName=\"name\" readonly>\r\n                  </mat-form-field>\r\n                </form>\r\n\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Account Number</mat-label>\r\n                  <input matInput name=\"accNum\" placeholder=\"acc no\" formControlName=\"account_no\"\r\n                    (keypress)=\"keyPressNumbers($event)\">\r\n                </mat-form-field>\r\n\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Beneficiary</mat-label>\r\n                  <input matInput name=\"beneficiary\" placeholder=\"Enter Beneficiary Name\"\r\n                    formControlName=\"account_name\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"addingMode || fileupdate\">\r\n              <div class=\"col-sm-7\">\r\n                <input type=\"file\" class=\"borderremove\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                .dotx,.dotm,.docb,\r\n                .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" placeholder=\"Select files\"\r\n                  multiple=\"true\" name=\"images\" (change)=\"fileChange($event)\">\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"!fileupdate\">\r\n              <div  class=\"col-sm-9\" style=\"margin-left: 2%;\">\r\n                <div class=\"cus-attachCard\" *ngIf=\"reuploadfileArr?.file_name !== null\" style=\"margin-left: -2%;\">\r\n                  <!-- H -->\r\n                  <span>{{ reuploadfileArr?.file_name }}</span>\r\n                  <button mat-icon-button type=\"button\" (click)=\"viewfiles(reuploadfileArr)\" data-bs-target=\"#viewDownload\" data-bs-toggle=\"modal\" style=\"    margin-left: 37%;\">\r\n                    <mat-icon  aria-label=\"View\" style=\"font-size: x-large;color: blue;\r\n                    margin-top: -19px;\">visibility</mat-icon>\r\n                   \r\n                  </button>\r\n                  <button mat-icon-button type=\"button\" (click)=\"deletefile(reuploadfileArr)\" >\r\n                   \r\n                     <mat-icon  aria-label=\"Delete\" style=\"font-size: x-large;color: blue;\r\n                     margin-top: -19px;\">delete</mat-icon>\r\n                   \r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <!-- <div *ngIf=\"fileupdate\" class=\"col-sm-5\" style=\"    margin-top: 3%;\">\r\n                <label style=\"margin-right: 1em;\">\r\n                  <input type=\"file\" class=\"borderremove\" style=\"margin-left: 5%;\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                  .dotx,.dotm,.docb,\r\n                  .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" multiple=\"true\" name=\"images\"\r\n                    (change)=\"fileChanges($event)\">\r\n                </label>\r\n              </div> -->\r\n            </div>\r\n\r\n            \r\n            <!-- <div class=\"row\" *ngIf=\"!addingMode\">\r\n              <div class=\"col-sm-7\" *ngIf=\"!fileupdate\">\r\n                <div class=\"cus-attachCard\" *ngIf=\"reuploadfileArr?.file_name !== null\">\r\n               \r\n                  <span>{{ reuploadfileArr?.file_name }}</span>\r\n                  <button mat-icon-button type=\"button\" (click)=\"attachmentDelete(reuploadfileArr)\">\r\n                    <mat-icon  aria-label=\"Delete\" style=\"font-size: x-large;color: blue;\r\n                    margin-top: -19px;\">delete</mat-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n          \r\n            </div> -->\r\n            <!-- <div class=\"row\" *ngIf=\"\">\r\n              <div class=\"col-sm-7\">\r\n                <input type=\"file\" class=\"borderremove\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                .dotx,.dotm,.docb,\r\n                .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" placeholder=\"Select files\"\r\n                  multiple=\"true\" name=\"images\" (change)=\"fileChange($event)\">\r\n              </div>\r\n            </div> -->\r\n            <div class=\"row\" style=\"margin-top: 3%;\">\r\n              <div class=\"col\">\r\n                <button class=\"btn btn-primary\" *ngIf=\"addingMode\" (click)=\"onSubmitss()\"\r\n                  style=\"background-color: #044063;\">Save</button>\r\n                <button class=\"btn btn-dark\" *ngIf=\"!addingMode\" (click)=\"onUpdatebank()\"\r\n                  style=\"background-color: #044063;\">Update</button>\r\n                <button class=\"btn btn-warning\" style=\"margin-left: 74%;\" (click)=\"addIfsc()\" data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ifscmodal\" *ngIf=\"addingMode\">Add IFSC</button>\r\n                <button class=\"btn btn-warning\" style=\"margin-left: 70%;\" (click)=\"addIfsc()\" data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ifscmodal\" *ngIf=\"!addingMode\">Add IFSC</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal bottom-modal\" id=\"bankModals\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"bankModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b>Bank Details</b>\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closeButton>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"bankForm\" class=\"formAbove\">\r\n          <div class=\"container\">\r\n            <div class=\"row g-3\">\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"account_type\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Account Type</mat-label>\r\n                    <input #bankInput placeholder=\"Select Bank\" name=\"accType\" matInput formControlName=\"text\"\r\n                      [matAutocomplete]=\"bankdet\" (input)=\"getBankTypeAutocomplete()\">\r\n                    <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                    <mat-autocomplete #bankdet=\"matAutocomplete\" [displayWith]=\"displayBankName\">\r\n                      <mat-option *ngFor=\"let bank of BankTypeDropdownList\" [value]=\"bank\">\r\n                        {{ bank.text}}\r\n                      </mat-option>\r\n                    </mat-autocomplete>\r\n                  </mat-form-field>\r\n                  <span class=\"error-message\" *ngIf=\"(!accType?.valid && (accType?.touched || accType?.dirty))\">\r\n                    *Acc Type required\r\n                  </span>\r\n                </form>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Ifsc</mat-label>\r\n                  <input #bankInput placeholder=\"Select Bank\" name=\"ifscNum\" matInput formControlName=\"ifsc\"\r\n                    [matAutocomplete]=\"bankifsc\" (input)=\"getBankIfscAutocomplete()\">\r\n                  <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                  <mat-autocomplete #bankifsc=\"matAutocomplete\" [displayWith]=\"displayIfscName\"\r\n                    (optionSelected)=\"onBankIfscSelected($event)\">\r\n                    <mat-option *ngFor=\"let ifsc of BankIfscDropdownList\" [value]=\"ifsc\">\r\n                      {{ ifsc.ifsccode}}\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </mat-form-field>\r\n                <span class=\"error-message\" *ngIf=\"(!ifscNum?.valid && (ifscNum?.touched || ifscNum?.dirty))\">\r\n                  *Ifsc required\r\n                </span>\r\n              </div>\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"bank_id\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Bank Name</mat-label>\r\n                    <input matInput name=\"bankName\" placeholder=\"AccNo\" formControlName=\"name\">\r\n                  </mat-form-field>\r\n                </form>\r\n                <span class=\"error-message\" *ngIf=\"(!bankName?.valid && (bankName?.touched || bankName?.dirty))\">\r\n                  *Bank Name required\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div class=\"row g-3\">\r\n              <div class=\"col\">\r\n                <form [formGroup]=\"branch\">\r\n                  <mat-form-field class=\"formField\">\r\n                    <mat-label>Bank Branch</mat-label>\r\n                    <input matInput placeholder=\"Bank branch\" name=\"branchName\" formControlName=\"name\">\r\n                  </mat-form-field>\r\n                </form>\r\n                <span class=\"error-message\" *ngIf=\"(!branchName?.valid && (branchName?.touched || branchName?.dirty))\">\r\n                  *Branch Name is required\r\n                </span>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Account Number</mat-label>\r\n                  <input matInput name=\"accNum\" placeholder=\"acc no\" formControlName=\"account_no\">\r\n                </mat-form-field>\r\n                <span class=\"error-message\" *ngIf=\"(!accNum?.valid && (accNum?.touched || accNum?.dirty))\">\r\n                  *Account Number is required\r\n                </span>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Beneficiary</mat-label>\r\n                  <input matInput name=\"beneficiary\" placeholder=\"account name\" formControlName=\"account_name\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n              </div>\r\n              <div class=\"col\">\r\n                <div class=\"saveUpdate\">\r\n                  <div>\r\n                    <button class=\"btn btn-primary insidePopup\" id=\"saveEdu\" *ngIf=\"addingMode\"\r\n                      (click)=\"onSave()\">Save</button>\r\n                    <button class=\"btn btn-dark insidePopup\" id=\"saveEdu\" *ngIf=\"!addingMode\"\r\n                      (click)=\"onUpdate()\">Update</button>\r\n                  </div>\r\n                  <br><br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal bottom-modal\" id=\"ifscmodal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"bankModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b>Add IFSC</b>\r\n\r\n        </h5>\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closeButtons>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"ifscform\" class=\"formAbove\">\r\n          <div class=\"container\">\r\n            <div class=\"row g-3\">\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\">\r\n                  <mat-label>Ifsc</mat-label>\r\n                  <input matInput formControlName=\"ifsc\">\r\n                </mat-form-field>\r\n                <button class=\"btn btn-dark \" id=\"saveEdu\" style=\"margin-left: 8%;\r\n                margin-top: -3%;\r\n                padding: 9px;\r\n                border-radius: 24px;\" (click)=\"onSubmit()\">Verify</button>\r\n              </div>\r\n              <div class=\"col\">\r\n                <mat-form-field class=\"formField\" style=\"margin-left: 2%;\">\r\n                  <mat-label>Branch Name</mat-label>\r\n                  <input #bankInputs matInput formControlName=\"branchname\" readonly>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row g-3\">\r\n              <mat-form-field class=\"formField\" style=\"margin-left: 2%;\">\r\n                <mat-label>Bank Name</mat-label>\r\n                <input #bankInputs matInput formControlName=\"bankname\" [matAutocomplete]=\"bankifscs\"\r\n                  (input)=\"getBankAutocomplete()\">\r\n                <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                <mat-autocomplete #bankifscs=\"matAutocomplete\" [displayWith]=\"displayBankNames\">\r\n                  <mat-option *ngFor=\"let bank of BankDropdownList\" [value]=\"bank\">\r\n                    {{bank.name}}\r\n                  </mat-option>\r\n                </mat-autocomplete>\r\n              </mat-form-field>\r\n              <div class=\"col\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <button class=\"btn btn-primary \" id=\"saveEdu\" style=\"background-color: #044063;\"\r\n                  (click)=\"onAdd()\">Add</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal bottom-modal\" id=\"docsModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"bankModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b> Upload Bank\r\n            Proof </b>\r\n\r\n\r\n\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" style=\"color: white;opacity: 1;\"\r\n          #closebutton>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"fileUploadForm\" (ngSubmit)=\"onSubmits()\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n\r\n              <input type=\"file\" id=\"file\" name=\"docsFile\" (change)=\"onFileChange($event)\" class=\"form-control\"\r\n                accept=\".pdf, .jpeg, .jpg, .png\" id=\"inputGroupFile01\" formControlName=\"file\" />\r\n\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n\r\n              <mat-form-field class=\"remarks\">\r\n                <mat-label>Remarks</mat-label>\r\n                <input type=\"text\" matInput placeholder=\"Remarks\" name=\"remarkInfo\" formControlName=\"remarks\" />\r\n              </mat-form-field>\r\n              <br>\r\n              <span class=\"error-message\" *ngIf=\"(!remarkInfo?.valid && (remarkInfo?.touched || remarkInfo?.dirty))\">\r\n                *Remarks required\r\n              </span>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-1\">\r\n\r\n              <button class=\"inputFile\" type=\"submit\"><mat-icon>cloud_upload</mat-icon></button>\r\n\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <!-- <span class=\"error-message\" *ngIf=\"(!docsFile?.valid && (docsFile?.touched || docsFile?.dirty))\">\r\n        *File required\r\n                 </span> -->\r\n\r\n        </form>\r\n\r\n      </div>\r\n      <!-- <div class=\"modal-footer\">\r\n  </div> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"viewDownload\" role=\"dialog\" aria-labelledby=\"bankModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\">\r\n          View File\r\n        </h5>\r\n        <!-- <mat-icon  style=\"margin-left: 7%;\r\n        font-size: 25px; cursor: pointer;\" (click)=\"onDownload()\">cloud_download</mat-icon> -->\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closebutton\r\n          style=\"color: white; opacity: 1;\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12\" fxLayoutAlign=\"space-between\">\r\n            <pdf-viewer *ngIf=\"pdfshow\" [src]=\"filesrc\" [original-size]=\"false\" [render-text]='false'\r\n              [show-borders]=\"true\" [fit-to-page]=\"true\" [show-all]=\"true\" style=\"display: block; height: 500px;\"\r\n              [fit-to-page]=\"true\">\r\n            </pdf-viewer>\r\n            <br>\r\n            <img *ngIf=\"imgshow\" src=\"{{filesrc}}\" class=\"img-responsive\"\r\n              style=\"display: block;border-width: 2px;border-style: solid;width: 100%;\" />\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"modal-footer\">\r\n  </div> -->\r\n    </div>\r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}