{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/data.service\";\nimport * as i3 from \"../../service/shared.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"src/app/service/notification.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"src/app/service/memo.service\";\nimport * as i8 from \"@angular/platform-browser\";\nimport * as i9 from \"ngx-spinner\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"ngx-summernote\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"@angular/material/form-field\";\nimport * as i17 from \"@angular/material/core\";\nimport * as i18 from \"@angular/material/autocomplete\";\nimport * as i19 from \"@angular/material/chips\";\nconst _c0 = [\"categoryInput\"];\nconst _c1 = [\"subcategoryInput\"];\nconst _c2 = [\"employeeToInput\"];\nconst _c3 = [\"employeeBToInput\"];\nconst _c4 = [\"autoto\"];\nconst _c5 = [\"autobto\"];\nconst _c6 = [\"employeeccInput\"];\nconst _c7 = [\"autocc\"];\nconst _c8 = [\"employeeApproverInput\"];\nconst _c9 = [\"employeeApproverInput1\"];\nconst _c10 = [\"autoapprover\"];\nconst _c11 = [\"autoapprover1\"];\nconst _c12 = [\"employeeDeptInput\"];\nconst _c13 = [\"autodept\"];\nconst _c14 = [\"senderValue\"];\nconst _c15 = [\"takeInput\"];\nfunction MemoComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoComponent_ng_container_18_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r40 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r40);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r40.name, \" \");\n  }\n}\nfunction MemoComponent_ng_container_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoComponent_ng_container_18_mat_option_1_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.senderList);\n  }\n}\nfunction MemoComponent_tr_19_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_tr_19_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r48);\n      const employeedept_r46 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r47.removeEmployeeDept(employeedept_r46));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeedept_r46 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeedept_r46.name, \" \");\n  }\n}\nfunction MemoComponent_tr_19_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeedept_r49 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeedept_r49);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeedept_r49.name, \" \");\n  }\n}\nfunction MemoComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To Department\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 9)(6, \"mat-chip-grid\", null, 62);\n    i0.ɵɵtemplate(8, MemoComponent_tr_19_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 11);\n    i0.ɵɵelement(9, \"input\", 12, 63);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 14, 64);\n    i0.ɵɵlistener(\"optionSelected\", function MemoComponent_tr_19_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.employeeDeptSelected($event));\n    })(\"opened\", function MemoComponent_tr_19_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.autocompleteDeptScroll());\n    });\n    i0.ɵɵtemplate(13, MemoComponent_tr_19_mat_option_13_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r41 = i0.ɵɵreference(7);\n    const _r44 = i0.ɵɵreference(12);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.chipSelectedEmployeeDept);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.employeeDeptControl)(\"matAutocomplete\", _r44)(\"matChipInputFor\", _r41)(\"matChipInputSeparatorKeyCodes\", ctx_r4.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.departmentList);\n  }\n}\nfunction MemoComponent_tr_20_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_tr_20_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r60);\n      const employeeto_r58 = restoredCtx.$implicit;\n      const ctx_r59 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r59.removeEmployeeTo(employeeto_r58));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeto_r58 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeto_r58.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_20_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r61 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r61);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r61.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"To\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 9)(6, \"mat-chip-grid\", null, 67);\n    i0.ɵɵtemplate(8, MemoComponent_tr_20_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 11);\n    i0.ɵɵelement(9, \"input\", 12, 68);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 14, 69);\n    i0.ɵɵlistener(\"optionSelected\", function MemoComponent_tr_20_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r62 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r62.employeeToSelected($event));\n    })(\"opened\", function MemoComponent_tr_20_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r64 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r64.autocompleteToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoComponent_tr_20_mat_option_13_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r53 = i0.ɵɵreference(7);\n    const _r56 = i0.ɵɵreference(12);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.chipSelectedEmployeeTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.to_emp)(\"matAutocomplete\", _r56)(\"matChipInputFor\", _r53)(\"matChipInputSeparatorKeyCodes\", ctx_r5.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.allEmployeeList);\n  }\n}\nfunction MemoComponent_tr_21_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r72 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_tr_21_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r72);\n      const employeebto_r70 = restoredCtx.$implicit;\n      const ctx_r71 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r71.removeEmployeeBTo(employeebto_r70));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeebto_r70 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeebto_r70.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_21_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployee_r73 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployee_r73);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployee_r73.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r75 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"BTo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 9)(6, \"mat-chip-grid\", null, 70);\n    i0.ɵɵtemplate(8, MemoComponent_tr_21_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 11);\n    i0.ɵɵelement(9, \"input\", 12, 71);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 14, 72);\n    i0.ɵɵlistener(\"optionSelected\", function MemoComponent_tr_21_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r74 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r74.employeeBToSelected($event));\n    })(\"opened\", function MemoComponent_tr_21_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r75);\n      const ctx_r76 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r76.autocompleteBToScroll());\n    });\n    i0.ɵɵtemplate(13, MemoComponent_tr_21_mat_option_13_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r65 = i0.ɵɵreference(7);\n    const _r68 = i0.ɵɵreference(12);\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.chipSelectedEmployeeBTo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.bto_emp)(\"matAutocomplete\", _r68)(\"matChipInputFor\", _r65)(\"matChipInputSeparatorKeyCodes\", ctx_r6.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.allEmployeeList);\n  }\n}\nfunction MemoComponent_tr_22_mat_chip_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r84 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_tr_22_mat_chip_row_8_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r84);\n      const employeecc_r82 = restoredCtx.$implicit;\n      const ctx_r83 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r83.removeEmployeeCC(employeecc_r82));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeecc_r82 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeecc_r82.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_22_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r85 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r85);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r85.full_name, \" \");\n  }\n}\nfunction MemoComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"CC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"mat-form-field\", 9)(6, \"mat-chip-grid\", null, 73);\n    i0.ɵɵtemplate(8, MemoComponent_tr_22_mat_chip_row_8_Template, 4, 2, \"mat-chip-row\", 11);\n    i0.ɵɵelement(9, \"input\", 12, 74);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", 14, 75);\n    i0.ɵɵlistener(\"optionSelected\", function MemoComponent_tr_22_Template_mat_autocomplete_optionSelected_11_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r86 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r86.employeeccSelected($event));\n    })(\"opened\", function MemoComponent_tr_22_Template_mat_autocomplete_opened_11_listener() {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r88 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r88.autocompleteCCScroll());\n    });\n    i0.ɵɵtemplate(13, MemoComponent_tr_22_mat_option_13_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r77 = i0.ɵɵreference(7);\n    const _r80 = i0.ɵɵreference(12);\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.chipSelectedEmployeeCC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r7.employeeccControl)(\"matAutocomplete\", _r80)(\"matChipInputFor\", _r77)(\"matChipInputSeparatorKeyCodes\", ctx_r7.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.allEmployeeList);\n  }\n}\nfunction MemoComponent_td_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Signee\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Approver\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoComponent_mat_chip_row_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r91 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 65);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_mat_chip_row_30_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r91);\n      const employeeapprover_r89 = restoredCtx.$implicit;\n      const ctx_r90 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r90.removeEmployeeApprover(employeeapprover_r89));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeeapprover_r89 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeeapprover_r89.full_name, \" \");\n  }\n}\nfunction MemoComponent_mat_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r92 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r92);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r92.full_name, \" \");\n  }\n}\nfunction MemoComponent_mat_chip_row_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r95 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 76);\n    i0.ɵɵlistener(\"removed\", function MemoComponent_mat_chip_row_44_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r95);\n      const employeerecommender_r93 = restoredCtx.$implicit;\n      const ctx_r94 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r94.removeEmployeeApprover1(employeerecommender_r93));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"mat-icon\", 66);\n    i0.ɵɵtext(3, \"cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employeerecommender_r93 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employeerecommender_r93.full_name, \" \");\n  }\n}\nfunction MemoComponent_mat_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const thisEmployeeCC_r96 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", thisEmployeeCC_r96);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", thisEmployeeCC_r96.full_name, \" \");\n  }\n}\nfunction MemoComponent_mat_option_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoComponent_ng_container_69_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r100 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 78);\n    i0.ɵɵlistener(\"onSelectionChange\", function MemoComponent_ng_container_69_mat_option_1_Template_mat_option_onSelectionChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r100);\n      const ctx_r99 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r99.OnCategoryChange($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r98 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r98);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", cat_r98.name, \" \");\n  }\n}\nfunction MemoComponent_ng_container_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoComponent_ng_container_69_mat_option_1_Template, 2, 2, \"mat-option\", 77);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r23.categoryList);\n  }\n}\nfunction MemoComponent_mat_option_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoComponent_ng_container_77_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sub_r102 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sub_r102);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", sub_r102.name, \" \");\n  }\n}\nfunction MemoComponent_ng_container_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoComponent_ng_container_77_mat_option_1_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r27.sub_categoryList);\n  }\n}\nfunction MemoComponent_mat_option_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 60);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MemoComponent_ng_container_85_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 61);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const des_r104 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", des_r104);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", des_r104.name, \" \");\n  }\n}\nfunction MemoComponent_ng_container_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MemoComponent_ng_container_85_mat_option_1_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r31.priorityList);\n  }\n}\nfunction MemoComponent_span_106_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r108 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 79);\n    i0.ɵɵlistener(\"click\", function MemoComponent_span_106_Template_span_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r108);\n      const selected_r105 = restoredCtx.$implicit;\n      const ctx_r107 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r107.imagePreview(selected_r105));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 80)(3, \"mat-icon\", 81);\n    i0.ɵɵlistener(\"click\", function MemoComponent_span_106_Template_mat_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r108);\n      const selected_r105 = restoredCtx.$implicit;\n      const index_r106 = restoredCtx.index;\n      const ctx_r109 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r109.attachmentDelete(selected_r105.file_name, index_r106));\n    });\n    i0.ɵɵtext(4, \" delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const selected_r105 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", selected_r105.file_name, \" \");\n  }\n}\nfunction MemoComponent_span_107_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r113 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 82);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 80)(3, \"mat-icon\", 83);\n    i0.ɵɵlistener(\"click\", function MemoComponent_span_107_Template_mat_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r113);\n      const upload_r110 = restoredCtx.$implicit;\n      const i_r111 = restoredCtx.index;\n      const ctx_r112 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r112.deleteUpload(upload_r110, i_r111));\n    });\n    i0.ɵɵtext(4, \" delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const upload_r110 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", upload_r110, \" \");\n  }\n}\nfunction MemoComponent_td_138_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 84);\n    i0.ɵɵtext(2, \"Back\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", \"/ememo/memosummary\");\n  }\n}\nfunction MemoComponent_td_139_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 85);\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoComponent_td_140_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r115 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 86);\n    i0.ɵɵlistener(\"click\", function MemoComponent_td_140_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r115);\n      const ctx_r114 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r114.saveDraft());\n    });\n    i0.ɵɵtext(2, \"Save as Draft\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MemoComponent_div_144_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 87);\n    i0.ɵɵelement(1, \"img\", 88);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r38.jpgUrls, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class MemoComponent {\n  formBuilder;\n  dataService;\n  sharedService;\n  toastr;\n  notification;\n  router;\n  memoService;\n  sanitizer;\n  SpinnerService;\n  // subscription: Subscription;\n  imageUrl = environment.apiURL;\n  memoAddForm;\n  config = {\n    airMode: false,\n    tabDisable: true,\n    popover: {\n      table: [['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']], ['delete', ['deleteRow', 'deleteCol', 'deleteTable']]],\n      link: [['link', ['linkDialogShow', 'unlink']]],\n      air: [['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']]]\n    },\n    height: '200px',\n    // uploadImagePath: '/api/upload',\n    toolbar: [['misc', ['codeview', 'undo', 'redo', 'codeBlock']], ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']], ['fontsize', ['fontname', 'fontsize', 'color']], ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']], ['insert', ['table', 'picture', 'link', 'hr']]],\n    codeviewFilter: true,\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\n    codeviewIframeFilter: true\n  };\n  editorDisabled = false;\n  get sanitizedHtml() {\n    return this.sanitizer.bypassSecurityTrustHtml(this.memoAddForm.get('html').value);\n  }\n  isLoading = false;\n  separatorKeysCodes = [ENTER, COMMA];\n  has_next = true;\n  has_previous = true;\n  currentpage = 1;\n  allEmployeeList;\n  departmentList;\n  chipSelectedEmployeeTo = [];\n  chipSelectedEmployeeToid = [];\n  to_emp = new FormControl();\n  chipSelectedEmployeeBTo = [];\n  chipSelectedEmployeeBToid = [];\n  bto_emp = new FormControl();\n  RELOAD_TOP_SCROLL_POSITION = 50;\n  categoryInput;\n  subcategoryInput;\n  employeeToInput;\n  employeeBToInput;\n  matToAutocomplete;\n  matBToAutocomplete;\n  employeeccInput;\n  matAutocompleteCC;\n  employeeApproverInput;\n  employeeApproverInput1;\n  matAutocompleteApp;\n  matAutocompleteApp1;\n  employeeDeptInput;\n  matAutocompleteDept;\n  autocompleteTrigger;\n  matAutocomplete;\n  InputVar;\n  categoryID;\n  draftSaveId;\n  uploadList = [];\n  documentList;\n  category = new FormControl();\n  sub_category = new FormControl();\n  chipSelectedEmployeeCC = [];\n  chipSelectedEmployeeCCid = [];\n  employeeccControl = new FormControl();\n  chipSelectedEmployeeDept = [];\n  chipSelectedEmployeeDeptid = [];\n  employeeDeptControl = new FormControl();\n  // public chipSelectedDeptid = [];\n  allEmployeeApprover;\n  chipSelectedEmployeeApprover = [];\n  chipSelectedEmployeeApproverid = [];\n  chipSelectedEmployeeRecommender = [];\n  chipSelectedEmployeeRecommenderid = [];\n  employeeApproverControl = new FormControl();\n  employeeRecommenderControl = new FormControl();\n  Confidential = false;\n  Parallel_Delivery = false;\n  SubmitCalled = false;\n  isButtonVisible = true;\n  rdoIOMnfa;\n  employeeList = [];\n  senderList;\n  pdfUrls;\n  jpgUrls;\n  priorityList;\n  categoryList;\n  sub_categoryList;\n  images = [];\n  intervalid;\n  constructor(formBuilder, dataService, sharedService, toastr, notification, router, memoService, sanitizer, SpinnerService) {\n    this.formBuilder = formBuilder;\n    this.dataService = dataService;\n    this.sharedService = sharedService;\n    this.toastr = toastr;\n    this.notification = notification;\n    this.router = router;\n    this.memoService = memoService;\n    this.sanitizer = sanitizer;\n    this.SpinnerService = SpinnerService;\n    this.intervalid = setInterval(() => {\n      this.saveDraft();\n    }, 60 * 1000);\n  }\n  ngOnDestroy() {\n    if (this.intervalid) {\n      clearInterval(this.intervalid);\n    }\n  }\n  ngOnInit() {\n    // this.subscription = timer(0, 10000).pipe(\n    //   switchMap(() => this.myservice.checkdata())\n    // ).subscribe(result => this.statustext = result);\n    this.memoAddForm = this.formBuilder.group({\n      subject: ['', Validators.required],\n      sender: ['', Validators.required],\n      priority: [''],\n      manual_reference: [''],\n      watermarktext: [''],\n      to_emp: [''],\n      bto_emp: [''],\n      to_dept: [''],\n      approver: ['', Validators.required],\n      recommender: ['', Validators.required],\n      cc: ['', Validators.required],\n      category: [''],\n      sub_category: [''],\n      images: ['', Validators.required],\n      html: ['', Validators.required]\n    });\n    this.memoAddForm.controls['priority'].setValue({\n      id: 2,\n      name: \"Medium\"\n    });\n    this.memoAddForm.patchValue({\n      watermarktext: 'NAC'\n    });\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      this.sharedService.MyModuleName = \"eMemo - Inter Office Memo\";\n      this.rdoIOMnfa = 'iom';\n    } else {\n      this.sharedService.MyModuleName = \"eMemo - Note for Approval\";\n      this.rdoIOMnfa = 'nfa';\n    }\n    // this.getSender();\n    // this.getPriority();\n    this.getForwardMessage();\n    this.memoAddForm.get('sender').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_empTodeptMapping1('memo').pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderList = datas;\n      const index = this.senderList.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      // console.log(\"index1\",index);\n      if (index !== -1) {\n        this.senderList.splice(index, 1);\n      }\n      this.categoryInput.nativeElement.value = '';\n      this.subcategoryInput.nativeElement.value = '';\n    });\n    this.memoAddForm.get('priority').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.get_priority().pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n    this.memoAddForm.get('category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getCategory_Dept(value, this.memoAddForm.value.sender.id).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.categoryList = datas;\n      this.subcategoryInput.nativeElement.value = '';\n    });\n    this.memoAddForm.get('sub_category').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.memoService.getSubCategory1(value, this.categoryID).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.sub_categoryList = datas;\n    });\n    if (this.to_emp !== null) {\n      this.to_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.bto_emp !== null) {\n      this.bto_emp.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeccControl !== null) {\n      this.employeeccControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeApproverControl !== null) {\n      this.employeeApproverControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeDeptControl !== null) {\n      this.employeeDeptControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.getDepartmentPage(value, 1, '').pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.departmentList = datas;\n        let todeptlist = datas;\n        const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\");\n        // console.log(\"index2\",index);\n        if (index !== -1) {\n          todeptlist.splice(index, 1);\n        }\n        // console.log(\"this.departmentList\",this.departmentList);\n        if (this.departmentList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n    if (this.employeeRecommenderControl !== null) {\n      this.employeeRecommenderControl.valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n      }), switchMap(value => this.memoService.get_EmployeeList(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        let datapagination = results[\"pagination\"];\n        this.allEmployeeList = datas;\n        if (this.allEmployeeList.length >= 0) {\n          this.has_next = datapagination.has_next;\n          this.has_previous = datapagination.has_previous;\n          this.currentpage = datapagination.index;\n        }\n      });\n    }\n  } //end of oninit\n  enableEditor() {\n    this.editorDisabled = false;\n  }\n  disableEditor() {\n    this.editorDisabled = true;\n  }\n  onBlur() {\n    // console.log('Blur');\n  }\n  onDelete(file) {\n    // console.log('Delete file', file.url);\n  }\n  summernoteInit(event) {\n    // console.log(event);\n  }\n  autocompleteToScroll() {\n    setTimeout(() => {\n      if (this.matToAutocomplete && this.autocompleteTrigger && this.matToAutocomplete.panel) {\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeTo\n  autocompleteBToScroll() {\n    setTimeout(() => {\n      if (this.matBToAutocomplete && this.autocompleteTrigger && this.matBToAutocomplete.panel) {\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeBTo\n  autocompleteCCScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteCC && this.autocompleteTrigger && this.matAutocompleteCC.panel) {\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof autocomplete CC\n  autocompleteAppScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteApp && this.autocompleteTrigger && this.matAutocompleteApp.panel) {\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.allEmployeeList = this.allEmployeeList.concat(datas);\n                if (this.allEmployeeList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto completeApproval\n  autocompleteDeptScroll() {\n    setTimeout(() => {\n      if (this.matAutocompleteDept && this.autocompleteTrigger && this.matAutocompleteDept.panel) {\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll').pipe(map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_next === true) {\n              this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '').subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.departmentList = this.departmentList.concat(datas);\n                if (this.departmentList.length >= 0) {\n                  this.has_next = datapagination.has_next;\n                  this.has_previous = datapagination.has_previous;\n                  this.currentpage = datapagination.index;\n                }\n              });\n            } //if (this.has_next === true)\n          } //endof atBottom\n        });\n      }\n    });\n  } //endof auto matAutocompleteDept\n  filter(data) {\n    // console.log(data.value);\n  }\n  getForwardMessage() {\n    this.sharedService.forwardMessage.value;\n  }\n  displayTo(empto) {\n    return empto ? empto.full_name : undefined;\n  }\n  get empto() {\n    return this.memoAddForm.get('to_emp');\n  }\n  OnCategoryChange(e) {\n    this.categoryID = e.source.value.id;\n  }\n  OnSenderChange(e) {\n    this.categoryInput.nativeElement.value = '';\n    this.subcategoryInput.nativeElement.value = '';\n  }\n  focusCategory(e) {\n    if (this.memoAddForm.value.sender.id === undefined) {\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.categoryInput.nativeElement.value === '') {\n      this.memoService.getCategory_Dept('', this.memoAddForm.value.sender.id).subscribe(results => {\n        let datas = results[\"data\"];\n        this.categoryList = datas;\n        // this.subcategoryInput.nativeElement.value = '';\n      });\n    }\n    // }\n  }\n  focussubCategory(e) {\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\n      this.memoService.getSubCategory1(' ', this.categoryID).subscribe(results => {\n        let datas = results[\"data\"];\n        this.sub_categoryList = datas;\n        this.subcategoryInput.nativeElement.value = '';\n      });\n    }\n  }\n  displayCategory(categorydis) {\n    return categorydis ? categorydis.name : undefined;\n  }\n  get categorydis() {\n    return this.memoAddForm.get('category');\n  }\n  displaysubCategory(subcategory) {\n    return subcategory ? subcategory.name : undefined;\n  }\n  get subcategory() {\n    return this.memoAddForm.get('sub_category');\n  }\n  removeEmployeeTo(employee) {\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeTo.splice(index, 1);\n      this.chipSelectedEmployeeToid.splice(index, 1);\n      this.employeeToInput.nativeElement.value = '';\n    }\n  }\n  employeeToSelected(event) {\n    this.selectEmployeeToByName(event.option.value.full_name);\n    this.employeeToInput.nativeElement.value = '';\n  }\n  selectEmployeeToByName(employeeName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\n    if (foundEmployeeCC.length) {\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeBTo(employee) {\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeBTo.splice(index, 1);\n      this.chipSelectedEmployeeBToid.splice(index, 1);\n      this.employeeBToInput.nativeElement.value = '';\n    }\n  }\n  employeeBToSelected(event) {\n    this.selectEmployeeBToByName(event.option.value.full_name);\n    this.employeeBToInput.nativeElement.value = '';\n  }\n  selectEmployeeBToByName(employeeName) {\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto.length) {\n      return;\n    }\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\n    if (foundEmployeebto1.length) {\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id);\n    }\n  }\n  removeEmployeeCC(employeecc) {\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\n    if (index >= 0) {\n      this.chipSelectedEmployeeCC.splice(index, 1);\n      this.chipSelectedEmployeeCCid.splice(index, 1);\n      this.employeeccInput.nativeElement.value = '';\n    }\n  }\n  employeeccSelected(event) {\n    this.selectEmployeeCCByName(event.option.value.full_name);\n    this.employeeccInput.nativeElement.value = '';\n  }\n  selectEmployeeCCByName(employeeccName) {\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC1.length) {\n      return;\n    }\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\n    if (foundEmployeeCC.length) {\n      // We found the employeecc name in the allEmployeeList list\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id);\n    }\n  }\n  removeEmployeeApprover(employee) {\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeApprover.splice(index, 1);\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\n      this.employeeApproverInput.nativeElement.value = '';\n    }\n  }\n  removeEmployeeApprover1(employee) {\n    const index = this.chipSelectedEmployeeRecommender.indexOf(employee);\n    if (index >= 0) {\n      this.chipSelectedEmployeeRecommender.splice(index, 1);\n      this.chipSelectedEmployeeRecommenderid.splice(index, 1);\n      this.employeeApproverInput1.nativeElement.value = '';\n    }\n  }\n  employeeApproverSelected(event) {\n    this.selectEmployeeApproverByName(event.option.value.full_name);\n    this.employeeApproverInput.nativeElement.value = '';\n  }\n  employeeApproverSelected1(event) {\n    this.selectEmployeeApproverByName1(event.option.value.full_name);\n    this.employeeApproverInput1.nativeElement.value = '';\n  }\n  selectEmployeeApproverByName(employee) {\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover1.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id);\n    }\n  }\n  selectEmployeeApproverByName1(employee) {\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeRecommender.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover1.length) {\n      return;\n    }\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\n    if (foundEmployeeApprover.length) {\n      this.chipSelectedEmployeeRecommender.push(foundEmployeeApprover[0]);\n      this.chipSelectedEmployeeRecommenderid.push(foundEmployeeApprover[0].id);\n    }\n  }\n  removeEmployeeDept(dept) {\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\n    if (index >= 0) {\n      this.chipSelectedEmployeeDept.splice(index, 1);\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\n      this.employeeDeptInput.nativeElement.value = '';\n    }\n  }\n  employeeDeptSelected(event) {\n    this.selectEmployeeDeptByName(event.option.value.name);\n    this.employeeDeptInput.nativeElement.value = '';\n  }\n  selectEmployeeDeptByName(dept) {\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.name == dept);\n    if (foundEmployeeDept1.length) {\n      return;\n    }\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\n    if (foundEmployeeDept.length) {\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id);\n    }\n  }\n  createMemoInput() {\n    let orderno = 0;\n    let ordernos = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        \"id\": eachitem,\n        \"order\": orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    let finalrecArray = [];\n    this.chipSelectedEmployeeRecommenderid.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    let memoclass = new Memo();\n    memoclass.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass.approver = finalappArray;\n    memoclass.cc = this.chipSelectedEmployeeCCid;\n    memoclass.to_emp = this.chipSelectedEmployeeToid;\n    memoclass.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass.subject = this.memoAddForm.value.subject;\n    memoclass.manual_reference = this.memoAddForm.value.manual_reference;\n    memoclass.watermark_txt = this.memoAddForm.value.watermarktext;\n    memoclass.type = this.rdoIOMnfa;\n    memoclass.sender = this.memoAddForm.value.sender.id + '_dept';\n    memoclass.priority = this.memoAddForm.value.priority.id;\n    memoclass.confidential = this.Confidential;\n    if (this.memoAddForm.value.category.id === undefined) {\n      memoclass.category = null;\n    } else {\n      memoclass.category = this.memoAddForm.value.category.id;\n    }\n    if (this.memoAddForm.value.sub_category.id === undefined) {\n      memoclass.sub_category = null;\n    } else {\n      memoclass.sub_category = this.memoAddForm.value.sub_category.id;\n    }\n    memoclass.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\n    memoclass.recommender = finalrecArray;\n    memoclass.parallel_delivery = this.Parallel_Delivery;\n    // memoclass.images = this.images;\n    return memoclass;\n  }\n  Submit() {\n    this.SubmitCalled = true;\n    if (this.memoAddForm.value.sender.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          this.SubmitCalled = false;\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedEmployeeRecommenderid.length; i++) {\n        if (this.chipSelectedEmployeeRecommenderid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          this.SubmitCalled = false;\n          return false;\n        }\n      }\n    }\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\n        this.SpinnerService.hide();\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', {\n          timeOut: 1500\n        });\n        this.SubmitCalled = false;\n        return false;\n      }\n    }\n    if (this.memoAddForm.value.priority.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Priority', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.memoAddForm.value.subject === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.memoAddForm.value.watermarktext === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    if (this.memoAddForm.value.html === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid content', {\n        timeOut: 1500\n      });\n      this.SubmitCalled = false;\n      return false;\n    }\n    var answer = window.confirm(\"Save Memo?\");\n    if (answer) {\n      //some code\n    } else {\n      this.SubmitCalled = false;\n      return false;\n    }\n    this.SpinnerService.show();\n    if (this.draftSaveId === undefined) {\n      this.dataService.createNewMemo(this.createMemoInput(), this.images).subscribe(res => {\n        let id = res.id;\n        this.sharedService.fetchData.next(id);\n        this.draftSaveId = res.id;\n        this.SpinnerService.hide();\n        this.notification.showSuccess('New Memo created!...');\n        this.router.navigate(['/ememo/memoView'], {\n          queryParams: {\n            mid: id,\n            from: 'memocreate',\n            MemoView: \"YES\"\n          },\n          skipLocationChange: true\n        });\n      }, error => {\n        this.SpinnerService.hide();\n      });\n      return true;\n    }\n    if (this.draftSaveId !== '') {\n      this.dataService.reDraftSave(this.redraftCreate(), this.draftSaveId, this.images, this.documentList).subscribe(res => {\n        this.SpinnerService.hide();\n        this.notification.showSuccess('Draft Updated and ready to create Memo!...');\n        this.dataService.sendMemo(this.draftSaveId).subscribe(res => {\n          this.sharedService.fetchData.next(this.draftSaveId);\n          this.router.navigate(['/ememo/memoView'], {\n            queryParams: {\n              mid: this.draftSaveId,\n              from: 'memocreate',\n              MemoView: \"YES\"\n            },\n            skipLocationChange: true\n          });\n        }, error => {\n          this.SpinnerService.hide();\n        });\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    }\n  } //End of createMemoForm\n  imagePreview(attachment) {\n    const getToken = localStorage.getItem(\"sessionData\");\n    let tokenValue = JSON.parse(getToken);\n    let token = tokenValue.token;\n    pdfUrls: String;\n    jpgUrls: String;\n    let filename = attachment.file_name;\n    let fileid = attachment.id;\n    let fileextn = filename.split('.');\n    if (fileextn[1] === \"png\" || fileextn[1] === \"jpeg\" || fileextn[1] === \"jpg\") {\n      this.jpgUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?token=\" + token;\n    } else {\n      this.pdfUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?type= \" + filename + \"&token=\" + token;\n      let anchor = document.createElement('a');\n      anchor.href = this.pdfUrls;\n      anchor.target = '_blank';\n      anchor.click();\n    }\n  }\n  attachmentDelete(s, index) {\n    this.documentList.forEach((s, i) => {\n      if (index === i) this.documentList.splice(index, 1);\n      this.images.splice(index, 1);\n    });\n  }\n  fileChange(event) {\n    let imagesList = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    this.InputVar.nativeElement.value = '';\n    imagesList.push(this.images);\n    this.uploadList = [];\n    imagesList.forEach(item => {\n      let s = item;\n      s.forEach(it => {\n        let io = it.name;\n        this.uploadList.push(io);\n      });\n    });\n  }\n  deleteUpload(s, index) {\n    this.uploadList.forEach((s, i) => {\n      if (index === i) {\n        this.uploadList.splice(index, 1);\n        this.images.splice(index, 1);\n      }\n    });\n  }\n  department(id) {\n    this.dataService.getCategory(id).subscribe(results => {\n      let datas = results[\"data\"];\n      this.categoryList = datas;\n    });\n  }\n  // categorychange(id) {\n  //   this.dataService.getSubCategory(id)\n  //     .subscribe((results: any[]) => {\n  //       let datas = results[\"data\"];\n  //       this.sub_categoryList = datas;\n  //     }, error => {\n  //       return Observable.throw(error);\n  //     })\n  // }\n  saveDraft() {\n    this.SpinnerService.show();\n    if (this.SubmitCalled === true) {\n      this.SpinnerService.hide();\n      return false;\n    }\n    this.isButtonVisible = false;\n    if (this.memoAddForm.value.sender.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Approver name can not be yours', {\n            timeOut: 1500\n          });\n          this.isButtonVisible = true;\n          return false;\n        }\n      }\n      for (let i = 0; i < this.chipSelectedEmployeeRecommenderid.length; i++) {\n        if (this.chipSelectedEmployeeRecommenderid[i] === this.sharedService.loginEmpId) {\n          this.SpinnerService.hide();\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', {\n            timeOut: 1500\n          });\n          this.SubmitCalled = false;\n          return false;\n        }\n      }\n    }\n    if (this.sharedService.Memofrom === 'IOMEMO') {\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\n        this.SpinnerService.hide();\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', {\n          timeOut: 1500\n        });\n        this.SubmitCalled = false;\n        return false;\n      }\n    }\n    if (this.memoAddForm.value.priority.id === undefined) {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Priority', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.memoAddForm.value.subject === '') {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid subject', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.memoAddForm.value.watermarktext === '') {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid Watermark text', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    if (this.memoAddForm.value.html === \"\") {\n      this.SpinnerService.hide();\n      this.toastr.error('Memo Add', 'Invalid content', {\n        timeOut: 1500\n      });\n      this.isButtonVisible = true;\n      return false;\n    }\n    // var answer = window.confirm(\"Save Draft data?\");\n    // if (answer) {\n    //     //some code\n    // }\n    // else {\n    //   return false;\n    // }\n    if (this.draftSaveId === undefined) {\n      this.dataService.saveAsDraft(this.redraftCreate(), '', this.images).subscribe(res => {\n        if (res.code === 'UNEXPECTED_ERROR' && res.description === 'Duplicate Name') {\n          this.SpinnerService.hide();\n          this.notification.showWarning('Duplicate! Code Or Name ...');\n        } else if (res.code === 'UNEXPECTED_ERROR' && res.description === 'Unexpected Internal Server Error') {\n          this.SpinnerService.hide();\n          this.notification.showError('INVALID_DATA!...');\n        } else if (res.code === 'INVALID_DATA' && res.description === 'Invalid Data or DB Constraint') {\n          this.SpinnerService.hide();\n          this.notification.showError('INVALID_DATA Or DB !...');\n        } else {\n          this.SpinnerService.hide();\n          this.notification.showSuccess('Draft Saved!...');\n        }\n        this.draftSaveId = res.id;\n        this.dataService.getFetch(this.draftSaveId).subscribe(result => {\n          this.documentList = result.document_arr;\n          this.uploadList = [];\n          this.images = [];\n        }, error => {\n          this.SpinnerService.hide();\n        });\n        this.isButtonVisible = true;\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    } else {\n      // this.uploadList = [];\n      this.dataService.reDraftSave(this.redraftCreate(), this.draftSaveId, this.images, this.documentList).subscribe(res => {\n        this.SpinnerService.hide();\n        this.notification.showSuccess('Draft Updated!...');\n        this.dataService.getFetch(this.draftSaveId).subscribe(result => {\n          this.documentList = result.document_arr;\n          this.uploadList = [];\n          this.images = [];\n        }, error => {\n          this.SpinnerService.hide();\n        });\n        this.isButtonVisible = true;\n        return true;\n      }, error => {\n        this.SpinnerService.hide();\n      });\n    }\n  }\n  redraftCreate() {\n    let orderno = 0;\n    let ordernos = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        \"id\": eachitem,\n        \"order\": orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    let finalrecArray = [];\n    this.chipSelectedEmployeeRecommenderid.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    let data = this.memoAddForm.controls;\n    let memoclass1 = new Memo();\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass1.approver = finalappArray;\n    memoclass1.cc = this.chipSelectedEmployeeCCid;\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass1.subject = this.memoAddForm.value.subject;\n    memoclass1.manual_reference = this.memoAddForm.value.manual_reference;\n    memoclass1.watermark_txt = this.memoAddForm.value.watermarktext;\n    memoclass1.type = this.rdoIOMnfa;\n    memoclass1.sender = this.memoAddForm.value.sender.id + '_dept';\n    memoclass1.priority = this.memoAddForm.value.priority.id;\n    memoclass1.confidential = this.Confidential;\n    if (this.memoAddForm.value.category.id === undefined) {\n      memoclass1.category = null;\n    } else {\n      memoclass1.category = this.memoAddForm.value.category.id;\n    }\n    if (this.memoAddForm.value.sub_category.id === undefined) {\n      memoclass1.sub_category = null;\n    } else {\n      memoclass1.sub_category = this.memoAddForm.value.sub_category.id;\n    }\n    memoclass1.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\n    memoclass1.recommender = finalrecArray;\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\n    return memoclass1;\n  }\n  draftCreate() {\n    let orderno = 0;\n    let ordernos = 0;\n    let finalappArray = [];\n    this.chipSelectedEmployeeApproverid.forEach(eachitem => {\n      let apporder = {\n        id: eachitem,\n        order: orderno + 1\n      };\n      orderno = orderno + 1;\n      finalappArray.push(apporder);\n    });\n    let finalrecArray = [];\n    this.chipSelectedEmployeeRecommenderid.forEach(eachitem => {\n      let recommorder = {\n        \"id\": eachitem,\n        \"order\": ordernos + 1\n      };\n      ordernos = ordernos + 1;\n      finalrecArray.push(recommorder);\n    });\n    let memoclass = new Memo();\n    memoclass.to_dept = this.chipSelectedEmployeeDeptid;\n    memoclass.approver = finalappArray;\n    memoclass.cc = this.chipSelectedEmployeeCCid;\n    memoclass.to_emp = this.chipSelectedEmployeeToid;\n    memoclass.bto_emp = this.chipSelectedEmployeeBToid;\n    memoclass.subject = this.memoAddForm.value.subject;\n    memoclass.manual_reference = this.memoAddForm.value.manual_reference;\n    memoclass.watermark_txt = this.memoAddForm.value.watermarktext;\n    memoclass.type = this.rdoIOMnfa;\n    memoclass.sender = this.memoAddForm.value.sender.id + '_dept';\n    memoclass.priority = this.memoAddForm.value.priority.id;\n    memoclass.confidential = this.Confidential;\n    if (this.memoAddForm.value.category.id === undefined) {\n      memoclass.category = null;\n    } else {\n      memoclass.category = this.memoAddForm.value.category.id;\n    }\n    if (this.memoAddForm.value.sub_category.id === undefined) {\n      memoclass.sub_category = null;\n    } else {\n      memoclass.sub_category = this.memoAddForm.value.sub_category.id;\n    }\n    memoclass.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\n    memoclass.recommender = finalrecArray;\n    memoclass.parallel_delivery = this.Parallel_Delivery;\n    // memoclass.images = this.images;\n    return memoclass;\n  }\n  getSenderList() {\n    this.memoService.get_empTodeptMapping1('memo').subscribe(results => {\n      let datas = results[\"data\"];\n      this.senderList = datas;\n      const index = this.senderList.findIndex(fromdept => fromdept.code === \"DGRP11\");\n      // console.log(\"index3\",index);\n      if (index !== -1) {\n        this.senderList.splice(index, 1);\n      }\n      // console.log(\"this.senderList\",this.senderList);\n    });\n  }\n  getSender() {\n    this.getSenderList();\n  }\n  displayFnSender(senderValue) {\n    return senderValue ? senderValue.name : undefined;\n  }\n  get senderValue() {\n    return this.memoAddForm.value.get('sender');\n  }\n  getPriority() {\n    this.memoService.get_priority().subscribe(results => {\n      let datas = results[\"data\"];\n      this.priorityList = datas;\n    });\n  }\n  getPriorityList() {\n    this.getPriority();\n  }\n  displayFnPriority(priority) {\n    return priority ? priority.name : undefined;\n  }\n  get priority() {\n    return this.memoAddForm.value.get('priority');\n  }\n  static ɵfac = function MemoComponent_Factory(t) {\n    return new (t || MemoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.NotificationService), i0.ɵɵdirectiveInject(i6.Router), i0.ɵɵdirectiveInject(i7.MemoService), i0.ɵɵdirectiveInject(i8.DomSanitizer), i0.ɵɵdirectiveInject(i9.NgxSpinnerService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MemoComponent,\n    selectors: [[\"app-memo\"]],\n    viewQuery: function MemoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(_c13, 5);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(_c14, 5);\n        i0.ɵɵviewQuery(_c15, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.categoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subcategoryInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeBToInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matBToAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeccInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteCC = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeApproverInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeApproverInput1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteApp = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteApp1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeeDeptInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocompleteDept = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.InputVar = _t.first);\n      }\n    },\n    decls: 150,\n    vars: 50,\n    consts: [[1, \"content\"], [3, \"formGroup\", \"ngSubmit\"], [2, \"width\", \"250px\", \"margin-left\", \"10px\", 3, \"click\"], [\"placeholder\", \"\", \"matInput\", \"\", \"formControlName\", \"sender\", \"required\", \"\", 3, \"matAutocomplete\"], [\"rmInput\", \"\"], [3, \"displayWith\"], [\"senderValue\", \"matAutocomplete\"], [\"class\", \"is-loading\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"memo-form\", 2, \"margin-bottom\", \"-1.25em\"], [\"chipListapprover\", \"\"], [\"style\", \"font-size: small;\", 3, \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\"], [\"employeeApproverInput\", \"\"], [3, \"optionSelected\", \"opened\"], [\"autoapprover\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"chipListrecommender\", \"\"], [\"style\", \"font-size: small;\", 3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"employeeApproverInput1\", \"\"], [\"autoapprover1\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"subject\", \"required\", \"\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [1, \"table\"], [\"width\", \"25%;margin-left:2px\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\"], [\"matInput\", \"\", \"formControlName\", \"category\", \"placeholder\", \"Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"categoryInput\", \"\"], [\"autocategory\", \"matAutocomplete\"], [\"width\", \"25%\"], [2, \"width\", \"250px !important\", \"height\", \"55px !important\", \"margin-left\", \"12px\"], [\"matInput\", \"\", \"formControlName\", \"sub_category\", \"placeholder\", \"Sub Category\", 2, \"font-size\", \"small\", 3, \"matAutocomplete\", \"focus\"], [\"subcategoryInput\", \"\"], [\"autosubcategory\", \"matAutocomplete\"], [\"width\", \"25%;\"], [2, \"width\", \"100px\", \"margin-left\", \"10px\", 3, \"click\"], [\"placeholder\", \"Priority\", \"matInput\", \"\", \"formControlName\", \"priority\", \"required\", \"\", 3, \"matAutocomplete\"], [\"priorityValue\", \"matAutocomplete\"], [1, \"container\"], [\"type\", \"checkbox\", \"data-md-icheck\", \"\", 3, \"checked\", \"change\"], [1, \"checkmark\"], [2, \"width\", \"80%\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modal\", \"matTooltip\", \"Images\", \"class\", \"btn-link\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"btn-link\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"manual_reference\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"colspan\", \"2\"], [3, \"disabled\", \"click\"], [\"formControlName\", \"html\", 3, \"ngxSummernote\", \"ngxSummernoteDisabled\", \"blur\", \"mediaDelete\", \"summernoteInit\"], [1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"2em\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\\n                                        .dotx,.dotm,.docb,\\n                                        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"multiple\", \"true\", \"formControlName\", \"images\", \"name\", \"images\", 3, \"change\"], [\"takeInput\", \"\"], [2, \"margin-right\", \"2em\"], [2, \"margin-bottom\", \"-1.25em\"], [\"matInput\", \"\", \"formControlName\", \"watermarktext\", \"required\", \"\", \"autocomplete\", \"off\", 2, \"font-size\", \"small\"], [\"id\", \"my-modal\", \"aria-labelledby\", \"my-modalLabel\", \"aria-hidden\", \"true\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\"], [\"data-bs-dismiss\", \"modal\", 1, \"modal-dialog\"], [1, \"modal-content\"], [\"class\", \"modal-body\", 4, \"ngIf\"], [2, \"padding-top\", \"20px\"], [\"bdColor\", \"rgba(51, 51, 51, 0.8)\", \"size\", \"default\", \"type\", \"ball-spin-clockwise\", 3, \"fullScreen\"], [2, \"color\", \"white\"], [1, \"is-loading\"], [3, \"value\"], [\"chipListDept\", \"\"], [\"employeeDeptInput\", \"\"], [\"autodept\", \"matAutocomplete\"], [2, \"font-size\", \"small\", 3, \"removable\", \"removed\"], [\"matChipRemove\", \"\"], [\"chipListTo\", \"\"], [\"employeeToInput\", \"\"], [\"autoto\", \"matAutocomplete\"], [\"chipListBTo\", \"\"], [\"employeeBToInput\", \"\"], [\"autobto\", \"matAutocomplete\"], [\"chipList\", \"\"], [\"employeeccInput\", \"\"], [\"autocc\", \"matAutocomplete\"], [2, \"font-size\", \"small\", 3, \"removed\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#my-modal\", \"matTooltip\", \"Images\", 1, \"btn-link\", 3, \"click\"], [\"mat-icon-button\", \"\", \"type\", \"button\"], [\"aria-label\", \"Edit\", 2, \"color\", \"blue\", 3, \"click\"], [1, \"btn-link\"], [\"aria-label\", \"Edit\", 2, \"color\", \"gray\", 3, \"click\"], [\"type\", \"button\", \"skipLocationChange\", \"\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"routerLink\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"12px\", 3, \"click\"], [1, \"modal-body\"], [1, \"img-responsive\", 2, \"width\", \"100%\", 3, \"src\"]],\n    template: function MemoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function MemoComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.Submit();\n        });\n        i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\")(6, \"mat-label\");\n        i0.ɵɵtext(7, \"From\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"td\")(9, \"table\")(10, \"tr\")(11, \"td\")(12, \"mat-form-field\", 2);\n        i0.ɵɵlistener(\"click\", function MemoComponent_Template_mat_form_field_click_12_listener() {\n          return ctx.getSender();\n        });\n        i0.ɵɵelement(13, \"input\", 3, 4);\n        i0.ɵɵelementStart(15, \"mat-autocomplete\", 5, 6);\n        i0.ɵɵtemplate(17, MemoComponent_mat_option_17_Template, 2, 0, \"mat-option\", 7);\n        i0.ɵɵtemplate(18, MemoComponent_ng_container_18_Template, 2, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵtemplate(19, MemoComponent_tr_19_Template, 14, 7, \"tr\", 8);\n        i0.ɵɵtemplate(20, MemoComponent_tr_20_Template, 14, 7, \"tr\", 8);\n        i0.ɵɵtemplate(21, MemoComponent_tr_21_Template, 14, 7, \"tr\", 8);\n        i0.ɵɵtemplate(22, MemoComponent_tr_22_Template, 14, 7, \"tr\", 8);\n        i0.ɵɵelementStart(23, \"tr\");\n        i0.ɵɵtemplate(24, MemoComponent_td_24_Template, 3, 0, \"td\", 8);\n        i0.ɵɵtemplate(25, MemoComponent_td_25_Template, 3, 0, \"td\", 8);\n        i0.ɵɵelementStart(26, \"td\")(27, \"mat-form-field\", 9)(28, \"mat-chip-grid\", null, 10);\n        i0.ɵɵtemplate(30, MemoComponent_mat_chip_row_30_Template, 4, 2, \"mat-chip-row\", 11);\n        i0.ɵɵelement(31, \"input\", 12, 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-autocomplete\", 14, 15);\n        i0.ɵɵlistener(\"optionSelected\", function MemoComponent_Template_mat_autocomplete_optionSelected_33_listener($event) {\n          return ctx.employeeApproverSelected($event);\n        })(\"opened\", function MemoComponent_Template_mat_autocomplete_opened_33_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(35, MemoComponent_mat_option_35_Template, 2, 2, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"tr\")(37, \"td\")(38, \"mat-label\");\n        i0.ɵɵtext(39, \"Recommender\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"td\")(41, \"mat-form-field\", 9)(42, \"mat-chip-grid\", null, 17);\n        i0.ɵɵtemplate(44, MemoComponent_mat_chip_row_44_Template, 4, 1, \"mat-chip-row\", 18);\n        i0.ɵɵelement(45, \"input\", 12, 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"mat-autocomplete\", 14, 20);\n        i0.ɵɵlistener(\"optionSelected\", function MemoComponent_Template_mat_autocomplete_optionSelected_47_listener($event) {\n          return ctx.employeeApproverSelected1($event);\n        })(\"opened\", function MemoComponent_Template_mat_autocomplete_opened_47_listener() {\n          return ctx.autocompleteAppScroll();\n        });\n        i0.ɵɵtemplate(49, MemoComponent_mat_option_49_Template, 2, 2, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(50, \"tr\")(51, \"td\")(52, \"mat-label\");\n        i0.ɵɵtext(53, \"Subject\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"td\")(55, \"mat-form-field\", 9);\n        i0.ɵɵelement(56, \"input\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"tr\");\n        i0.ɵɵelement(58, \"td\");\n        i0.ɵɵelementStart(59, \"td\")(60, \"table\", 22)(61, \"tr\")(62, \"td\", 23)(63, \"mat-form-field\", 24)(64, \"input\", 25, 26);\n        i0.ɵɵlistener(\"focus\", function MemoComponent_Template_input_focus_64_listener($event) {\n          return ctx.focusCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"mat-autocomplete\", 5, 27);\n        i0.ɵɵtemplate(68, MemoComponent_mat_option_68_Template, 2, 0, \"mat-option\", 7);\n        i0.ɵɵtemplate(69, MemoComponent_ng_container_69_Template, 2, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(70, \"td\", 28)(71, \"mat-form-field\", 29)(72, \"input\", 30, 31);\n        i0.ɵɵlistener(\"focus\", function MemoComponent_Template_input_focus_72_listener($event) {\n          return ctx.focussubCategory($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"mat-autocomplete\", 5, 32);\n        i0.ɵɵtemplate(76, MemoComponent_mat_option_76_Template, 2, 0, \"mat-option\", 7);\n        i0.ɵɵtemplate(77, MemoComponent_ng_container_77_Template, 2, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(78, \"td\", 33)(79, \"mat-form-field\", 34);\n        i0.ɵɵlistener(\"click\", function MemoComponent_Template_mat_form_field_click_79_listener() {\n          return ctx.getPriorityList();\n        });\n        i0.ɵɵelement(80, \"input\", 35, 4);\n        i0.ɵɵelementStart(82, \"mat-autocomplete\", 5, 36);\n        i0.ɵɵtemplate(84, MemoComponent_mat_option_84_Template, 2, 0, \"mat-option\", 7);\n        i0.ɵɵtemplate(85, MemoComponent_ng_container_85_Template, 2, 1, \"ng-container\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(86, \"td\", 23)(87, \"label\", 37)(88, \"input\", 38);\n        i0.ɵɵlistener(\"change\", function MemoComponent_Template_input_change_88_listener() {\n          return ctx.Confidential = !ctx.Confidential;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(89, \"Confidential \");\n        i0.ɵɵelement(90, \"span\", 39);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(91, \"tr\");\n        i0.ɵɵelement(92, \"td\");\n        i0.ɵɵelementStart(93, \"td\")(94, \"label\", 37)(95, \"input\", 38);\n        i0.ɵɵlistener(\"change\", function MemoComponent_Template_input_change_95_listener() {\n          return ctx.Parallel_Delivery = !ctx.Parallel_Delivery;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(96, \"Parallel Delivery \");\n        i0.ɵɵelement(97, \"span\", 39);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(98, \"tr\")(99, \"td\");\n        i0.ɵɵtext(100, \" Attachment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"td\")(102, \"table\", 22)(103, \"tr\", 40)(104, \"td\")(105, \"div\");\n        i0.ɵɵtemplate(106, MemoComponent_span_106_Template, 5, 1, \"span\", 41);\n        i0.ɵɵtemplate(107, MemoComponent_span_107_Template, 5, 1, \"span\", 42);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(108, \"tr\")(109, \"td\")(110, \"mat-label\");\n        i0.ɵɵtext(111, \"Dept Reference No\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(112, \"td\")(113, \"mat-form-field\", 9);\n        i0.ɵɵelement(114, \"input\", 43);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(115, \"tr\")(116, \"td\", 44)(117, \"div\")(118, \"button\", 45);\n        i0.ɵɵlistener(\"click\", function MemoComponent_Template_button_click_118_listener() {\n          return ctx.enableEditor();\n        });\n        i0.ɵɵtext(119, \"Enable\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(120, \"button\", 45);\n        i0.ɵɵlistener(\"click\", function MemoComponent_Template_button_click_120_listener() {\n          return ctx.disableEditor();\n        });\n        i0.ɵɵtext(121, \"Disable\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(122, \"div\")(123, \"div\", 46);\n        i0.ɵɵlistener(\"blur\", function MemoComponent_Template_div_blur_123_listener() {\n          return ctx.onBlur();\n        })(\"mediaDelete\", function MemoComponent_Template_div_mediaDelete_123_listener($event) {\n          return ctx.onDelete($event);\n        })(\"summernoteInit\", function MemoComponent_Template_div_summernoteInit_123_listener($event) {\n          return ctx.summernoteInit($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(124, \"tr\")(125, \"td\", 44)(126, \"table\")(127, \"tr\")(128, \"td\")(129, \"label\", 47)(130, \"input\", 48, 49);\n        i0.ɵɵlistener(\"change\", function MemoComponent_Template_input_change_130_listener($event) {\n          return ctx.fileChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(132, \"td\")(133, \"mat-label\", 50);\n        i0.ɵɵtext(134, \"Watermark Text\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(135, \"td\")(136, \"mat-form-field\", 51);\n        i0.ɵɵelement(137, \"input\", 52);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(138, MemoComponent_td_138_Template, 3, 1, \"td\", 8);\n        i0.ɵɵtemplate(139, MemoComponent_td_139_Template, 3, 0, \"td\", 8);\n        i0.ɵɵtemplate(140, MemoComponent_td_140_Template, 3, 0, \"td\", 8);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(141, \"div\", 53)(142, \"div\", 54)(143, \"div\", 55);\n        i0.ɵɵtemplate(144, MemoComponent_div_144_Template, 2, 1, \"div\", 56);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(145, \"br\")(146, \"div\", 57);\n        i0.ɵɵelementStart(147, \"ngx-spinner\", 58)(148, \"p\", 59);\n        i0.ɵɵtext(149, \"Loading... \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n        const _r10 = i0.ɵɵreference(29);\n        const _r13 = i0.ɵɵreference(34);\n        const _r15 = i0.ɵɵreference(43);\n        const _r18 = i0.ɵɵreference(48);\n        const _r21 = i0.ɵɵreference(67);\n        const _r25 = i0.ɵɵreference(75);\n        const _r29 = i0.ɵɵreference(83);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.memoAddForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\" && ctx.chipSelectedEmployeeDept.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"IOMEMO\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.sharedService.Memofrom === \"NFA-MEMO\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedEmployeeApprover);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeApproverControl)(\"matAutocomplete\", _r13)(\"matChipInputFor\", _r10)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chipSelectedEmployeeRecommender);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.employeeRecommenderControl)(\"matAutocomplete\", _r18)(\"matChipInputFor\", _r15)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allEmployeeList);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"matAutocomplete\", _r21);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r25);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displaysubCategory);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matAutocomplete\", _r29);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnSender);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.Confidential);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.Parallel_Delivery);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.documentList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.uploadList);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", !ctx.editorDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngxSummernote\", ctx.config)(\"ngxSummernoteDisabled\", ctx.editorDisabled);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isButtonVisible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.pdfUrls !== \"pdf\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"fullScreen\", true);\n      }\n    },\n    dependencies: [i6.RouterLink, i10.NgForOf, i10.NgIf, i11.NgxSummernoteDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i9.NgxSpinnerComponent, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i12.MatIconButton, i13.MatIcon, i14.MatTooltip, i15.MatInput, i16.MatFormField, i16.MatLabel, i17.MatOption, i18.MatAutocomplete, i18.MatAutocompleteTrigger, i19.MatChipGrid, i19.MatChipInput, i19.MatChipRemove, i19.MatChipRow],\n    styles: [\"\\n\\n.container[_ngcontent-%COMP%] {\\n    display: block;\\n    position: relative;\\n    padding-left: 1px;\\n    margin-top: 20px;\\n    margin-bottom: 2px;\\n    margin-right: 20px;\\n    margin-left:-40px;\\n    cursor: pointer;\\n    font-size: 18px;\\n    -webkit-user-select: none;\\n    user-select: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    position: absolute;\\n    opacity: 0;\\n    cursor: pointer;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 15;\\n    left: 5;\\n    height: 25px;\\n    width: 25px;\\n    background-color: #eee;\\n}\\n\\n\\n\\n\\n.container[_ngcontent-%COMP%]:hover   input[_ngcontent-%COMP%]    ~ .checkmark[_ngcontent-%COMP%] {\\n    background-color: #ccc;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%] {\\n    background-color: #2196F3;\\n}\\n\\n\\n\\n.checkmark[_ngcontent-%COMP%]:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    display: none;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    ~ .checkmark[_ngcontent-%COMP%]:after {\\n    display: block;\\n}\\n\\n\\n\\n.container[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]:after {\\n    left: 9px;\\n    top: 5px;\\n    width: 5px;\\n    height: 10px;\\n    border: solid white;\\n    border-width: 0 3px 3px 0;\\n    transform: rotate(45deg);\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n    margin-left: 47%;\\n    margin-top: 4%;\\n}\\n\\n.content[_ngcontent-%COMP%] {\\n    margin-left: 3%;\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n    margin-left: 220px;\\n    margin-top: 10%;\\n}\\n\\n.form1[_ngcontent-%COMP%] {\\n    width: 1500px;\\n}\\n\\n.form2[_ngcontent-%COMP%] {\\n    width: 2000px;\\n}\\n\\n.uploadImages[_ngcontent-%COMP%] {\\n    margin-right: 160px;\\n}\\n\\n.mat-card[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer), .mat-card-content[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:last-child:not(.mat-card-footer) {\\n    margin-bottom: 0;\\n    margin: 6px;\\n}\\n\\n.btn-submit[_ngcontent-%COMP%] {\\n    margin-left: 20px;\\n}\\n\\n.btn-cancel[_ngcontent-%COMP%] {\\n    margin-left: 40px;\\n}\\n\\n.memo-form[_ngcontent-%COMP%]{\\n    width:900px !important;\\n    margin-left: 10px;\\n}\\ntable[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]  {\\n    border: 0px solid white;\\n    border-collapse: collapse;\\n    padding: 0px;\\n    margin: 0;\\n    border-spacing: 0px;\\n    \\n  }\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd) {\\n    background-color: white;\\n  }\\n  table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n    background-color: white;\\n  }\\n.mat-form-field-infix[_ngcontent-%COMP%] {\\n    padding: 0em 0 !important;\\n    border-top: 0em solid transparent !important;\\n}\\n\\n\\n  .mat-chip[_ngcontent-%COMP%]{\\n    background-color: white !important;\\n    border: 1px solid #B7B8BB;\\n    border-radius: 16px;\\n  }\\n  .mat-radio-button[_ngcontent-%COMP%]    ~ .mat-radio-button[_ngcontent-%COMP%] {\\n    margin-left: 16px;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1lbW8vbWVtby9tZW1vLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCO0FBQ2xCO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixlQUFlO0lBQ2YseUJBQXlCO0lBR3pCLGlCQUFpQjtBQUNyQjs7QUFFQSx3Q0FBd0M7QUFDeEM7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLGVBQWU7QUFDbkI7O0FBRUEsNkJBQTZCO0FBQzdCO0lBQ0ksa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxPQUFPO0lBQ1AsWUFBWTtJQUNaLFdBQVc7SUFDWCxzQkFBc0I7QUFDMUI7OztBQUdBLCtDQUErQztBQUMvQztJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQSx3REFBd0Q7QUFDeEQ7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUEsNkRBQTZEO0FBQzdEO0lBQ0ksV0FBVztJQUNYLGtCQUFrQjtJQUNsQixhQUFhO0FBQ2pCOztBQUVBLG9DQUFvQztBQUNwQztJQUNJLGNBQWM7QUFDbEI7O0FBRUEsa0NBQWtDO0FBQ2xDO0lBQ0ksU0FBUztJQUNULFFBQVE7SUFDUixVQUFVO0lBQ1YsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFHekIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSxnQkFBZ0I7SUFDaEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osU0FBUztJQUNULG1CQUFtQjs7RUFFckI7RUFDQTtJQUNFLHVCQUF1QjtFQUN6QjtFQUNBO0lBQ0UsdUJBQXVCO0VBQ3pCO0FBQ0Y7SUFDSSx5QkFBeUI7SUFDekIsNENBQTRDO0FBQ2hEOzs7RUFHRTtJQUNFLGtDQUFrQztJQUNsQyx5QkFBeUI7SUFDekIsbUJBQW1CO0VBQ3JCO0VBQ0E7SUFDRSxpQkFBaUI7RUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBUaGUgY29udGFpbmVyICovXHJcbi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDFweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDotNDBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbn1cclxuXHJcbi8qIEhpZGUgdGhlIGJyb3dzZXIncyBkZWZhdWx0IGNoZWNrYm94ICovXHJcbi5jb250YWluZXIgaW5wdXQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLyogQ3JlYXRlIGEgY3VzdG9tIGNoZWNrYm94ICovXHJcbi5jaGVja21hcmsge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAxNTtcclxuICAgIGxlZnQ6IDU7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbn1cclxuXHJcblxyXG4vKiBPbiBtb3VzZS1vdmVyLCBhZGQgYSBncmV5IGJhY2tncm91bmQgY29sb3IgKi9cclxuLmNvbnRhaW5lcjpob3ZlciBpbnB1dCB+IC5jaGVja21hcmsge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxufVxyXG5cclxuLyogV2hlbiB0aGUgY2hlY2tib3ggaXMgY2hlY2tlZCwgYWRkIGEgYmx1ZSBiYWNrZ3JvdW5kICovXHJcbi5jb250YWluZXIgaW5wdXQ6Y2hlY2tlZCB+IC5jaGVja21hcmsge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMztcclxufVxyXG5cclxuLyogQ3JlYXRlIHRoZSBjaGVja21hcmsvaW5kaWNhdG9yIChoaWRkZW4gd2hlbiBub3QgY2hlY2tlZCkgKi9cclxuLmNoZWNrbWFyazphZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLyogU2hvdyB0aGUgY2hlY2ttYXJrIHdoZW4gY2hlY2tlZCAqL1xyXG4uY29udGFpbmVyIGlucHV0OmNoZWNrZWQgfiAuY2hlY2ttYXJrOmFmdGVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKiBTdHlsZSB0aGUgY2hlY2ttYXJrL2luZGljYXRvciAqL1xyXG4uY29udGFpbmVyIC5jaGVja21hcms6YWZ0ZXIge1xyXG4gICAgbGVmdDogOXB4O1xyXG4gICAgdG9wOiA1cHg7XHJcbiAgICB3aWR0aDogNXB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCB3aGl0ZTtcclxuICAgIGJvcmRlci13aWR0aDogMCAzcHggM3B4IDA7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDclO1xyXG4gICAgbWFyZ2luLXRvcDogNCU7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzJTtcclxufVxyXG5cclxuLnRleHQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIyMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTAlO1xyXG59XHJcblxyXG4uZm9ybTEge1xyXG4gICAgd2lkdGg6IDE1MDBweDtcclxufVxyXG5cclxuLmZvcm0yIHtcclxuICAgIHdpZHRoOiAyMDAwcHg7XHJcbn1cclxuXHJcbi51cGxvYWRJbWFnZXMge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxNjBweDtcclxufVxyXG5cclxuLm1hdC1jYXJkPjpsYXN0LWNoaWxkOm5vdCgubWF0LWNhcmQtZm9vdGVyKSxcclxuLm1hdC1jYXJkLWNvbnRlbnQ+Omxhc3QtY2hpbGQ6bm90KC5tYXQtY2FyZC1mb290ZXIpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBtYXJnaW46IDZweDtcclxufVxyXG5cclxuLmJ0bi1zdWJtaXQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbn1cclxuXHJcbi5idG4tY2FuY2VsIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xyXG59XHJcblxyXG4ubWVtby1mb3Jte1xyXG4gICAgd2lkdGg6OTAwcHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbnRhYmxlLCB0aCAsIHRkICB7XHJcbiAgICBib3JkZXI6IDBweCBzb2xpZCB3aGl0ZTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBib3JkZXItc3BhY2luZzogMHB4O1xyXG4gICAgXHJcbiAgfVxyXG4gIHRhYmxlIHRyOm50aC1jaGlsZChvZGQpIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICB0YWJsZSB0cjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgfVxyXG4ubWF0LWZvcm0tZmllbGQtaW5maXgge1xyXG4gICAgcGFkZGluZzogMGVtIDAgIWltcG9ydGFudDtcclxuICAgIGJvcmRlci10b3A6IDBlbSBzb2xpZCB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuICAubWF0LWNoaXB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI0I3QjhCQjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XHJcbiAgfVxyXG4gIC5tYXQtcmFkaW8tYnV0dG9uIH4gLm1hdC1yYWRpby1idXR0b24ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}\nclass Memo {\n  subject;\n  watermark_txt;\n  manual_reference;\n  type;\n  sender;\n  priority;\n  confidential;\n  category;\n  sub_category;\n  content;\n  to_emp;\n  bto_emp;\n  to_dept;\n  approver;\n  recommender;\n  cc;\n  parallel_delivery;\n}","map":{"version":3,"names":["FormControl","Validators","fromEvent","COMMA","ENTER","finalize","switchMap","tap","distinctUntilChanged","debounceTime","MatAutocompleteTrigger","map","takeUntil","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","des_r40","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵelementContainerStart","ɵɵtemplate","MemoComponent_ng_container_18_mat_option_1_Template","ɵɵelementContainerEnd","ctx_r3","senderList","ɵɵlistener","MemoComponent_tr_19_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","restoredCtx","ɵɵrestoreView","_r48","employeedept_r46","$implicit","ctx_r47","ɵɵnextContext","ɵɵresetView","removeEmployeeDept","thisEmployeedept_r49","MemoComponent_tr_19_mat_chip_row_8_Template","ɵɵelement","MemoComponent_tr_19_Template_mat_autocomplete_optionSelected_11_listener","$event","_r51","ctx_r50","employeeDeptSelected","MemoComponent_tr_19_Template_mat_autocomplete_opened_11_listener","ctx_r52","autocompleteDeptScroll","MemoComponent_tr_19_mat_option_13_Template","ctx_r4","chipSelectedEmployeeDept","employeeDeptControl","_r44","_r41","separatorKeysCodes","departmentList","MemoComponent_tr_20_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r60","employeeto_r58","ctx_r59","removeEmployeeTo","full_name","thisEmployee_r61","MemoComponent_tr_20_mat_chip_row_8_Template","MemoComponent_tr_20_Template_mat_autocomplete_optionSelected_11_listener","_r63","ctx_r62","employeeToSelected","MemoComponent_tr_20_Template_mat_autocomplete_opened_11_listener","ctx_r64","autocompleteToScroll","MemoComponent_tr_20_mat_option_13_Template","ctx_r5","chipSelectedEmployeeTo","to_emp","_r56","_r53","allEmployeeList","MemoComponent_tr_21_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r72","employeebto_r70","ctx_r71","removeEmployeeBTo","thisEmployee_r73","MemoComponent_tr_21_mat_chip_row_8_Template","MemoComponent_tr_21_Template_mat_autocomplete_optionSelected_11_listener","_r75","ctx_r74","employeeBToSelected","MemoComponent_tr_21_Template_mat_autocomplete_opened_11_listener","ctx_r76","autocompleteBToScroll","MemoComponent_tr_21_mat_option_13_Template","ctx_r6","chipSelectedEmployeeBTo","bto_emp","_r68","_r65","MemoComponent_tr_22_mat_chip_row_8_Template_mat_chip_row_removed_0_listener","_r84","employeecc_r82","ctx_r83","removeEmployeeCC","thisEmployeeCC_r85","MemoComponent_tr_22_mat_chip_row_8_Template","MemoComponent_tr_22_Template_mat_autocomplete_optionSelected_11_listener","_r87","ctx_r86","employeeccSelected","MemoComponent_tr_22_Template_mat_autocomplete_opened_11_listener","ctx_r88","autocompleteCCScroll","MemoComponent_tr_22_mat_option_13_Template","ctx_r7","chipSelectedEmployeeCC","employeeccControl","_r80","_r77","MemoComponent_mat_chip_row_30_Template_mat_chip_row_removed_0_listener","_r91","employeeapprover_r89","ctx_r90","removeEmployeeApprover","thisEmployeeCC_r92","MemoComponent_mat_chip_row_44_Template_mat_chip_row_removed_0_listener","_r95","employeerecommender_r93","ctx_r94","removeEmployeeApprover1","thisEmployeeCC_r96","MemoComponent_ng_container_69_mat_option_1_Template_mat_option_onSelectionChange_0_listener","_r100","ctx_r99","OnCategoryChange","cat_r98","MemoComponent_ng_container_69_mat_option_1_Template","ctx_r23","categoryList","sub_r102","MemoComponent_ng_container_77_mat_option_1_Template","ctx_r27","sub_categoryList","des_r104","MemoComponent_ng_container_85_mat_option_1_Template","ctx_r31","priorityList","MemoComponent_span_106_Template_span_click_0_listener","_r108","selected_r105","ctx_r107","imagePreview","MemoComponent_span_106_Template_mat_icon_click_3_listener","index_r106","index","ctx_r109","attachmentDelete","file_name","MemoComponent_span_107_Template_mat_icon_click_3_listener","_r113","upload_r110","i_r111","ctx_r112","deleteUpload","MemoComponent_td_140_Template_button_click_1_listener","_r115","ctx_r114","saveDraft","ɵɵpropertyInterpolate","ctx_r38","jpgUrls","ɵɵsanitizeUrl","MemoComponent","formBuilder","dataService","sharedService","toastr","notification","router","memoService","sanitizer","SpinnerService","imageUrl","apiURL","memoAddForm","config","airMode","tabDisable","popover","table","link","air","height","toolbar","codeviewFilter","codeviewFilterRegex","codeviewIframeFilter","editorDisabled","sanitizedHtml","bypassSecurityTrustHtml","get","value","isLoading","has_next","has_previous","currentpage","chipSelectedEmployeeToid","chipSelectedEmployeeBToid","RELOAD_TOP_SCROLL_POSITION","categoryInput","subcategoryInput","employeeToInput","employeeBToInput","matToAutocomplete","matBToAutocomplete","employeeccInput","matAutocompleteCC","employeeApproverInput","employeeApproverInput1","matAutocompleteApp","matAutocompleteApp1","employeeDeptInput","matAutocompleteDept","autocompleteTrigger","matAutocomplete","InputVar","categoryID","draftSaveId","uploadList","documentList","category","sub_category","chipSelectedEmployeeCCid","chipSelectedEmployeeDeptid","allEmployeeApprover","chipSelectedEmployeeApprover","chipSelectedEmployeeApproverid","chipSelectedEmployeeRecommender","chipSelectedEmployeeRecommenderid","employeeApproverControl","employeeRecommenderControl","Confidential","Parallel_Delivery","SubmitCalled","isButtonVisible","rdoIOMnfa","employeeList","pdfUrls","images","intervalid","constructor","setInterval","ngOnDestroy","clearInterval","ngOnInit","group","subject","required","sender","priority","manual_reference","watermarktext","to_dept","approver","recommender","cc","html","controls","setValue","id","patchValue","Memofrom","MyModuleName","getForwardMessage","valueChanges","pipe","get_empTodeptMapping1","subscribe","results","datas","findIndex","fromdept","code","splice","nativeElement","get_priority","getCategory_Dept","getSubCategory1","get_EmployeeList","datapagination","length","getDepartmentPage","todeptlist","todept","enableEditor","disableEditor","onBlur","onDelete","file","summernoteInit","event","setTimeout","panel","x","scrollTop","panelClosingActions","scrollHeight","elementHeight","clientHeight","atBottom","concat","autocompleteAppScroll","filter","data","forwardMessage","displayTo","empto","undefined","e","source","OnSenderChange","focusCategory","error","timeOut","focussubCategory","displayCategory","categorydis","displaysubCategory","subcategory","employee","indexOf","selectEmployeeToByName","option","employeeName","foundEmployeeCC1","employeecc","foundEmployeeCC","push","selectEmployeeBToByName","foundEmployeebto","employeebto","foundEmployeebto1","selectEmployeeCCByName","employeeccName","employeeApproverSelected","selectEmployeeApproverByName","employeeApproverSelected1","selectEmployeeApproverByName1","foundEmployeeApprover1","foundEmployeeApprover","dept","selectEmployeeDeptByName","foundEmployeeDept1","employeedept","foundEmployeeDept","createMemoInput","orderno","ordernos","finalappArray","forEach","eachitem","apporder","finalrecArray","recommorder","memoclass","Memo","watermark_txt","type","confidential","content","replace","parallel_delivery","Submit","hide","i","loginEmpId","answer","window","confirm","show","createNewMemo","res","fetchData","next","showSuccess","navigate","queryParams","mid","from","MemoView","skipLocationChange","reDraftSave","redraftCreate","sendMemo","attachment","getToken","localStorage","getItem","tokenValue","JSON","parse","token","String","filename","fileid","fileextn","split","anchor","document","createElement","href","target","click","s","fileChange","imagesList","files","item","it","io","department","getCategory","saveAsDraft","description","showWarning","showError","getFetch","result","document_arr","memoclass1","draftCreate","order","getSenderList","getSender","displayFnSender","senderValue","getPriority","getPriorityList","displayFnPriority","ɵɵdirectiveInject","i1","FormBuilder","i2","DataService","i3","SharedService","i4","ToastrService","i5","NotificationService","i6","Router","i7","MemoService","i8","DomSanitizer","i9","NgxSpinnerService","selectors","viewQuery","MemoComponent_Query","rf","ctx","MemoComponent_Template_form_ngSubmit_2_listener","MemoComponent_Template_mat_form_field_click_12_listener","MemoComponent_mat_option_17_Template","MemoComponent_ng_container_18_Template","MemoComponent_tr_19_Template","MemoComponent_tr_20_Template","MemoComponent_tr_21_Template","MemoComponent_tr_22_Template","MemoComponent_td_24_Template","MemoComponent_td_25_Template","MemoComponent_mat_chip_row_30_Template","MemoComponent_Template_mat_autocomplete_optionSelected_33_listener","MemoComponent_Template_mat_autocomplete_opened_33_listener","MemoComponent_mat_option_35_Template","MemoComponent_mat_chip_row_44_Template","MemoComponent_Template_mat_autocomplete_optionSelected_47_listener","MemoComponent_Template_mat_autocomplete_opened_47_listener","MemoComponent_mat_option_49_Template","MemoComponent_Template_input_focus_64_listener","MemoComponent_mat_option_68_Template","MemoComponent_ng_container_69_Template","MemoComponent_Template_input_focus_72_listener","MemoComponent_mat_option_76_Template","MemoComponent_ng_container_77_Template","MemoComponent_Template_mat_form_field_click_79_listener","MemoComponent_mat_option_84_Template","MemoComponent_ng_container_85_Template","MemoComponent_Template_input_change_88_listener","MemoComponent_Template_input_change_95_listener","MemoComponent_span_106_Template","MemoComponent_span_107_Template","MemoComponent_Template_button_click_118_listener","MemoComponent_Template_button_click_120_listener","MemoComponent_Template_div_blur_123_listener","MemoComponent_Template_div_mediaDelete_123_listener","MemoComponent_Template_div_summernoteInit_123_listener","MemoComponent_Template_input_change_130_listener","MemoComponent_td_138_Template","MemoComponent_td_139_Template","MemoComponent_td_140_Template","MemoComponent_div_144_Template","_r1","_r13","_r10","_r18","_r15","_r21","_r25","_r29"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memo\\memo.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\ememo\\memo\\memo.component.html"],"sourcesContent":["import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { DataService } from '../../service/data.service'\r\nimport { from, Observable, fromEvent } from 'rxjs';\r\nimport { Router } from '@angular/router'\r\nimport { SharedService } from '../../service/shared.service'\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { finalize, switchMap, tap, distinctUntilChanged, debounceTime } from 'rxjs/operators';\r\nimport { MemoService, Department, Category, subCategory } from 'src/app/service/memo.service';\r\nimport { MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { map, startWith, takeUntil } from 'rxjs/operators';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\nimport { Subscription, timer } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\nexport interface SenderValue {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PriorityValue {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface iEmployeeList {\r\n  full_name: string;\r\n  id: number;\r\n}\r\n\r\nexport interface iDeptList {\r\n  name: string;\r\n  id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-memo',\r\n  templateUrl: './memo.component.html',\r\n  styleUrls: ['./memo.component.css']\r\n})\r\n\r\nexport class MemoComponent implements OnInit {\r\n  // subscription: Subscription;\r\n  imageUrl = environment.apiURL\r\n  memoAddForm: FormGroup;\r\n\r\n  config: any = {\r\n    airMode: false,\r\n    tabDisable: true,\r\n    popover: {\r\n      table: [\r\n        ['add', ['addRowDown', 'addRowUp', 'addColLeft', 'addColRight']],\r\n        ['delete', ['deleteRow', 'deleteCol', 'deleteTable']],\r\n      ],\r\n      link: [['link', ['linkDialogShow', 'unlink']]],\r\n      air: [\r\n        [\r\n          'font',\r\n          [\r\n            'bold',\r\n            'italic',\r\n            'underline',\r\n            'strikethrough',\r\n            'superscript',\r\n            'subscript',\r\n            'clear',\r\n          ],\r\n        ],\r\n      ],\r\n    },\r\n    height: '200px',\r\n    // uploadImagePath: '/api/upload',\r\n    toolbar: [\r\n      ['misc', ['codeview', 'undo', 'redo', 'codeBlock']],\r\n      [\r\n        'font',\r\n        [\r\n          'bold',\r\n          'italic',\r\n          'underline',\r\n          'strikethrough',\r\n          'superscript',\r\n          'subscript',\r\n          'clear',\r\n        ],\r\n      ],\r\n      ['fontsize', ['fontname', 'fontsize', 'color']],\r\n      ['para', ['style0', 'ul', 'ol', 'paragraph', 'height']],\r\n      ['insert', ['table', 'picture', 'link', 'hr']],\r\n    ],\r\n    codeviewFilter: true,\r\n    codeviewFilterRegex: /<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml|.*onmouseover)[^>]*?>/gi,\r\n    codeviewIframeFilter: true,\r\n  };\r\n\r\n  editorDisabled = false;\r\n\r\n  get sanitizedHtml() {\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.memoAddForm.get('html').value);\r\n  }\r\n\r\n  isLoading = false;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  has_next = true;\r\n  has_previous = true;\r\n  currentpage: number = 1;\r\n  public allEmployeeList: iEmployeeList[];\r\n  departmentList: iDeptList[];\r\n  public chipSelectedEmployeeTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeToid = [];\r\n  public to_emp = new FormControl();\r\n  public chipSelectedEmployeeBTo: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeBToid = [];\r\n  public bto_emp = new FormControl();\r\n  private readonly RELOAD_TOP_SCROLL_POSITION = 50;\r\n  @ViewChild('categoryInput') categoryInput: any;\r\n  @ViewChild('subcategoryInput') subcategoryInput: any;\r\n  @ViewChild('employeeToInput') employeeToInput: any;\r\n  @ViewChild('employeeBToInput') employeeBToInput: any;\r\n  @ViewChild('autoto') matToAutocomplete: MatAutocomplete;\r\n  @ViewChild('autobto') matBToAutocomplete: MatAutocomplete;\r\n  @ViewChild('employeeccInput') employeeccInput: any;\r\n  @ViewChild('autocc') matAutocompleteCC: MatAutocomplete;\r\n  @ViewChild('employeeApproverInput') employeeApproverInput: any;\r\n  @ViewChild('employeeApproverInput1') employeeApproverInput1: any;\r\n  @ViewChild('autoapprover') matAutocompleteApp: MatAutocomplete;\r\n  @ViewChild('autoapprover1') matAutocompleteApp1: MatAutocomplete;\r\n  @ViewChild('employeeDeptInput') employeeDeptInput: any;\r\n  @ViewChild('autodept') matAutocompleteDept: MatAutocomplete;\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('senderValue') matAutocomplete: MatAutocomplete;\r\n\r\n  @ViewChild('takeInput', { static: false })\r\n  InputVar: ElementRef;\r\n  categoryID: any;\r\n  draftSaveId: any;\r\n  uploadList = [];\r\n  documentList: any;\r\n  category = new FormControl();\r\n  sub_category = new FormControl();\r\n  public chipSelectedEmployeeCC: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeCCid = [];\r\n  public employeeccControl = new FormControl();\r\n  public chipSelectedEmployeeDept: iDeptList[] = [];\r\n  public chipSelectedEmployeeDeptid = [];\r\n  public employeeDeptControl = new FormControl();\r\n  // public chipSelectedDeptid = [];\r\n  public allEmployeeApprover: iEmployeeList[];\r\n  public chipSelectedEmployeeApprover: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeApproverid = [];\r\n  public chipSelectedEmployeeRecommender: iEmployeeList[] = [];\r\n  public chipSelectedEmployeeRecommenderid = [];\r\n  public employeeApproverControl = new FormControl();\r\n  public employeeRecommenderControl = new FormControl();\r\n  public Confidential: boolean = false;\r\n  public Parallel_Delivery: boolean = false;\r\n  SubmitCalled = false;\r\n  isButtonVisible = true;\r\n  rdoIOMnfa: any;\r\n  employeeList = [];\r\n  senderList: Array<any>;\r\n  pdfUrls: string;\r\n  jpgUrls: string;\r\n  priorityList: Array<any>;\r\n  categoryList: Array<Category>;\r\n  sub_categoryList: Array<subCategory>;\r\n  images: string[] = [];\r\n  intervalid: any;\r\n  constructor(private formBuilder: FormBuilder, private dataService: DataService,\r\n    public sharedService: SharedService, private toastr: ToastrService, private notification: NotificationService,\r\n    private router: Router, private memoService: MemoService, private sanitizer: DomSanitizer,\r\n    private SpinnerService: NgxSpinnerService\r\n    ) {\r\n    this.intervalid = setInterval(() => { this.saveDraft() }, 60 * 1000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalid) {\r\n      clearInterval(this.intervalid);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // this.subscription = timer(0, 10000).pipe(\r\n    //   switchMap(() => this.myservice.checkdata())\r\n    // ).subscribe(result => this.statustext = result);\r\n\r\n    this.memoAddForm = this.formBuilder.group({\r\n      subject: ['', Validators.required],\r\n      sender: ['', Validators.required],\r\n      priority: [''],\r\n      manual_reference: [''],\r\n      watermarktext: [''],\r\n      to_emp: [''],\r\n      bto_emp: [''],\r\n      to_dept: [''],\r\n      approver: ['', Validators.required],\r\n      recommender: ['', Validators.required],\r\n      cc: ['', Validators.required],\r\n      category: [''],\r\n      sub_category: [''],\r\n      images: ['', Validators.required],\r\n      html: ['', Validators.required],\r\n    })\r\n    this.memoAddForm.controls['priority'].setValue({id:2,name:\"Medium\"});\r\n    this.memoAddForm.patchValue({ watermarktext: 'NAC' });\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      this.sharedService.MyModuleName = \"eMemo - Inter Office Memo\";\r\n      this.rdoIOMnfa = 'iom';\r\n    } else {\r\n      this.sharedService.MyModuleName = \"eMemo - Note for Approval\";\r\n      this.rdoIOMnfa = 'nfa';\r\n    }\r\n    // this.getSender();\r\n    // this.getPriority();\r\n    this.getForwardMessage();\r\n    this.memoAddForm.get('sender').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_empTodeptMapping1('memo')\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderList = datas;\r\n        const index = this.senderList.findIndex(fromdept => fromdept.code === \"DGRP11\"); \r\n        // console.log(\"index1\",index);\r\n        if (index !== -1)\r\n          {\r\n            this.senderList.splice(index, 1);\r\n          }\r\n         \r\n        this.categoryInput.nativeElement.value = '';\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n    this.memoAddForm.get('priority').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.get_priority()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n    this.memoAddForm.get('category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getCategory_Dept(value, this.memoAddForm.value.sender.id)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.categoryList = datas;\r\n        this.subcategoryInput.nativeElement.value = '';\r\n      })\r\n\r\n    this.memoAddForm.get('sub_category').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n        }),\r\n        switchMap(value => this.memoService.getSubCategory1(value, this.categoryID)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false;\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.sub_categoryList = datas;\r\n      })\r\n\r\n\r\n    if (this.to_emp !== null) {\r\n      this.to_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.bto_emp !== null) {\r\n      this.bto_emp.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeccControl !== null) {\r\n      this.employeeccControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    if (this.employeeApproverControl !== null) {\r\n      this.employeeApproverControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n    if (this.employeeDeptControl !== null) {\r\n      this.employeeDeptControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.getDepartmentPage(value, 1, '')\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.departmentList = datas;\r\n          let todeptlist =datas;\r\n          const index = todeptlist.findIndex(todept => todept.code === \"DGRP11\"); \r\n          // console.log(\"index2\",index);\r\n          if (index !== -1)\r\n          {\r\n            todeptlist.splice(index, 1); \r\n          }\r\n          \r\n          // console.log(\"this.departmentList\",this.departmentList);\r\n          if (this.departmentList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n    if (this.employeeRecommenderControl !== null) {\r\n      this.employeeRecommenderControl.valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n          }),\r\n          switchMap(value => this.memoService.get_EmployeeList(value, 1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false;\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          let datapagination = results[\"pagination\"];\r\n          this.allEmployeeList = datas;\r\n          if (this.allEmployeeList.length >= 0) {\r\n            this.has_next = datapagination.has_next;\r\n            this.has_previous = datapagination.has_previous;\r\n            this.currentpage = datapagination.index;\r\n          }\r\n        })\r\n    }\r\n\r\n  } //end of oninit\r\n\r\n  enableEditor() {\r\n    this.editorDisabled = false;\r\n  }\r\n\r\n  disableEditor() {\r\n    this.editorDisabled = true;\r\n  }\r\n\r\n  onBlur() {\r\n    // console.log('Blur');\r\n  }\r\n\r\n  onDelete(file) {\r\n    // console.log('Delete file', file.url);\r\n  }\r\n\r\n  summernoteInit(event) {\r\n    // console.log(event);\r\n  }\r\n\r\n  autocompleteToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeTo\r\n\r\n  autocompleteBToScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matBToAutocomplete &&\r\n        this.autocompleteTrigger &&\r\n        this.matBToAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matBToAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matBToAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matBToAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matBToAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matBToAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeBToInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeBTo\r\n\r\n  autocompleteCCScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteCC &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteCC.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteCC.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteCC.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteCC.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteCC.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteCC.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeccInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof autocomplete CC\r\n\r\n  autocompleteAppScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteApp &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteApp.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteApp.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteApp.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteApp.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteApp.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteApp.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.get_EmployeeList(this.employeeApproverInput.nativeElement.value, this.currentpage + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.allEmployeeList = this.allEmployeeList.concat(datas);\r\n                    if (this.allEmployeeList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto completeApproval\r\n\r\n  autocompleteDeptScroll() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matAutocompleteDept &&\r\n        this.autocompleteTrigger &&\r\n        this.matAutocompleteDept.panel\r\n      ) {\r\n        fromEvent(this.matAutocompleteDept.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matAutocompleteDept.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matAutocompleteDept.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matAutocompleteDept.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matAutocompleteDept.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_next === true) {\r\n                this.memoService.getDepartmentPage(this.employeeDeptInput.nativeElement.value, this.currentpage + 1, '')\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.departmentList = this.departmentList.concat(datas);\r\n                    if (this.departmentList.length >= 0) {\r\n                      this.has_next = datapagination.has_next;\r\n                      this.has_previous = datapagination.has_previous;\r\n                      this.currentpage = datapagination.index;\r\n                    }\r\n                  })\r\n              }//if (this.has_next === true)\r\n            }//endof atBottom\r\n          });\r\n      }\r\n    });\r\n  } //endof auto matAutocompleteDept\r\n\r\n  filter(data) {\r\n    // console.log(data.value);\r\n  }\r\n\r\n\r\n  getForwardMessage() {\r\n    this.sharedService.forwardMessage.value;\r\n  }\r\n\r\n  public displayTo(empto?: iEmployeeList): string | undefined {\r\n    return empto ? empto.full_name : undefined;\r\n  }\r\n\r\n  get empto() {\r\n    return this.memoAddForm.get('to_emp');\r\n  }\r\n\r\n  OnCategoryChange(e) {\r\n    this.categoryID = e.source.value.id;\r\n  }\r\n\r\n  OnSenderChange(e) {\r\n    this.categoryInput.nativeElement.value = '';\r\n    this.subcategoryInput.nativeElement.value = '';\r\n  }\r\n\r\n  focusCategory(e) {\r\n    if (this.memoAddForm.value.sender.id === undefined) {\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      return false;\r\n    }\r\n\r\n    if (this.categoryInput.nativeElement.value === '') {\r\n      this.memoService.getCategory_Dept('', this.memoAddForm.value.sender.id)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.categoryList = datas;\r\n          // this.subcategoryInput.nativeElement.value = '';\r\n        });\r\n    }\r\n    // }\r\n  }\r\n\r\n  focussubCategory(e) {\r\n    if (this.subcategoryInput.nativeElement.value === '' && this.categoryID !== undefined) {\r\n      this.memoService.getSubCategory1(' ', this.categoryID)\r\n        .subscribe((results: any[]) => {\r\n          let datas = results[\"data\"];\r\n          this.sub_categoryList = datas;\r\n          this.subcategoryInput.nativeElement.value = '';\r\n        });\r\n    }\r\n  }\r\n\r\n  public displayCategory(categorydis?: Category): string | undefined {\r\n    return categorydis ? categorydis.name : undefined;\r\n  }\r\n  get categorydis() {\r\n    return this.memoAddForm.get('category');\r\n  }\r\n\r\n  public displaysubCategory(subcategory?: subCategory): string | undefined {\r\n    return subcategory ? subcategory.name : undefined;\r\n  }\r\n  get subcategory() {\r\n    return this.memoAddForm.get('sub_category');\r\n  }\r\n\r\n  public removeEmployeeTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeTo.splice(index, 1);\r\n      this.chipSelectedEmployeeToid.splice(index, 1);\r\n      this.employeeToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeToByName(event.option.value.full_name);\r\n    this.employeeToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeToByName(employeeName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeTo.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeName);\r\n    if (foundEmployeeCC.length) {\r\n      this.chipSelectedEmployeeTo.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeToid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeBTo(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeBTo.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeBTo.splice(index, 1);\r\n      this.chipSelectedEmployeeBToid.splice(index, 1);\r\n      this.employeeBToInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeBToSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeBToByName(event.option.value.full_name);\r\n    this.employeeBToInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeBToByName(employeeName) {\r\n    let foundEmployeebto = this.chipSelectedEmployeeBTo.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto.length) {\r\n      return;\r\n    }\r\n    let foundEmployeebto1 = this.allEmployeeList.filter(employeebto => employeebto.full_name == employeeName);\r\n    if (foundEmployeebto1.length) {\r\n      this.chipSelectedEmployeeBTo.push(foundEmployeebto1[0]);\r\n      this.chipSelectedEmployeeBToid.push(foundEmployeebto1[0].id)\r\n    }\r\n  }\r\n\r\n\r\n  public removeEmployeeCC(employeecc: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeCC.indexOf(employeecc);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeCC.splice(index, 1);\r\n      this.chipSelectedEmployeeCCid.splice(index, 1);\r\n      this.employeeccInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeccSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeCCByName(event.option.value.full_name);\r\n    this.employeeccInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeCCByName(employeeccName) {\r\n    let foundEmployeeCC1 = this.chipSelectedEmployeeCC.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeCC = this.allEmployeeList.filter(employeecc => employeecc.full_name == employeeccName);\r\n    if (foundEmployeeCC.length) {\r\n      // We found the employeecc name in the allEmployeeList list\r\n      this.chipSelectedEmployeeCC.push(foundEmployeeCC[0]);\r\n      this.chipSelectedEmployeeCCid.push(foundEmployeeCC[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeApprover(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeApprover.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeApprover.splice(index, 1);\r\n      this.chipSelectedEmployeeApproverid.splice(index, 1);\r\n      this.employeeApproverInput.nativeElement.value = '';\r\n    }\r\n  }\r\n  public removeEmployeeApprover1(employee: iEmployeeList): void {\r\n    const index = this.chipSelectedEmployeeRecommender.indexOf(employee);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeRecommender.splice(index, 1);\r\n      this.chipSelectedEmployeeRecommenderid.splice(index, 1);\r\n      this.employeeApproverInput1.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeApproverSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeApproverByName(event.option.value.full_name);\r\n    this.employeeApproverInput.nativeElement.value = '';\r\n  }\r\n  public employeeApproverSelected1(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeApproverByName1(event.option.value.full_name);\r\n    this.employeeApproverInput1.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeApproverByName(employee) {\r\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeApprover.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedEmployeeApprover.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedEmployeeApproverid.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n  private selectEmployeeApproverByName1(employee) {\r\n    let foundEmployeeApprover1 = this.chipSelectedEmployeeRecommender.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeApprover = this.allEmployeeList.filter(employeecc => employeecc.full_name == employee);\r\n    if (foundEmployeeApprover.length) {\r\n      this.chipSelectedEmployeeRecommender.push(foundEmployeeApprover[0]);\r\n      this.chipSelectedEmployeeRecommenderid.push(foundEmployeeApprover[0].id)\r\n    }\r\n  }\r\n\r\n  public removeEmployeeDept(dept: iDeptList): void {\r\n    const index = this.chipSelectedEmployeeDept.indexOf(dept);\r\n    if (index >= 0) {\r\n      this.chipSelectedEmployeeDept.splice(index, 1);\r\n      this.chipSelectedEmployeeDeptid.splice(index, 1);\r\n      this.employeeDeptInput.nativeElement.value = '';\r\n    }\r\n  }\r\n\r\n  public employeeDeptSelected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectEmployeeDeptByName(event.option.value.name);\r\n    this.employeeDeptInput.nativeElement.value = '';\r\n  }\r\n  private selectEmployeeDeptByName(dept) {\r\n    let foundEmployeeDept1 = this.chipSelectedEmployeeDept.filter(employeedept => employeedept.name == dept);\r\n    if (foundEmployeeDept1.length) {\r\n      return;\r\n    }\r\n    let foundEmployeeDept = this.departmentList.filter(employeedept => employeedept.name == dept);\r\n    if (foundEmployeeDept.length) {\r\n      this.chipSelectedEmployeeDept.push(foundEmployeeDept[0]);\r\n      this.chipSelectedEmployeeDeptid.push(foundEmployeeDept[0].id)\r\n    }\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n  createMemoInput() {\r\n    let orderno: number = 0;\r\n    let ordernos: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        \"id\": eachitem,\r\n        \"order\": orderno + 1\r\n      }\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder)\r\n    });\r\n    let finalrecArray = [];\r\n    this.chipSelectedEmployeeRecommenderid.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n\r\n    let memoclass = new Memo();\r\n    memoclass.to_dept = this.chipSelectedEmployeeDeptid\r\n    memoclass.approver = finalappArray\r\n    memoclass.cc = this.chipSelectedEmployeeCCid\r\n    memoclass.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass.subject = this.memoAddForm.value.subject;\r\n    memoclass.manual_reference = this.memoAddForm.value.manual_reference;\r\n    memoclass.watermark_txt = this.memoAddForm.value.watermarktext;\r\n    memoclass.type = this.rdoIOMnfa;\r\n    memoclass.sender = this.memoAddForm.value.sender.id + '_dept';\r\n    memoclass.priority = this.memoAddForm.value.priority.id;\r\n    memoclass.confidential = this.Confidential;\r\n    if (this.memoAddForm.value.category.id === undefined) {\r\n      memoclass.category = null;\r\n    } else {\r\n      memoclass.category = this.memoAddForm.value.category.id;\r\n    }\r\n    if (this.memoAddForm.value.sub_category.id === undefined) {\r\n      memoclass.sub_category = null;\r\n    } else {\r\n      memoclass.sub_category = this.memoAddForm.value.sub_category.id;\r\n    }\r\n    memoclass.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\r\n    memoclass.recommender = finalrecArray;\r\n    memoclass.parallel_delivery = this.Parallel_Delivery\r\n    // memoclass.images = this.images;\r\n    return memoclass;\r\n  }\r\n\r\n  Submit() {\r\n   \r\n    this.SubmitCalled = true\r\n\r\n    if (this.memoAddForm.value.sender.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          this.SubmitCalled = false;\r\n          return false;\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < this.chipSelectedEmployeeRecommenderid.length; i++) {\r\n        if (this.chipSelectedEmployeeRecommenderid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n         this.SubmitCalled = false;\r\n        return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\r\n        this.SpinnerService.hide();\r\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', { timeOut: 1500 });\r\n        this.SubmitCalled = false;\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (this.memoAddForm.value.priority.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Priority', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.memoAddForm.value.subject === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.memoAddForm.value.watermarktext === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    if (this.memoAddForm.value.html === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid content', { timeOut: 1500 });\r\n      this.SubmitCalled = false;\r\n     return false;\r\n    }\r\n    var answer = window.confirm(\"Save Memo?\");\r\n    if (answer) {\r\n      //some code\r\n    }\r\n    else {\r\n      this.SubmitCalled = false;\r\n      return false;\r\n    }\r\n    this.SpinnerService.show();\r\n    if (this.draftSaveId === undefined) {\r\n      this.dataService.createNewMemo(this.createMemoInput(), this.images).subscribe((res) => {\r\n        let id = res.id;\r\n        this.sharedService.fetchData.next(id);\r\n        this.draftSaveId = res.id;\r\n        this.SpinnerService.hide();\r\n        this.notification.showSuccess('New Memo created!...');\r\n        this.router.navigate(['/ememo/memoView'], { queryParams: { mid: id, from: 'memocreate', MemoView: \"YES\" }, skipLocationChange: true });\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n      return true;\r\n    }\r\n\r\n    if (this.draftSaveId !== '') {\r\n      this.dataService.reDraftSave(this.redraftCreate(), this.draftSaveId, this.images, this.documentList).subscribe((res) => {\r\n        this.SpinnerService.hide();\r\n        this.notification.showSuccess('Draft Updated and ready to create Memo!...');\r\n        this.dataService.sendMemo(this.draftSaveId).subscribe((res) => {\r\n          this.sharedService.fetchData.next(this.draftSaveId);\r\n          this.router.navigate(['/ememo/memoView'], { queryParams: { mid: this.draftSaveId, from: 'memocreate', MemoView: \"YES\" }, skipLocationChange: true });\r\n        },\r\n        error => {\r\n          this.SpinnerService.hide();\r\n        }\r\n        );\r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n    }\r\n  }  //End of createMemoForm\r\n\r\n  imagePreview(attachment) {\r\n    const getToken = localStorage.getItem(\"sessionData\");\r\n    let tokenValue = JSON.parse(getToken);\r\n    let token = tokenValue.token;\r\n    pdfUrls: String;\r\n    jpgUrls: String;\r\n\r\n    let filename = attachment.file_name;\r\n    let fileid = attachment.id;\r\n    let fileextn = filename.split('.')\r\n\r\n    if (fileextn[1] === \"png\" || fileextn[1] === \"jpeg\" || fileextn[1] === \"jpg\") {\r\n      this.jpgUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?token=\" + token;\r\n    }\r\n    else {\r\n      this.pdfUrls = this.imageUrl + \"memserv/memo/download/\" + fileid + \"?type= \" + filename + \"&token=\" + token;\r\n      let anchor = document.createElement('a');\r\n      anchor.href = this.pdfUrls;\r\n      anchor.target = '_blank';\r\n      anchor.click();\r\n    }\r\n  }\r\n\r\n  attachmentDelete(s, index) {\r\n    this.documentList.forEach((s, i) => {\r\n      if (index === i)\r\n        this.documentList.splice(index, 1)\r\n      this.images.splice(index, 1)\r\n\r\n    })\r\n  }\r\n\r\n  fileChange(event) {\r\n    let imagesList = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    this.InputVar.nativeElement.value = '';\r\n    imagesList.push(this.images);\r\n    this.uploadList = [];\r\n    imagesList.forEach((item) => {\r\n      let s = item;\r\n      s.forEach((it) => {\r\n        let io = it.name;\r\n        this.uploadList.push(io);\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteUpload(s, index) {\r\n    this.uploadList.forEach((s, i) => {\r\n      if (index === i) {\r\n        this.uploadList.splice(index, 1)\r\n        this.images.splice(index, 1);\r\n      }\r\n    })\r\n  }\r\n\r\n  department(id) {\r\n    this.dataService.getCategory(id)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.categoryList = datas;\r\n\r\n      })\r\n  }\r\n\r\n  // categorychange(id) {\r\n  //   this.dataService.getSubCategory(id)\r\n  //     .subscribe((results: any[]) => {\r\n  //       let datas = results[\"data\"];\r\n  //       this.sub_categoryList = datas;\r\n  //     }, error => {\r\n  //       return Observable.throw(error);\r\n  //     })\r\n  // }\r\n  saveDraft() {\r\n    this.SpinnerService.show();\r\n    \r\n    if (this.SubmitCalled === true) {\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    this.isButtonVisible = false;\r\n    if (this.memoAddForm.value.sender.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid From/Sender value', { timeOut: 1500 });\r\n      this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n\r\n    if (this.chipSelectedEmployeeApproverid.length === 0) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Approver/Signee should be mandatory', { timeOut: 1500 });\r\n      this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'NFA-MEMO') {\r\n      for (let i = 0; i < this.chipSelectedEmployeeApproverid.length; i++) {\r\n        if (this.chipSelectedEmployeeApproverid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Approver name can not be yours', { timeOut: 1500 });\r\n          this.isButtonVisible = true;\r\n          return false;\r\n        }\r\n      }\r\n      for (let i = 0; i < this.chipSelectedEmployeeRecommenderid.length; i++) {\r\n        if (this.chipSelectedEmployeeRecommenderid[i] === this.sharedService.loginEmpId) {\r\n          this.SpinnerService.hide();\r\n          this.toastr.error('Memo Add', 'Recommender name can not be yours', { timeOut: 1500 });\r\n          this.SubmitCalled = false;\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.Memofrom === 'IOMEMO') {\r\n      if (this.chipSelectedEmployeeToid.length === 0 && this.chipSelectedEmployeeDeptid.length === 0) {\r\n        this.SpinnerService.hide();\r\n        this.toastr.error('Memo Add', 'To employee or To Department should be mandatory', { timeOut: 1500 });\r\n        this.SubmitCalled = false;\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    if (this.memoAddForm.value.priority.id === undefined) {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Priority', { timeOut: 1500 });\r\n      this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n\r\n    if (this.memoAddForm.value.subject === '') {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid subject', { timeOut: 1500 });\r\n      this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n    if (this.memoAddForm.value.watermarktext === '') {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid Watermark text', { timeOut: 1500 });\r\n     this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n    if (this.memoAddForm.value.html === \"\") {\r\n      this.SpinnerService.hide();\r\n      this.toastr.error('Memo Add', 'Invalid content', { timeOut: 1500 });\r\n      this.isButtonVisible = true;\r\n      return false;\r\n    }\r\n    // var answer = window.confirm(\"Save Draft data?\");\r\n    // if (answer) {\r\n    //     //some code\r\n    // }\r\n    // else {\r\n    //   return false;\r\n    // }\r\n    if (this.draftSaveId === undefined) {\r\n      this.dataService.saveAsDraft(this.redraftCreate(), '', this.images).subscribe((res) => {\r\n        if (res.code === 'UNEXPECTED_ERROR' && res.description === 'Duplicate Name') {\r\n          this.SpinnerService.hide();\r\n          this.notification.showWarning('Duplicate! Code Or Name ...');\r\n         } else if (res.code === 'UNEXPECTED_ERROR' && res.description === 'Unexpected Internal Server Error') {\r\n          this.SpinnerService.hide();\r\n          this.notification.showError('INVALID_DATA!...');\r\n         \r\n        } else if (res.code === 'INVALID_DATA' && res.description === 'Invalid Data or DB Constraint') {\r\n          this.SpinnerService.hide();\r\n          this.notification.showError('INVALID_DATA Or DB !...');\r\n         \r\n        } else {\r\n          this.SpinnerService.hide();\r\n          this.notification.showSuccess('Draft Saved!...');\r\n          \r\n        }\r\n        this.draftSaveId = res.id;\r\n        this.dataService.getFetch(this.draftSaveId)\r\n          .subscribe(result => {\r\n            this.documentList = result.document_arr;\r\n            this.uploadList = [];\r\n            this.images = [];\r\n          },\r\n          error => {\r\n            this.SpinnerService.hide();\r\n          });\r\n        this.isButtonVisible = true;\r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n    } else {\r\n      // this.uploadList = [];\r\n      this.dataService.reDraftSave(this.redraftCreate(), this.draftSaveId, this.images, this.documentList).subscribe((res) => {\r\n        this.SpinnerService.hide();\r\n        this.notification.showSuccess('Draft Updated!...');\r\n        this.dataService.getFetch(this.draftSaveId)\r\n          .subscribe(result => {\r\n            this.documentList = result.document_arr;\r\n            this.uploadList = [];\r\n            this.images = [];\r\n          },\r\n          error => {\r\n            this.SpinnerService.hide();\r\n          });\r\n        this.isButtonVisible = true;\r\n        return true;\r\n      },\r\n      error => {\r\n        this.SpinnerService.hide();\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  redraftCreate() {\r\n    let orderno: number = 0;\r\n    let ordernos: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        \"id\": eachitem,\r\n        \"order\": orderno + 1\r\n      }\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder)\r\n    });\r\n    let finalrecArray = [];\r\n    this.chipSelectedEmployeeRecommenderid.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n\r\n    let data = this.memoAddForm.controls;\r\n    let memoclass1 = new Memo();\r\n    memoclass1.to_dept = this.chipSelectedEmployeeDeptid;\r\n    memoclass1.approver = finalappArray\r\n    memoclass1.cc = this.chipSelectedEmployeeCCid\r\n    memoclass1.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass1.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass1.subject = this.memoAddForm.value.subject;\r\n    memoclass1.manual_reference = this.memoAddForm.value.manual_reference;\r\n    memoclass1.watermark_txt = this.memoAddForm.value.watermarktext;\r\n    memoclass1.type = this.rdoIOMnfa\r\n    memoclass1.sender = this.memoAddForm.value.sender.id + '_dept';\r\n    memoclass1.priority = this.memoAddForm.value.priority.id;\r\n    memoclass1.confidential = this.Confidential;\r\n    if (this.memoAddForm.value.category.id === undefined) {\r\n      memoclass1.category = null;\r\n    } else {\r\n      memoclass1.category = this.memoAddForm.value.category.id;\r\n    }\r\n    if (this.memoAddForm.value.sub_category.id === undefined) {\r\n      memoclass1.sub_category = null;\r\n    } else {\r\n      memoclass1.sub_category = this.memoAddForm.value.sub_category.id;\r\n    }\r\n    memoclass1.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\r\n    memoclass1.recommender = finalrecArray;\r\n    memoclass1.parallel_delivery = this.Parallel_Delivery;\r\n    return memoclass1;\r\n  }\r\n\r\n  draftCreate() {\r\n    let orderno: number = 0;\r\n    let ordernos: number = 0;\r\n    let finalappArray = [];\r\n    this.chipSelectedEmployeeApproverid.forEach((eachitem) => {\r\n      let apporder = {\r\n        id: eachitem,\r\n        order: orderno + 1\r\n      };\r\n      orderno = orderno + 1;\r\n      finalappArray.push(apporder);\r\n    });\r\n    let finalrecArray = [];\r\n    this.chipSelectedEmployeeRecommenderid.forEach((eachitem) => {\r\n      let recommorder = {\r\n        \"id\": eachitem,\r\n        \"order\": ordernos + 1\r\n      }\r\n      ordernos = ordernos + 1;\r\n      finalrecArray.push(recommorder)\r\n    });\r\n    let memoclass = new Memo();\r\n    memoclass.to_dept = this.chipSelectedEmployeeDeptid;\r\n    memoclass.approver = finalappArray;\r\n    memoclass.cc = this.chipSelectedEmployeeCCid;\r\n    memoclass.to_emp = this.chipSelectedEmployeeToid;\r\n    memoclass.bto_emp = this.chipSelectedEmployeeBToid;\r\n    memoclass.subject = this.memoAddForm.value.subject;\r\n    memoclass.manual_reference = this.memoAddForm.value.manual_reference;\r\n    memoclass.watermark_txt = this.memoAddForm.value.watermarktext;\r\n    memoclass.type = this.rdoIOMnfa;\r\n    memoclass.sender = this.memoAddForm.value.sender.id + '_dept';\r\n    memoclass.priority = this.memoAddForm.value.priority.id;\r\n    memoclass.confidential = this.Confidential;\r\n    if (this.memoAddForm.value.category.id === undefined) {\r\n      memoclass.category = null;\r\n    } else {\r\n      memoclass.category = this.memoAddForm.value.category.id;\r\n    }\r\n    if (this.memoAddForm.value.sub_category.id === undefined) {\r\n      memoclass.sub_category = null;\r\n    } else {\r\n      memoclass.sub_category = this.memoAddForm.value.sub_category.id;\r\n    }\r\n    memoclass.content = this.memoAddForm.value.html.replace('border=\"0\"', 'border=\"1\"');\r\n    memoclass.recommender = finalrecArray;\r\n    memoclass.parallel_delivery = this.Parallel_Delivery\r\n    // memoclass.images = this.images;\r\n    return memoclass;\r\n  }\r\n\r\n  private getSenderList() {\r\n    this.memoService.get_empTodeptMapping1('memo')\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.senderList = datas;\r\n        const index = this.senderList.findIndex(fromdept => fromdept.code === \"DGRP11\"); \r\n        // console.log(\"index3\",index);\r\n        if (index !== -1)\r\n        {\r\n          this.senderList.splice(index, 1);\r\n        }\r\n        // console.log(\"this.senderList\",this.senderList);\r\n      })\r\n  }\r\n  getSender() {\r\n    this.getSenderList();\r\n  }\r\n\r\n  public displayFnSender(senderValue?: SenderValue): string | undefined {\r\n    return senderValue ? senderValue.name : undefined;\r\n  }\r\n\r\n  get senderValue() {\r\n    return this.memoAddForm.value.get('sender');\r\n  }\r\n\r\n\r\n  getPriority() {\r\n    this.memoService.get_priority()\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.priorityList = datas;\r\n      })\r\n  }\r\n  getPriorityList() {\r\n    this.getPriority();\r\n  }\r\n\r\n  public displayFnPriority(priority?: PriorityValue): string | undefined {\r\n    return priority ? priority.name : undefined;\r\n  }\r\n\r\n  get priority() {\r\n    return this.memoAddForm.value.get('priority');\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nclass Memo {\r\n  subject: string;\r\n  watermark_txt: string;\r\n  manual_reference: string;\r\n  type: any;\r\n  sender: any;\r\n  priority: any;\r\n  confidential: any;\r\n  category: number;\r\n  sub_category: number;\r\n  content: any;\r\n  to_emp: any;\r\n  bto_emp: any;\r\n  to_dept: any;\r\n  approver: any;\r\n  recommender: any;\r\n  cc: any;\r\n  parallel_delivery: any;\r\n  // images: any;\r\n}\r\n\r\n","<div>\r\n    <div class=\"content\">\r\n        <form [formGroup]=\"memoAddForm\" (ngSubmit)=\"Submit()\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>From</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <table>\r\n                            <tr>\r\n                                <td>\r\n                                    <mat-form-field style=\"width: 250px;margin-left: 10px;\" (click)=\"getSender()\">\r\n                                        <input #rmInput placeholder=\"\" matInput formControlName=\"sender\"\r\n                                            [matAutocomplete]=\"senderValue\" required>\r\n                                        <mat-autocomplete #senderValue=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayFnSender\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let des of senderList\" [value]=\"des\">\r\n                                                    {{des.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>To Department</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListDept>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeedept of chipSelectedEmployeeDept\" \r\n                                    [removable]=true (removed)=\"removeEmployeeDept(employeedept)\">\r\n                                    {{employeedept.name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeDeptInput [formControl]=\"employeeDeptControl\"\r\n                                    [matAutocomplete]=\"autodept\" [matChipInputFor]=\"chipListDept\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autodept=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeDeptSelected($event)\" (opened)=\"autocompleteDeptScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeedept of departmentList\" [value]=\"thisEmployeedept\">\r\n                                    {{thisEmployeedept.name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO' && this.chipSelectedEmployeeDept.length === 0\">\r\n                    <td>\r\n                        <mat-label>To</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListTo>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeeto of chipSelectedEmployeeTo\"\r\n                                     [removable]=true (removed)=\"removeEmployeeTo(employeeto)\">\r\n                                    {{employeeto.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeToInput [formControl]=\"to_emp\" [matAutocomplete]=\"autoto\"\r\n                                    [matChipInputFor]=\"chipListTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoto=\"matAutocomplete\" (optionSelected)=\"employeeToSelected($event)\"\r\n                                (opened)=\"autocompleteToScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                    {{thisEmployee.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>BTo</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListBTo>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeebto of chipSelectedEmployeeBTo\"\r\n                                     [removable]=true (removed)=\"removeEmployeeBTo(employeebto)\">\r\n                                    {{employeebto.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeBToInput [formControl]=\"bto_emp\" [matAutocomplete]=\"autobto\"\r\n                                    [matChipInputFor]=\"chipListBTo\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autobto=\"matAutocomplete\" (optionSelected)=\"employeeBToSelected($event)\"\r\n                                (opened)=\"autocompleteBToScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployee of allEmployeeList\" [value]=\"thisEmployee\">\r\n                                    {{thisEmployee.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                    <td>\r\n                        <mat-label>CC</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipList>\r\n                                <mat-chip-row style=\"font-size: small;\" *ngFor=\"let employeecc of chipSelectedEmployeeCC\"\r\n                                     [removable]=true (removed)=\"removeEmployeeCC(employeecc)\">\r\n                                    {{employeecc.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeccInput [formControl]=\"employeeccControl\" [matAutocomplete]=\"autocc\"\r\n                                    [matChipInputFor]=\"chipList\" [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                                    [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autocc=\"matAutocomplete\" (optionSelected)=\"employeeccSelected($event)\"\r\n                                (opened)=\"autocompleteCCScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td *ngIf=\"sharedService.Memofrom === 'IOMEMO'\">\r\n                        <mat-label>Signee</mat-label>\r\n                    </td>\r\n                    <td *ngIf=\"sharedService.Memofrom === 'NFA-MEMO'\">\r\n                        <mat-label>Approver</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListapprover>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeeapprover of chipSelectedEmployeeApprover\" \r\n                                    [removable]=true (removed)=\"removeEmployeeApprover(employeeapprover)\">\r\n                                    {{employeeapprover.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeApproverInput [formControl]=\"employeeApproverControl\"\r\n                                    [matAutocomplete]=\"autoapprover\" [matChipInputFor]=\"chipListapprover\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoapprover=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeApproverSelected($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Recommender</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <mat-chip-grid #chipListrecommender>\r\n                                <mat-chip-row style=\"font-size: small;\"\r\n                                    *ngFor=\"let employeerecommender of chipSelectedEmployeeRecommender\"\r\n                                     (removed)=\"removeEmployeeApprover1(employeerecommender)\">\r\n                                    {{employeerecommender.full_name}}\r\n                                    <mat-icon matChipRemove>cancel</mat-icon>\r\n                                </mat-chip-row>\r\n                                <input #employeeApproverInput1 [formControl]=\"employeeRecommenderControl\"\r\n                                    [matAutocomplete]=\"autoapprover1\" [matChipInputFor]=\"chipListrecommender\"\r\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=true>\r\n                            </mat-chip-grid>\r\n                            <mat-autocomplete #autoapprover1=\"matAutocomplete\"\r\n                                (optionSelected)=\"employeeApproverSelected1($event)\" (opened)=\"autocompleteAppScroll()\">\r\n                                <mat-option *ngFor=\"let thisEmployeeCC of allEmployeeList\" [value]=\"thisEmployeeCC\">\r\n                                    {{thisEmployeeCC.full_name}}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Subject</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <input matInput style=\"font-size: small;\" formControlName=\"subject\" required\r\n                                autocomplete=\"off\">\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td>\r\n                        <table class=\"table\">\r\n                            <tr>\r\n                                <td width=\"25%;margin-left:2px\">\r\n                                    <mat-form-field style=\"width:250px !important;height:55px !important\">\r\n                                        <input matInput #categoryInput style=\"font-size: small;\"\r\n                                            formControlName=\"category\" placeholder=\"Category\"\r\n                                            [matAutocomplete]=\"autocategory\" (focus)=\"focusCategory($event)\">\r\n                                        <mat-autocomplete #autocategory=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayCategory\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option (onSelectionChange)=\"OnCategoryChange($event)\"\r\n                                                    *ngFor=\"let cat of categoryList\" [value]=\"cat\">{{cat.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%\">\r\n                                    <mat-form-field\r\n                                        style=\"width:250px !important;height:55px !important;margin-left:12px\">\r\n                                        <input matInput #subcategoryInput style=\"font-size: small;\"\r\n                                            formControlName=\"sub_category\" placeholder=\"Sub Category\"\r\n                                            [matAutocomplete]=\"autosubcategory\" (focus)=\"focussubCategory($event)\">\r\n                                        <mat-autocomplete #autosubcategory=\"matAutocomplete\"\r\n                                            [displayWith]=\"displaysubCategory\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let sub of sub_categoryList\" [value]=\"sub\">\r\n                                                    {{sub.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%;\">\r\n                                    <mat-form-field style=\"width: 100px;margin-left: 10px;\" (click)=\"getPriorityList()\">\r\n                                        <input #rmInput placeholder=\"Priority\" matInput formControlName=\"priority\"\r\n                                            [matAutocomplete]=\"priorityValue\" required>\r\n                                        <mat-autocomplete #priorityValue=\"matAutocomplete\"\r\n                                            [displayWith]=\"displayFnSender\">\r\n                                            <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\r\n                                            <ng-container *ngIf=\"!isLoading\">\r\n                                                <mat-option *ngFor=\"let des of priorityList\" [value]=\"des\">\r\n                                                    {{des.name}}\r\n                                                </mat-option>\r\n                                            </ng-container>\r\n                                        </mat-autocomplete>\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td width=\"25%;margin-left:2px\">\r\n                                    <label class=\"container\"> <input type=\"checkbox\" data-md-icheck\r\n                                            [checked]=\"Confidential\"\r\n                                            (change)=\"Confidential = !Confidential\" />Confidential\r\n                                        <span class=\"checkmark\"></span>\r\n                                    </label>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                    <td></td>\r\n                    <td>\r\n                        <label class=\"container\"> <input type=\"checkbox\" data-md-icheck [checked]=\"Parallel_Delivery\"\r\n                                (change)=\"Parallel_Delivery = !Parallel_Delivery\" />Parallel Delivery\r\n                            <span class=\"checkmark\"></span>\r\n                        </label>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td> Attachment</td>\r\n                    <td>\r\n                        <table class=\"table\">\r\n                            <tr style=\"width: 80%;\">\r\n                                <td>\r\n                                    <div>\r\n                                        <span *ngFor=\"let selected of documentList;let index = index\"\r\n                                            (click)=\"imagePreview(selected)\" data-bs-toggle=\"modal\" data-bs-target=\"#my-modal\"\r\n                                            matTooltip=\"Images\" class=\"btn-link\">\r\n                                            {{selected.file_name}}\r\n                                            <button mat-icon-button type=\"button\">\r\n                                                <mat-icon style=\"color: blue;\" aria-label=\"Edit\"\r\n                                                    (click)=\"attachmentDelete  (selected.file_name,index)\">\r\n                                                    delete</mat-icon>\r\n                                            </button>\r\n                                        </span>\r\n                                        <span *ngFor=\"let upload of uploadList;index as i\" class=\"btn-link\">\r\n                                            {{upload}}\r\n                                            <button mat-icon-button type=\"button\">\r\n                                                <mat-icon style=\"color: gray;\" aria-label=\"Edit\"\r\n                                                    (click)=\"deleteUpload(upload, i)\">\r\n                                                    delete</mat-icon>\r\n                                            </button>\r\n                                        </span>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-label>Dept Reference No</mat-label>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field class=\"memo-form\" style=\"margin-bottom: -1.25em;\">\r\n                            <input matInput style=\"font-size: small;\" formControlName=\"manual_reference\"\r\n                                autocomplete=\"off\">\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\">\r\n                        <div>\r\n                            <button (click)=\"enableEditor()\" [disabled]=\"!editorDisabled\">Enable</button>\r\n                            <button (click)=\"disableEditor()\" [disabled]=\"editorDisabled\">Disable</button>\r\n                        </div>\r\n                        <div>\r\n                            <div formControlName=\"html\" [ngxSummernote]=\"config\"\r\n                                [ngxSummernoteDisabled]=\"editorDisabled\" (blur)=\"onBlur()\"\r\n                                (mediaDelete)=\"onDelete($event)\" (summernoteInit)=\"summernoteInit($event)\">\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"2\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>\r\n                                    <label class=\"btn btn-primary\" style=\"margin-right: 2em;\">\r\n                                        <input type=\"file\" #takeInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                                        .dotx,.dotm,.docb,\r\n                                        .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\"\r\n                                            multiple=\"true\" formControlName=\"images\" name=\"images\"\r\n                                            (change)=\"fileChange($event)\">\r\n                                    </label>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-label style=\"margin-right: 2em;\">Watermark Text</mat-label>\r\n                                </td>\r\n                                <td>\r\n                                    <mat-form-field style=\"margin-bottom: -1.25em;\">\r\n                                        <input matInput style=\"font-size: small;\" formControlName=\"watermarktext\"\r\n                                            required autocomplete=\"off\">\r\n                                    </mat-form-field>\r\n                                </td>\r\n                                <td *ngIf=\"isButtonVisible\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-primary\"\r\n                                        style=\"border-radius:40px;margin-left: 12px;\" [routerLink]='\"/ememo/memosummary\"'\r\n                                        skipLocationChange>Back</button>\r\n                                </td>\r\n                                <td *ngIf=\"isButtonVisible\">\r\n                                    <button type=\"submit\" class=\"btn btn-outline-primary\"\r\n                                        style=\"border-radius:40px;margin-left: 12px;\">Submit</button>\r\n                                </td>\r\n                                <td *ngIf=\"isButtonVisible\">\r\n                                    <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"saveDraft()\"\r\n                                        style=\"border-radius:40px;margin-left: 12px;\">Save as Draft</button>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </form>\r\n    </div>\r\n    <div id=\"my-modal\" class=\"modal fade\" aria-labelledby=\"my-modalLabel\" aria-hidden=\"true\" tabindex=\"-1\"\r\n        role=\"dialog\">\r\n        <div class=\"modal-dialog\" data-bs-dismiss=\"modal\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-body\" *ngIf=\"pdfUrls!=='pdf'\">\r\n                    <img src=\"{{jpgUrls}}\" class=\"img-responsive\" style=\"width: 100%;\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br />\r\n<div style=\"padding-top:20px\"></div>\r\n<ngx-spinner bdColor=\"rgba(51, 51, 51, 0.8)\" size=\"default\" [fullScreen] = \"true\" type=\"ball-spin-clockwise\">\r\n    <p style=\"color: white\">Loading... </p>\r\n</ngx-spinner>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}