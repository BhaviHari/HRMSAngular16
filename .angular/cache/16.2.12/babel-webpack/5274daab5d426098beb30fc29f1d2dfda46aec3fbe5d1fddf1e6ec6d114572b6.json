{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n// import { ComponentPortal } from '@angular/cdk/portal';\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, startWith, switchMap, finalize, takeUntil, map } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { IconDialogComponent } from '../icon-dialog/icon-dialog.component';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport * as moment from 'moment';\nimport { MatSelect } from '@angular/material/select';\nimport { MatSelectTrigger } from '@angular/material/select';\n// import { MatDialog } from '@angular/material/dialog';\nimport { DevTypeDialogComponent } from '../dev-type-dialog/dev-type-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../AppAutoEngine/import-services/CommonimportFiles\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service\";\nimport * as i6 from \"../task-manager.service\";\nimport * as i7 from \"src/app/service/shared.service\";\nimport * as i8 from \"@angular/material/dialog\";\nimport * as i9 from \"@angular/cdk/overlay\";\nimport * as i10 from \"../shareddata.service\";\nimport * as i11 from \"src/app/service/notification.service\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/form-field\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/material/core\";\nimport * as i17 from \"@angular/material/autocomplete\";\nimport * as i18 from \"@angular/material/datepicker\";\nconst _c0 = [\"emp\"];\nconst _c1 = [\"empInput\"];\nconst _c2 = [\"datepickerInput\"];\nconst _c3 = [\"datepickerInputs\"];\nconst _c4 = [\"devTypeSelect\"];\nconst _c5 = [\"iconElement\"];\nconst _c6 = [\"startsDate\"];\nconst _c7 = [\"depInput\"];\nfunction TaskCreationComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_mat_option_16_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.resetProjectAndModule());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const clt_r15 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", clt_r15.name);\n    i0.ɵɵproperty(\"value\", clt_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", clt_r15.name, \" \");\n  }\n}\nfunction TaskCreationComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskCreationComponent_mat_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_mat_option_30_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.resetModule());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const appnm_r18 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", appnm_r18.name);\n    i0.ɵɵproperty(\"value\", appnm_r18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", appnm_r18.name, \" \");\n  }\n}\nfunction TaskCreationComponent_mat_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskCreationComponent_mat_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const modnm_r21 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", modnm_r21.name);\n    i0.ɵɵproperty(\"value\", modnm_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", modnm_r21.name, \" \");\n  }\n}\nfunction TaskCreationComponent_mat_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_div_64_mat_option_15_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const devtypes_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.selectDevType(devtypes_r36));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const devtypes_r36 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", devtypes_r36.text);\n    i0.ɵɵproperty(\"value\", devtypes_r36);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", devtypes_r36.text, \" \");\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r39 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", emp_r39.name);\n    i0.ɵɵproperty(\"value\", emp_r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", emp_r39.name, \" \");\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dep_r40 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate2(\"title\", \"(\", dep_r40.code, \")\", dep_r40.task, \"\");\n    i0.ɵɵproperty(\"value\", dep_r40);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" (\", dep_r40.code, \")\", dep_r40.task, \" \");\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \" No Records Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskCreationComponent_div_64_mat_option_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r44 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 33);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_div_64_mat_option_61_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r44);\n      const ctx_r43 = i0.ɵɵnextContext();\n      const dataIndex_r23 = ctx_r43.index;\n      const data_r22 = ctx_r43.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.getprioritytype(dataIndex_r23, data_r22.get(\"priority_type\").value, \"priority_type\"));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pry_r41 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", pry_r41.text);\n    i0.ɵɵproperty(\"value\", pry_r41.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pry_r41.text, \" \");\n  }\n}\nfunction TaskCreationComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36)(2, \"mat-form-field\")(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Task \");\n    i0.ɵɵelementStart(5, \"span\", 5);\n    i0.ɵɵtext(6, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"textarea\", 37);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\")(9, \"mat-form-field\")(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Type \");\n    i0.ɵɵelementStart(12, \"span\", 5);\n    i0.ɵɵtext(13, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"mat-select\", 38);\n    i0.ɵɵtemplate(15, TaskCreationComponent_div_64_mat_option_15_Template, 2, 3, \"mat-option\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\")(17, \"mat-form-field\")(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Planned Start Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 39);\n    i0.ɵɵlistener(\"dateChange\", function TaskCreationComponent_div_64_Template_input_dateChange_20_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const dataIndex_r23 = restoredCtx.index;\n      const data_r22 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.ChangeDateFormat(dataIndex_r23, \"start_date\", data_r22.get(\"start_date\").value, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"mat-datepicker-toggle\", 40)(22, \"mat-datepicker\", null, 41);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\")(25, \"mat-form-field\")(26, \"mat-label\");\n    i0.ɵɵtext(27, \"Planned End Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 42);\n    i0.ɵɵlistener(\"dateChange\", function TaskCreationComponent_div_64_Template_input_dateChange_28_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const dataIndex_r23 = restoredCtx.index;\n      const data_r22 = restoredCtx.$implicit;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.ChangeDateFormat(dataIndex_r23, \"end_date\", data_r22.get(\"end_date\").value, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"mat-datepicker-toggle\", 40)(30, \"mat-datepicker\", null, 43);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\")(33, \"mat-form-field\", 4);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_div_64_Template_mat_form_field_click_33_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.dropdown(\"\"));\n    });\n    i0.ɵɵelementStart(34, \"mat-label\");\n    i0.ɵɵtext(35, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"input\", 44, 45);\n    i0.ɵɵlistener(\"keyup\", function TaskCreationComponent_div_64_Template_input_keyup_36_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.dropdown($event.target.value));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"mat-icon\", 46);\n    i0.ɵɵtext(39, \"unfold_more\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"mat-autocomplete\", 8, 47);\n    i0.ɵɵtemplate(42, TaskCreationComponent_div_64_mat_option_42_Template, 2, 3, \"mat-option\", 20);\n    i0.ɵɵtemplate(43, TaskCreationComponent_div_64_mat_option_43_Template, 2, 0, \"mat-option\", 11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(44, \"div\")(45, \"mat-form-field\", 4);\n    i0.ɵɵlistener(\"click\", function TaskCreationComponent_div_64_Template_mat_form_field_click_45_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.getdev(\"\"));\n    });\n    i0.ɵɵelementStart(46, \"mat-label\");\n    i0.ɵɵtext(47, \"Dependency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(48, \"input\", 48, 49);\n    i0.ɵɵelementStart(50, \"mat-icon\", 46);\n    i0.ɵɵtext(51, \"unfold_more\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"mat-autocomplete\", 8, 50);\n    i0.ɵɵtemplate(54, TaskCreationComponent_div_64_mat_option_54_Template, 2, 5, \"mat-option\", 20);\n    i0.ɵɵtemplate(55, TaskCreationComponent_div_64_mat_option_55_Template, 2, 0, \"mat-option\", 11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(56, \"div\")(57, \"mat-form-field\")(58, \"mat-label\");\n    i0.ɵɵtext(59, \"Priority Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(60, \"mat-select\", 51);\n    i0.ɵɵtemplate(61, TaskCreationComponent_div_64_mat_option_61_Template, 2, 3, \"mat-option\", 10);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const data_r22 = ctx.$implicit;\n    const dataIndex_r23 = ctx.index;\n    const _r25 = i0.ɵɵreference(23);\n    const _r26 = i0.ɵɵreference(31);\n    const _r28 = i0.ɵɵreference(41);\n    const _r32 = i0.ɵɵreference(53);\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", dataIndex_r23);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.EmpTaskCreateObj.devtypelist);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matDatepicker\", _r25)(\"min\", ctx_r12.sprstartdate)(\"max\", ctx_r12.sprenddate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r25);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matDatepicker\", _r26)(\"min\", data_r22.get(\"start_date\").value)(\"max\", ctx_r12.sprenddate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r26);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matAutocomplete\", _r28);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"displayWith\", ctx_r12.displayFndev);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.empList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.empList || !ctx_r12.empList.length);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matAutocomplete\", _r32);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"displayWith\", ctx_r12.displayFnDep);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.EmpTaskCreateObj.dependencylist);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r12.EmpTaskCreateObj.dependencylist || !ctx_r12.EmpTaskCreateObj.dependencylist.length);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.EmpTaskCreateObj.priorityList);\n  }\n}\nfunction TaskCreationComponent_span_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"No Task Added!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TaskCreationComponent {\n  fb;\n  router;\n  SpinnerService;\n  errorHandler;\n  datePipe;\n  notify;\n  shareService;\n  apicall;\n  taskapi;\n  taskmanagerservice;\n  sharedservice;\n  dialog;\n  overlay;\n  overlayPositionBuilder;\n  sharedDataService;\n  Notification;\n  constructor(fb, router, SpinnerService, errorHandler, datePipe, notify, shareService, apicall, taskapi, taskmanagerservice, sharedservice, dialog, overlay, overlayPositionBuilder, sharedDataService, Notification) {\n    this.fb = fb;\n    this.router = router;\n    this.SpinnerService = SpinnerService;\n    this.errorHandler = errorHandler;\n    this.datePipe = datePipe;\n    this.notify = notify;\n    this.shareService = shareService;\n    this.apicall = apicall;\n    this.taskapi = taskapi;\n    this.taskmanagerservice = taskmanagerservice;\n    this.sharedservice = sharedservice;\n    this.dialog = dialog;\n    this.overlay = overlay;\n    this.overlayPositionBuilder = overlayPositionBuilder;\n    this.sharedDataService = sharedDataService;\n    this.Notification = Notification;\n  }\n  OnSubmit = new EventEmitter();\n  OnCancel = new EventEmitter();\n  EmpTaskCreate;\n  dataIndex;\n  // empList: emplistss[];\n  empList;\n  // public chipSelectedemp: emplistss[] = [];\n  chipSelectedemp = [];\n  array = [];\n  chipSelectedempid = [];\n  separatorKeysCodes = [ENTER, COMMA];\n  autocompleteTrigger;\n  matcommodityAutocomplete;\n  commodityInput;\n  datepickerInput;\n  datepickerInputs;\n  picker;\n  picker1;\n  picker2;\n  // @ViewChild('employee') matcommodityAutocomplete: MatAutocomplete;\n  // @ViewChild('inputemployeeid') commodityInput: any;\n  stories_Id;\n  icon;\n  icons = null;\n  currentpagecom = 1;\n  selectedDate;\n  selectedDates;\n  fastag = 'fa-solid fa-tag';\n  squarecheck = 'fa-check-square-o';\n  new_icon = 'fa-user-plus';\n  dependiciestip = \"\";\n  fastagename = \"\";\n  taskstartdate = \"\";\n  taskenddate = \"\";\n  devtypearr;\n  employe_name = \"\";\n  dates = null;\n  has_nextcom = false;\n  has_previouscom = false;\n  datest = null;\n  devTypeSelect;\n  matSelects;\n  iconElement;\n  isShowType = false;\n  selectedDevType;\n  startsDate;\n  depInput;\n  devTypeSelectOpenState = [];\n  // @ViewChild('devTypeSelect') devTypeSelect: MatSelect;\n  selectTrigger;\n  searchTerm = '';\n  items;\n  filteredResults;\n  sprstartdate = '';\n  sprenddate = '';\n  actualStarts = '';\n  storyName = '';\n  sprintName = '';\n  selectedMappingId;\n  borderColor = '';\n  borderColors = '';\n  borderstart = '';\n  borderend = '';\n  borderdev = '';\n  currentDate = '';\n  quickviewlist;\n  clientname;\n  modulename;\n  projectname;\n  projectId;\n  EmpTaskCreateObj = {\n    QuickAccessList: [],\n    selectedNav: '',\n    clientList: [],\n    projectList: [],\n    moduleList: [],\n    createArray: [],\n    from_date: '',\n    to_date: '',\n    task: '',\n    type: '',\n    devtypelist: [],\n    statusListData: '',\n    toSelectDropDown: null,\n    toSelectDependency: null,\n    submitValidation: false,\n    dependencylist: [],\n    priorityList: []\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\n  };\n  ngOnInit() {\n    this.sprstartdate = this.datePipe.transform(this.sharedDataService?.sprintfromdate?.value, 'yyyy-MM-dd');\n    this.sprenddate = this.datePipe.transform(this.sharedDataService?.sprinttodate?.value, 'yyyy-MM-dd');\n    this.storyName = this.sharedDataService?.storyName.value;\n    this.sprintName = this.sharedDataService?.sprintName.value;\n    this.clientname = this.sharedDataService?.clientname.value;\n    console.log(\"clientname=\", this.clientname);\n    this.modulename = this.sharedDataService?.modulename.value;\n    console.log(\"clientname=\", this.modulename);\n    this.projectname = this.sharedDataService?.projectname.value;\n    console.log(\"clientname=\", this.projectname);\n    if (this.sprstartdate == null || this.sprstartdate == '' || this.sprstartdate == undefined) {\n      // this.sprstartdate= this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\n    } else {\n      this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    }\n    if (this.sprenddate == null || this.sprenddate == '' || this.sprenddate == undefined) {} else {\n      this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    }\n    this.EmpTaskCreate = this.fb.group({\n      client: [''],\n      project: [''],\n      project_map_id: [''],\n      // task: '',\n      data: new FormArray([])\n    });\n    this.dataIndex = this.fb.group({\n      task: '',\n      type: '',\n      developer: '',\n      dependency_id: '',\n      priority_type: ''\n    });\n    let key = \"\";\n    this.getlatestTasks();\n    this.getdevtype();\n    this.getPriority();\n    // this.getemp(key);\n    this.AddTask();\n    let id = this.sharedDataService.story_Id.value;\n    console.log(\"story id\", id);\n    if (id == 0) {\n      this.stories_Id = \"\";\n    } else {\n      this.stories_Id = id;\n    }\n    this.sharedDataService.setDevTypeList(this.EmpTaskCreateObj.devtypelist);\n  }\n  popclose() {\n    this.OnSubmit.emit();\n  }\n  // popclose(){\n  //  let startdate=this.sprstartdate || this.datePipe.transform(new Date(), 'yyyy-MM-dd')\n  //  let enddate=this.sprenddate || this.datePipe.transform(new Date(), 'yyyy-MM-dd')\n  //   this.EmpTaskCreate.reset()\n  //   this.FormGroupArray.patchValue({\n  //     \"start_date\":startdate,\n  //      \"end_date\":enddate\n  //   })\n  // }\n  // story_TaskViewData:any;\n  // getTaskEdit(task_ID) {\n  //   this.taskmanagerservice.getStories_taskView(task_ID)\n  //   .subscribe(result => {\n  //     this.SpinnerService.hide();\n  //     console.log(\"story task View\", result)\n  //     this.story_TaskViewData = result;\n  //     this.ScheduleLeasedForm.patchValue({\n  //       term_number: data.term_number,\n  //       start_date: data.start_date,\n  //       end_date: data.end_date,\n  //       term_period: this.termPeriod,\n  //       rent_amount: data.rent_amount,\n  //       amenties_amount: data.amenties_amount,\n  //       maintenance_amount: data.maintenance_amount,\n  //       rent_increment: data.rent_increment,\n  //       amenties_increment: data.amenties_increment,\n  //       maintenance_increment: data.maintenance_increment,\n  //       recurring_frequency: data?.recurring_frequency.id,\n  //       recurring_date: data.recurring_date,\n  //       remarks: data.remarks,\n  //       edit_flag: data.edit_flag,\n  //       renttype: data?.renttype.id,\n  //     });\n  //   }, (error) => {\n  //     this.errorHandler.handleError(error);\n  //     this.SpinnerService.hide();\n  //   }\n  //   )\n  // }\n  getlatestTasks() {\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.QuickAccessProjects).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.QuickAccessList = datas;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  SelectedLink(data) {\n    this.EmpTaskCreateObj.selectedNav = data?.id;\n    console.log(data, this.EmpTaskCreateObj.selectedNav);\n    let moduledata = {\n      name: data?.module?.name,\n      id: data?.id\n    };\n    this.EmpTaskCreate.patchValue({\n      client: data.client,\n      project: data?.project,\n      project_map_id: moduledata\n    });\n  }\n  // data?.client?.name}} >> {{data?.module?.name}} >> {{data?.project?.name}} \n  clearTags() {\n    this.EmpTaskCreateObj.selectedNav = '';\n  }\n  clientsearch(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.clientList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnclt(clt) {\n    return clt ? clt.name : undefined;\n  }\n  Projectsearch(clientdata, Typedata) {\n    if (clientdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + '/' + clientdata?.id + '?' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.projectList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnappnm(appnm) {\n    return appnm ? appnm.name : undefined;\n  }\n  getModule(clientdata, projectdata, Typedata) {\n    if (clientdata?.id == undefined || projectdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch + projectdata?.id + '?' + 'client_id=' + clientdata?.id + '&' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.moduleList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnmodnm(mod) {\n    return mod ? mod.name : undefined;\n  }\n  getdevtype() {\n    this.SpinnerService.show();\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD).subscribe(results => {\n      this.SpinnerService.hide();\n      let datas = results[\"data\"];\n      this.devtypearr = datas;\n      this.EmpTaskCreateObj.devtypelist = datas;\n      if (this.EmpTaskCreateObj.devtypelist?.length > 0) {\n        // this.EmpTaskCreateObj.statusListData = this.EmpTaskCreateObj.devtypelist[0]?.id  \n        this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == 1);\n        console.log(\"---------> data for dropdown\", this.EmpTaskCreateObj.toSelectDropDown, this.EmpTaskCreateObj.devtypelist);\n      }\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  get dataForTask() {\n    // this.array = [];\n    // this.chipSelectedemp=[];\n    // this.chipSelectedempid=[];\n    let FormGroupArray = this.fb.group({\n      // start_date: [this.sprstartdate || this.datePipe.transform(new Date(), 'yyyy-MM-dd'), Validators.required],\n      // end_date:  [this.sprenddate || this.datePipe.transform(new Date(), 'yyyy-MM-dd'), Validators.required], \n      start_date: '',\n      end_date: '',\n      dev_type_name: this.EmpTaskCreateObj?.toSelectDropDown,\n      type: '',\n      task: '',\n      dependency_id: '',\n      priority_type: 1,\n      // title:'',\n      // devtype: '',\n      developer: '',\n      priority_type_color: '#ffcc00'\n    });\n    return FormGroupArray;\n  }\n  AddTask() {\n    let control = this.EmpTaskCreate.get(\"data\");\n    control.push(this.dataForTask);\n  }\n  deleteTask(index) {\n    let control = this.EmpTaskCreate.get(\"data\");\n    control.removeAt(index);\n  }\n  ChangeDateFormat(index, key, date, e) {\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'));\n    // this.taskstartdate=\"Start date :\"+new Date(this.datepipe.transform(e.value,'yyyy-MM-dd'));\n    this.actualStarts = this.datePipe.transform(date, 'yyyy-MM-dd');\n    this.borderstart = '#5c52ed';\n  }\n  ChangeDateFormats(index, key, date, e) {\n    this.EmpTaskCreate.get('data')['controls'][index].get('end_date').setValue(this.datePipe.transform(date, 'yyyy-MM-dd'));\n    this.taskenddate = \"End date :\" + this.datepipe.transform(e, 'yyyy-MM-dd');\n  }\n  startdateclick(date) {\n    this.taskstartdate = \"Start date :\" + this.datepipe.transform(date, 'yyyy-MM-dd');\n  }\n  startendclick(date) {\n    this.taskenddate = \"End date :\" + this.datepipe.transform(date, 'yyyy-MM-dd');\n  }\n  getdevTypeId(index, data, key) {\n    console.log(index, data, key);\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(data?.id);\n    this.EmpTaskCreate.get('data')['controls'][index].get('type').setValue(data?.id);\n    let multiple_data = ['Management', 'Planning', 'Meeting'];\n    // if (multiple_data.includes(data.text) == false){\n    // if(this.chipSelectedempid[index].length > 1)\n    //   {\n    //     this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([this.chipSelectedempid[index][0]])\n    //   this.chipSelectedemp[index] = [this.chipSelectedemp[index][0]]\n    //   this.chipSelectedempid[index] = [this.chipSelectedempid[index][0]]\n    // }\n    // }\n    // this.selectedDevType = data\n    // this.yourForm.get('dev_type_name').setValue(devtype.text);\n    // this.EmpTaskCreate.get('data')['controls'][index].get(\"dev_type_name\").setValue(data)\n    this.fastag = 'fa-solid fa-tags';\n    this.fastagename = data.text;\n    this.borderColor = '#5c52ed';\n  }\n  SubmitTask() {\n    let data = this.EmpTaskCreate.value;\n    data.data[0].story_id = this.stories_Id;\n    console.log(\"EMP Data\", data);\n    // data = [...data,{story_id: this.stories_Id}]\n    // data.push({story_id: this.stories_Id})\n    if (data?.project_map_id?.id == null || data?.project_map_id?.id == '' || data?.project_map_id?.id == undefined) {\n      this.notify.warning(\"Module Not Selected\");\n      return false;\n    }\n    if (data.data[0].task == null || data.data[0].task == '' || data.data[0].task == undefined) {\n      this.notify.warning(\"Please Enter the Task Name\");\n      return false;\n    }\n    if (data.data[0].type == null || data.data[0].type == '' || data.data[0].type == undefined) {\n      this.notify.warning(\"Please Select the Type\");\n      return false;\n    }\n    // if(data.data[0].developer == null || data.data[0].developer == '' || data.data[0].developer ==  undefined)\n    // {\n    //   this.notify.warning(\"Please Select Task Assignee\")\n    //   return false; \n    // }\n    if (this.stories_Id !== '') {\n      if (data.data[0].start_date == null || data.data[0].start_date == '' || data.data[0].start_date == undefined) {\n        this.notify.warning(\"Please Select the Start Date\");\n        return false;\n      }\n      if (data.data[0].end_date == null || data.data[0].end_date == '' || data.data[0].end_date == undefined) {\n        this.notify.warning(\"Please Select the End Date\");\n        return false;\n      }\n    }\n    if (data.data[0].priority_type == null || data.data[0].priority_type == '' || data.data[0].priority_type == undefined) {\n      this.notify.warning(\"Please Select Task Priority\");\n      return false;\n    }\n    if (data?.data?.length == 0) {\n      this.notify.warning(\"Please Fill Atleast One Task\");\n      return false;\n    }\n    let details = this.EmpTaskCreate.value.data;\n    for (let i in details) {\n      details[i].dependency_id = details[i].dependency_id;\n    }\n    if (this.EmpTaskCreate.value.data[0].developer.id) {\n      this.datas = {\n        \"start_date\": this.EmpTaskCreate.value.data[0].start_date,\n        \"end_date\": this.EmpTaskCreate.value.data[0].end_date,\n        \"dev_type_name\": this.EmpTaskCreate.value.data[0].type.id,\n        \"type\": this.EmpTaskCreate.value.data[0].type.id,\n        \"task\": this.EmpTaskCreate.value.data[0].task,\n        \"dependency_id\": this.EmpTaskCreate.value.data[0]?.dependency_id?.id,\n        \"priority_type\": this.EmpTaskCreate.value.data[0].priority_type,\n        \"developer\": [this.EmpTaskCreate.value.data[0].developer.id],\n        \"priority_type_color\": \"#FFCC00\",\n        \"story_id\": this.stories_Id\n      };\n    } else {\n      this.datas = {\n        \"start_date\": this.EmpTaskCreate.value.data[0].start_date,\n        \"end_date\": this.EmpTaskCreate.value.data[0].end_date,\n        \"dev_type_name\": this.EmpTaskCreate.value.data[0].type.id,\n        \"type\": this.EmpTaskCreate.value.data[0].type.id,\n        \"task\": this.EmpTaskCreate.value.data[0].task,\n        \"dependency_id\": this.EmpTaskCreate.value.data[0]?.dependency_id?.id,\n        \"priority_type\": this.EmpTaskCreate.value.data[0].priority_type,\n        \"priority_type_color\": \"#FFCC00\",\n        \"story_id\": this.stories_Id\n      };\n    }\n    console.log('datas', this.datas);\n    let obj = {\n      project_id: data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id,\n      data: [this.datas]\n      // story_id: this.stories_Id\n    };\n    this.EmpTaskCreateObj.submitValidation = true;\n    this.SpinnerService.show();\n    this.taskmanagerservice.storyBasedTaskCreation(obj).subscribe(results => {\n      if (results.code) {\n        this.SpinnerService.hide();\n        this.notify.error(results.description);\n        this.EmpTaskCreate.get('client').reset();\n        this.EmpTaskCreate.get('project').reset();\n        this.EmpTaskCreate.get('project_map_id').reset();\n        this.dataIndex.get('task').reset();\n        this.dataIndex.get('type').reset();\n        this.dataIndex.get('developer').reset();\n        this.dataIndex.get('dependency_id').reset();\n        this.dataIndex.get('priority_type').reset();\n        this.dataIndex.get('priority_type').reset();\n        this.fastag = 'fa-solid fa-tag';\n        this.squarecheck = 'fa-check-square-o';\n        this.new_icon = 'fa-user-plus';\n        this.EmpTaskCreateObj.submitValidation = false;\n        this.EmpTaskCreate.reset();\n        // this.EmpTaskCreate.reset()\n        this.OnSubmit.emit();\n        return true;\n      } else {\n        this.SpinnerService.hide();\n        this.EmpTaskCreate.get('client').reset();\n        this.EmpTaskCreate.get('project').reset();\n        this.EmpTaskCreate.get('project_map_id').reset();\n        this.dataIndex.get('task').reset();\n        this.dataIndex.get('type').reset();\n        this.dataIndex.get('developer').reset();\n        this.dataIndex.get('dependency_id').reset();\n        this.dataIndex.get('priority_type').reset();\n        this.dataIndex.get('priority_type').reset();\n        let datas = this.dataIndex.get('task');\n        // datas.clear()\n        this.fastag = 'fa-solid fa-tag';\n        this.notify.success(results.message);\n        this.squarecheck = 'fa-check-square-o';\n        this.new_icon = 'fa-user-plus';\n        this.EmpTaskCreate.get('data')['controls'][0].get('priority_type').setValue(1);\n        this.EmpTaskCreate.get('data')['controls'][0].get('priority_type_color').setValue('#ffcc00');\n        this.borderColor = '';\n        this.borderColors = '';\n        this.borderstart = '';\n        this.borderend = '';\n        this.borderdev = '';\n        this.EmpTaskCreate.reset();\n        this.OnSubmit.emit();\n        return true;\n      }\n    }, error => {\n      this.SpinnerService.hide();\n    });\n  }\n  BackToSummary() {\n    this.OnCancel.emit();\n  }\n  resetProjectAndModule() {\n    this.EmpTaskCreate.controls['project'].reset();\n    this.EmpTaskCreate.controls['project_map_id'].reset();\n    this.empList = [];\n    this.EmpTaskCreateObj.projectList = [];\n  }\n  resetModule() {\n    this.EmpTaskCreate.controls['project_map_id'].reset();\n    this.empList = [];\n    this.EmpTaskCreateObj.projectList = [];\n  }\n  removedemp(i, emp) {\n    const index = this.chipSelectedemp[i].indexOf(emp);\n    // if (this.isEdit == true) {\n    //   return false\n    // }\n    if (index >= 0) {\n      this.chipSelectedemp[i].splice(index, 1);\n      console.log(this.chipSelectedemp[i]);\n      this.chipSelectedempid[i].splice(index, 1);\n      console.log(this.chipSelectedempid[i]);\n      this.empInput.nativeElement.value = '';\n    }\n  }\n  empSelected(event) {\n    console.log('event.option.value', event.option.value);\n    this.selectempByName(event.option.value);\n    // this.empInput.nativeElement.value = '';\n    // console.log('chipSelectedempid', this.chipSelectedempid)\n  }\n  selectempByName(emp) {\n    let multiple_data = ['Management', 'Planning', 'Meeting'];\n    if (this.chipSelectedemp.length >= 0) {\n      this.chipSelectedemp.push(emp);\n      this.chipSelectedempid.push(emp?.id);\n    } else {\n      this.chipSelectedemp = [emp];\n      this.chipSelectedempid = [emp?.id];\n    }\n    console.log(\"iddddd\", this.chipSelectedempid);\n    // this.EmpTaskCreate.get('data')['controls'].setValue(this.chipSelectedempid)\n  }\n  // getselectedfocusout(index){\n  //         this.EmpTaskCreate.get('data')['controls'][index].get(\"emp_id\").setValue(this.chipSelectedempid)\n  // }\n  isLoading = false;\n  dropdown(value) {\n    this.projectId = this.EmpTaskCreate.get('project').value?.id;\n    if (this.projectId !== undefined && this.projectId !== null && this.projectId !== '') {\n      this.taskmanagerservice.task_employeesearch_createproj(value, 1, this.projectId).subscribe(data => {\n        this.empList = data['data'];\n      });\n    } else if (this.projectId === undefined || this.projectId === null || this.projectId === '') {\n      this.Notification.showWarning('Module Not Selected');\n    }\n  }\n  // // developer name\n  develops(i) {\n    this.projectId = this.EmpTaskCreate.get('project').value?.id;\n    console.log(\"projectId\", this.projectId);\n    if (this.projectId !== undefined && this.projectId !== null && this.projectId !== '') {\n      // let devkeyvalue: String = \"\";\n      // this.getemp(devkeyvalue);\n      this.EmpTaskCreate.get('data').at(i).get('developer').valueChanges\n      // this.taskAddForm.get('developer').valueChanges\n      .pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n        console.log('inside tap');\n      }), switchMap(value => this.taskmanagerservice.task_employeesearch_createproj(value, 1, this.projectId).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.empList = datas;\n        // this.EmpTaskCreateObj.devtypelist = this.empList;\n        // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\n        // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\n      });\n    } else {\n      // let devkeyvalue: String = \"\";\n      //   this.getemp(devkeyvalue);\n      this.EmpTaskCreate.get('data').at(i).get('developer').valueChanges\n      // this.taskAddForm.get('developer').valueChanges\n      .pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n        console.log('inside tap');\n      }), switchMap(value => this.taskmanagerservice.task_employeesearch_create(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.empList = datas;\n        // this.EmpTaskCreateObj.devtypelist = this.empList;\n        // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\n        // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\n      });\n    }\n  }\n  //   getemp(keyvalue) {\n  //     // let type = 2 // employee\n  //     console.log(\"emp fun called\")\n  //     let data = this.EmpTaskCreate.value;\n  //     let projectId = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id\n  //     if(projectId !== undefined && projectId !== null && projectId !=='')\n  //     {\n  //       this.taskmanagerservice.task_employeesearch_createproj(keyvalue, 1, projectId)\n  //       .subscribe((results: any[]) => {\n  //         this.SpinnerService.hide();\n  //         let datas = results[\"data\"];\n  //         this.empList = datas;\n  //         console.log(\"emp data get \", this.empList)\n  //       }, (error) => {\n  //         this.errorHandler.handleError(error);\n  //         this.SpinnerService.hide();\n  //       })\n  //     }\n  //  else\n  //  {\n  //     // this.SpinnerService.show();\n  //     this.taskmanagerservice.task_employeesearch_create(keyvalue, 1)\n  //       .subscribe((results: any[]) => {\n  //         this.SpinnerService.hide();\n  //         let datas = results[\"data\"];\n  //         this.empList = datas;\n  //         console.log(\"emp data get \", this.empList)\n  //       }, (error) => {\n  //         this.errorHandler.handleError(error);\n  //         this.SpinnerService.hide();\n  //       })\n  //     }\n  //   }\n  selectemployee(index, dep) {\n    this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([dep.id]);\n    // this.new_icon=\"fa-solid fa-\"+dep.name[0]\n    this.new_icon = \"fa-solid fa-user-check\";\n    this.employe_name = dep.name;\n    console.log(\"this.new_icon\", this.new_icon);\n    this.borderColors = '#5c52ed';\n  }\n  selectdependencies(dataIndex, dep) {\n    this.EmpTaskCreate.get('data')['controls'][dataIndex].get(\"dependency_id\").setValue(dep.id);\n    this.squarecheck = 'fa-square-check';\n    this.dependiciestip = dep.task;\n    this.borderdev = '#5c52ed';\n  }\n  selectdependecies;\n  displayFndev(emp) {\n    return emp ? emp.name : undefined;\n  }\n  getempData(e) {\n    this.employee_id = e;\n  }\n  employeeautocomplete() {\n    setTimeout(() => {\n      if (this.matcommodityAutocomplete && this.autocompletetrigger && this.matcommodityAutocomplete.panel) {\n        fromEvent(this.matcommodityAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matcommodityAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompletetrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matcommodityAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matcommodityAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matcommodityAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_nextcom === true) {\n              this.taskmanagerservice.task_employeesearch(this.commodityInput.nativeElement.value, this.currentpagecom + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                let datapagination = results[\"pagination\"];\n                this.empList = this.empList.concat(datas);\n                if (this.empList.length >= 0) {\n                  this.has_nextcom = datapagination.has_next;\n                  this.has_previouscom = datapagination.has_previous;\n                  this.currentpagecom = datapagination.index;\n                }\n              }, error => {\n                this.errorHandler.handleError(error);\n                this.SpinnerService.hide();\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  // get emp() {\n  //   return this.taskAddForm.value.get('developer');\n  // }\n  // priority dropdown\n  getPriority() {\n    this.SpinnerService.show();\n    this.taskmanagerservice.get_Priority().subscribe(results => {\n      this.SpinnerService.hide();\n      // let datas = results[\"data\"];\n      this.EmpTaskCreateObj.priorityList = results;\n      console.log(\"priority dropdown\", this.EmpTaskCreateObj.priorityList);\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  getprioritytype(index, data, key) {\n    console.log(\"selected prioritys\", index, data);\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(data);\n    this.selectedPriority = data;\n    let color = \"\";\n    if (this.selectedPriority === 1) {\n      color = '#ffcc00'; // Normal\n    } else if (this.selectedPriority === 2) {\n      color = 'red'; // High\n    } else if (this.selectedPriority === 3) {\n      color = '#6fddff'; // Low\n    }\n    this.EmpTaskCreate.get('data')['controls'][index].get('priority_type_color').setValue(color);\n  }\n  chipList = [];\n  addSection(i) {\n    // this.chipList=[];\n    this.chipList.push(this.EmpTaskCreate.get('data')['controls'][i].get('developer').value);\n    console.log(\"add\", this.chipList);\n  }\n  // dependency\n  dependencysearch(i) {\n    let data = this.EmpTaskCreate.value;\n    let project_id = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id;\n    if (project_id == undefined) {\n      project_id = \"\";\n    }\n    let devkeyvalue = \"\";\n    this.getdev(devkeyvalue);\n    this.EmpTaskCreate.get('data').at(i).get('dependency_id').valueChanges\n    // this.taskAddForm.get('developer').valueChanges\n    .pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n      console.log('inside tap');\n    }), switchMap(value => this.taskmanagerservice.dependencytype(value, 1, project_id).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.dependencylist = datas;\n    });\n  }\n  getdev(keyvalue) {\n    // this.SpinnerService.show();\n    let data = this.EmpTaskCreate.value;\n    let project_id = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id;\n    if (project_id == undefined) {\n      project_id = \"\";\n    }\n    this.taskmanagerservice.dependencytype(keyvalue, 1, project_id).subscribe(results => {\n      this.SpinnerService.hide();\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.dependencylist = datas;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnDep(clt) {\n    return clt ? clt.task : undefined;\n  }\n  openIconDialog(icon) {\n    const dialogRef = this.dialog.open(IconDialogComponent, {\n      data: {\n        icon\n      }\n    });\n    dialogRef.afterClosed().subscribe(selectedOption => {\n      if (selectedOption) {\n        // Handle the selected option\n        this.icons = selectedOption;\n      }\n    });\n  }\n  onDateSelected(event) {\n    if (event.value) {\n      this.selectedDate = moment(event.value);\n      this.dates = this.selectedDate.format('MMM DD');\n    }\n  }\n  openDatepicker(datepickerInput) {\n    if (this.datepickerInput && this.picker) {\n      this.picker.open();\n    }\n  }\n  onDateSelecteds(event) {\n    if (event.value) {\n      this.selectedDates = moment(event.value);\n      this.datest = this.selectedDates.format('MMM DD');\n    }\n  }\n  openDatepickers(datepickerInputs) {\n    if (this.datepickerInputs && this.picker1) {\n      this.picker1.open();\n    }\n  }\n  // openDevTypeSelect() {\n  //   this.devTypeSelect.open();\n  //   this.isShowType = true;\n  // const iconElement = this.iconElement.nativeElement;\n  // if (iconElement && this.matSelect) {\n  //   const positionStrategy = this.overlayPositionBuilder\n  //     .flexibleConnectedTo(iconElement)\n  //     .withPositions([\n  //       { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n  //     ]);\n  //   const overlayRef = this.overlay.create({\n  //     positionStrategy,\n  //     hasBackdrop: true,\n  //     backdropClass: 'cdk-overlay-transparent-backdrop', // You can define this class in your CSS\n  //   });\n  //   this.matSelect.open();\n  //   overlayRef.attach(this.matSelect._getOverlayRef());\n  // }\n  // }payrollserv/paystatus_dropdown\n  setSelectedDevType(devTypeName) {\n    // this.selectedDevType = devTypeName;\n  }\n  opencalendar() {\n    this.picker1.open();\n  }\n  opencalendars() {\n    this.picker2.open();\n  }\n  opendependency() {\n    this.depInput.open();\n  }\n  openDevTypeSelect(index) {\n    // Function to open the mat-select for the clicked \"fa-tags\" icon\n    const devTypeSelect = this.devTypeSelectList.toArray()[index];\n    if (devTypeSelect) {\n      devTypeSelect.open();\n      // Position the select panel below the icon\n      const iconElement = event.target;\n      const iconRect = iconElement.getBoundingClientRect();\n      devTypeSelect.panelClass = 'below-icon';\n      devTypeSelect.panel.nativeElement.style.left = iconRect.left + 'px';\n      devTypeSelect.panel.nativeElement.style.top = iconRect.bottom + 'px';\n    }\n  }\n  isDevTypeSelectOpen(index) {\n    // Function to check if the mat-select should be open for the given row\n    return this.devTypeSelectOpenState[index] === true;\n  }\n  // openDevTypeDialog() {\n  //   const dialogRef = this.dialog.open(DevTypeDialogComponent, {\n  //     data: { devTypeList: this.EmpTaskCreateObj.devtypelist },\n  //   });\n  //   console.log(\"LISTED\", this.EmpTaskCreateObj.devtypelist)\n  //   dialogRef.afterClosed().subscribe((selectedOption: string) => {\n  //     console.log('Selected Option: ', selectedOption);\n  //   });\n  // }\n  openDevTypeDialog() {\n    const dialogRef = this.dialog.open(DevTypeDialogComponent, {\n      data: {\n        devTypeList: this.EmpTaskCreateObj.devtypelist\n      }\n    });\n    console.log(\"LISTED\", this.EmpTaskCreateObj.devtypelist);\n    dialogRef.afterClosed().subscribe(selectedOption => {\n      console.log('Selected Option: ', selectedOption);\n    });\n  }\n  filterItems() {\n    this.filteredResults = this.items.filter(item => item.toLowerCase().includes(this.searchTerm.toLowerCase()));\n  }\n  emp_type(index) {\n    let keyvalue = \"\";\n    this.get_type(keyvalue);\n    this.EmpTaskCreate.get('data').at(index).get('developer').valueChanges.pipe(startWith(\"\"), debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.taskmanagerservice.task_employeesearch(value, 1).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      let datapagination = results[\"pagination\"];\n      this.empList = this.empList.concat(datas);\n      if (this.empList.length >= 0) {\n        this.has_nextcom = datapagination.has_next;\n        this.has_previouscom = datapagination.has_previous;\n        this.currentpagecom = datapagination.index;\n      }\n    });\n  }\n  get_type(keyvalue) {\n    this.taskmanagerservice.task_employeesearch(keyvalue, 1).subscribe(results => {\n      let datas = results[\"data\"];\n      this.empList = datas;\n    });\n  }\n  // openDatePickerDialog(event: MouseEvent) {\n  //   const dialogRef = this.dialog.open(DatepickerDropdownComponent, {\n  //     width: '250px', // Set the desired width\n  //     hasBackdrop: false, // Disable backdrop\n  //     position: { top: event.clientY + 'px', left: event.clientX + 'px' }, // Position the dialog at the cursor's location\n  //   });\n  selectDevType(devtype) {\n    // this.EmpTaskCreate.get('dev_type_name').setValue(devtype);\n    // this.EmpTaskCreate.get('data')['controls'].get('dev_type_name').setValue(devtype)\n    // this.EmpTaskCreateObj.toSelectDropDown = devtype\n    // this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == devtype.id);\n    // this.EmpTaskCreate.get('data')['controls'].get('dev_type_name').setValue(devtype?.id)\n  }\n  getIconColor() {\n    if (this.selectedPriority === 1) {\n      return '#ffcc00'; // Normal\n    } else if (this.selectedPriority === 2) {\n      return 'red'; // High\n    } else if (this.selectedPriority === 3) {\n      return '#6fddff'; // Low\n    }\n    return ''; // Default color if no selection\n  }\n  onModuleSelected(event) {\n    if (event) {\n      this.selectedMappingId = event.option.value;\n      // Do something with the selectedModule...\n      console.log('Selected Module:', this.selectedMappingId.mapping_id);\n    } else {}\n  }\n  changeBorder() {\n    this.borderstart = '#5c52ed';\n  }\n  changeBorders() {\n    this.borderend = '#5c52ed';\n  }\n  taskpatch() {\n    this.EmpTaskCreate.patchValue({\n      client: this.clientname,\n      project: this.projectname,\n      project_map_id: this.modulename\n    });\n  }\n  static ɵfac = function TaskCreationComponent_Factory(t) {\n    return new (t || TaskCreationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ErrorHandlingServiceService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i5.ApicallserviceService), i0.ɵɵdirectiveInject(i3.TaskApi), i0.ɵɵdirectiveInject(i6.TaskManagerService), i0.ɵɵdirectiveInject(i7.SharedService), i0.ɵɵdirectiveInject(i8.MatDialog), i0.ɵɵdirectiveInject(i9.Overlay), i0.ɵɵdirectiveInject(i9.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i10.ShareddataService), i0.ɵɵdirectiveInject(i11.NotificationService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskCreationComponent,\n    selectors: [[\"app-task-creation\"]],\n    viewQuery: function TaskCreationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(MatDatepicker, 5);\n        i0.ɵɵviewQuery(MatDatepicker, 5);\n        i0.ɵɵviewQuery(MatDatepicker, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(MatSelectTrigger, 5);\n        i0.ɵɵviewQuery(MatSelect, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matcommodityAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.commodityInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datepickerInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datepickerInputs = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.picker = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.picker1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.picker2 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.devTypeSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startsDate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.depInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matSelects = _t);\n      }\n    },\n    outputs: {\n      OnSubmit: \"OnSubmit\",\n      OnCancel: \"OnCancel\"\n    },\n    features: [i0.ɵɵProvidersFeature([imp.TaskApi])],\n    decls: 74,\n    vars: 18,\n    consts: [[1, \"cus-taskCreationMain\", 2, \"padding\", \"20px\"], [2, \"font-weight\", \"bold\"], [1, \"cus-taskCreateContainer\", 3, \"formGroup\"], [1, \"cus-taskCreateContainer1\"], [3, \"click\"], [2, \"color\", \"red\"], [\"matInput\", \"\", \"formControlName\", \"client\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"cltInput\", \"\"], [3, \"displayWith\"], [\"clt\", \"matAutocomplete\"], [3, \"value\", \"title\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"project\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"appnmInput\", \"\"], [\"matSuffix\", \"\", 1, \"maticonsize\"], [\"appnm\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"project_map_id\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"modnmInput\", \"\"], [3, \"displayWith\", \"optionSelected\"], [\"modnm\", \"matAutocomplete\"], [3, \"value\", \"title\", 4, \"ngFor\", \"ngForOf\"], [1, \"cus-quickView\"], [2, \"margin\", \"0\", \"padding\", \"0\"], [1, \"cus-badgeBlue\", \"pointer\", 2, \"margin-bottom\", \"0\", \"margin-left\", \"20px\"], [1, \"alignvertical\"], [1, \"material-icons\", \"fontsize\", \"alignvertical\"], [\"formArrayName\", \"data\"], [\"class\", \"cus-taskCreateContainer2\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin-top\", \"20px\"], [1, \"cus-taskCreateContainer3\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"closebutton\", \"\"], [1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", \"color\", \"white\", 3, \"click\"], [3, \"value\", \"title\", \"click\"], [3, \"value\", \"title\"], [1, \"cus-taskCreateContainer2\", 3, \"formGroupName\"], [1, \"cus-taskCreateGrid100\"], [\"rows\", \"2\", \"type\", \"text\", \"placeholder\", \"Enter Task here!\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"task\"], [\"formControlName\", \"type\"], [\"matInput\", \"\", \"readonly\", \"\", \"formControlName\", \"start_date\", 3, \"matDatepicker\", \"min\", \"max\", \"dateChange\"], [\"matSuffix\", \"\", 1, \"maticonsize\", 3, \"for\"], [\"picker1\", \"\"], [\"matInput\", \"\", \"readonly\", \"\", \"formControlName\", \"end_date\", 3, \"matDatepicker\", \"min\", \"max\", \"dateChange\"], [\"picker2\", \"\"], [\"matInput\", \"\", \"formControlName\", \"developer\", 3, \"matAutocomplete\", \"keyup\"], [\"empInput\", \"\"], [\"matSuffix\", \"\"], [\"emp\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"dependency_id\", \"autocomplete\", \"off\", 3, \"matAutocomplete\"], [\"depInput\", \"\"], [\"dep\", \"matAutocomplete\"], [\"formControlName\", \"priority_type\", 1, \"\"]],\n    template: function TaskCreationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Task creation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\")(5, \"div\", 3)(6, \"div\")(7, \"mat-form-field\", 4);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_mat_form_field_click_7_listener() {\n          return ctx.clientsearch(\"\");\n        });\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Client \");\n        i0.ɵɵelementStart(10, \"span\", 5);\n        i0.ɵɵtext(11, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"input\", 6, 7);\n        i0.ɵɵlistener(\"keyup\", function TaskCreationComponent_Template_input_keyup_12_listener() {\n          return ctx.clientsearch(ctx.EmpTaskCreate.value.client);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-autocomplete\", 8, 9);\n        i0.ɵɵtemplate(16, TaskCreationComponent_mat_option_16_Template, 2, 3, \"mat-option\", 10);\n        i0.ɵɵtemplate(17, TaskCreationComponent_mat_option_17_Template, 2, 0, \"mat-option\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"mat-form-field\", 4);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_mat_form_field_click_19_listener() {\n          return ctx.Projectsearch(ctx.EmpTaskCreate.value.client, \"\");\n        });\n        i0.ɵɵelementStart(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Project \");\n        i0.ɵɵelementStart(22, \"span\", 5);\n        i0.ɵɵtext(23, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"input\", 12, 13);\n        i0.ɵɵlistener(\"keyup\", function TaskCreationComponent_Template_input_keyup_24_listener() {\n          return ctx.Projectsearch(ctx.EmpTaskCreate.value.client, ctx.EmpTaskCreate.value.project);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-icon\", 14);\n        i0.ɵɵtext(27, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-autocomplete\", 8, 15);\n        i0.ɵɵtemplate(30, TaskCreationComponent_mat_option_30_Template, 2, 3, \"mat-option\", 10);\n        i0.ɵɵtemplate(31, TaskCreationComponent_mat_option_31_Template, 2, 0, \"mat-option\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\")(33, \"mat-form-field\", 4);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_mat_form_field_click_33_listener() {\n          return ctx.getModule(ctx.EmpTaskCreate.value.client, ctx.EmpTaskCreate.value.project, \"\");\n        });\n        i0.ɵɵelementStart(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Module \");\n        i0.ɵɵelementStart(36, \"span\", 5);\n        i0.ɵɵtext(37, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"input\", 16, 17);\n        i0.ɵɵlistener(\"keyup\", function TaskCreationComponent_Template_input_keyup_38_listener() {\n          return ctx.getModule(ctx.EmpTaskCreate.value.client, ctx.EmpTaskCreate.value.project, ctx.EmpTaskCreate.value.project_map_id);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-icon\", 14);\n        i0.ɵɵtext(41, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"mat-autocomplete\", 18, 19);\n        i0.ɵɵlistener(\"optionSelected\", function TaskCreationComponent_Template_mat_autocomplete_optionSelected_42_listener($event) {\n          return ctx.onModuleSelected($event);\n        });\n        i0.ɵɵtemplate(44, TaskCreationComponent_mat_option_44_Template, 2, 3, \"mat-option\", 20);\n        i0.ɵɵtemplate(45, TaskCreationComponent_mat_option_45_Template, 2, 0, \"mat-option\", 11);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(46, \"div\", 21)(47, \"p\", 22)(48, \"b\");\n        i0.ɵɵtext(49, \"Quick View\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(50, \"p\", 23)(51, \"span\", 4);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_span_click_51_listener() {\n          return ctx.SelectedLink(ctx.EmpTaskCreateObj.QuickAccessList[0]);\n        });\n        i0.ɵɵelementStart(52, \"span\", 24);\n        i0.ɵɵtext(53);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"span\", 25);\n        i0.ɵɵtext(55, \"arrow_forward_ios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(56);\n        i0.ɵɵelementStart(57, \"span\", 25);\n        i0.ɵɵtext(58, \"arrow_forward_ios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(59);\n        i0.ɵɵelement(60, \"span\", 24);\n        i0.ɵɵtext(61, \" \\u00A0\\u00A0\\u00A0 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(62, \"hr\");\n        i0.ɵɵelementStart(63, \"div\", 26);\n        i0.ɵɵtemplate(64, TaskCreationComponent_div_64_Template, 62, 19, \"div\", 27);\n        i0.ɵɵelementStart(65, \"div\");\n        i0.ɵɵtemplate(66, TaskCreationComponent_span_66_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(67, \"div\", 28)(68, \"div\", 29)(69, \"button\", 30, 31);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_button_click_69_listener() {\n          return ctx.popclose();\n        });\n        i0.ɵɵtext(71, \" Back \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"button\", 32);\n        i0.ɵɵlistener(\"click\", function TaskCreationComponent_Template_button_click_72_listener() {\n          return ctx.SubmitTask();\n        });\n        i0.ɵɵtext(73, \" Submit \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n        const _r5 = i0.ɵɵreference(29);\n        const _r9 = i0.ɵɵreference(43);\n        let tmp_17_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.EmpTaskCreate);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnclt);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.clientList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.clientList || !ctx.EmpTaskCreateObj.clientList.length);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matAutocomplete\", _r5);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnappnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.projectList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.projectList || !ctx.EmpTaskCreateObj.projectList.length);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matAutocomplete\", _r9);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnmodnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.moduleList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.EmpTaskCreateObj.moduleList || !ctx.EmpTaskCreateObj.moduleList.length);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.EmpTaskCreateObj == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0] == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].client == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].client.name, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.EmpTaskCreateObj == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0] == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].project == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].project.name, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.EmpTaskCreateObj == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0] == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].module == null ? null : ctx.EmpTaskCreateObj.QuickAccessList[0].module.name, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreate.controls.data[\"controls\"]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_17_0 = ctx.EmpTaskCreate.get(\"data\")) == null ? null : tmp_17_0.length) == 0);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i12.MatIcon, i13.MatInput, i14.MatFormField, i14.MatLabel, i14.MatSuffix, i15.MatSelect, i16.MatOption, i17.MatAutocomplete, i17.MatAutocompleteTrigger, i18.MatDatepicker, i18.MatDatepickerInput, i18.MatDatepickerToggle],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];*[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.cursor[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.paddingSpace[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  margin: 5px;\\n}\\n\\n.tags[_ngcontent-%COMP%] {\\n  display: inline-block;\\n}\\n\\n.badge-blue[_ngcontent-%COMP%] {\\n  background-color: cadetblue;\\n}\\n\\n.tags[_ngcontent-%COMP%]   .badges[_ngcontent-%COMP%] {\\n  margin: 5px;\\n  padding: 10px;\\n  color: white;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.tags[_ngcontent-%COMP%]   .badges[_ngcontent-%COMP%]:hover {\\n  background-color: var(--global);\\n  color: white;\\n}\\n\\n.selectedDesign[_ngcontent-%COMP%] {\\n  background-color: var(--global);\\n  color: white;\\n}\\n\\n.alignMiddle[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n\\n.padsize[_ngcontent-%COMP%] {\\n  padding-left: 20px;\\n}\\n\\n.marginset[_ngcontent-%COMP%] {\\n  margin-top: 2px;\\n}\\n\\n.noBorder[_ngcontent-%COMP%]   .headers[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  border: 1px solid rgba(0, 0, 0, 0.164);\\n  background-color: #ededfd;\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n\\n.noBorder[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.164);\\n  background-color: #ffffff;\\n  border-right: 1px solid rgba(0, 0, 0, 0.164);\\n  border-left: 1px solid rgba(0, 0, 0, 0.164);\\n}\\n\\n.inputslong[_ngcontent-%COMP%] {\\n  width: 550px;\\n}\\n\\n.titlelong[_ngcontent-%COMP%] {\\n  width: 330px;\\n}\\n\\n.inputs[_ngcontent-%COMP%] {\\n  width: 1px;\\n  outline: 0;\\n}\\n\\n.outlinesnone[_ngcontent-%COMP%] {\\n  border: none;\\n  outline: none;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n  outline: 0;\\n  height: 50px;\\n  color: black;\\n  cursor: pointer;\\n  border: 1px solid #ffffff;\\n  border-radius: 3px;\\n  background-color: #ffffff;\\n}\\n\\n.widthset[_ngcontent-%COMP%] {\\n  width: 1px;\\n}\\n\\n.inputWidthTop[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.alignButtons[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.arrowClass[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n.my-class[_ngcontent-%COMP%]   .mat-select-arrow-wrapper[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.fonts[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n}\\n\\n.fullscreen[_ngcontent-%COMP%] {\\n  overflow-x: scroll;\\n}\\n\\n.circle-icon[_ngcontent-%COMP%] {\\n  width: 24px; \\n\\n  height: 24px; \\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 2px dashed lightgray;\\n  border-radius: 50%; \\n\\n}\\n\\n.circle-border[_ngcontent-%COMP%] {\\n  width: 24px; \\n\\n  height: 24px; \\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 2px dashed lightgray;\\n  border-radius: 50%;\\n}\\n\\n.badge[_ngcontent-%COMP%] {\\n  margin-right: 10px; \\n\\n  background: #007acc; \\n\\n  color: white; \\n\\n  border-radius: 4px; \\n\\n  padding: 3px 6px; \\n\\n}\\n\\n.icon-badge[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.icon-badge[_ngcontent-%COMP%]::before {\\n  content: \\\"{{ icon }}\\\";\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background: #007acc; \\n\\n  color: white; \\n\\n  border-radius: 4px; \\n\\n  padding: 3px 6px; \\n\\n}\\n\\n.cus-badge[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 18px;\\n  letter-spacing: 0em;\\n  text-align: left;\\n}\\n\\n.cus-badgeGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #d7f8e1;\\n  color: #057926;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeRed[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #fae6e6;\\n  color: #7f1111;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeLightGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #c2f8ff;\\n  color: #007787;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeYellow[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ffedcc;\\n  color: #966200;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeBlue[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ededfd;\\n  color: #2d2e8e;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeLightBlack[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  background-color: #eeeeef;\\n  color: #353537;\\n  padding: 2px 9px;\\n  margin-bottom: 0;\\n  font-size: 10px;\\n  font-weight: 400;\\n  margin-top: 5px;\\n  width: 120px;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.mains[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 97%;\\n  border: 1px solid blue;\\n  margin-top: 50px;\\n  display: flex;\\n  align-items: center;\\n  border-radius: 5px;\\n}\\n\\n.inputs[_ngcontent-%COMP%] {\\n  height: 100%;\\n  flex: 30;\\n}\\n\\n.inpt[_ngcontent-%COMP%] {\\n  height: 100%;\\n  border: none;\\n  width: 70%;\\n  outline: none;\\n}\\n\\n.main_1[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.flex[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.flex2[_ngcontent-%COMP%] {\\n  flex: 4;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.s[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 15px;\\n  display: flex;\\n  justify-content: center;\\n  background-color: blueviolet;\\n}\\n\\n.ctrl[_ngcontent-%COMP%] {\\n  color: rgb(191, 185, 185);\\n}\\n\\n.dot[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  height: 34px;\\n  width: 34px;\\n  border-radius: 19px;\\n  display: flex;\\n  justify-content: center;\\n  border: 1px dashed grey;\\n  align-items: center;\\n}\\n\\n.cursor[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.high-risk[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.low-risk[_ngcontent-%COMP%] {\\n  color: #6fddff;\\n}\\n\\n.medium-risk[_ngcontent-%COMP%] {\\n  color: #ffcc00;\\n}\\n\\n.tag-icon-before[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n.selected-date[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.cus-taskCreationMain[_ngcontent-%COMP%] {\\n  border-radius: 6px;\\n}\\n\\n.cus-taskCreateContainer1[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 730px;\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n  gap: 10px;\\n  margin-bottom: 16px;\\n}\\n\\n.cus-taskCreateContainer1[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.cus-taskCreateContainer2[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 700px;\\n  display: grid;\\n  grid-template-columns: repeat(3, auto);\\n  gap: 20px;\\n}\\n\\n.cus-taskCreateGrid100[_ngcontent-%COMP%] {\\n  grid-column-start: 1;\\n  grid-column-end: 4;\\n}\\n\\n.cus-taskCreateContainer3[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 735px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  gap: 10px;\\n}\\n\\n.cus-quickView[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 730px;\\n  box-shadow: 0 0 6px rgba(0, 0, 0, 0.219);\\n  border-radius: 6px;\\n  padding: 10px;\\n  margin: 20px 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n}\\n\\n.alignvertical[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n\\n.fontsize[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.pointer[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormArray","imp","fromEvent","debounceTime","distinctUntilChanged","tap","startWith","switchMap","finalize","takeUntil","map","MatAutocompleteTrigger","COMMA","ENTER","IconDialogComponent","MatDatepicker","moment","MatSelect","MatSelectTrigger","DevTypeDialogComponent","i0","ɵɵelementStart","ɵɵlistener","TaskCreationComponent_mat_option_16_Template_mat_option_click_0_listener","ɵɵrestoreView","_r17","ctx_r16","ɵɵnextContext","ɵɵresetView","resetProjectAndModule","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","clt_r15","name","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","TaskCreationComponent_mat_option_30_Template_mat_option_click_0_listener","_r20","ctx_r19","resetModule","appnm_r18","modnm_r21","TaskCreationComponent_div_64_mat_option_15_Template_mat_option_click_0_listener","restoredCtx","_r38","devtypes_r36","$implicit","ctx_r37","selectDevType","text","emp_r39","ɵɵpropertyInterpolate2","dep_r40","code","task","ɵɵtextInterpolate2","TaskCreationComponent_div_64_mat_option_61_Template_mat_option_click_0_listener","_r44","ctx_r43","dataIndex_r23","index","data_r22","ctx_r42","getprioritytype","get","value","pry_r41","id","ɵɵelement","ɵɵtemplate","TaskCreationComponent_div_64_mat_option_15_Template","TaskCreationComponent_div_64_Template_input_dateChange_20_listener","$event","_r46","ctx_r45","ChangeDateFormat","TaskCreationComponent_div_64_Template_input_dateChange_28_listener","ctx_r47","TaskCreationComponent_div_64_Template_mat_form_field_click_33_listener","ctx_r48","dropdown","TaskCreationComponent_div_64_Template_input_keyup_36_listener","ctx_r49","target","TaskCreationComponent_div_64_mat_option_42_Template","TaskCreationComponent_div_64_mat_option_43_Template","TaskCreationComponent_div_64_Template_mat_form_field_click_45_listener","ctx_r50","getdev","TaskCreationComponent_div_64_mat_option_54_Template","TaskCreationComponent_div_64_mat_option_55_Template","TaskCreationComponent_div_64_mat_option_61_Template","ctx_r12","EmpTaskCreateObj","devtypelist","_r25","sprstartdate","sprenddate","_r26","_r28","displayFndev","empList","length","_r32","displayFnDep","dependencylist","priorityList","TaskCreationComponent","fb","router","SpinnerService","errorHandler","datePipe","notify","shareService","apicall","taskapi","taskmanagerservice","sharedservice","dialog","overlay","overlayPositionBuilder","sharedDataService","Notification","constructor","OnSubmit","OnCancel","EmpTaskCreate","dataIndex","chipSelectedemp","array","chipSelectedempid","separatorKeysCodes","autocompleteTrigger","matcommodityAutocomplete","commodityInput","datepickerInput","datepickerInputs","picker","picker1","picker2","stories_Id","icon","icons","currentpagecom","selectedDate","selectedDates","fastag","squarecheck","new_icon","dependiciestip","fastagename","taskstartdate","taskenddate","devtypearr","employe_name","dates","has_nextcom","has_previouscom","datest","devTypeSelect","matSelects","iconElement","isShowType","selectedDevType","startsDate","depInput","devTypeSelectOpenState","selectTrigger","searchTerm","items","filteredResults","actualStarts","storyName","sprintName","selectedMappingId","borderColor","borderColors","borderstart","borderend","borderdev","currentDate","quickviewlist","clientname","modulename","projectname","projectId","QuickAccessList","selectedNav","clientList","projectList","moduleList","createArray","from_date","to_date","type","statusListData","toSelectDropDown","toSelectDependency","submitValidation","ngOnInit","transform","sprintfromdate","sprinttodate","console","log","undefined","Date","group","client","project","project_map_id","data","developer","dependency_id","priority_type","key","getlatestTasks","getdevtype","getPriority","AddTask","story_Id","setDevTypeList","popclose","emit","ApiCall","tasksApi","api","QuickAccessProjects","subscribe","results","datas","error","handleError","hide","SelectedLink","moduledata","module","patchValue","clearTags","clientsearch","Typedata","queries","query","status","displayFnclt","clt","Projectsearch","clientdata","projectSearch","displayFnappnm","appnm","getModule","projectdata","moduleSearch","displayFnmodnm","mod","show","devTypeDD","find","c","dataForTask","FormGroupArray","start_date","end_date","dev_type_name","priority_type_color","control","push","deleteTask","removeAt","date","e","setValue","ChangeDateFormats","datepipe","startdateclick","startendclick","getdevTypeId","multiple_data","SubmitTask","story_id","warning","details","i","obj","project_id","mapping_id","storyBasedTaskCreation","description","reset","success","message","BackToSummary","controls","removedemp","emp","indexOf","splice","empInput","nativeElement","empSelected","event","option","selectempByName","isLoading","task_employeesearch_createproj","showWarning","develops","at","valueChanges","pipe","task_employeesearch_create","selectemployee","dep","selectdependencies","selectdependecies","getempData","employee_id","employeeautocomplete","setTimeout","autocompletetrigger","panel","x","scrollTop","panelClosingActions","scrollHeight","elementHeight","clientHeight","atBottom","task_employeesearch","datapagination","concat","has_next","has_previous","get_Priority","selectedPriority","color","chipList","addSection","dependencysearch","devkeyvalue","dependencytype","keyvalue","openIconDialog","dialogRef","open","afterClosed","selectedOption","onDateSelected","format","openDatepicker","onDateSelecteds","openDatepickers","setSelectedDevType","devTypeName","opencalendar","opencalendars","opendependency","openDevTypeSelect","devTypeSelectList","toArray","iconRect","getBoundingClientRect","panelClass","style","left","top","bottom","isDevTypeSelectOpen","openDevTypeDialog","devTypeList","filterItems","filter","item","toLowerCase","includes","emp_type","get_type","devtype","getIconColor","onModuleSelected","changeBorder","changeBorders","taskpatch","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","NgxSpinnerService","ErrorHandlingServiceService","i4","DatePipe","ToastrService","SharedService","i5","ApicallserviceService","TaskApi","i6","TaskManagerService","i7","i8","MatDialog","i9","Overlay","OverlayPositionBuilder","i10","ShareddataService","i11","NotificationService","selectors","viewQuery","TaskCreationComponent_Query","rf","ctx","decls","vars","consts","template","TaskCreationComponent_Template","TaskCreationComponent_Template_mat_form_field_click_7_listener","TaskCreationComponent_Template_input_keyup_12_listener","TaskCreationComponent_mat_option_16_Template","TaskCreationComponent_mat_option_17_Template","TaskCreationComponent_Template_mat_form_field_click_19_listener","TaskCreationComponent_Template_input_keyup_24_listener","TaskCreationComponent_mat_option_30_Template","TaskCreationComponent_mat_option_31_Template","TaskCreationComponent_Template_mat_form_field_click_33_listener","TaskCreationComponent_Template_input_keyup_38_listener","TaskCreationComponent_Template_mat_autocomplete_optionSelected_42_listener","TaskCreationComponent_mat_option_44_Template","TaskCreationComponent_mat_option_45_Template","TaskCreationComponent_Template_span_click_51_listener","TaskCreationComponent_div_64_Template","TaskCreationComponent_span_66_Template","TaskCreationComponent_Template_button_click_69_listener","TaskCreationComponent_Template_button_click_72_listener","_r1","_r5","_r9","tmp_17_0"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\task-creation\\task-creation.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\task-creation\\task-creation.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, FormGroupDirective, FormArrayName } from '@angular/forms';\r\n\r\n\r\nimport { Overlay, OverlayPositionBuilder } from '@angular/cdk/overlay';\r\n// import { ComponentPortal } from '@angular/cdk/portal';\r\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles'\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nimport { ApicallserviceService } from 'src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { debounceTime, distinctUntilChanged, tap, filter,startWith, switchMap, finalize, takeUntil, map } from 'rxjs/operators';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ViewChild } from '@angular/core';\r\nimport { TaskManagerService } from '../task-manager.service';\r\nimport { SharedService } from 'src/app/service/shared.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IconDialogComponent } from '../icon-dialog/icon-dialog.component'; \r\nimport { MatDatepicker, MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { Moment } from 'moment';\r\nimport * as moment from 'moment';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { MatSelectTrigger } from '@angular/material/select';\r\n// import { MatDialog } from '@angular/material/dialog';\r\nimport { DevTypeDialogComponent } from '../dev-type-dialog/dev-type-dialog.component';\r\nimport { ShareddataService } from '../shareddata.service';\r\nimport { data } from 'jquery';\r\nimport { NotificationService } from 'src/app/service/notification.service';\r\n\r\n\r\n\r\nexport interface emplistss {\r\n  id: string;\r\n  name: any\r\n}\r\n@Component({\r\n  selector: 'app-task-creation',\r\n  templateUrl: './task-creation.component.html',\r\n  styleUrls: ['./task-creation.component.scss'],\r\n  providers: [imp.TaskApi]\r\n\r\n})\r\n\r\n\r\nexport class TaskCreationComponent implements OnInit {\r\n  [x: string]: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private SpinnerService: imp.NgxSpinnerService,\r\n    private errorHandler: imp.ErrorHandlingServiceService, private datePipe: DatePipe, private notify: imp.ToastrService,\r\n    private shareService: imp.SharedService,\r\n    private apicall: ApicallserviceService, private taskapi: imp.TaskApi, private taskmanagerservice: TaskManagerService, private sharedservice:SharedService,\r\n    private dialog: MatDialog, private overlay: Overlay, private overlayPositionBuilder: OverlayPositionBuilder, private sharedDataService: ShareddataService,private Notification:NotificationService\r\n  ) { }\r\n  @Output() OnSubmit = new EventEmitter<any>();\r\n  @Output() OnCancel = new EventEmitter<any>();\r\n\r\n  EmpTaskCreate: FormGroup;\r\n  dataIndex: FormGroup\r\n\r\n  // empList: emplistss[];\r\n  empList: Array<developer>;\r\n  // public chipSelectedemp: emplistss[] = [];\r\n  public chipSelectedemp = [];\r\n\r\n  array = [];\r\n  public chipSelectedempid = [];\r\n   readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  @ViewChild(MatAutocompleteTrigger) autocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild('emp') matcommodityAutocomplete: MatAutocomplete;\r\n  @ViewChild('empInput') commodityInput: any;\r\n  @ViewChild('datepickerInput') datepickerInput: any;\r\n  @ViewChild('datepickerInputs') datepickerInputs: any;\r\n  @ViewChild(MatDatepicker) picker: MatDatepicker<Moment>;\r\n  @ViewChild(MatDatepicker) picker1: MatDatepicker<Moment>;\r\n  @ViewChild(MatDatepicker) picker2: MatDatepicker<Moment>;\r\n\r\n\r\n  \r\n  // @ViewChild('employee') matcommodityAutocomplete: MatAutocomplete;\r\n  // @ViewChild('inputemployeeid') commodityInput: any;\r\n  stories_Id:any; \r\n  icon : any ;\r\n  icons : any = null;\r\n  currentpagecom:number=1\r\n  selectedDate: Moment;\r\n  selectedDates : Moment;\r\n  fastag:string='fa-solid fa-tag'\r\n  squarecheck:string='fa-check-square-o'\r\n  new_icon:string='fa-user-plus'\r\n  dependiciestip:string=\"\"\r\n  fastagename:string=\"\"\r\n  taskstartdate:string=\"\"\r\n  taskenddate:string=\"\"\r\n  devtypearr:any\r\n  employe_name:string=\"\"\r\n  dates: string = null;\r\n  has_nextcom:boolean=false\r\n  has_previouscom:boolean=false\r\n  datest: string = null;\r\n  @ViewChild('devTypeSelect') devTypeSelect: MatSelect;\r\n  @ViewChildren(MatSelect) matSelects: QueryList<MatSelect>;\r\n  @ViewChild('iconElement') iconElement: ElementRef;\r\n  isShowType: boolean = false;\r\n  selectedDevType: string; \r\n  @ViewChild('startsDate') startsDate : ElementRef;  \r\n  @ViewChild('depInput') depInput : MatSelect;\r\n  devTypeSelectOpenState: boolean[] = [];\r\n  // @ViewChild('devTypeSelect') devTypeSelect: MatSelect;\r\n  @ViewChild(MatSelectTrigger) selectTrigger: MatSelectTrigger;\r\n  searchTerm: string = '';\r\n  items: string[] ;\r\n  filteredResults: string[];\r\n  sprstartdate : any = '';\r\n  sprenddate : any = '';\r\n  actualStarts : any = '';\r\n  storyName: any = '';\r\n  sprintName: any = '';\r\n  selectedMappingId: any;\r\n  borderColor: string = '';\r\n  borderColors: string = '';\r\n  borderstart: string = '';\r\n  borderend: string = '';\r\n  borderdev: string = '';\r\n  currentDate: any = '';\r\n  quickviewlist:any\r\n  clientname:any\r\n  modulename:any\r\n  projectname:any\r\n  projectId:any\r\n\r\n  EmpTaskCreateObj = {\r\n    QuickAccessList: [],\r\n    selectedNav: '',\r\n    clientList: [],\r\n    projectList: [],\r\n    moduleList: [],\r\n    createArray: [],\r\n    from_date: '',\r\n    to_date: '',\r\n    task: '',\r\n    type: '',\r\n    devtypelist: [],\r\n    statusListData: '',\r\n    toSelectDropDown: null, \r\n    toSelectDependency: null,\r\n    submitValidation: false,\r\n    dependencylist: [], \r\n    priorityList:[]\r\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.sprstartdate = this.datePipe.transform(this.sharedDataService?.sprintfromdate?.value, 'yyyy-MM-dd') \r\n    this.sprenddate = this.datePipe.transform(this.sharedDataService?.sprinttodate?.value, 'yyyy-MM-dd') \r\n    this.storyName = this.sharedDataService?.storyName.value;\r\n    this.sprintName = this.sharedDataService?.sprintName.value;\r\n    this.clientname=this.sharedDataService?.clientname.value\r\n    console.log( \"clientname=\",this.clientname)\r\n    this.modulename=this.sharedDataService?.modulename.value\r\n    console.log( \"clientname=\",this.modulename)\r\n    this.projectname=this.sharedDataService?.projectname.value\r\n    console.log( \"clientname=\",this.projectname)\r\n    \r\n\r\n\r\n    \r\nif(this.sprstartdate == null || this.sprstartdate == '' ||this.sprstartdate == undefined){\r\n  // this.sprstartdate= this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n}\r\nelse{\r\n  this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n}\r\n\r\nif(this.sprenddate == null || this.sprenddate == '' || this.sprenddate == undefined){\r\n}\r\nelse{\r\n  this.currentDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n}\r\n\r\n\r\n    this.EmpTaskCreate = this.fb.group({\r\n      client: [''],\r\n      project: [''], \r\n      project_map_id:[''],\r\n      // task: '',\r\n      \r\n      data: new FormArray([\r\n         \r\n      ])\r\n\r\n     \r\n    })\r\n\r\n    this.dataIndex = this.fb.group({\r\n      task: '',\r\n      type: '',\r\n      developer: '' ,\r\n      dependency_id: '',\r\n      priority_type: '',\r\n      \r\n      \r\n      \r\n\r\n    })\r\n    let key: any = \"\"\r\n    this.getlatestTasks() \r\n    this.getdevtype() \r\n    this.getPriority()\r\n    // this.getemp(key);\r\n    this.AddTask()\r\n    let id =this.sharedDataService.story_Id.value;\r\n    console.log(\"story id\",id)\r\n    if (id==0){\r\n      this.stories_Id = \"\";\r\n    }\r\n    else{\r\n      this.stories_Id =id\r\n    }\r\n    \r\n\r\n    this.sharedDataService.setDevTypeList(this.EmpTaskCreateObj.devtypelist);\r\n\r\n    \r\n  }\r\n  popclose() {\r\n   \r\n    this.OnSubmit.emit()\r\n  }\r\n\r\n  // popclose(){\r\n  //  let startdate=this.sprstartdate || this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n  //  let enddate=this.sprenddate || this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n  //   this.EmpTaskCreate.reset()\r\n  //   this.FormGroupArray.patchValue({\r\n  //     \"start_date\":startdate,\r\n  //      \"end_date\":enddate\r\n  //   })\r\n \r\n  // }\r\n\r\n\r\n  // story_TaskViewData:any;\r\n  // getTaskEdit(task_ID) {\r\n\r\n  //   this.taskmanagerservice.getStories_taskView(task_ID)\r\n  //   .subscribe(result => {\r\n  //     this.SpinnerService.hide();\r\n  //     console.log(\"story task View\", result)\r\n  //     this.story_TaskViewData = result;\r\n\r\n     \r\n\r\n  //     this.ScheduleLeasedForm.patchValue({\r\n  //       term_number: data.term_number,\r\n  //       start_date: data.start_date,\r\n  //       end_date: data.end_date,\r\n  //       term_period: this.termPeriod,\r\n  //       rent_amount: data.rent_amount,\r\n  //       amenties_amount: data.amenties_amount,\r\n  //       maintenance_amount: data.maintenance_amount,\r\n  //       rent_increment: data.rent_increment,\r\n  //       amenties_increment: data.amenties_increment,\r\n  //       maintenance_increment: data.maintenance_increment,\r\n  //       recurring_frequency: data?.recurring_frequency.id,\r\n  //       recurring_date: data.recurring_date,\r\n  //       remarks: data.remarks,\r\n  //       edit_flag: data.edit_flag,\r\n  //       renttype: data?.renttype.id,\r\n  //     });\r\n\r\n\r\n\r\n  //   }, (error) => {\r\n  //     this.errorHandler.handleError(error);\r\n  //     this.SpinnerService.hide();\r\n  //   }\r\n    \r\n  //   )\r\n   \r\n  // }\r\n\r\n\r\n\r\n  getlatestTasks() {\r\n    this.apicall.ApiCall(\"get\", this.taskapi.tasksApi.api.QuickAccessProjects)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.EmpTaskCreateObj.QuickAccessList = datas;\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n\r\n  SelectedLink(data) {\r\n    this.EmpTaskCreateObj.selectedNav = data?.id\r\n    console.log(data, this.EmpTaskCreateObj.selectedNav)\r\n    let moduledata = {\r\n      name: data?.module?.name,\r\n      id: data?.id \r\n    }\r\n    this.EmpTaskCreate.patchValue({\r\n      client: data.client,\r\n      project: data?.project,\r\n      project_map_id: moduledata  }) \r\n      \r\n  }\r\n\r\n  // data?.client?.name}} >> {{data?.module?.name}} >> {{data?.project?.name}} \r\n\r\n\r\n  clearTags() {\r\n    this.EmpTaskCreateObj.selectedNav = '';\r\n\r\n  }\r\n\r\n\r\n\r\n  clientsearch(Typedata) {\r\n\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch +\r\n      this.taskapi.tasksApi.queries.query + Typedata + '&' +\r\n      this.taskapi.tasksApi.queries.status + 2)\r\n\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.clientList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n\r\n  }\r\n\r\n  displayFnclt(clt?: interfacedatas): string | undefined {\r\n    return clt ? clt.name : undefined;\r\n  }\r\n\r\n\r\n  Projectsearch(clientdata, Typedata) {\r\n    if(clientdata?.id == undefined){\r\n      return false \r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch+'/'+clientdata?.id+'?'+ this.taskapi.tasksApi.queries.query + Typedata +\r\n     '&' + this.taskapi.tasksApi.queries.status + 2) \r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.projectList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  displayFnappnm(appnm?: interfacedatas): string | undefined {\r\n    return appnm ? appnm.name : undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n  getModule(clientdata, projectdata, Typedata) {\r\n    if(clientdata?.id == undefined || projectdata?.id == undefined){\r\n      return false \r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch+projectdata?.id +'?'+ 'client_id='+clientdata?.id +'&' +  this.taskapi.tasksApi.queries.query +\r\n     Typedata + '&' + this.taskapi.tasksApi.queries.status + 2 )\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.moduleList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n  displayFnmodnm(mod?: interfacedatas): string | undefined {\r\n    return mod ? mod.name : undefined;\r\n  }\r\n\r\n\r\n  getdevtype() {\r\n    this.SpinnerService.show()\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD)\r\n      .subscribe((results: any[]) => {\r\n        this.SpinnerService.hide() \r\n        let datas = results[\"data\"];\r\n        this.devtypearr=datas\r\n        this.EmpTaskCreateObj.devtypelist = datas;\r\n        if(this.EmpTaskCreateObj.devtypelist?.length > 0){\r\n          // this.EmpTaskCreateObj.statusListData = this.EmpTaskCreateObj.devtypelist[0]?.id  \r\n          this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == 1);\r\n          console.log(\"---------> data for dropdown\", this.EmpTaskCreateObj.toSelectDropDown, this.EmpTaskCreateObj.devtypelist)\r\n        }\r\n        \r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n\r\n\r\n  get dataForTask(): FormGroup {\r\n    // this.array = [];\r\n    // this.chipSelectedemp=[];\r\n    // this.chipSelectedempid=[];\r\n    let FormGroupArray = this.fb.group({\r\n      // start_date: [this.sprstartdate || this.datePipe.transform(new Date(), 'yyyy-MM-dd'), Validators.required],\r\n      // end_date:  [this.sprenddate || this.datePipe.transform(new Date(), 'yyyy-MM-dd'), Validators.required], \r\n      start_date:'',\r\n      end_date:'',\r\n      dev_type_name: this.EmpTaskCreateObj?.toSelectDropDown,\r\n      type: '',\r\n      task: '',\r\n      dependency_id:'',\r\n      priority_type:1,\r\n      // title:'',\r\n      // devtype: '',\r\n      developer:'',\r\n      priority_type_color:'#ffcc00',\r\n    })\r\n    \r\n    return FormGroupArray\r\n  }\r\n\r\n  AddTask(){\r\n    let control = this.EmpTaskCreate.get(\"data\") as FormArray;\r\n    control.push(this.dataForTask)\r\n  }\r\n  deleteTask(index){ \r\n    let control = this.EmpTaskCreate.get(\"data\") as FormArray;\r\n    control.removeAt(index) \r\n  }\r\n\r\n  ChangeDateFormat(index, key, date,e){\r\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n    // this.taskstartdate=\"Start date :\"+new Date(this.datepipe.transform(e.value,'yyyy-MM-dd'));\r\n    this.actualStarts = (this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n    this.borderstart = '#5c52ed'\r\n\r\n  }\r\n  ChangeDateFormats(index, key, date,e){\r\n    this.EmpTaskCreate.get('data')['controls'][index].get('end_date').setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n  \r\n    this.taskenddate=\"End date :\"+this.datepipe.transform(e, 'yyyy-MM-dd')\r\n  }\r\n  startdateclick(date){\r\n    this.taskstartdate=\"Start date :\"+this.datepipe.transform(date,'yyyy-MM-dd')\r\n\r\n  }\r\n  startendclick(date){\r\n    this.taskenddate=\"End date :\"+this.datepipe.transform(date, 'yyyy-MM-dd')\r\n\r\n  }\r\n\r\n  getdevTypeId(index, data, key){\r\n    console.log(index, data, key) \r\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(data?.id)\r\n    this.EmpTaskCreate.get('data')['controls'][index].get('type').setValue(data?.id)\r\n    let multiple_data = ['Management', 'Planning', 'Meeting']\r\n    // if (multiple_data.includes(data.text) == false){\r\n      // if(this.chipSelectedempid[index].length > 1)\r\n      //   {\r\n      //     this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([this.chipSelectedempid[index][0]])\r\n      //   this.chipSelectedemp[index] = [this.chipSelectedemp[index][0]]\r\n      //   this.chipSelectedempid[index] = [this.chipSelectedempid[index][0]]\r\n      // }\r\n    // }\r\n    // this.selectedDevType = data\r\n    // this.yourForm.get('dev_type_name').setValue(devtype.text);\r\n    // this.EmpTaskCreate.get('data')['controls'][index].get(\"dev_type_name\").setValue(data)\r\n    this.fastag='fa-solid fa-tags'\r\n    this.fastagename=data.text\r\n    this.borderColor = '#5c52ed';\r\n  }\r\n\r\n  SubmitTask(){\r\n    let data = this.EmpTaskCreate.value\r\n\r\n    data.data[0].story_id = this.stories_Id; \r\n\r\n    console.log(\"EMP Data\", data)\r\n    // data = [...data,{story_id: this.stories_Id}]\r\n    // data.push({story_id: this.stories_Id})\r\n    if(data?.project_map_id?.id == null || data?.project_map_id?.id == '' ||data?.project_map_id?.id == undefined){\r\n      this.notify.warning(\"Module Not Selected\")\r\n      return false; \r\n    }\r\n    if(data.data[0].task == null || data.data[0].task == '' || data.data[0].task ==  undefined)\r\n    {\r\n      this.notify.warning(\"Please Enter the Task Name\")\r\n      return false; \r\n    }\r\n    if(data.data[0].type == null || data.data[0].type == '' || data.data[0].type ==  undefined)\r\n    {\r\n      this.notify.warning(\"Please Select the Type\")\r\n      return false; \r\n    }\r\n    // if(data.data[0].developer == null || data.data[0].developer == '' || data.data[0].developer ==  undefined)\r\n    // {\r\n    //   this.notify.warning(\"Please Select Task Assignee\")\r\n    //   return false; \r\n    // }\r\n    if(this.stories_Id !== '')\r\n    {\r\n      if(data.data[0].start_date == null || data.data[0].start_date == '' || data.data[0].start_date ==  undefined)\r\n      {\r\n        this.notify.warning(\"Please Select the Start Date\")\r\n        return false; \r\n      }\r\n      if(data.data[0].end_date == null || data.data[0].end_date == '' || data.data[0].end_date ==  undefined)\r\n      {\r\n        this.notify.warning(\"Please Select the End Date\")\r\n        return false; \r\n      }\r\n    }\r\n    if(data.data[0].priority_type == null || data.data[0].priority_type == '' || data.data[0].priority_type ==  undefined)\r\n    {\r\n      this.notify.warning(\"Please Select Task Priority\")\r\n      return false; \r\n    }\r\n    if(data?.data?.length == 0){\r\n      this.notify.warning(\"Please Fill Atleast One Task\")\r\n      return false; \r\n    }\r\n    let details =this.EmpTaskCreate.value.data\r\n    for (let i in details) {\r\n      details[i].dependency_id = details[i].dependency_id;\r\n     }\r\n     if(this.EmpTaskCreate.value.data[0].developer.id){\r\n      this.datas={\r\n        \"start_date\": this.EmpTaskCreate.value.data[0].start_date,     \r\n        \"end_date\": this.EmpTaskCreate.value.data[0].end_date,     \r\n        \"dev_type_name\": this.EmpTaskCreate.value.data[0].type.id,\r\n        \"type\": this.EmpTaskCreate.value.data[0].type.id,\r\n        \"task\": this.EmpTaskCreate.value.data[0].task,\r\n        \"dependency_id\": this.EmpTaskCreate.value.data[0]?.dependency_id?.id,\r\n        \"priority_type\": this.EmpTaskCreate.value.data[0].priority_type,\r\n        \"developer\": [\r\n          this.EmpTaskCreate.value.data[0].developer.id\r\n        ],\r\n        \"priority_type_color\": \"#FFCC00\",\r\n        \"story_id\":  this.stories_Id\r\n      }\r\n     }\r\n     else{\r\n      this.datas={\r\n        \"start_date\": this.EmpTaskCreate.value.data[0].start_date,     \r\n        \"end_date\": this.EmpTaskCreate.value.data[0].end_date,     \r\n        \"dev_type_name\": this.EmpTaskCreate.value.data[0].type.id,\r\n        \"type\": this.EmpTaskCreate.value.data[0].type.id,\r\n        \"task\": this.EmpTaskCreate.value.data[0].task,\r\n        \"dependency_id\": this.EmpTaskCreate.value.data[0]?.dependency_id?.id,\r\n        \"priority_type\": this.EmpTaskCreate.value.data[0].priority_type,\r\n       \r\n        \"priority_type_color\": \"#FFCC00\",\r\n        \"story_id\":  this.stories_Id\r\n      }\r\n     }\r\n  \r\n    console.log('datas', this.datas)\r\n    let obj = {\r\n      project_id: data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id , \r\n      data: [this.datas]\r\n      // story_id: this.stories_Id\r\n      \r\n      \r\n    }\r\n    this.EmpTaskCreateObj.submitValidation = true \r\n    this.SpinnerService.show()\r\n    this.taskmanagerservice.storyBasedTaskCreation(obj)\r\n    .subscribe(results=>{\r\n      if(results.code){\r\n    this.SpinnerService.hide()\r\n      this.notify.error(results.description)\r\n      this.EmpTaskCreate.get('client').reset()\r\n      this.EmpTaskCreate.get('project').reset()\r\n        this.EmpTaskCreate.get('project_map_id').reset()\r\n        this.dataIndex.get('task').reset()\r\n        this.dataIndex.get('type').reset()\r\n        this.dataIndex.get('developer').reset()\r\n        this.dataIndex.get('dependency_id').reset()\r\n        this.dataIndex.get('priority_type').reset()\r\n        this.dataIndex.get('priority_type').reset()\r\n      this.fastag='fa-solid fa-tag'\r\n      this.squarecheck='fa-check-square-o'\r\n      this.new_icon='fa-user-plus'\r\n      this.EmpTaskCreateObj.submitValidation = false \r\n      this.EmpTaskCreate.reset()\r\n      // this.EmpTaskCreate.reset()\r\n      this.OnSubmit.emit() \r\n      return true\r\n    }\r\n      else{\r\n        this.SpinnerService.hide()\r\n        this.EmpTaskCreate.get('client').reset()\r\n        this.EmpTaskCreate.get('project').reset()\r\n        this.EmpTaskCreate.get('project_map_id').reset()\r\n        this.dataIndex.get('task').reset()\r\n        this.dataIndex.get('type').reset()\r\n        this.dataIndex.get('developer').reset()\r\n        this.dataIndex.get('dependency_id').reset()\r\n        this.dataIndex.get('priority_type').reset()\r\n        this.dataIndex.get('priority_type').reset()\r\n        let datas = this.dataIndex.get('task') as FormArray\r\n        // datas.clear()\r\n    \r\n      this.fastag='fa-solid fa-tag'\r\n      this.notify.success(results.message)\r\n      this.squarecheck='fa-check-square-o'\r\n      this.new_icon='fa-user-plus'\r\n      this.EmpTaskCreate.get('data')['controls'][0].get('priority_type').setValue(1)\r\n      this.EmpTaskCreate.get('data')['controls'][0].get('priority_type_color').setValue('#ffcc00')\r\n      this.borderColor = '';\r\n      this.borderColors = '';\r\n      this.borderstart = '';\r\n      this.borderend = '';\r\n      this.borderdev = '';\r\n      this.EmpTaskCreate.reset()\r\n      this.OnSubmit.emit() \r\n      return true \r\n      \r\n      }\r\n\r\n    },\r\n    error=>{\r\n      this.SpinnerService.hide()\r\n    }) \r\n  \r\n\r\n  }\r\n\r\n  BackToSummary(){\r\n    this.OnCancel.emit()\r\n\r\n  }\r\n\r\n\r\n  resetProjectAndModule(){\r\n    this.EmpTaskCreate.controls['project'].reset()\r\n    this.EmpTaskCreate.controls['project_map_id'].reset()\r\n    this.empList=[]\r\n    this.EmpTaskCreateObj.projectList=[]\r\n  }\r\n  resetModule(){\r\n    this.EmpTaskCreate.controls['project_map_id'].reset()\r\n    this.empList=[]\r\n    this.EmpTaskCreateObj.projectList=[]\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  public removedemp(i, emp: emplistss) {\r\n    const index = this.chipSelectedemp[i].indexOf(emp);\r\n    // if (this.isEdit == true) {\r\n    //   return false\r\n    // }\r\n\r\n    if (index >= 0) {\r\n\r\n      this.chipSelectedemp[i].splice(index, 1);\r\n      console.log(this.chipSelectedemp[i]);\r\n      this.chipSelectedempid[i].splice(index, 1);\r\n      console.log(this.chipSelectedempid[i]);\r\n      this.empInput.nativeElement.value = '';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  public empSelected(event: MatAutocompleteSelectedEvent): void {\r\n    console.log('event.option.value', event.option.value)\r\n    this.selectempByName(event.option.value);\r\n    // this.empInput.nativeElement.value = '';\r\n    // console.log('chipSelectedempid', this.chipSelectedempid)\r\n  }\r\n  private selectempByName(emp) {\r\n    let multiple_data = ['Management', 'Planning', 'Meeting']\r\n      if (this.chipSelectedemp.length >= (0)){\r\n       \r\n        this.chipSelectedemp.push(emp);\r\n        this.chipSelectedempid.push(emp?.id);\r\n        \r\n      } \r\n      else{\r\n        this.chipSelectedemp = [emp];\r\n        this.chipSelectedempid = [emp?.id]\r\n      }\r\n    \r\n\r\n      \r\n      console.log(\"iddddd\", this.chipSelectedempid)\r\n      // this.EmpTaskCreate.get('data')['controls'].setValue(this.chipSelectedempid)\r\n  }\r\n\r\n  // getselectedfocusout(index){\r\n  //         this.EmpTaskCreate.get('data')['controls'][index].get(\"emp_id\").setValue(this.chipSelectedempid)\r\n\r\n  // }\r\n\r\n\r\n\r\n  isLoading = false;\r\n  dropdown(value){\r\n    this.projectId = this.EmpTaskCreate.get('project').value?.id;\r\n    if(this.projectId !== undefined && this.projectId !== null && this.projectId !== ''){\r\n      this.taskmanagerservice.task_employeesearch_createproj(value,1, this.projectId).subscribe(data=>{\r\n        this.empList=data['data']\r\n      })\r\n    }\r\n    else if(this.projectId===undefined || this.projectId===null || this.projectId===''){\r\n      this.Notification.showWarning('Module Not Selected')\r\n    }\r\n\r\n  }\r\n  // // developer name\r\n  develops(i){\r\n    \r\n    this.projectId = this.EmpTaskCreate.get('project').value?.id;\r\n    console.log(\"projectId\",this.projectId)\r\n    if(this.projectId !== undefined && this.projectId !== null && this.projectId !== '')\r\n    {\r\n      // let devkeyvalue: String = \"\";\r\n      // this.getemp(devkeyvalue);\r\n      (this.EmpTaskCreate.get('data') as FormArray).at(i).get('developer').valueChanges\r\n      // this.taskAddForm.get('developer').valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n            console.log('inside tap')\r\n          }),\r\n          switchMap(value => this.taskmanagerservice.task_employeesearch_createproj(value,1, this.projectId)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          \r\n          let datas = results[\"data\"];\r\n          this.empList = datas;\r\n          // this.EmpTaskCreateObj.devtypelist = this.empList;\r\n          // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\r\n          // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\r\n  \r\n        })\r\n  \r\n    }\r\n    else\r\n    {\r\n\r\n    // let devkeyvalue: String = \"\";\r\n    //   this.getemp(devkeyvalue);\r\n      (this.EmpTaskCreate.get('data') as FormArray).at(i).get('developer').valueChanges\r\n      // this.taskAddForm.get('developer').valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n            console.log('inside tap')\r\n  \r\n          }),\r\n          switchMap(value => this.taskmanagerservice.task_employeesearch_create(value,1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          \r\n          let datas = results[\"data\"];\r\n          this.empList = datas;\r\n          // this.EmpTaskCreateObj.devtypelist = this.empList;\r\n          // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\r\n          // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\r\n  \r\n        })\r\n      }\r\n\r\n  }\r\n\r\n\r\n//   getemp(keyvalue) {\r\n//     // let type = 2 // employee\r\n//     console.log(\"emp fun called\")\r\n//     let data = this.EmpTaskCreate.value;\r\n//     let projectId = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id\r\n//     if(projectId !== undefined && projectId !== null && projectId !=='')\r\n//     {\r\n//       this.taskmanagerservice.task_employeesearch_createproj(keyvalue, 1, projectId)\r\n//       .subscribe((results: any[]) => {\r\n//         this.SpinnerService.hide();\r\n//         let datas = results[\"data\"];\r\n//         this.empList = datas;\r\n//         console.log(\"emp data get \", this.empList)\r\n//       }, (error) => {\r\n//         this.errorHandler.handleError(error);\r\n//         this.SpinnerService.hide();\r\n//       })\r\n    \r\n//     }\r\n//  else\r\n//  {\r\n    \r\n//     // this.SpinnerService.show();\r\n//     this.taskmanagerservice.task_employeesearch_create(keyvalue, 1)\r\n//       .subscribe((results: any[]) => {\r\n//         this.SpinnerService.hide();\r\n//         let datas = results[\"data\"];\r\n//         this.empList = datas;\r\n//         console.log(\"emp data get \", this.empList)\r\n//       }, (error) => {\r\n//         this.errorHandler.handleError(error);\r\n//         this.SpinnerService.hide();\r\n//       })\r\n//     }\r\n//   }\r\nselectemployee(index,dep){\r\n  this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([dep.id])\r\n  // this.new_icon=\"fa-solid fa-\"+dep.name[0]\r\n  this.new_icon=\"fa-solid fa-user-check\"\r\n  this.employe_name=dep.name\r\n  console.log(\"this.new_icon\",this.new_icon)\r\n  this.borderColors = '#5c52ed'\r\n\r\n\r\n}\r\nselectdependencies(dataIndex,dep){\r\n  this.EmpTaskCreate.get('data')['controls'][dataIndex].get(\"dependency_id\").setValue(dep.id)\r\n  this.squarecheck='fa-square-check'\r\n  this.dependiciestip=dep.task\r\n  this.borderdev = '#5c52ed'\r\n}\r\nselectdependecies\r\n  public displayFndev(emp?: developer): string | undefined {\r\n    return emp ? emp.name : undefined;\r\n  }\r\n  getempData(e){\r\n    \r\n    this.employee_id=e\r\n  \r\n  }\r\n  employeeautocomplete() {\r\n    setTimeout(() => {\r\n      if (\r\n        this.matcommodityAutocomplete &&\r\n        this.autocompletetrigger &&\r\n        this.matcommodityAutocomplete.panel\r\n      ) {\r\n        fromEvent(this.matcommodityAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matcommodityAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompletetrigger.panelClosingActions)\r\n          )\r\n          .subscribe(x => {\r\n            const scrollTop = this.matcommodityAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matcommodityAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matcommodityAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_nextcom === true) {\r\n                this.taskmanagerservice.task_employeesearch(this.commodityInput.nativeElement.value, this.currentpagecom + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.empList = this.empList.concat(datas);\r\n                    if (this.empList.length >= 0) {\r\n                      this.has_nextcom = datapagination.has_next;\r\n                      this.has_previouscom = datapagination.has_previous;\r\n                      this.currentpagecom = datapagination.index;\r\n                    }\r\n                  },(error) => {\r\n                    this.errorHandler.handleError(error);\r\n                    this.SpinnerService.hide();\r\n                  })\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  // get emp() {\r\n  //   return this.taskAddForm.value.get('developer');\r\n  // }\r\n\r\n\r\n\r\n  // priority dropdown\r\n  getPriority() {\r\n    this.SpinnerService.show()\r\n    this.taskmanagerservice.get_Priority()\r\n      .subscribe((results: any[]) => {\r\n        this.SpinnerService.hide() \r\n        // let datas = results[\"data\"];\r\n        this.EmpTaskCreateObj.priorityList = results;\r\n        console.log(\"priority dropdown\",this.EmpTaskCreateObj.priorityList)\r\n        \r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  getprioritytype(index, data, key){\r\n    console.log(\"selected prioritys\",index, data) \r\n    this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(data)\r\n    this.selectedPriority = data;\r\n    let color =\"\"\r\n    if (this.selectedPriority === 1) {\r\n      color= '#ffcc00'; // Normal\r\n    } else if (this.selectedPriority === 2) {\r\n      color='red'; // High\r\n    } else if (this.selectedPriority === 3) {\r\n      color= '#6fddff'; // Low\r\n    }\r\n    this.EmpTaskCreate.get('data')['controls'][index].get('priority_type_color').setValue(color)\r\n\r\n  }\r\n\r\n  chipList=[];\r\n  addSection(i){\r\n    // this.chipList=[];\r\n    this.chipList.push(this.EmpTaskCreate.get('data')['controls'][i].get('developer').value)\r\n    console.log(\"add\",this.chipList)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// dependency\r\ndependencysearch(i) {\r\n  let data = this.EmpTaskCreate.value\r\nlet project_id=data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id \r\n\r\nif(project_id==undefined){\r\n  project_id=\"\"\r\n}\r\n  let devkeyvalue: String = \"\";\r\n  this.getdev(devkeyvalue);\r\n  (this.EmpTaskCreate.get('data') as FormArray).at(i).get('dependency_id').valueChanges\r\n  // this.taskAddForm.get('developer').valueChanges\r\n    .pipe(\r\n      debounceTime(100),\r\n      distinctUntilChanged(),\r\n      tap(() => {\r\n        this.isLoading = true;\r\n        console.log('inside tap')\r\n\r\n      }),\r\n      switchMap(value => this.taskmanagerservice.dependencytype(value,1,project_id)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.isLoading = false\r\n          }),\r\n        )\r\n      )\r\n    )\r\n    .subscribe((results: any[]) => {\r\n      \r\n      let datas = results[\"data\"];\r\n      this.EmpTaskCreateObj.dependencylist = datas;\r\n\r\n    })\r\n\r\n}\r\n\r\n\r\ngetdev(keyvalue) {\r\n// this.SpinnerService.show();\r\nlet data = this.EmpTaskCreate.value\r\nlet project_id=data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id \r\nif(project_id==undefined){\r\n  project_id=\"\"\r\n}\r\nthis.taskmanagerservice.dependencytype(keyvalue, 1,project_id)\r\n  .subscribe((results: any[]) => {\r\n    this.SpinnerService.hide();\r\n    let datas = results[\"data\"];\r\n    this.EmpTaskCreateObj.dependencylist = datas;\r\n  }, (error) => {\r\n    this.errorHandler.handleError(error);\r\n    this.SpinnerService.hide();\r\n  })\r\n}\r\n\r\n  displayFnDep(clt?: dependency): string | undefined {\r\n    return clt ? clt.task : undefined;\r\n  }\r\n  openIconDialog(icon: string) {\r\n    const dialogRef = this.dialog.open(IconDialogComponent, {\r\n      data: { icon },\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe((selectedOption: string) => {\r\n      if (selectedOption) {\r\n        // Handle the selected option\r\n        this.icons = selectedOption;\r\n      }\r\n    });\r\n  }\r\n  onDateSelected(event: MatDatepickerInputEvent<Moment>) {\r\n    if (event.value) {\r\n      this.selectedDate = moment(event.value);\r\n      this.dates = this.selectedDate.format('MMM DD');\r\n    }\r\n  }\r\n  openDatepicker(datepickerInput: any) {\r\n    if (this.datepickerInput && this.picker) {\r\n      this.picker.open();\r\n    }\r\n  }\r\n  onDateSelecteds(event: MatDatepickerInputEvent<Moment>) {\r\n    if (event.value) {\r\n      this.selectedDates = moment(event.value);\r\n      this.datest = this.selectedDates.format('MMM DD');\r\n    }\r\n  }\r\n  openDatepickers(datepickerInputs: any) {\r\n    if (this.datepickerInputs && this.picker1) {\r\n      this.picker1.open();\r\n    }\r\n  }\r\n \r\n  // openDevTypeSelect() {\r\n  //   this.devTypeSelect.open();\r\n  //   this.isShowType = true;\r\n    // const iconElement = this.iconElement.nativeElement;\r\n\r\n    // if (iconElement && this.matSelect) {\r\n    //   const positionStrategy = this.overlayPositionBuilder\r\n    //     .flexibleConnectedTo(iconElement)\r\n    //     .withPositions([\r\n    //       { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\r\n    //     ]);\r\n\r\n    //   const overlayRef = this.overlay.create({\r\n    //     positionStrategy,\r\n    //     hasBackdrop: true,\r\n    //     backdropClass: 'cdk-overlay-transparent-backdrop', // You can define this class in your CSS\r\n    //   });\r\n\r\n    //   this.matSelect.open();\r\n    //   overlayRef.attach(this.matSelect._getOverlayRef());\r\n    // }\r\n  // }payrollserv/paystatus_dropdown\r\n  setSelectedDevType(devTypeName: string) {\r\n    // this.selectedDevType = devTypeName;\r\n  }\r\n  opencalendar()\r\n  {\r\n    this.picker1.open();\r\n  }\r\n  opencalendars()\r\n  {\r\n    this.picker2.open();\r\n  }\r\n  opendependency()\r\n  {\r\n    this.depInput.open();\r\n  }\r\n  openDevTypeSelect(index: number) {\r\n    // Function to open the mat-select for the clicked \"fa-tags\" icon\r\n    const devTypeSelect = this.devTypeSelectList.toArray()[index];\r\n    \r\n    if (devTypeSelect) {\r\n      devTypeSelect.open();\r\n      \r\n      // Position the select panel below the icon\r\n      const iconElement = (event.target as HTMLElement);\r\n      const iconRect = iconElement.getBoundingClientRect();\r\n      devTypeSelect.panelClass = 'below-icon';\r\n      devTypeSelect.panel.nativeElement.style.left = iconRect.left + 'px';\r\n      devTypeSelect.panel.nativeElement.style.top = iconRect.bottom + 'px';\r\n    }\r\n  }\r\n\r\n  isDevTypeSelectOpen(index: number) {\r\n    // Function to check if the mat-select should be open for the given row\r\n    return this.devTypeSelectOpenState[index] === true;\r\n  }\r\n  // openDevTypeDialog() {\r\n  //   const dialogRef = this.dialog.open(DevTypeDialogComponent, {\r\n  //     data: { devTypeList: this.EmpTaskCreateObj.devtypelist },\r\n      \r\n  //   });\r\n  //   console.log(\"LISTED\", this.EmpTaskCreateObj.devtypelist)\r\n\r\n  //   dialogRef.afterClosed().subscribe((selectedOption: string) => {\r\n   \r\n  //     console.log('Selected Option: ', selectedOption);\r\n  //   });\r\n  // }\r\n  openDevTypeDialog() {\r\n    const dialogRef = this.dialog.open(DevTypeDialogComponent, {\r\n      data: { devTypeList: this.EmpTaskCreateObj.devtypelist },\r\n    });\r\n    console.log(\"LISTED\", this.EmpTaskCreateObj.devtypelist)\r\n  \r\n    dialogRef.afterClosed().subscribe((selectedOption: string) => {\r\n      console.log('Selected Option: ', selectedOption);\r\n    });\r\n  }\r\n\r\n  filterItems() {\r\n    this.filteredResults = this.items.filter(item =>\r\n      item.toLowerCase().includes(this.searchTerm.toLowerCase())\r\n    );\r\n  }\r\n  emp_type(index) {\r\n    let keyvalue: String = \"\";\r\n    this.get_type(keyvalue);\r\n    (this.EmpTaskCreate.get('data') as FormArray).at(index).get('developer').valueChanges\r\n      .pipe(\r\n        startWith(\"\"),\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n\r\n\r\n        }),\r\n\r\n        switchMap(value => this.taskmanagerservice.task_employeesearch(value, 1)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        let datapagination = results[\"pagination\"];\r\n        this.empList = this.empList.concat(datas);\r\n        if (this.empList.length >= 0) {\r\n          this.has_nextcom = datapagination.has_next;\r\n          this.has_previouscom = datapagination.has_previous;\r\n          this.currentpagecom = datapagination.index;\r\n        }\r\n      })\r\n  }\r\n  get_type(keyvalue) {\r\n    this.taskmanagerservice.task_employeesearch(keyvalue, 1)\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.empList = datas;\r\n\r\n      })\r\n  }\r\n\r\n  // openDatePickerDialog(event: MouseEvent) {\r\n  //   const dialogRef = this.dialog.open(DatepickerDropdownComponent, {\r\n  //     width: '250px', // Set the desired width\r\n  //     hasBackdrop: false, // Disable backdrop\r\n  //     position: { top: event.clientY + 'px', left: event.clientX + 'px' }, // Position the dialog at the cursor's location\r\n  //   });\r\n\r\n  selectDevType(devtype) {\r\n    // this.EmpTaskCreate.get('dev_type_name').setValue(devtype);\r\n    // this.EmpTaskCreate.get('data')['controls'].get('dev_type_name').setValue(devtype)\r\n    // this.EmpTaskCreateObj.toSelectDropDown = devtype\r\n    // this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == devtype.id);\r\n    // this.EmpTaskCreate.get('data')['controls'].get('dev_type_name').setValue(devtype?.id)\r\n  }\r\n\r\n  getIconColor(): string {\r\n    if (this.selectedPriority === 1) {\r\n      return '#ffcc00'; // Normal\r\n    } else if (this.selectedPriority === 2) {\r\n      return 'red'; // High\r\n    } else if (this.selectedPriority === 3) {\r\n      return '#6fddff'; // Low\r\n    }\r\n    return ''; // Default color if no selection\r\n  }\r\n  onModuleSelected(event: MatAutocompleteSelectedEvent): void {\r\n\r\n    if(event)\r\n    {\r\n    this.selectedMappingId = event.option.value;\r\n    // Do something with the selectedModule...\r\n    console.log('Selected Module:', this.selectedMappingId.mapping_id);\r\n    }\r\n    else\r\n    {\r\n     \r\n  \r\n    }\r\n}\r\nchangeBorder()\r\n{\r\n  this.borderstart = '#5c52ed'\r\n}\r\nchangeBorders()\r\n{\r\n  this.borderend = '#5c52ed'\r\n}\r\ntaskpatch(){\r\n  this.EmpTaskCreate.patchValue({\r\n        client:this.clientname,\r\n         project:this.projectname,\r\n         project_map_id:this.modulename\r\n        \r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport interface interfacedatas {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface developer {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface dependency {\r\n  id: string;\r\n  task: string;\r\n}\r\n\r\n\r\n","<div class=\"cus-taskCreationMain\" style=\"padding: 20px\">\r\n  <h3 style=\"font-weight: bold;\">Task creation</h3>\r\n  <!-- <div (click)=\"BackToSummary()\">\r\n      <span class=\"material-icons alignvertical\">arrow_back</span>\r\n      <span\r\n        *ngIf=\"sprintName\"\r\n        class=\"alignvertical textdecorationatag cus-badgeYellow\"\r\n        >{{ sprintName }} / {{ storyName }}\r\n      </span>\r\n    </div> -->\r\n\r\n  <form [formGroup]=\"EmpTaskCreate\" class=\"cus-taskCreateContainer\">\r\n    <!-- <div class=\"row\"  *ngIf=\"storyName\">\r\n            {{sprintName}} / {{storyName}}\r\n        </div> -->\r\n    <div>\r\n      <div class=\"cus-taskCreateContainer1\">\r\n        <div>\r\n          <mat-form-field (click)=\"clientsearch('')\">\r\n            <mat-label>Client <span style=\"color: red;\">*</span></mat-label>\r\n            <input\r\n              #cltInput\r\n              matInput\r\n              formControlName=\"client\"\r\n              [matAutocomplete]=\"clt\"\r\n              autocomplete=\"off\"\r\n              (keyup)=\"clientsearch(this.EmpTaskCreate.value.client)\"\r\n            />\r\n\r\n            <mat-autocomplete\r\n              #clt=\"matAutocomplete\"\r\n              [displayWith]=\"displayFnclt\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let clt of EmpTaskCreateObj.clientList\"\r\n                [value]=\"clt\"\r\n                (click)=\"resetProjectAndModule()\" title=\"{{clt.name}}\"\r\n              >\r\n                {{ clt.name }}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"!EmpTaskCreateObj.clientList ||!EmpTaskCreateObj.clientList.length\">\r\n                No Records Found\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <mat-form-field (click)=\" Projectsearch(\r\n            this.EmpTaskCreate.value.client,\r\n            ''\r\n          )\">\r\n            <mat-label>Project <span style=\"color: red;\">*</span></mat-label>\r\n            <input\r\n              #appnmInput\r\n              matInput\r\n              type=\"text\"\r\n              formControlName=\"project\"\r\n              [matAutocomplete]=\"appnm\"\r\n              autocomplete=\"off\"\r\n              (keyup)=\"\r\n                Projectsearch(\r\n                  this.EmpTaskCreate.value.client,\r\n                  this.EmpTaskCreate.value.project\r\n                )\r\n              \"\r\n            />\r\n            <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n            <mat-autocomplete\r\n              #appnm=\"matAutocomplete\"\r\n              [displayWith]=\"displayFnappnm\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let appnm of EmpTaskCreateObj.projectList\"\r\n                [value]=\"appnm\"\r\n                (click)=\"resetModule()\" title=\"{{appnm.name}}\"\r\n              >\r\n                {{ appnm.name }}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"!EmpTaskCreateObj.projectList || !EmpTaskCreateObj.projectList.length\">\r\n                No Records Found\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <mat-form-field (click)=\"  getModule(\r\n            this.EmpTaskCreate.value.client,\r\n            this.EmpTaskCreate.value.project,\r\n            ''\r\n          )\">\r\n            <mat-label>Module <span style=\"color: red;\">*</span></mat-label>\r\n            <input\r\n              #modnmInput\r\n              matInput\r\n              formControlName=\"project_map_id\"\r\n              autocomplete=\"off\"\r\n              (keyup)=\"\r\n                getModule(\r\n                  this.EmpTaskCreate.value.client,\r\n                  this.EmpTaskCreate.value.project,\r\n                  this.EmpTaskCreate.value.project_map_id\r\n                )\r\n              \"\r\n              [matAutocomplete]=\"modnm\"\r\n            />\r\n            <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n            <mat-autocomplete\r\n              #modnm=\"matAutocomplete\"\r\n              [displayWith]=\"displayFnmodnm\"\r\n              (optionSelected)=\"onModuleSelected($event)\"\r\n            >\r\n              <mat-option\r\n                *ngFor=\"let modnm of EmpTaskCreateObj.moduleList\"\r\n                [value]=\"modnm\" title=\"{{modnm.name}}\"\r\n              >\r\n                {{ modnm.name }}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"!EmpTaskCreateObj.moduleList ||!EmpTaskCreateObj.moduleList.length\">\r\n                No Records Found\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"cus-quickView\">\r\n        <p style=\"margin: 0; padding: 0\">\r\n          <b>Quick View</b>\r\n        </p>\r\n        <p class=\"cus-badgeBlue pointer\" style=\"margin-bottom: 0;margin-left: 20px;\"  >\r\n          <span (click)=\"SelectedLink( EmpTaskCreateObj.QuickAccessList[0])\">\r\n          \r\n            <span class=\"alignvertical\">\r\n              {{  EmpTaskCreateObj?.QuickAccessList[0]?.client?.name }}\r\n            </span>\r\n            <span class=\"material-icons fontsize alignvertical\"\r\n              >arrow_forward_ios</span\r\n            >{{ EmpTaskCreateObj?.QuickAccessList[0]?.project?.name}}\r\n            \r\n            <span class=\"material-icons fontsize alignvertical\"\r\n              >arrow_forward_ios</span\r\n            >{{ EmpTaskCreateObj?.QuickAccessList[0]?.module?.name }}\r\n            <span class=\"alignvertical\">\r\n              \r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;\r\n          </span>\r\n        </p>\r\n        <!-- <div class=\"cus-quickView\" *ngFor=\"let data of quickviewlist\">\r\n        <span>name:{{data.name}}</span>\r\n        </div> -->\r\n\r\n      </div>\r\n\r\n      <!-- <div class=\"col-sm-4 col-md-4 col-lg-4\">\r\n          <div\r\n            class=\"AccessTags\"\r\n            *ngIf=\"EmpTaskCreateObj?.QuickAccessList?.length > 0\"\r\n          >\r\n            <p>Quick Access:</p>\r\n\r\n            <ul\r\n              class=\"list-group\"\r\n              *ngFor=\"let data of EmpTaskCreateObj?.QuickAccessList\"\r\n            >\r\n              <li class=\"list-group-item cursor\">\r\n                <span class=\"material-icons alignMiddle\">label_important</span>\r\n                <span (click)=\"SelectedLink(data)\">\r\n                  {{ data?.client?.name }} >> {{ data?.module?.name }} >>\r\n                  {{ data?.project?.name }}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div> -->\r\n      <!-- <div class=\"table-responsive\">\r\n\r\n                <table formArrayName=\"data\" style=\"width: 100%;\">\r\n                    <tr *ngFor=\"let data of EmpTaskCreate.controls.data['controls']; let dataIndex = index\"\r\n                        [formGroupName]=\"dataIndex\" class=\"mains\">\r\n\r\n                        <td style=\"width: 55%; display: contents;\">\r\n                            <span class=\"main_1 flex cursor\"><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></span>\r\n                            <span class=\"inputs\">\r\n                                <input type=\"text\" placeholder=\"Task Name\" class=\"inpt inputslong\"\r\n                                    formControlName=\"task\">\r\n                            </span>\r\n                        </td>\r\n\r\n                        <td>\r\n                            <div  [style.color]=\"borderColor\"  matTooltip={{fastagename}} class=\"flex dot\" (click)=\"getdevtype()\"><i class=\"fa {{fastag}} cursor\"  style=\"    margin-left: -250%;\"\r\n                                    aria-hidden=\"true\" [matMenuTriggerFor]=\"afterMenu\"></i>\r\n                                    <mat-menu  #afterMenu=\"matMenu\" class=\"cdk-overlay-pane\" xPosition=\"after\" yPosition=\"below\">\r\n                                        <mat-option [value]=\"devtype.id\"\r\n                                        *ngFor=\"let devtype of EmpTaskCreateObj.devtypelist\"\r\n                                        (click)='getdevTypeId(dataIndex, devtype, \"dev_type_name\")'>\r\n                                        {{devtype.text}} </mat-option>\r\n                                      </mat-menu>\r\n                                </div>                   \r\n                           \r\n                        </td>\r\n\r\n                        <td>\r\n                            <div  [style.color]=\"borderColors\"  matTooltip={{employe_name}} class=\"flex dot\" ><i class=\"fa {{new_icon}} cursor\" style=\"margin-left: -200%;\" [matMenuTriggerFor]=\"afterMenus\" (click)=\"developer(dataIndex)\"></i>\r\n                             \r\n                                <mat-menu #afterMenus=\"matMenu\" class=\"cdk-overlay-pane\" xPosition=\"after\" yPosition=\"below\">\r\n                                        <input type=\"text\" matInput (click)=\"developer(dataIndex);$event.stopPropagation();\" formControlName=\"developer\">\r\n                                <mat-option *ngFor=\"let dep of empList\" [value]=\"dep\" (click)=\"selectemployee(dataIndex,dep)\" >\r\n                                    {{dep.name}}\r\n                                </mat-option>\r\n                             </mat-menu>\r\n                              \r\n                            </div>\r\n                        </td>\r\n\r\n                        <td>\r\n                            <div [style.color]=\"borderstart\" matTooltip='{{data.get(\"start_date\").value}}' class=\"flex dot\">\r\n                              \r\n                                    <input readonly placeholder=\"Start\" [matDatepicker]=\"picker1\" [style.color]=\"borderstart\" \r\n                                    formControlName=\"start_date\" style=\"margin-left: -112%;\" [min]=\"sprstartdate\" [max]=\"sprenddate\"\r\n                                    (dateChange)='ChangeDateFormat(dataIndex, \"start_date\", data.get(\"start_date\").value,$event)'\r\n                                    class=\"inputs outlinesnone widthset\" (dateInput)=\"changeBorder()\">\r\n                                <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker1\" [style.color]=\"borderstart\" >\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker1 [style.color]=\"borderstart\" ></mat-datepicker>\r\n                                     \r\n                                \r\n                            </div>\r\n\r\n                        </td>\r\n\r\n                        <td>\r\n                            <div  matTooltip='{{data.get(\"end_date\").value}}' class=\"flex dot \" [style.color]=\"borderend\">\r\n                                <input readonly placeholder=\"Start\" [matDatepicker]=\"picker2\" [min]='data.get(\"start_date\").value' [max]=\"sprenddate\"\r\n                                formControlName=\"end_date\" style=\"margin-left: -112%;\" style=\"margin-left: -115%;\"\r\n                                (dateChange)='ChangeDateFormats(dataIndex, \"end_date\", data.get(\"end_date\").value,$event)'\r\n                                class=\"inputs outlinesnone widthset\" (dateInput)=\"changeBorders()\" [style.color]=\"borderend\">\r\n                            <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker2\" [style.color]=\"borderend\">\r\n                            </mat-datepicker-toggle>\r\n                            <mat-datepicker #picker2 [style.color]=\"borderend\"></mat-datepicker>\r\n                            </div>\r\n\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                        <td>\r\n                            <div [style.color]=\"borderdev\" matTooltip={{dependiciestip}} class=\"flex dot \"><i class=\"fa {{squarecheck}} cursor\" style=\"margin-left: -75%;\" aria-hidden=\"true\" [matMenuTriggerFor]=\"afterMenud\" (click)=\"dependencysearch(dataIndex)\"></i>\r\n                                <mat-menu #afterMenud=\"matMenu\" class=\"cdk-overlay-pane\" xPosition=\"after\" yPosition=\"below\"  >\r\n                                    <input type=\"text\" matInput (click)=\"dependencysearch(dataIndex);$event.stopPropagation();\" formControlName=\"dependency_id\" >\r\n                                    <mat-option title=\"{{dep?.task}}\" *ngFor=\"let dep of EmpTaskCreateObj.dependencylist\" [value]=\"dep\" (click)=\"selectdependencies(dataIndex,dep)\">\r\n                                        {{ (dep?.task.length>25)?(dep?.task | slice:0:25)+'..':(dep?.task)}}\r\n                                    </mat-option>\r\n                               \r\n                                  </mat-menu>\r\n                            </div>\r\n\r\n                        </td>\r\n\r\n                        <div class=\"flex dot \"><i class=\"fa fa-flag cursor\" style=\"margin-left: -35%;\" aria-hidden=\"true\" [matMenuTriggerFor]=\"afterMenup\" (click)=\"dependencysearch(dataIndex)\"  [style.color]=\"data?.get('priority_type_color')?.value\"\r\n                            ></i>\r\n                            <mat-menu #afterMenup=\"matMenu\" xPosition=\"after\">\r\n                                <mat-option [value]=\"pry.id\"\r\n                                *ngFor=\"let pry of EmpTaskCreateObj.priorityList\"\r\n                                (click)='getprioritytype(dataIndex, pry.id, \"priority_type\")'>\r\n                                {{pry.text}} </mat-option>\r\n                           \r\n                              </mat-menu>\r\n                        </div>\r\n                        <div class=\"flex\" style=\"padding-right: 10px;\">\r\n                            <button class=\"flex btn btn-success pt-0 pb-0 cursor\"  (click)=\"SubmitTask()\">SAVE</button>\r\n                        </div>\r\n\r\n                    </tr>\r\n                </table>\r\n            </div>          -->\r\n      <!-- <form [formGroup]=\"\" \r\n            <mat-select #devTypeSelect formControlName=\"dev_type_name\" class=\"inputs arrowClass\">\r\n                <mat-option [value]=\"devtype\" *ngFor=\"let devtype of EmpTaskCreateObj.devtypelist\" (click)='getdevTypeId(dataIndex, data.get(\"dev_type_name\").value, \"type\")'>\r\n                    {{devtype.text}}\r\n                </mat-option>\r\n            </mat-select> -->\r\n      <!-- <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                <div class=\"containers\" style=\"border: 1px solid #7b68ee;    height: 34px;\r\n                margin-bottom: 1%;\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-5\">\r\n                            <input type=\"text\" appearance=\"null\" style=\"border: none;    height: 31px;\r\n                        margin-left: 1%;\" placeholder=\"Task Details\">\r\n                        </div>\r\n                        <div class=\"col-lg-1\">\r\n                            <span *ngIf=\"icons !== null\" class=\"badge\" style=\"margin-left: -17%;background-color:  #ededfd;color:#2d2e8e;\r\n                            float: left;\r\n                            margin-right: 39px;\r\n                            margin-top: 7px;\">{{ icons }}</span>\r\n                            <mat-icon *ngIf=\"icon !== 'local_offer'\" aria-hidden=\"false\"\r\n                                style=\"color: lightgrey; text-align: center; margin-top: 3px; margin-left: -64%; margin-right: 10%;\"\r\n                                (click)=\"openIconDialog(icon)\">\r\n                                local_offer\r\n                            </mat-icon>\r\n                        </div>\r\n                        <div class=\"col-lg-1\">\r\n                            <input #datepickerInput [matDatepicker]=\"picker\" style=\"display: none\"\r\n                                (dateChange)=\"onDateSelected($event)\">\r\n                                <div *ngIf=\"dates\" class=\"badge\"\r\n                                style=\"margin-left: -1%; background-color: #ededfd; color: #2d2e8e;  margin-right: 9px; margin-top: 7px;\">{{\r\n                                dates }}</div>\r\n                            <mat-icon aria-hidden=\"false\"\r\n                                style=\"color: lightgrey; text-align: center; margin-top: 3px; margin-right: 10%; cursor: pointer;\"\r\n                                (click)=\"openDatepicker(datepickerInput)\"> \r\n                                calendar_today\r\n                            </mat-icon>\r\n\r\n                            <mat-datepicker #picker></mat-datepicker>\r\n                           \r\n                        </div>\r\n                        <div class=\"col-lg-1\">\r\n                            <input #datepickerInputs [matDatepicker]=\"picker1\" style=\"display: none\"\r\n                                (dateChange)=\"onDateSelecteds($event)\">\r\n                                <div *ngIf=\"datest\" class=\"badge\"\r\n                                style=\"margin-left: 6%; background-color: #ededfd; color: #2d2e8e;  margin-right: 1px; margin-top: 7px;\">{{\r\n                                datest }}</div>\r\n                            <mat-icon aria-hidden=\"false\"\r\n                                style=\"color: lightgrey; text-align: center; margin-top: 3px; margin-right: 10%; cursor: pointer;\"\r\n                                (click)=\"openDatepickers(datepickerInputs)\"> \r\n                                calendar_today\r\n                            </mat-icon>\r\n\r\n                            <mat-datepicker #picker1></mat-datepicker>\r\n                           \r\n                        </div>\r\n\r\n                        <div class=\"col-sm-1\">\r\n                            <div style=\"float: right;\">\r\n\r\n\r\n                                <mat-icon aria-hidden=\"false\"\r\n                                    style=\"color: lightgrey; text-align: center;margin-top: 3px;margin-right: 10%;\">person_add</mat-icon>\r\n                                <mat-icon aria-hidden=\"false\"\r\n                                    style=\"color: lightgrey; text-align: center;margin-top: 3px;margin-right: 10%;\">device_hub</mat-icon>\r\n                                <mat-icon aria-hidden=\"false\"\r\n                                    style=\"color: lightgrey;text-align: center;margin-top: 3px;margin-right: 10%;\">flag</mat-icon>\r\n                                <div style=\"background: #7b68ee;\r\n                        font-size: 11px;\r\n                        font-weight: 500;\r\n                        line-height: 1;\r\n                        padding: 0 12px;\r\n                        height: 20px;\r\n                        border-radius: 2px;\r\n                        color: #fff;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        text-transform: uppercase;\r\n                        cursor: pointer;\r\n                        margin: 0 10px;\r\n                        flex-shrink: 0;\r\n                        width: 38px;\r\n                        float:right;\r\n                        margin-top: 5px;\">Save\r\n                                </div>\r\n\r\n\r\n                                <mat-icon style=\"padding: 4px;\r\n                        font-size: large;\r\n                        margin-top: 3px;\r\n                        color: lightgray;\r\n                        font-weight: bold;\r\n                        float: right;\r\n                        margin-right: 4%;\">close</mat-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div> -->\r\n\r\n      <hr />\r\n\r\n      <div formArrayName=\"data\">\r\n        <div\r\n          class=\"cus-taskCreateContainer2\"\r\n          *ngFor=\"\r\n            let data of EmpTaskCreate.controls.data['controls'];\r\n            let dataIndex = index\r\n          \"\r\n          [formGroupName]=\"dataIndex\"\r\n        >\r\n          <div class=\"cus-taskCreateGrid100\">\r\n            <!-- <mat-form-field>\r\n              <mat-label>Task</mat-label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Task here!\"\r\n                formControlName=\"task\"\r\n                autocomplete=\"off\"\r\n                matInput\r\n              />\r\n            </mat-form-field> -->\r\n            <mat-form-field>\r\n              <mat-label>Task <span style=\"color: red;\">*</span></mat-label>\r\n              <textarea\r\n               rows=\"2\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Task here!\"\r\n                matInput\r\n                autocomplete=\"off\"\r\n                formControlName=\"task\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- <div>\r\n                  <span class=\"badge badge-pill badge-warning paddingSpace\">\r\n                    <span class=\"material-icons fonts\">tag</span>\r\n                    {{ data.get(\"dev_type_name\").value?.text }}\r\n                  </span>\r\n                  <span class=\"badge badge-pill badge-secondary paddingSpace\">\r\n                    From:\r\n                    {{ data.get(\"start_date\").value | date : \"dd-MM-yyyy\" }}\r\n                  </span>\r\n                  <span class=\"badge badge-pill badge-secondary paddingSpace\">\r\n                    To: {{ data.get(\"end_date\").value | date : \"dd-MM-yyyy\" }}\r\n                  </span>\r\n                </div> -->\r\n\r\n          <div>\r\n            <!-- <mat-select formControlName=\"dev_type_name\" class=\"inputs arrowClass\">\r\n                                        <mat-option [value]=\"devtype\"\r\n                                            *ngFor=\"let devtype of EmpTaskCreateObj.devtypelist\" \r\n                                         \r\n                                            (click)=\"selectDevType(dataIndex,devtype)\">\r\n                                            {{devtype.text}} </mat-option>\r\n                                    </mat-select> -->\r\n            <mat-form-field>\r\n              <mat-label>Type <span style=\"color: red;\">*</span></mat-label>\r\n              <mat-select formControlName=\"type\">\r\n                <mat-option\r\n                  *ngFor=\"let devtypes of EmpTaskCreateObj.devtypelist\"\r\n                  [value]=\"devtypes\"\r\n                  (click)=\"selectDevType(devtypes)\" title=\"{{devtypes.text}}\"\r\n                >\r\n                  {{ devtypes.text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <!-- <div class=\"col-sm-6 col-md-6 col-lg-6 tight-gutter\">\r\n                                        <input readonly placeholder=\"Start\" [matDatepicker]=\"picker1\"\r\n                                            formControlName=\"start_date\"\r\n                                            (dateChange)='ChangeDateFormat(dataIndex, \"start_date\", data.get(\"start_date\").value,$event)'\r\n                                            class=\"inputs\">\r\n                                        <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker1\">\r\n                                        </mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                    </div> -->\r\n            <!-- <div class=\"col-sm-6 col-md-6 col-lg-6 tight-gutter\">\r\n                                        <input readonly placeholder=\"End\" [matDatepicker]=\"picker2\"\r\n                                            formControlName=\"end_date\"\r\n                                            (dateChange)='ChangeDateFormat(dataIndex, \"end_date\", data.get(\"end_date\").value, $event)'\r\n                                            [min]='data.get(\"start_date\").value' class=\"inputs outlinesnone\">\r\n                                        <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker2\">\r\n                                        </mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker2></mat-datepicker>\r\n                                    </div> -->\r\n            <mat-form-field>\r\n              <mat-label>Planned Start Date</mat-label>\r\n              <input\r\n                matInput\r\n                readonly\r\n                [matDatepicker]=\"picker1\"\r\n                formControlName=\"start_date\"\r\n                (dateChange)=\"\r\n                  ChangeDateFormat(\r\n                    dataIndex,\r\n                    'start_date',\r\n                    data.get('start_date').value,\r\n                    $event\r\n                  )\r\n                \"\r\n                [min]=\"sprstartdate\"\r\n                [max]=\"sprenddate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                class=\"maticonsize\"\r\n                [for]=\"picker1\"\r\n              >\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker1></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Planned End Date</mat-label>\r\n              <input\r\n                matInput\r\n                readonly\r\n                [matDatepicker]=\"picker2\"\r\n                formControlName=\"end_date\"\r\n                (dateChange)=\"\r\n                  ChangeDateFormat(\r\n                    dataIndex,\r\n                    'end_date',\r\n                    data.get('end_date').value,\r\n                    $event\r\n                  )\r\n                \"\r\n                [min]=\"data.get('start_date').value\"\r\n                [max]=\"sprenddate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                class=\"maticonsize\"\r\n                [for]=\"picker2\"\r\n              >\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n        <div >\r\n          <mat-form-field (click)=\"dropdown('')\">\r\n            <mat-label>Employee</mat-label>\r\n            <input\r\n              #empInput\r\n              matInput\r\n              formControlName=\"developer\"\r\n              [matAutocomplete]=\"emp\"\r\n              (keyup)=\"dropdown($event.target.value)\"\r\n             \r\n            />\r\n            <mat-icon matSuffix>unfold_more</mat-icon>\r\n            <mat-autocomplete\r\n              #emp=\"matAutocomplete\"\r\n              [displayWith]=\"displayFndev\"\r\n            >\r\n              <mat-option *ngFor=\"let emp of empList\" [value]=\"emp\" title=\"{{emp.name}}\">\r\n                {{ emp.name }}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"!empList || !empList.length\">\r\n                No Records Found\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n          <div>\r\n            <mat-form-field (click)=\"getdev('')\">\r\n              <mat-label>Dependency</mat-label>\r\n              <input\r\n                #depInput\r\n                matInput\r\n                formControlName=\"dependency_id\"\r\n                [matAutocomplete]=\"dep\"\r\n                autocomplete=\"off\"\r\n              />\r\n              <mat-icon matSuffix>unfold_more</mat-icon>\r\n              <mat-autocomplete\r\n                #dep=\"matAutocomplete\"\r\n                [displayWith]=\"displayFnDep\"\r\n              >\r\n                <mat-option\r\n                  *ngFor=\"let dep of EmpTaskCreateObj.dependencylist\"\r\n                  [value]=\"dep\"\r\n                  title=\"({{ dep.code }}){{ dep.task }}\"\r\n                >\r\n                ({{ dep.code }}){{ dep.task }}\r\n                </mat-option>\r\n                <mat-option *ngIf=\"!EmpTaskCreateObj.dependencylist ||!EmpTaskCreateObj.dependencylist.length\">\r\n                  No Records Found\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Priority Type</mat-label>\r\n              <mat-select formControlName=\"priority_type\" class=\"\">\r\n                <mat-option\r\n                  [value]=\"pry.id\"\r\n                  *ngFor=\"let pry of EmpTaskCreateObj.priorityList\"\r\n                  (click)=\"\r\n                    getprioritytype(\r\n                      dataIndex,\r\n                      data.get('priority_type').value,\r\n                      'priority_type'\r\n                    )\r\n                  \"\r\n                  title=\"{{pry.text}}\"\r\n                >\r\n                  {{ pry.text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <!-- <td>\r\n                <span class=\"material-icons\" (click)=\"deleteTask(dataIndex)\">\r\n                  delete\r\n                </span>\r\n              </td> -->\r\n        </div>\r\n\r\n        <div>\r\n          <span *ngIf=\"EmpTaskCreate.get('data')?.length == 0\"\r\n            >No Task Added!</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"margin-top: 20px\">\r\n      <div class=\"cus-taskCreateContainer3\">\r\n        <button\r\n          (click)=\"popclose()\"\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          data-bs-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n          #closebutton\r\n        >\r\n          Back\r\n        </button>\r\n\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"SubmitTask()\"\r\n          style=\"background-color: #044063; color: white\"\r\n        >\r\n          Submit\r\n        </button>\r\n        <!-- <button class=\"btn btn-light\" id=\"WhiteBtn\" (click)=\"BackToSummary()\">Back</button> -->\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <!-- <pre>\r\n    {{EmpTaskCreate.value | json}}\r\n</pre> -->\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}