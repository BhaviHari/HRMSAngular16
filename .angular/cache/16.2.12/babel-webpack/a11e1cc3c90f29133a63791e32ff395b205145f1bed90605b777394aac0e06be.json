{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { debounceTime, distinctUntilChanged, finalize, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/shared.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"../master.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/autocomplete\";\nimport * as i14 from \"@angular/material/radio\";\nconst _c0 = [\"Businesssegment\"];\nconst _c1 = [\"BusinesssegmentInput\"];\nconst _c2 = [\"segmentdrop\"];\nconst _c3 = [\"segmentdropInput\"];\nconst _c4 = [\"modalclose\"];\nfunction CreateBusinesssegmentComponent_mat_radio_button_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 42);\n    i0.ɵɵlistener(\"change\", function CreateBusinesssegmentComponent_mat_radio_button_37_Template_mat_radio_button_change_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const a_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.radioChange($event, a_r12.value));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const a_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", a_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", a_r12.value, \" \");\n  }\n}\nfunction CreateBusinesssegmentComponent_mat_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \"Loading..\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateBusinesssegmentComponent_mat_option_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵlistener(\"focusout\", function CreateBusinesssegmentComponent_mat_option_56_Template_mat_option_focusout_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const d_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.checker_segment(d_r15));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", d_r15.name, \" \");\n  }\n}\nfunction CreateBusinesssegmentComponent_mat_option_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵtext(1, \"Loading..\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateBusinesssegmentComponent_mat_option_94_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵlistener(\"focusout\", function CreateBusinesssegmentComponent_mat_option_94_Template_mat_option_focusout_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const d_r18 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.checker_sector(d_r18));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", d_r18.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", d_r18.name, \" \");\n  }\n}\nexport class CreateBusinesssegmentComponent {\n  fb;\n  shareService;\n  toastr;\n  router;\n  dataService;\n  matBusinesssegmentAutocomplete;\n  BusinesssegmentInput;\n  matsegmentdropAutocomplete;\n  BusinesssectorInput;\n  autocompleteTrigger;\n  paginator;\n  moDalclose;\n  //   AddForm: FormGroup;\n  //   constructor(private formBuilder: FormBuilder,private dataService: masterService,private router: Router) { }\n  //   ngOnInit(): void {\n  //     this.AddForm = this.formBuilder.group({\n  //       code: ['', Validators.required],\n  //       name: ['', Validators.required],\n  //       no: ['', Validators.required],\n  //       description: ['', Validators.required],\n  //       remarks: ['', Validators.required]\n  //     })\n  //   }\n  //   createFormat() {\n  //     let data = this.AddForm.controls;\n  //     let objBusinesssegment = new Businesssegment();\n  //     objBusinesssegment.code = data['code'].value;\n  //     objBusinesssegment.name = data['name'].value;\n  //     objBusinesssegment.no = data['no'].value;\n  //     objBusinesssegment.description = data['description'].value;\n  //     objBusinesssegment.remarks = data['remarks'].value;\n  //     // console.log(\"objBusinesssegment\", objBusinesssegment)\n  //     return objBusinesssegment;\n  //   }\n  //   submitForm() {\n  //     this.dataService.createBusinessSegmentForm(this.createFormat())\n  //       .subscribe(res => {\n  //         // console.log(\"createBusinessSegmentForm\", res);\n  //         this.router.navigate(['/employeeSummary'], { skipLocationChange: true })\n  //         return true\n  //       }\n  //       )\n  //   }\n  // }\n  // class Businesssegment {\n  //   code: string;\n  //   name: string;\n  //   no: string;\n  //   description: string;\n  //   remarks: string;\n  // }\n  BSForm;\n  SegmentForm;\n  isLoading = false;\n  BusinesssegmentList = [];\n  sectorList = [];\n  currentpagecom_branch = 1;\n  has_nextcom_branch = true;\n  has_previouscom = true;\n  status = [{\n    value: 'YES',\n    viewValue: 'YES '\n  }, {\n    value: 'NO',\n    viewValue: 'NO'\n  }];\n  floatLabelControl = new FormControl('auto');\n  onCancel = new EventEmitter();\n  onSubmit = new EventEmitter();\n  radioFlag = [];\n  sectorID;\n  segmentID;\n  constructor(fb, shareService, toastr, router, dataService) {\n    this.fb = fb;\n    this.shareService = shareService;\n    this.toastr = toastr;\n    this.router = router;\n    this.dataService = dataService;\n  }\n  ngOnInit() {\n    this.BSForm = this.fb.group({\n      description: ['', Validators.required],\n      name: ['', Validators.required],\n      no: ['', Validators.required],\n      code: [''],\n      remarks: ['', Validators.required],\n      Businesssegment: ['']\n    });\n    this.SegmentForm = this.fb.group({\n      //code:['', Validators.required] ,\n      name: ['', Validators.required],\n      no: ['', Validators.required],\n      description: ['', Validators.required],\n      remarks: ['', Validators.required],\n      sector_id: ['']\n    });\n    this.dataService.getBusinesssegmentsearch('', 1).subscribe(data => {\n      this.BusinesssegmentList = data['data'];\n    });\n    this.BSForm.get('Businesssegment').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.dataService.getBusinesssegmentsearch(value, 1).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      this.BusinesssegmentList = results[\"data\"];\n      console.log('branch_id=', results);\n      console.log('branch_data=', this.BusinesssegmentList);\n    });\n    this.dataService.getBusinesssectorsearch('', 1).subscribe(data => {\n      this.sectorList = data['data'];\n    });\n    this.SegmentForm.get('sector_id').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n    }), switchMap(value => this.dataService.getBusinesssectorsearch(value, 1).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      this.sectorList = results[\"data\"];\n      console.log('branch_id=', results);\n      console.log('branch_data=', this.sectorList);\n    });\n  }\n  autocompleteScroll_Businesssegment() {\n    setTimeout(() => {\n      if (this.matBusinesssegmentAutocomplete && this.autocompleteTrigger && this.matBusinesssegmentAutocomplete.panel) {\n        fromEvent(this.matBusinesssegmentAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matBusinesssegmentAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_nextcom_branch === true) {\n              this.dataService.getBusinesssegmentsearch(this.BusinesssegmentInput.nativeElement.value, this.currentpagecom_branch + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                console.log('branch=', results);\n                let datapagination = results[\"pagination\"];\n                this.BusinesssegmentList = this.BusinesssegmentList.concat(datas);\n                if (this.BusinesssegmentList.length >= 0) {\n                  this.has_nextcom_branch = datapagination.has_next;\n                  this.has_previouscom = datapagination.has_previous;\n                  this.currentpagecom_branch = datapagination.index;\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  autocompleteScroll_sector() {\n    setTimeout(() => {\n      if (this.matsegmentdropAutocomplete && this.autocompleteTrigger && this.matsegmentdropAutocomplete.panel) {\n        fromEvent(this.matsegmentdropAutocomplete.panel.nativeElement, 'scroll').pipe(map(x => this.matsegmentdropAutocomplete.panel.nativeElement.scrollTop), takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\n          const scrollTop = this.matsegmentdropAutocomplete.panel.nativeElement.scrollTop;\n          const scrollHeight = this.matsegmentdropAutocomplete.panel.nativeElement.scrollHeight;\n          const elementHeight = this.matsegmentdropAutocomplete.panel.nativeElement.clientHeight;\n          const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\n          if (atBottom) {\n            if (this.has_nextcom_branch === true) {\n              this.dataService.getBusinesssectorsearch(this.BusinesssectorInput.nativeElement.value, this.currentpagecom_branch + 1).subscribe(results => {\n                let datas = results[\"data\"];\n                console.log('branch=', results);\n                let datapagination = results[\"pagination\"];\n                this.sectorList = this.sectorList.concat(datas);\n                if (this.sectorList.length >= 0) {\n                  this.has_nextcom_branch = datapagination.has_next;\n                  this.has_previouscom = datapagination.has_previous;\n                  this.currentpagecom_branch = datapagination.index;\n                }\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  checker_segment(data) {\n    console.log(data);\n    this.segmentID = data.id;\n  }\n  checker_sector(data) {\n    console.log(data);\n    this.sectorID = data.id;\n  }\n  radioChange(event, a) {\n    console.log(event.value.value);\n    if (event.value.value == 'YES') {\n      this.radioFlag = 1;\n    } else if (event.value.value == 'NO') {\n      this.radioFlag = 0;\n    }\n    console.log('radio_flag ', this.radioFlag);\n  }\n  addSegment() {}\n  BSSubmit() {\n    if (this.BSForm.value.name === \"\") {\n      this.toastr.error('Add name Field', 'Empty value inserted', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.BSForm.value.name.trim() === \"\") {\n      this.toastr.error('Add name Field', ' WhiteSpace Not Allowed');\n      return false;\n    }\n    if (this.BSForm.value.name.trim().length > 20) {\n      this.toastr.error('Not more than 20 characters', 'Enter valid name');\n      return false;\n    }\n    if (this.BSForm.value.no === \"\") {\n      this.toastr.error('Add no Field', 'Empty value inserted', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.BSForm.value.no.trim() === \"\") {\n      this.toastr.error('Add no Field', ' WhiteSpace Not Allowed');\n      return false;\n    }\n    if (this.BSForm.value.no.trim().length > 3) {\n      this.toastr.error('Not more than 3 characters', 'Enter valid no');\n      return false;\n    }\n    let data = this.BSForm.value;\n    data['status'] = this.radioFlag;\n    data['masterbussinesssegment_id'] = this.segmentID;\n    this.dataService.BSCreateForm(data).subscribe(res => {\n      if (res.code === \"INVALID_DATA\" && res.description === \"Invalid Data or DB Constraint\") {\n        this.toastr.error(\"[INVALID_DATA! ...]\");\n      } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Duplicate Name\") {\n        this.toastr.warning(\"Duplicate Data! ...\");\n      } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Unexpected Internal Server Error\") {\n        this.toastr.error(\"INVALID_DATA!...\");\n      } else if (res.code === \"INVALID_DATA\" && res.description === \"Duplicate Name\") {\n        this.toastr.warning(\"Duplicate Data! ...\");\n      } else {\n        this.toastr.success(\"Successfully created!...\");\n        this.onSubmit.emit();\n      }\n      console.log(\"BSForm SUBMIT\", res);\n      return true;\n    });\n  }\n  SegmentSubmit() {\n    if (this.SegmentForm.value.name === \"\") {\n      this.toastr.error('Add name Field', 'Empty value inserted', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.SegmentForm.value.name.trim() === \"\") {\n      this.toastr.error('Add name Field', ' WhiteSpace Not Allowed');\n      return false;\n    }\n    if (this.SegmentForm.value.name.trim().length > 20) {\n      this.toastr.error('Not more than 20 characters', 'Enter valid name');\n      return false;\n    }\n    if (this.SegmentForm.value.no === \"\") {\n      this.toastr.error('Add no Field', 'Empty value inserted', {\n        timeOut: 1500\n      });\n      return false;\n    }\n    if (this.SegmentForm.value.no.trim() === \"\") {\n      this.toastr.error('Add no Field', ' WhiteSpace Not Allowed');\n      return false;\n    }\n    if (this.SegmentForm.value.no.trim().length > 3) {\n      this.toastr.error('Not more than 3 characters', 'Enter valid no');\n      return false;\n    }\n    let data = this.SegmentForm.value;\n    data['sector_id'] = this.sectorID;\n    this.dataService.BSSegmentSave(data).subscribe(res => {\n      if (res.code === \"INVALID_DATA\" && res.description === \"Invalid Data or DB Constraint\") {\n        this.toastr.error(\"[INVALID_DATA! ...]\");\n      } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Duplicate Name\") {\n        this.toastr.warning(\"Duplicate Data! ...\");\n      } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Unexpected Internal Server Error\") {\n        this.toastr.error(\"INVALID_DATA!...\");\n      } else if (res.code === \"INVALID_DATA\" && res.description === \"Duplicate Name\") {\n        this.toastr.warning(\"Duplicate Data! ...\");\n      } else {\n        this.moDalclose.nativeElement.click();\n        this.toastr.success(\"Successfully created!...\");\n        // this.onSubmit.emit();\n      }\n      console.log(\"SegmentForm SUBMIT\", res);\n      return true;\n    });\n  }\n  omit_special_char(event) {\n    var k;\n    k = event.charCode;\n    return k > 64 && k < 91 || k > 96 && k < 123 || k == 8 || k == 32 || k >= 48 && k <= 57;\n  }\n  onCancelClick() {\n    this.onCancel.emit();\n  }\n  static ɵfac = function CreateBusinesssegmentComponent_Factory(t) {\n    return new (t || CreateBusinesssegmentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SharedService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.masterService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateBusinesssegmentComponent,\n    selectors: [[\"app-create-businesssegment\"]],\n    viewQuery: function CreateBusinesssegmentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matBusinesssegmentAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BusinesssegmentInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.matsegmentdropAutocomplete = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.BusinesssectorInput = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.autocompleteTrigger = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.moDalclose = _t.first);\n      }\n    },\n    outputs: {\n      onCancel: \"onCancel\",\n      onSubmit: \"onSubmit\"\n    },\n    decls: 113,\n    vars: 12,\n    consts: [[2, \"margin-left\", \"25px\", \"margin-right\", \"80%\", \"margin-top\", \"1%\", \"width\", \"100%\"], [2, \"font-family\", \"'Times New Roman', Times, serif\", \"color\", \"blue\", \"font-size\", \"23px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-sm-3\"], [2, \"width\", \"175px\", \"margin-left\", \"50px\"], [\"matInput\", \"\", \"placeholder\", \"BS Name\", \"autocomplete\", \"off\", \"formControlName\", \"name\", \"required\", \"\", 3, \"keypress\"], [\"matInput\", \"\", \"placeholder\", \"BS No\", \"autocomplete\", \"off\", \"formControlName\", \"no\", \"minlength\", \"2\", \"maxlength\", \"3\", \"size\", \"45\", \"pattern\", \"[0-9]{2,3}\", \"required\", \"\", 3, \"keypress\"], [\"matInput\", \"\", \"placeholder\", \"BS Code\", \"autocomplete\", \"off\", \"formControlName\", \"code\", \"minlength\", \"2\", \"maxlength\", \"3\", \"size\", \"45\", \"pattern\", \"[0-9]{2,3}\", 3, \"readonly\", \"keypress\"], [\"appearance\", \"outline\", 2, \"width\", \"175px\", \"margin-left\", \"50px\"], [\"matInput\", \"\", \"placeholder\", \" Remarks\", \"autocomplete\", \"off\", \"formControlName\", \"remarks\", 3, \"keypress\"], [1, \"col-sm-3\", 2, \"padding-top\", \"10px\"], [2, \"width\", \"175px\", \"margin-left\", \"50px\", 3, \"formControl\"], [3, \"value\", \"change\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"autocomplete\", \"off\", \"formControlName\", \"description\", 3, \"keypress\"], [1, \"col-sm-3\", 2, \"margin-top\", \"5px\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", \"formControlName\", \"Businesssegment\", 1, \"toolbar-search\", 2, \"width\", \"250px\", 3, \"matAutocomplete\"], [\"BusinesssegmentInput\", \"\"], [3, \"opened\"], [\"Businesssegment\", \"matAutocomplete\", \"branch\", \"\"], [4, \"ngIf\"], [3, \"value\", \"focusout\", 4, \"ngFor\", \"ngForOf\"], [\"mat-fab\", \"\", \"type\", \"button\", \"color\", \"success\", \"matTooltip\", \"Add\", \"aria-label\", \"arrow back icon\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#showpaymentdetails\", 2, \"margin-left\", \"3px\", \"margin-bottom\", \"5px\", 3, \"click\"], [2, \"margin-bottom\", \"5%\", \"margin-left\", \"50px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", \"margin-left\", \"10px\", 3, \"click\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLongTitle\", \"aria-hidden\", \"true\", \"id\", \"showpaymentdetails\", 1, \"modal\"], [1, \"modal-dialog\", \"modal-xl\", 2, \"width\", \"93%\"], [1, \"modal-content\"], [1, \"modal-header\", 2, \"background\", \"rgba(23, 204, 23, 0.288)\"], [1, \"modal-title\", 2, \"color\", \"black\", \"text-align\", \"center\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"modalclose\", \"\"], [\"aria-hidden\", \"true\"], [\"matInput\", \"\", \"placeholder\", \"No\", \"autocomplete\", \"off\", \"formControlName\", \"no\", \"required\", \"\", 3, \"keypress\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"matInput\", \"\", \"formControlName\", \"sector_id\", 1, \"toolbar-search\", 2, \"width\", \"250px\", 3, \"matAutocomplete\"], [\"segmentdropInput\", \"\"], [\"segmentdrop\", \"matAutocomplete\", \"segment\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"autocomplete\", \"off\", \"formControlName\", \"name\", \"required\", \"\", 3, \"keypress\"], [\"matInput\", \"\", \"placeholder\", \"Remarks\", \"autocomplete\", \"off\", \"formControlName\", \"remarks\", \"required\", \"\", 3, \"keypress\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"autocomplete\", \"off\", \"formControlName\", \"description\", \"required\", \"\", 3, \"keypress\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", 2, \"border-radius\", \"40px\", 3, \"disabled\"], [3, \"value\", \"change\"], [3, \"value\", \"focusout\"]],\n    template: function CreateBusinesssegmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \" Business Segment Add \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\")(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateBusinesssegmentComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.BSSubmit();\n        });\n        i0.ɵɵelementStart(6, \"table\")(7, \"div\", 3)(8, \"div\", 4)(9, \"td\")(10, \"mat-form-field\", 5)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"BS Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_13_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"td\")(16, \"mat-form-field\", 5)(17, \"mat-label\");\n        i0.ɵɵtext(18, \"BS No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 7);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_19_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-error\");\n        i0.ɵɵtext(21, \" Length b/w 2 to 3 Characters\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"td\")(24, \"mat-form-field\", 5)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"BS Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 8);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_27_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 4)(29, \"td\")(30, \"mat-form-field\", 9)(31, \"mat-label\");\n        i0.ɵɵtext(32, \" Remarks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"input\", 10);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_33_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(34, \"div\", 11)(35, \"td\")(36, \"mat-radio-group\", 12);\n        i0.ɵɵtemplate(37, CreateBusinesssegmentComponent_mat_radio_button_37_Template, 2, 2, \"mat-radio-button\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 4)(39, \"td\")(40, \"mat-form-field\", 9)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"input\", 14);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_43_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(44, \"div\", 15)(45, \"td\")(46, \"mat-form-field\", 5)(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Business Segment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 16, 17);\n        i0.ɵɵelementStart(51, \"mat-autocomplete\", 18, 19);\n        i0.ɵɵlistener(\"opened\", function CreateBusinesssegmentComponent_Template_mat_autocomplete_opened_51_listener() {\n          return ctx.autocompleteScroll_Businesssegment();\n        });\n        i0.ɵɵtemplate(54, CreateBusinesssegmentComponent_mat_option_54_Template, 2, 0, \"mat-option\", 20);\n        i0.ɵɵelementContainerStart(55);\n        i0.ɵɵtemplate(56, CreateBusinesssegmentComponent_mat_option_56_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"td\")(58, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function CreateBusinesssegmentComponent_Template_button_click_58_listener() {\n          return ctx.addSegment();\n        });\n        i0.ɵɵelementStart(59, \"mat-icon\");\n        i0.ɵɵtext(60, \"add\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(61, \"div\", 23)(62, \"button\", 24);\n        i0.ɵɵtext(63, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function CreateBusinesssegmentComponent_Template_button_click_64_listener() {\n          return ctx.onCancelClick();\n        });\n        i0.ɵɵtext(65, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(66, \"div\", 26)(67, \"div\", 27)(68, \"div\", 28)(69, \"div\", 29)(70, \"h2\", 30);\n        i0.ɵɵtext(71, \"Add Business Segment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"button\", 31, 32)(74, \"span\", 33);\n        i0.ɵɵtext(75, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(76, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateBusinesssegmentComponent_Template_form_ngSubmit_76_listener() {\n          return ctx.SegmentSubmit();\n        });\n        i0.ɵɵelementStart(77, \"div\", 3)(78, \"div\", 4)(79, \"mat-form-field\", 5)(80, \"mat-label\");\n        i0.ɵɵtext(81, \"No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"input\", 34);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_82_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(83, \"div\", 4)(84, \"mat-form-field\", 5)(85, \"mat-label\");\n        i0.ɵɵtext(86, \"Sector\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(87, \"input\", 35, 36);\n        i0.ɵɵelementStart(89, \"mat-autocomplete\", 18, 37);\n        i0.ɵɵlistener(\"opened\", function CreateBusinesssegmentComponent_Template_mat_autocomplete_opened_89_listener() {\n          return ctx.autocompleteScroll_sector();\n        });\n        i0.ɵɵtemplate(92, CreateBusinesssegmentComponent_mat_option_92_Template, 2, 0, \"mat-option\", 20);\n        i0.ɵɵelementContainerStart(93);\n        i0.ɵɵtemplate(94, CreateBusinesssegmentComponent_mat_option_94_Template, 2, 2, \"mat-option\", 21);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(95, \"div\", 4)(96, \"mat-form-field\", 5)(97, \"mat-label\");\n        i0.ɵɵtext(98, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"input\", 38);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_99_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(100, \"div\", 4)(101, \"mat-form-field\", 5)(102, \"mat-label\");\n        i0.ɵɵtext(103, \"Remarks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(104, \"input\", 39);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_104_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(105, \"div\", 4)(106, \"mat-form-field\", 5)(107, \"mat-label\");\n        i0.ɵɵtext(108, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(109, \"input\", 40);\n        i0.ɵɵlistener(\"keypress\", function CreateBusinesssegmentComponent_Template_input_keypress_109_listener($event) {\n          return ctx.omit_special_char($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(110, \"div\", 4)(111, \"button\", 41);\n        i0.ɵɵtext(112, \"Submit\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(52);\n        const _r8 = i0.ɵɵreference(90);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.BSForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.floatLabelControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.status);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"matAutocomplete\", _r2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.BusinesssegmentList);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"formGroup\", ctx.SegmentForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"matAutocomplete\", _r8);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sectorList);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", ctx.SegmentForm.invalid);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.PatternValidator, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i7.MatFabButton, i8.MatIcon, i9.MatTooltip, i10.MatInput, i11.MatFormField, i11.MatLabel, i11.MatError, i12.MatOption, i13.MatAutocomplete, i13.MatAutocompleteTrigger, i14.MatRadioGroup, i14.MatRadioButton],\n    styles: [\".btn-outline-success[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.btn-cancel[_ngcontent-%COMP%] {\\n  margin-left: 30%;\\n}\\n\\ntextarea.mat-input-element[_ngcontent-%COMP%] {\\n  margin-bottom: -23px;\\n}\\n\\n.mat-fab.mat-success[_ngcontent-%COMP%] {\\n  color: #f0fff3;\\n  background-color: #56aa6a;\\n}\\n\\n.mat-radio-button[_ngcontent-%COMP%]    ~ .mat-radio-button[_ngcontent-%COMP%] {\\n  margin-left: 16px;\\n}\\n\\n  .cdk-overlay-container {\\n  z-index: 99999;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvTWFzdGVyL2NyZWF0ZS1idXNpbmVzc3NlZ21lbnQvY3JlYXRlLWJ1c2luZXNzc2VnbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxnQkFBQTtBQUVKOztBQUFBO0VBQ0ksb0JBQUE7QUFHSjs7QUFEQTtFQUNJLGNBQUE7RUFDQSx5QkFBQTtBQUlKOztBQUZBO0VBQ0ksaUJBQUE7QUFLSjs7QUFIQTtFQUNJLGNBQUE7QUFNSiIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tb3V0bGluZS1zdWNjZXNze1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuLmJ0bi1jYW5jZWwge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG50ZXh0YXJlYS5tYXQtaW5wdXQtZWxlbWVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAtMjNweDtcclxufVxyXG4ubWF0LWZhYi5tYXQtc3VjY2VzcyB7XHJcbiAgICBjb2xvcjogI2YwZmZmMztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NmFhNmE7XHJcbiAgfVxyXG4ubWF0LXJhZGlvLWJ1dHRvbiB+IC5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG59XHJcbjo6bmctZGVlcCAuY2RrLW92ZXJsYXktY29udGFpbmVyIHtcclxuICAgIHotaW5kZXg6IDk5OTk5O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","FormControl","Validators","fromEvent","MatAutocompleteTrigger","MatPaginator","debounceTime","distinctUntilChanged","finalize","map","switchMap","takeUntil","tap","i0","ɵɵelementStart","ɵɵlistener","CreateBusinesssegmentComponent_mat_radio_button_37_Template_mat_radio_button_change_0_listener","$event","restoredCtx","ɵɵrestoreView","_r14","a_r12","$implicit","ctx_r13","ɵɵnextContext","ɵɵresetView","radioChange","value","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","CreateBusinesssegmentComponent_mat_option_56_Template_mat_option_focusout_0_listener","_r17","d_r15","ctx_r16","checker_segment","name","CreateBusinesssegmentComponent_mat_option_94_Template_mat_option_focusout_0_listener","_r20","d_r18","ctx_r19","checker_sector","CreateBusinesssegmentComponent","fb","shareService","toastr","router","dataService","matBusinesssegmentAutocomplete","BusinesssegmentInput","matsegmentdropAutocomplete","BusinesssectorInput","autocompleteTrigger","paginator","moDalclose","BSForm","SegmentForm","isLoading","BusinesssegmentList","sectorList","currentpagecom_branch","has_nextcom_branch","has_previouscom","status","viewValue","floatLabelControl","onCancel","onSubmit","radioFlag","sectorID","segmentID","constructor","ngOnInit","group","description","required","no","code","remarks","Businesssegment","sector_id","getBusinesssegmentsearch","subscribe","data","get","valueChanges","pipe","results","console","log","getBusinesssectorsearch","autocompleteScroll_Businesssegment","setTimeout","panel","nativeElement","x","scrollTop","panelClosingActions","scrollHeight","elementHeight","clientHeight","atBottom","datas","datapagination","concat","length","has_next","has_previous","index","autocompleteScroll_sector","id","event","a","addSegment","BSSubmit","error","timeOut","trim","BSCreateForm","res","warning","success","emit","SegmentSubmit","BSSegmentSave","click","omit_special_char","k","charCode","onCancelClick","ɵɵdirectiveInject","i1","FormBuilder","i2","SharedService","i3","ToastrService","i4","Router","i5","masterService","selectors","viewQuery","CreateBusinesssegmentComponent_Query","rf","ctx","ɵɵelement","CreateBusinesssegmentComponent_Template_form_ngSubmit_5_listener","CreateBusinesssegmentComponent_Template_input_keypress_13_listener","CreateBusinesssegmentComponent_Template_input_keypress_19_listener","CreateBusinesssegmentComponent_Template_input_keypress_27_listener","CreateBusinesssegmentComponent_Template_input_keypress_33_listener","ɵɵtemplate","CreateBusinesssegmentComponent_mat_radio_button_37_Template","CreateBusinesssegmentComponent_Template_input_keypress_43_listener","CreateBusinesssegmentComponent_Template_mat_autocomplete_opened_51_listener","CreateBusinesssegmentComponent_mat_option_54_Template","ɵɵelementContainerStart","CreateBusinesssegmentComponent_mat_option_56_Template","ɵɵelementContainerEnd","CreateBusinesssegmentComponent_Template_button_click_58_listener","CreateBusinesssegmentComponent_Template_button_click_64_listener","CreateBusinesssegmentComponent_Template_form_ngSubmit_76_listener","CreateBusinesssegmentComponent_Template_input_keypress_82_listener","CreateBusinesssegmentComponent_Template_mat_autocomplete_opened_89_listener","CreateBusinesssegmentComponent_mat_option_92_Template","CreateBusinesssegmentComponent_mat_option_94_Template","CreateBusinesssegmentComponent_Template_input_keypress_99_listener","CreateBusinesssegmentComponent_Template_input_keypress_104_listener","CreateBusinesssegmentComponent_Template_input_keypress_109_listener","_r2","_r8","invalid"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\Master\\create-businesssegment\\create-businesssegment.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\Master\\create-businesssegment\\create-businesssegment.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, HostListener, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Validators, FormArray } from '@angular/forms';\r\nimport { Observable, from, fromEvent } from 'rxjs';\r\nimport { Router } from '@angular/router'\r\nimport { masterService } from '../master.service'\r\n\r\n\r\n\r\nimport { SharedService } from '../../service/shared.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { debounceTime, distinctUntilChanged, finalize, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { MatRadioChange } from '@angular/material/radio';\r\n\r\ninterface status {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-businesssegment',\r\n  templateUrl: './create-businesssegment.component.html',\r\n  styleUrls: ['./create-businesssegment.component.scss']\r\n})\r\nexport class CreateBusinesssegmentComponent implements OnInit {\r\n  @ViewChild('Businesssegment') matBusinesssegmentAutocomplete: MatAutocomplete;\r\n  @ViewChild('BusinesssegmentInput') BusinesssegmentInput: any;\r\n\r\n  @ViewChild('segmentdrop') matsegmentdropAutocomplete: MatAutocomplete;\r\n  @ViewChild('segmentdropInput') BusinesssectorInput: any;\r\n\r\n  @ViewChild( MatAutocompleteTrigger ) autocompleteTrigger: MatAutocompleteTrigger;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild('modalclose') moDalclose:ElementRef;\r\n\r\n//   AddForm: FormGroup;\r\n\r\n//   constructor(private formBuilder: FormBuilder,private dataService: masterService,private router: Router) { }\r\n\r\n//   ngOnInit(): void {\r\n//     this.AddForm = this.formBuilder.group({\r\n//       code: ['', Validators.required],\r\n//       name: ['', Validators.required],\r\n//       no: ['', Validators.required],\r\n//       description: ['', Validators.required],\r\n//       remarks: ['', Validators.required]\r\n//     })\r\n//   }\r\n\r\n//   createFormat() {\r\n//     let data = this.AddForm.controls;\r\n//     let objBusinesssegment = new Businesssegment();\r\n//     objBusinesssegment.code = data['code'].value;\r\n//     objBusinesssegment.name = data['name'].value;\r\n//     objBusinesssegment.no = data['no'].value;\r\n//     objBusinesssegment.description = data['description'].value;\r\n//     objBusinesssegment.remarks = data['remarks'].value;\r\n//     // console.log(\"objBusinesssegment\", objBusinesssegment)\r\n//     return objBusinesssegment;\r\n//   }\r\n\r\n\r\n//   submitForm() {\r\n//     this.dataService.createBusinessSegmentForm(this.createFormat())\r\n//       .subscribe(res => {\r\n//         // console.log(\"createBusinessSegmentForm\", res);\r\n//         this.router.navigate(['/employeeSummary'], { skipLocationChange: true })\r\n//         return true\r\n//       }\r\n//       )\r\n//   }\r\n\r\n// }\r\n// class Businesssegment {\r\n//   code: string;\r\n//   name: string;\r\n//   no: string;\r\n//   description: string;\r\n//   remarks: string;\r\n\r\n// }\r\n\r\nBSForm: FormGroup;\r\nSegmentForm: FormGroup;\r\nisLoading = false;\r\nBusinesssegmentList:any=[]\r\nsectorList:any = []\r\ncurrentpagecom_branch=1;\r\nhas_nextcom_branch=true;\r\nhas_previouscom=true;\r\nstatus: status[] = [\r\n  {value: 'YES', viewValue: 'YES '},\r\n  {value: 'NO', viewValue: 'NO'}]\r\nfloatLabelControl = new FormControl('auto');\r\n\r\n  @Output() onCancel = new EventEmitter<any>();\r\n  @Output() onSubmit = new EventEmitter<any>();\r\n  radioFlag: any = [];\r\n  sectorID: any;\r\n  segmentID: any;\r\n\r\n  constructor(private fb: FormBuilder, private shareService: SharedService,\r\n     private toastr:ToastrService, private router: Router, private dataService: masterService ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.BSForm = this.fb.group({\r\n      description:['', Validators.required] ,\r\n      name:['', Validators.required] ,\r\n      no:['', Validators.required] ,\r\n      code:[''],\r\n      remarks:['', Validators.required],\r\n      Businesssegment:[''] ,\r\n    })\r\n\r\n    this.SegmentForm = this.fb.group({\r\n      //code:['', Validators.required] ,\r\n      name:['', Validators.required] ,\r\n      no:['', Validators.required] ,\r\n      description:['', Validators.required],\r\n      remarks:['', Validators.required],\r\n      sector_id:[''] \r\n    });\r\n\r\n    this.dataService.getBusinesssegmentsearch('',1).subscribe(data=>{\r\n      this.BusinesssegmentList=data['data'];\r\n    })\r\n    this.BSForm.get('Businesssegment').valueChanges\r\n    .pipe(\r\n      debounceTime(100),\r\n      distinctUntilChanged(),\r\n      tap(() => {\r\n        this.isLoading = true;\r\n\r\n      }),\r\n      switchMap(value => this.dataService.getBusinesssegmentsearch(value,1)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.isLoading = false\r\n          }),\r\n        )\r\n      )\r\n    )\r\n\r\n    .subscribe((results: any[]) => {\r\n      this.BusinesssegmentList = results[\"data\"];\r\n      console.log('branch_id=',results)\r\n      console.log('branch_data=',this.BusinesssegmentList)\r\n\r\n    })\r\n\r\n    this.dataService.getBusinesssectorsearch('',1).subscribe(data=>{\r\n      this.sectorList=data['data'];\r\n    })\r\n    this.SegmentForm.get('sector_id').valueChanges\r\n    .pipe(\r\n      debounceTime(100),\r\n      distinctUntilChanged(),\r\n      tap(() => {\r\n        this.isLoading = true;\r\n\r\n      }),\r\n      switchMap(value => this.dataService.getBusinesssectorsearch(value,1)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.isLoading = false\r\n          }),\r\n        )\r\n      )\r\n    )\r\n\r\n    .subscribe((results: any[]) => {\r\n      this.sectorList = results[\"data\"];\r\n      console.log('branch_id=',results)\r\n      console.log('branch_data=',this.sectorList)\r\n\r\n    })\r\n  }\r\n\r\n  autocompleteScroll_Businesssegment(){\r\n    setTimeout(() => {\r\n      if (this.matBusinesssegmentAutocomplete && this.autocompleteTrigger && this.matBusinesssegmentAutocomplete.panel) {\r\n        fromEvent(this.matBusinesssegmentAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\r\n            const scrollTop = this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matBusinesssegmentAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matBusinesssegmentAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_nextcom_branch === true) {\r\n                this.dataService.getBusinesssegmentsearch( this.BusinesssegmentInput.nativeElement.value, this.currentpagecom_branch + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    console.log('branch=',results)\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.BusinesssegmentList = this.BusinesssegmentList.concat(datas);\r\n                    if (this.BusinesssegmentList.length >= 0) {\r\n                      this.has_nextcom_branch = datapagination.has_next;\r\n                      this.has_previouscom = datapagination.has_previous;\r\n                      this.currentpagecom_branch = datapagination.index;\r\n                    }\r\n                  })\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  autocompleteScroll_sector(){\r\n    setTimeout(() => {\r\n      if (this.matsegmentdropAutocomplete && this.autocompleteTrigger && this.matsegmentdropAutocomplete.panel) {\r\n        fromEvent(this.matsegmentdropAutocomplete.panel.nativeElement, 'scroll')\r\n          .pipe(\r\n            map(x => this.matsegmentdropAutocomplete.panel.nativeElement.scrollTop),\r\n            takeUntil(this.autocompleteTrigger.panelClosingActions)).subscribe(x => {\r\n            const scrollTop = this.matsegmentdropAutocomplete.panel.nativeElement.scrollTop;\r\n            const scrollHeight = this.matsegmentdropAutocomplete.panel.nativeElement.scrollHeight;\r\n            const elementHeight = this.matsegmentdropAutocomplete.panel.nativeElement.clientHeight;\r\n            const atBottom = scrollHeight - 1 <= scrollTop + elementHeight;\r\n            if (atBottom) {\r\n              if (this.has_nextcom_branch === true) {\r\n                this.dataService.getBusinesssectorsearch( this.BusinesssectorInput.nativeElement.value, this.currentpagecom_branch + 1)\r\n                  .subscribe((results: any[]) => {\r\n                    let datas = results[\"data\"];\r\n                    console.log('branch=',results)\r\n                    let datapagination = results[\"pagination\"];\r\n                    this.sectorList = this.sectorList.concat(datas);\r\n                    if (this.sectorList.length >= 0) {\r\n                      this.has_nextcom_branch = datapagination.has_next;\r\n                      this.has_previouscom = datapagination.has_previous;\r\n                      this.currentpagecom_branch = datapagination.index;\r\n                    }\r\n                  })\r\n              }\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n  checker_segment(data){\r\n   console.log(data)\r\n   this.segmentID = data.id\r\n\r\n };\r\n checker_sector(data){\r\n   console.log(data)\r\n   this.sectorID = data.id\r\n }\r\n radioChange(event: MatRadioChange,a) {\r\n  console.log(event.value.value);\r\n  if(event.value.value == 'YES'){\r\n    this.radioFlag = 1\r\n  }\r\n  else if(event.value.value == 'NO'){\r\n    this.radioFlag = 0\r\n  }\r\n  console.log('radio_flag ',this.radioFlag);\r\n}\r\n\r\n addSegment(){\r\n   \r\n }\r\n\r\n  BSSubmit(){\r\n  if (this.BSForm.value.name===\"\"){\r\n    this.toastr.error('Add name Field','Empty value inserted' ,{timeOut: 1500});\r\n    return false;\r\n  }\r\n  if (this.BSForm.value.name.trim()===\"\"){\r\n    this.toastr.error('Add name Field',' WhiteSpace Not Allowed');\r\n    return false;\r\n  }\r\n  if (this.BSForm.value.name.trim().length > 20){\r\n    this.toastr.error('Not more than 20 characters','Enter valid name' );\r\n    return false;\r\n  }\r\n  if (this.BSForm.value.no===\"\"){\r\n    this.toastr.error('Add no Field','Empty value inserted' ,{timeOut: 1500});\r\n    return false;\r\n  }\r\n  if (this.BSForm.value.no.trim()===\"\"){\r\n    this.toastr.error('Add no Field',' WhiteSpace Not Allowed');\r\n    return false;\r\n  }\r\n  if (this.BSForm.value.no.trim().length > 3){\r\n    this.toastr.error('Not more than 3 characters','Enter valid no' );\r\n    return false;\r\n  }\r\n    let data = this.BSForm.value\r\n    data['status'] = this.radioFlag\r\n    data['masterbussinesssegment_id'] = this.segmentID\r\n   this.dataService.BSCreateForm(data)\r\n   .subscribe(res => {\r\n    if (res.code === \"INVALID_DATA\" && res.description === \"Invalid Data or DB Constraint\") {\r\n      this.toastr.error(\"[INVALID_DATA! ...]\")\r\n    }\r\n    else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Duplicate Name\") {\r\n      this.toastr.warning(\"Duplicate Data! ...\")\r\n    } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Unexpected Internal Server Error\") {\r\n      this.toastr.error(\"INVALID_DATA!...\")\r\n    }\r\n    else if(res.code === \"INVALID_DATA\" && res.description === \"Duplicate Name\"){\r\n      this.toastr.warning(\"Duplicate Data! ...\")\r\n    }\r\n     else {\r\n       this.toastr.success(\"Successfully created!...\")\r\n      this.onSubmit.emit();\r\n     }\r\n       console.log(\"BSForm SUBMIT\", res)\r\n       return true\r\n     }) \r\n\r\n\r\n  }\r\n  \r\n  SegmentSubmit(){\r\n    if (this.SegmentForm.value.name===\"\"){\r\n      this.toastr.error('Add name Field','Empty value inserted' ,{timeOut: 1500});\r\n      return false;\r\n    }\r\n    if (this.SegmentForm.value.name.trim()===\"\"){\r\n      this.toastr.error('Add name Field',' WhiteSpace Not Allowed');\r\n      return false;\r\n    }\r\n    if (this.SegmentForm.value.name.trim().length > 20){\r\n      this.toastr.error('Not more than 20 characters','Enter valid name' );\r\n      return false;\r\n    }\r\n    if (this.SegmentForm.value.no===\"\"){\r\n      this.toastr.error('Add no Field','Empty value inserted' ,{timeOut: 1500});\r\n      return false;\r\n    }\r\n    if (this.SegmentForm.value.no.trim()===\"\"){\r\n      this.toastr.error('Add no Field',' WhiteSpace Not Allowed');\r\n      return false;\r\n    }\r\n    if (this.SegmentForm.value.no.trim().length > 3){\r\n      this.toastr.error('Not more than 3 characters','Enter valid no' );\r\n      return false;\r\n    }\r\n      let data = this.SegmentForm.value\r\n      data['sector_id']= this.sectorID\r\n     this.dataService.BSSegmentSave(data)\r\n     .subscribe(res => {\r\n      if (res.code === \"INVALID_DATA\" && res.description === \"Invalid Data or DB Constraint\") {\r\n        this.toastr.error(\"[INVALID_DATA! ...]\")\r\n      }\r\n      else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Duplicate Name\") {\r\n        this.toastr.warning(\"Duplicate Data! ...\")\r\n      } else if (res.code === \"UNEXPECTED_ERROR\" && res.description === \"Unexpected Internal Server Error\") {\r\n        this.toastr.error(\"INVALID_DATA!...\")\r\n      }\r\n      else if(res.code === \"INVALID_DATA\" && res.description === \"Duplicate Name\"){\r\n        this.toastr.warning(\"Duplicate Data! ...\")\r\n      }\r\n       else {\r\n         this.moDalclose.nativeElement.click();\r\n         this.toastr.success(\"Successfully created!...\")\r\n        // this.onSubmit.emit();\r\n       }\r\n         console.log(\"SegmentForm SUBMIT\", res)\r\n         return true\r\n       }) \r\n  \r\n  }\r\n\r\n  omit_special_char(event)\r\n  {   \r\n    var k;  \r\n    k = event.charCode;  \r\n    return((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57)); \r\n  }\r\n   onCancelClick() {\r\n    this.onCancel.emit()\r\n   }\r\n  }","<!-- <div style=\"margin-left: 50px;margin-right: 80%;margin-top: 3%; width: 100%;\">\r\n    <h3>\r\n        Business Segment Form\r\n    </h3>\r\n    <div>\r\n        <form [formGroup]=\"AddForm\" (ngSubmit)=\"submitForm()\">\r\n            <table>\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field style=\"width: 175px;\">\r\n                            <mat-label>Code</mat-label>\r\n                            <input matInput placeholder=\"Code\" formControlName=\"code\" autocomplete=\"off\" required>\r\n                        </mat-form-field>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field style=\"width: 175px;margin-left: 50px;\">\r\n                            <mat-label>Name</mat-label>\r\n                            <input matInput placeholder=\"Name\" formControlName=\"name\" autocomplete=\"off\" required>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field style=\"width: 175px;margin-top: 20px;\">\r\n                            <mat-label>No</mat-label>\r\n                            <input matInput placeholder=\"No\" formControlName=\"no\" autocomplete=\"off\" required>\r\n                        </mat-form-field>\r\n                    </td>\r\n                    <td>\r\n                        <mat-form-field style=\"width: 175px;margin-top: 20px;margin-left: 50px;\">\r\n                            <mat-label>Description</mat-label>\r\n                            <input matInput placeholder=\"Description\" formControlName=\"description\" autocomplete=\"off\" required>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <mat-form-field style=\"width: 175px;margin-top: 20px;\">\r\n                            <mat-label>Remarks</mat-label>\r\n                            <textarea matInput placeholder=\"Remarks\" formControlName=\"remarks\" autocomplete=\"off\"></textarea>\r\n                        </mat-form-field>\r\n                    </td>  \r\n                </tr>\r\n            </table>\r\n            <button type=\"submit\" style=\"border-radius: 40px;margin-left: 10px;\" class=\"btn btn-outline-primary\" \r\n                [disabled]=\"AddForm.invalid\">Submit</button>\r\n            <button [routerLink]='\"/employeeSummary\"' skipLocationChange class=\"btn btn-outline-primary\"\r\n            style=\"border-radius: 40px;margin-left: 10px;\">Cancel</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n -->\r\n <div style=\"margin-left: 25px; margin-right: 80%; margin-top: 1%; width: 100%;\">\r\n    <h1 style=\"font-family:'Times New Roman', Times, serif;color:blue;font-size: 23px;\">\r\n        Business Segment Add\r\n    </h1><hr>\r\n    <div>\r\n        <form [formGroup]=\"BSForm\" (ngSubmit)=\"BSSubmit()\">\r\n            <table>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                                <mat-label>BS Name</mat-label>\r\n                                <input matInput placeholder=\"BS Name\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"name\" required />\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                                <mat-label>BS No</mat-label>\r\n                                <input matInput placeholder=\"BS No\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"no\" minlength=\"2\" maxlength=\"3\" size=\"45\" pattern=\"[0-9]{2,3}\" required />\r\n                                <mat-error> Length b/w 2 to 3 Characters</mat-error>\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                                <mat-label>BS Code</mat-label>\r\n                                <input matInput placeholder=\"BS Code\"  [readonly]=\"true\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"code\" minlength=\"2\" maxlength=\"3\" size=\"45\" pattern=\"[0-9]{2,3}\" />\r\n                                <!-- <mat-error> Length b/w 2 to 3 Characters</mat-error> -->\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\" appearance=\"outline\">\r\n                                <mat-label> Remarks</mat-label>\r\n                                <input  matInput placeholder=\" Remarks\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"remarks\">\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\" style=\"padding-top: 10px;\">\r\n                        <td>\r\n                            <mat-radio-group [formControl]=\"floatLabelControl\" style=\"width: 175px; margin-left: 50px;\">\r\n                                <mat-radio-button *ngFor=\"let a of status\" [value]=\"a\" (change)=\"radioChange($event,a.value)\">\r\n                                    {{a.value}}\r\n                                </mat-radio-button>\r\n                            </mat-radio-group>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\" appearance=\"outline\">\r\n                                <mat-label>Description</mat-label>\r\n                                <input  matInput placeholder=\"Description\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"description\">\r\n                            </mat-form-field>\r\n                        </td>\r\n                    </div>\r\n                    <div class=\"col-sm-3\" style=\"margin-top: 5px;\">\r\n                        <td>\r\n                            <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                                <mat-label>Business Segment</mat-label>\r\n                                <input class=\"toolbar-search\" type=\"text\" matInput autocomplete=\"off\" matInput [matAutocomplete]=\"Businesssegment\" #BusinesssegmentInput formControlName=\"Businesssegment\" style=\"width: 250px;\" />\r\n                                <!-- <mat-placeholder>Business Segment</mat-placeholder> -->\r\n                                <mat-autocomplete #Businesssegment=\"matAutocomplete\" #branch (opened)=\"autocompleteScroll_Businesssegment()\">\r\n                                    <mat-option *ngIf=\"isLoading\">Loading..</mat-option>\r\n                                    <ng-container>\r\n                                        <mat-option *ngFor=\"let d of BusinesssegmentList\" [value]=\"d.name\" (focusout)=\"checker_segment(d)\">\r\n                                            {{d.name}}\r\n                                        </mat-option>\r\n                                    </ng-container>\r\n                                </mat-autocomplete>\r\n                            </mat-form-field>\r\n                        </td>\r\n                        <td>\r\n                            <!-- <span matTooltip=\"view Payment Details\" class=\" fa fa-eye create \" style=\"color: green;cursor: pointer;\"\r\n                               (click)=\"getpaystatus(colist.crno)\" data-bs-toggle=\"modal\"  data-bs-target=\"#showpaymentdetails\"></span> -->\r\n                            <button mat-fab type=\"button\" color=\"success\" matTooltip=\"Add\" style=\"margin-left: 3px; margin-bottom: 5px;\" aria-label=\"arrow back icon\" (click)=\"addSegment()\" data-bs-toggle=\"modal\" data-bs-target=\"#showpaymentdetails\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </div>\r\n                </div>\r\n            </table>\r\n            <div style=\"margin-bottom: 5%; margin-left: 50px;\">\r\n                <button type=\"submit\" style=\"border-radius: 40px;\" class=\"btn btn-outline-primary\" >Submit</button>\r\n                <button type=\"button\" (click)=\"onCancelClick()\" class=\"btn btn-outline-primary\" style=\"border-radius: 40px; margin-left: 10px;\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n<!-- <pre>\r\n    {{BSForm.value | json}}\r\n</pre> -->\r\n<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\" id=\"showpaymentdetails\">\r\n    <div class=\"modal-dialog modal-xl\" style=\"width: 93%;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\" style=\"background: rgba(23, 204, 23, 0.288);\">\r\n                <h2 class=\"modal-title\" style=\"color: black; text-align: center;\">Add Business Segment</h2>\r\n                <button #modalclose type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <form [formGroup]=\"SegmentForm\" (ngSubmit)=\"SegmentSubmit()\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                        <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                            <mat-label>No</mat-label>\r\n                            <input matInput placeholder=\"No\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"no\" required />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                            <mat-label>Sector</mat-label>\r\n                            <input class=\"toolbar-search\" type=\"text\" matInput autocomplete=\"off\" matInput [matAutocomplete]=\"segmentdrop\" #segmentdropInput formControlName=\"sector_id\" style=\"width: 250px;\" />\r\n                            <!-- <mat-placeholder>Sector</mat-placeholder> -->\r\n                            <mat-autocomplete #segmentdrop=\"matAutocomplete\" #segment (opened)=\"autocompleteScroll_sector ()\">\r\n                                <mat-option *ngIf=\"isLoading\">Loading..</mat-option>\r\n                                <ng-container>\r\n                                    <mat-option *ngFor=\"let d of sectorList\" [value]=\"d.name\" (focusout)=\"checker_sector(d)\">\r\n                                        {{d.name}}\r\n                                    </mat-option>\r\n                                </ng-container>\r\n                            </mat-autocomplete>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                            <mat-label>Name</mat-label>\r\n                            <input matInput placeholder=\"Name\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"name\" required />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                            <mat-label>Remarks</mat-label>\r\n                            <input matInput placeholder=\"Remarks\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"remarks\" required />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <mat-form-field style=\"width: 175px; margin-left: 50px;\">\r\n                            <mat-label>Description</mat-label>\r\n                            <input matInput placeholder=\"Description\" (keypress)=\"omit_special_char($event)\" autocomplete=\"off\" formControlName=\"description\" required />\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-sm-3\">\r\n                        <button type=\"submit\" style=\"border-radius: 40px;\" class=\"btn btn-outline-primary\" [disabled]=\"SegmentForm.invalid\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}