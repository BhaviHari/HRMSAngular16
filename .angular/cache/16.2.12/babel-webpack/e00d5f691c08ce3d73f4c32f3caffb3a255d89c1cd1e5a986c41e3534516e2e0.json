{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\n// import { ComponentPortal } from '@angular/cdk/portal';\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles';\nimport { debounceTime, distinctUntilChanged, tap, switchMap, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../AppAutoEngine/import-services/CommonimportFiles\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service\";\nimport * as i6 from \"../task-manager.service\";\nimport * as i7 from \"src/app/service/shared.service\";\nimport * as i8 from \"@angular/material/dialog\";\nimport * as i9 from \"@angular/cdk/overlay\";\nimport * as i10 from \"../shareddata.service\";\nimport * as i11 from \"@angular/material/icon\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/material/core\";\nimport * as i16 from \"@angular/material/autocomplete\";\nimport * as i17 from \"@angular/material/datepicker\";\nfunction TaskeditComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_mat_option_13_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.resetdataclient());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const clt_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", clt_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", clt_r23.name, \" \");\n  }\n}\nfunction TaskeditComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_mat_option_24_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.resetmodule());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const appnm_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", appnm_r26);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", appnm_r26.name, \" \");\n  }\n}\nfunction TaskeditComponent_mat_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const modnm_r29 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", modnm_r29);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", modnm_r29.name, \" \");\n  }\n}\nfunction TaskeditComponent_mat_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_mat_option_47_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const devtype_r30 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.getdevTypeId(ctx_r31.dataIndex, devtype_r30, \"type\"));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const devtype_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", devtype_r30.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", devtype_r30.text, \" \");\n  }\n}\nfunction TaskeditComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 36);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"readonly\", ctx_r12.taskstatus === 0 || ctx_r12.taskstatus === 1 || ctx_r12.taskstatus === 2 || ctx_r12.taskstatus === 3);\n  }\n}\nfunction TaskeditComponent_div_66_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r36 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", opt_r36);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r36.name, \" \");\n  }\n}\nfunction TaskeditComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"mat-form-field\", 37);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_div_66_Template_mat_form_field_click_2_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.developer(ctx_r37.dataIndex));\n    });\n    i0.ɵɵelementStart(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 38, 39);\n    i0.ɵɵelementStart(7, \"mat-autocomplete\", 6, 40);\n    i0.ɵɵelementContainerStart(9);\n    i0.ɵɵtemplate(10, TaskeditComponent_div_66_mat_option_10_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r34 = i0.ɵɵreference(8);\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"matAutocomplete\", _r34);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"displayWith\", ctx_r13.displaydevelopclient);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.empList);\n  }\n}\nfunction TaskeditComponent_mat_option_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dep_r39 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dep_r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dep_r39.task, \" \");\n  }\n}\nfunction TaskeditComponent_mat_option_83_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_mat_option_83_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.getprioritytype(ctx_r41.dataIndex, ctx_r41.data.get(\"priority_type\").value, \"priority_type\"));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pry_r40 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pry_r40.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pry_r40.text, \" \");\n  }\n}\nfunction TaskeditComponent_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 21)(2, \"mat-label\");\n    i0.ɵɵtext(3, \" Actual Start Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 41)(5, \"mat-datepicker-toggle\", 23)(6, \"mat-datepicker\", null, 42);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r43 = i0.ɵɵreference(7);\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r43)(\"min\", ctx_r18.spstartdate)(\"max\", ctx_r18.spenddate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r43);\n  }\n}\nfunction TaskeditComponent_div_85_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 21)(2, \"mat-label\");\n    i0.ɵɵtext(3, \" Actual End Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 43);\n    i0.ɵɵlistener(\"dateChange\", function TaskeditComponent_div_85_Template_input_dateChange_4_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.checkEndDateValidity());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-datepicker-toggle\", 23)(6, \"mat-datepicker\", null, 44);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r44 = i0.ɵɵreference(7);\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r44)(\"max\", ctx_r19.spenddate)(\"min\", ctx_r19.spstartdate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r44);\n  }\n}\nfunction TaskeditComponent_div_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 21)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Remarks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 45);\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TaskeditComponent_div_87_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 46)(2, \"div\", 47)(3, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_div_87_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.Submitassign());\n    });\n    i0.ɵɵtext(4, \" Assign \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_div_87_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.BackToSummary());\n    });\n    i0.ɵɵtext(6, \" Close \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction TaskeditComponent_div_88_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 46)(2, \"div\", 47)(3, \"button\", 48);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_div_88_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r50.SubmitTask());\n    });\n    i0.ɵɵtext(4, \" Update \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function TaskeditComponent_div_88_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.BackToSummary());\n    });\n    i0.ɵɵtext(6, \" Close \");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nexport class TaskeditComponent {\n  fb;\n  router;\n  SpinnerService;\n  errorHandler;\n  datePipe;\n  notify;\n  shareService;\n  apicall;\n  taskapi;\n  taskmanagerservice;\n  sharedservice;\n  dialog;\n  overlay;\n  overlayPositionBuilder;\n  localService;\n  jsonData;\n  constructor(fb, router, SpinnerService, errorHandler, datePipe, notify, shareService, apicall, taskapi, taskmanagerservice, sharedservice, dialog, overlay, overlayPositionBuilder, localService) {\n    this.fb = fb;\n    this.router = router;\n    this.SpinnerService = SpinnerService;\n    this.errorHandler = errorHandler;\n    this.datePipe = datePipe;\n    this.notify = notify;\n    this.shareService = shareService;\n    this.apicall = apicall;\n    this.taskapi = taskapi;\n    this.taskmanagerservice = taskmanagerservice;\n    this.sharedservice = sharedservice;\n    this.dialog = dialog;\n    this.overlay = overlay;\n    this.overlayPositionBuilder = overlayPositionBuilder;\n    this.localService = localService;\n  }\n  OnSubmit = new EventEmitter();\n  OnCancel = new EventEmitter();\n  EmpTaskCreate;\n  selectedDevTypeName;\n  selectedStartDate;\n  selectedEndDate;\n  StoryVals = 0;\n  sprstartdate = '';\n  sprenddate = '';\n  unassigned = '';\n  assigned = '';\n  assign;\n  readonly;\n  spstartdate;\n  spenddate;\n  taskstartdate;\n  tasksenddate;\n  dependency_ids;\n  taskcode;\n  dependencyid;\n  taskstatus;\n  projectmap;\n  modulemapid;\n  actualenddate;\n  actualstartdate;\n  projectId;\n  empList;\n  isEndDateValid = false;\n  EmpTaskCreateObj = {\n    QuickAccessList: [],\n    selectedNav: '',\n    clientList: [],\n    projectList: [],\n    moduleList: [],\n    createArray: [],\n    from_date: '',\n    to_date: '',\n    task: '',\n    type: '',\n    devtypelist: [],\n    statusListData: '',\n    toSelectDropDown: null,\n    toSelectDependency: null,\n    submitValidation: false,\n    dependencylist: [],\n    priorityList: []\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\n  };\n  ngOnInit() {\n    this.EmpTaskCreate = this.fb.group({\n      client: '',\n      project: '',\n      project_map_id: '',\n      task: '',\n      dev_type_name: '',\n      // start_date:'',\n      start_date: ['', Validators.required],\n      end_date: '',\n      developer: '',\n      dependency_id: '',\n      priority_type: '',\n      dependencylist: '',\n      // title:'',\n      type: '',\n      developers: '',\n      id: '',\n      dev_type_names: '',\n      actual_start_date: '',\n      actual_end_date: '',\n      remarks: ''\n      // data: new FormArray([\n      // ])\n    });\n    this.taskstatus = this.localService.taskstatus.value;\n    this.dependencyid = this.localService.dependency.value;\n    this.taskcode = this.localService.taskcode.value;\n    this.taskstartdate = this.localService.taskstartdate.value;\n    this.tasksenddate = this.localService.taskenddate.value;\n    this.spstartdate = this.localService.taskstartdate.value;\n    this.spenddate = this.localService.taskenddate.value;\n    if (this.taskstartdate == '' && this.tasksenddate == '') {}\n    this.presenttDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    if (this.spenddate >= this.presenttDate || this.spenddate == null) {\n      this.spenddate = this.presenttDate;\n    }\n    this.sprstartdate = this.datePipe.transform(this.localService?.sprintfromdate?.value, 'yyyy-MM-dd');\n    this.sprenddate = this.datePipe.transform(this.localService?.sprinttodate?.value, 'yyyy-MM-dd');\n    console.log(\"JSON DATA\", this.jsonData);\n    this.actualenddate = this.jsonData.actual_end_date;\n    this.actualstartdate = this.jsonData.actual_start_date;\n    // this.assigned=this.localService.assignedit.value\n    // if( this.assigned='assigned'){\n    //   this.assign=true;\n    // }\n    this.unassigned = this.localService.unassignedit.value;\n    this.getdevtype();\n    this.getPriority();\n    if (this.unassigned === \"Unassigned\") {\n      if (this.jsonData.start_date == 'None' || this.jsonData.end_date == 'None') {\n        this.EmpTaskCreate.patchValue({\n          task: this.jsonData.task,\n          dev_type_name: this.jsonData.dev_type.id,\n          developer: this.jsonData.task_assignee[0]?.full_name,\n          priority_type: this.jsonData.priority_type.id,\n          client: this.jsonData.client_name.name,\n          project: this.jsonData.app_id.name,\n          project_map_id: this.jsonData.module_id.name,\n          // type: this.jsonData.dev_type.id,\n          // start_date: new Date(this.jsonData.start_date),\n          // end_date : new Date(this.jsonData.end_date), \n          type: this.jsonData.dev_type.id\n        });\n      } else {\n        this.EmpTaskCreate.patchValue({\n          task: this.jsonData.task,\n          dev_type_name: this.jsonData.dev_type.id,\n          developer: this.jsonData.task_assignee[0]?.full_name,\n          priority_type: this.jsonData.priority_type.id,\n          client: this.jsonData.client_name.name,\n          project: this.jsonData.app_id.name,\n          project_map_id: this.jsonData.module_id.name,\n          // type: this.jsonData.dev_type.id,\n          start_date: new Date(this.jsonData.start_date),\n          end_date: new Date(this.jsonData.end_date),\n          type: this.jsonData.dev_type.id\n        });\n      }\n    }\n    if (this.unassigned != \"Unassigned\") {\n      if (this.jsonData.start_date == \"None\") {\n        this.EmpTaskCreate.patchValue({\n          client: this.jsonData.client_name,\n          project: this.jsonData.app_id,\n          project_map_id: this.jsonData.module_id,\n          task: this.jsonData.task,\n          dev_type_name: this.jsonData.dev_type,\n          // start_date: new Date(this.jsonData.start_date),\n          // end_date : new Date(this.jsonData.end_date),\n          developer: this.jsonData.task_assignee[0].full_name,\n          dependency_id: this.jsonData.dependency,\n          dependencylist: this.jsonData.dependency,\n          priority_type: this.jsonData.priority_type.id,\n          // title: this.jsonData.title,\n          // developers : this.jsonData.task_assignee[0].id,\n          id: this.jsonData.id,\n          // dev_type_names: this.jsonData.dev_type.id,\n          type: this.jsonData.dev_type.id\n          // actual_start_date:new Date(this.jsonData.actual_start_date),\n          // actual_end_date:new Date(this.jsonData.actual_end_date)\n        });\n      } else {\n        this.EmpTaskCreate.patchValue({\n          client: this.jsonData.client_name,\n          project: this.jsonData.app_id,\n          project_map_id: this.jsonData.module_id,\n          task: this.jsonData.task,\n          dev_type_name: this.jsonData.dev_type,\n          start_date: new Date(this.jsonData.start_date),\n          end_date: new Date(this.jsonData.end_date),\n          developer: this.jsonData.task_assignee[0].full_name,\n          dependency_id: this.jsonData.dependency,\n          dependencylist: this.jsonData.dependency,\n          priority_type: this.jsonData.priority_type.id,\n          // title: this.jsonData.title,\n          developers: this.jsonData.task_assignee[0].id,\n          id: this.jsonData.id,\n          dev_type_names: this.jsonData.dev_type.id,\n          type: this.jsonData.dev_type.id,\n          actual_start_date: new Date(this.jsonData.actual_start_date),\n          actual_end_date: new Date(this.jsonData.actual_end_date)\n        });\n        this.updateSelectedValues();\n        this.StoryVals = this.localService.story_Id.value;\n        this.start_date = new Date(this.jsonData.start_date);\n        this.dev_type_name = this.jsonData.dev_type.text, this.end_date = new Date(this.jsonData.end_date);\n        this.getModule(this.jsonData.client_name, this.jsonData.app_id, this.jsonData.module_id);\n        this.getdevtype();\n        this.getPriority();\n      }\n    } else {\n      this.EmpTaskCreate.patchValue({\n        task: this.jsonData.task,\n        client: this.jsonData.client_name,\n        project: this.jsonData.app_id,\n        project_map_id: this.jsonData.module_id,\n        id: this.jsonData.id,\n        priority_type: this.jsonData.priority_type.id\n      });\n      this.getModule(this.jsonData.client_name, this.jsonData.app_id, this.jsonData.module_id);\n      this.getdevtype();\n      this.getPriority();\n    }\n  }\n  getdevtype() {\n    this.SpinnerService.show();\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD).subscribe(results => {\n      this.SpinnerService.hide();\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.devtypelist = datas;\n      if (this.EmpTaskCreateObj.devtypelist?.length > 0) {\n        // this.EmpTaskCreateObj.statusListData = this.EmpTaskCreateObj.devtypelist[0]?.id  \n        this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == 1);\n        console.log(\"---------> data for dropdown\", this.EmpTaskCreateObj.toSelectDropDown, this.EmpTaskCreateObj.devtypelist);\n      }\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  deleteTask(index) {\n    let control = this.EmpTaskCreate.get(\"data\");\n    control.removeAt(index);\n  }\n  ChangeDateFormat(index, key, date) {\n    // this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\n    this.EmpTaskCreate.get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'));\n  }\n  ChangeDateFormats(index, key, date) {\n    // this.EmpTaskCreate.get('data')['controls'][index].get('end_date').setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\n  }\n  getdevTypeId(index, data, key) {\n    console.log(index, data, key);\n    this.EmpTaskCreate.get(key).setValue(data.id);\n    this.EmpTaskCreate.get('dev_type_name').setValue(data?.id);\n    this.EmpTaskCreate.get('dev_type_names').setValue(data?.id);\n    let multiple_data = ['Management', 'Planning', 'Meeting'];\n    // if (multiple_data.includes(data.text) == false){\n    //   if(this.chipSelectedempid[index].length > 1)\n    //     {\n    //       this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([this.chipSelectedempid[index][0]])\n    //     this.chipSelectedemp[index] = [this.chipSelectedemp[index][0]]\n    //     this.chipSelectedempid[index] = [this.chipSelectedempid[index][0]]\n    //   }\n    // }\n    this.selectedDevType = data;\n  }\n  dependencysearch(i) {\n    let data = this.EmpTaskCreate.value;\n    let project_id = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id;\n    if (project_id == undefined) {\n      project_id = \"\";\n    }\n    let devkeyvalue = \"\";\n    this.getdev(devkeyvalue);\n    // (this.EmpTaskCreate.get('data') as FormArray).at(i).get('dependency_id').valueChanges\n    this.EmpTaskCreate.get('dependency_id').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n      console.log('inside tap');\n    }), switchMap(value => this.taskmanagerservice.dependencyedit(value, 1, project_id, this.taskcode).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.dependencylist = datas;\n    });\n  }\n  getdev(keyvalue) {\n    // this.SpinnerService.show();\n    let data = this.EmpTaskCreate.value;\n    let project_id = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id;\n    if (project_id == undefined) {\n      project_id = \"\";\n    }\n    this.taskmanagerservice.dependencyedit(keyvalue, 1, project_id, this.taskcode).subscribe(results => {\n      this.SpinnerService.hide();\n      let datas = results[\"data\"];\n      this.EmpTaskCreateObj.dependencylist = datas;\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  getPriority() {\n    this.SpinnerService.show();\n    this.taskmanagerservice.get_Priority().subscribe(results => {\n      this.SpinnerService.hide();\n      // let datas = results[\"data\"];\n      this.EmpTaskCreateObj.priorityList = results;\n      console.log(\"priority dropdown\", this.EmpTaskCreateObj.priorityList);\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnDep(clt) {\n    return clt ? clt.task : undefined;\n  }\n  Submitassign() {\n    this.SpinnerService.show();\n    if (this.EmpTaskCreate.value.type === \"\" || this.EmpTaskCreate.value.type === null || this.EmpTaskCreate.value.type === undefined) {\n      this.notify.error('choose type');\n      this.SpinnerService.hide();\n      return false;\n    }\n    if (this.EmpTaskCreate.get('start_date').value === \"\" || this.EmpTaskCreate.value.start_date === null || this.EmpTaskCreate.value.start_date === undefined || this.EmpTaskCreate.value.start_date === 'Invalid Date') {\n      this.notify.error('choose start date');\n      this.SpinnerService.hide();\n      return false;\n    }\n    if (this.EmpTaskCreate.value.start_date.invalid) {\n      this.notify.error('choose start date');\n      this.SpinnerService.hide();\n      return false;\n    }\n    if (this.EmpTaskCreate.value.end_date === \"\" || this.EmpTaskCreate.value.end_date === null || this.EmpTaskCreate.value.end_date === undefined) {\n      this.notify.error('choose End date');\n      this.SpinnerService.hide();\n      return false;\n    }\n    if (this.EmpTaskCreate.value.developer === \"\" || this.EmpTaskCreate.value.developer === null || this.EmpTaskCreate.value.developer === undefined) {\n      this.notify.error('choose Employee');\n      this.SpinnerService.hide();\n      return false;\n    }\n    this.SubmitTask();\n  }\n  SubmitTask() {\n    let data = this.EmpTaskCreate.value;\n    let dependency_id = this.EmpTaskCreate.get('dependency_id').value;\n    if (dependency_id) {\n      this.dependency_ids = dependency_id.id;\n    } else {\n      this.dependency_ids = null;\n    }\n    if (this.isEndDateValid == true) {}\n    // data.data[0].story_id = this.stories_Id; \n    console.log(\"EMP Data\", data);\n    let actual_start_date = new Date(data.actual_start_date);\n    let acstarttday = actual_start_date.getDate().toString().padStart(2, '0');\n    let actstartmonth = (actual_start_date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\n    let actstartyear = actual_start_date.getFullYear();\n    // let formattedStartDate = `${day}-${month}-${year}`;\n    let formattedactualStartDate = `${actstartyear}-${actstartmonth}-${acstarttday}`;\n    if (this.actualstartdate === '') {\n      formattedactualStartDate = null;\n    } else {\n      formattedactualStartDate;\n    }\n    if (data.start_date === '' || data.start_date === null || data.start_date === undefined) {\n      this.notify.error(\"Please select Planned Start Date\");\n      return false;\n    }\n    if (data.end_date === '' || data.end_date === null || data.end_date === undefined) {\n      this.notify.error(\"Please select Planned End Date\");\n      return false;\n    }\n    let startDate = new Date(data.start_date);\n    let day = startDate.getDate().toString().padStart(2, '0');\n    let month = (startDate.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\n    let year = startDate.getFullYear();\n    // let formattedStartDate = `${day}-${month}-${year}`;\n    let formattedStartDate = `${year}-${month}-${day}`;\n    let endDate = new Date(data.end_date);\n    let days = endDate.getDate().toString().padStart(2, '0');\n    let months = (endDate.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\n    let years = endDate.getFullYear();\n    // let formattedStartDates = `${days}-${months}-${years}`;\n    let formattedendDates = `${years}-${months}-${days}`;\n    let actual_end_date = new Date(data.actual_end_date);\n    let actenddays = actual_end_date.getDate().toString().padStart(2, '0');\n    let actendmonths = (actual_end_date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\n    let actendyears = actual_end_date.getFullYear();\n    // let formattedStartDates = `${days}-${months}-${years}`;\n    let formattedactualendDates = `${actendyears}-${actendmonths}-${actenddays}`;\n    if (this.actualenddate === '') {\n      formattedactualendDates = null;\n    } else {\n      formattedactualendDates;\n    }\n    let payload = {\n      \"type\": data.type,\n      \"start_date\": formattedStartDate,\n      \"end_date\": formattedendDates,\n      // \"developer\": [data.developers],\n      \"task\": data.task,\n      \"dependency_id\": this.dependency_ids,\n      \"priority_type\": data.priority_type,\n      // \"title\": data.title,\n      \"id\": data.id,\n      \"story_id\": this.StoryVals,\n      \"actual_start_date\": formattedactualStartDate,\n      \"actual_end_date\": formattedactualendDates,\n      \"remarks\": data?.remarks\n    };\n    if (this.unassigned === \"Unassigned\") {\n      payload[\"developer\"] = [this.EmpTaskCreate.get('developer').value.id];\n    }\n    // data = [...data,{story_id: this.stories_Id}]\n    // data.push({story_id: this.stories_Id})\n    // let payload = {\n    //   \"type\": data.dev_type_name.id,\n    //   \"start_date\":data.start_date,\n    //   \"end_date\": data.end_date,\n    //   \"developer\": [data.developers],\n    //   \"task\": data.task,\n    //   \"dependency_id\": data.dependency_id.id,\n    //   \"priority_type\":data.priority_type,\n    //   \"title\": data.title,\n    //   \"id\": data.id\n    // }\n    let modulemappingid = this.EmpTaskCreate.get('project_map_id').value;\n    this.modulemapid = modulemappingid.mapping_id;\n    if (this.modulemapid) {\n      this.projectmap = this.modulemapid;\n    } else {\n      this.projectmap = this.jsonData.mapping_id;\n    }\n    console.log(\"opayload\", payload);\n    let obj = {\n      project_id: this.projectmap,\n      data: [payload]\n      // story_id: this.stories_Id\n    };\n    if (this.unassigned == \"Unassigned\") {\n      obj[\"action\"] = 'assign';\n    }\n    this.EmpTaskCreateObj.submitValidation = true;\n    this.SpinnerService.show();\n    this.taskmanagerservice.storyBasedTaskCreation(obj).subscribe(results => {\n      if (results.code) {\n        this.SpinnerService.hide();\n        this.notify.error(results.description);\n      } else {\n        this.SpinnerService.hide();\n        this.notify.success(results.message);\n        this.OnSubmit.emit();\n        return true;\n      }\n    });\n  }\n  BackToSummary() {\n    this.OnSubmit.emit();\n  }\n  // getModule(clientdata, projectdata, Typedata) {\n  //   if(clientdata?.id == undefined || projectdata?.id == undefined){\n  //     return false \n  //   }\n  //   this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch+projectdata?.id +'?'+ 'client_id='+clientdata?.id +'&' +  this.taskapi.tasksApi.queries.query +\n  //    Typedata + '&' + this.taskapi.tasksApi.queries.status + 2 )\n  //     .subscribe(results => {\n  //       this.EmpTaskCreateObj.moduleList = results['data']\n  //       console.log(\"Module Data\", this.EmpTaskCreateObj.moduleList)\n  //     }, (error) => {\n  //       this.errorHandler.handleError(error);\n  //       this.SpinnerService.hide();\n  //     })\n  // }\n  updateSelectedValues() {\n    let vals = this.EmpTaskCreate.get('dev_type_name').value;\n    this.selectedDevTypeName = vals.text;\n    this.selectedStartDate = this.EmpTaskCreate.get('start_date').value;\n    this.selectedEndDate = this.EmpTaskCreate.get('end_date').value;\n  }\n  clientsearch(Typedata) {\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.clientList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnclt(clt) {\n    return clt ? clt.name : undefined;\n  }\n  Projectsearch(clientdata, Typedata) {\n    if (clientdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch + '/' + clientdata?.id + '?' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.projectList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnappnm(appnm) {\n    return appnm ? appnm.name : undefined;\n  }\n  getModule(clientdata, projectdata, Typedata) {\n    if (clientdata?.id == undefined || projectdata?.id == undefined) {\n      return false;\n    }\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch + projectdata?.id + '?' + 'client_id=' + clientdata?.id + '&' + this.taskapi.tasksApi.queries.query + Typedata + '&' + this.taskapi.tasksApi.queries.status + 2).subscribe(results => {\n      this.EmpTaskCreateObj.moduleList = results['data'];\n    }, error => {\n      this.errorHandler.handleError(error);\n      this.SpinnerService.hide();\n    });\n  }\n  displayFnmodnm(mod) {\n    return mod ? mod.name : undefined;\n  }\n  empSelected(data, i, event) {\n    console.log('event.option.value', event.option.value);\n    this.selectempByName(data, i, event.option.value);\n    this.empInput.nativeElement.value = '';\n    // console.log('chipSelectedempid', this.chipSelectedempid)\n  }\n  //   getemp(keyvalue) {\n  //     // let type = 2 // employee\n  //     console.log(\"emp fun called\")\n  //     let data = this.EmpTaskCreate.value;\n  //     let projectId = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id\n  //     if(projectId !== undefined && projectId !== null && projectId !=='')\n  //     {\n  //       this.taskmanagerservice.task_employeesearch_createproj(keyvalue, 1, projectId)\n  //       .subscribe((results: any[]) => {\n  //         this.SpinnerService.hide();\n  //         let datas = results[\"data\"];\n  //         this.empList = datas;\n  //         console.log(\"emp data get \", this.empList)\n  //       }, (error) => {\n  //         this.errorHandler.handleError(error);\n  //         this.SpinnerService.hide();\n  //       })\n  //     }\n  //  else\n  //  {\n  //     // this.SpinnerService.show();\n  //     this.taskmanagerservice.task_employeesearch_create(keyvalue, 1)\n  //       .subscribe((results: any[]) => {\n  //         this.SpinnerService.hide();\n  //         let datas = results[\"data\"];\n  //         this.empList = datas;\n  //         console.log(\"emp data get \", this.empList)\n  //       }, (error) => {\n  //         this.errorHandler.handleError(error);\n  //         this.SpinnerService.hide();\n  //       })\n  //     }\n  //   }\n  developer(i) {\n    let data = this.EmpTaskCreate.value;\n    this.projectId = data?.project?.id;\n    if (this.projectId !== undefined && this.projectId !== null && this.projectId !== '') {\n      // let devkeyvalue: String = \"\";\n      // this.getemp(devkeyvalue);\n      this.EmpTaskCreate.get('developer').valueChanges\n      // this.taskAddForm.get('developer').valueChanges\n      .pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n        console.log('inside tap');\n      }), switchMap(value => this.taskmanagerservice.task_employeesearch_createproj(value, 1, this.projectId).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.empList = datas;\n        // this.EmpTaskCreateObj.devtypelist = this.empList;\n        // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\n        // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\n      });\n    } else {\n      // let devkeyvalue: String = \"\";\n      //   this.getemp(devkeyvalue);\n      // (this.EmpTaskCreate.get('data') as FormArray).at(i).get('developer').valueChanges\n      this.taskAddForm.get('developer').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n        this.isLoading = true;\n        console.log('inside tap');\n      }), switchMap(value => this.taskmanagerservice.task_employeesearch(value, 1).pipe(finalize(() => {\n        this.isLoading = false;\n      })))).subscribe(results => {\n        let datas = results[\"data\"];\n        this.empList = datas;\n        // this.EmpTaskCreateObj.devtypelist = this.empList;\n        // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\n        // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\n      });\n    }\n  }\n  getDeveloperdrop() {\n    this.taskmanagerservice.getdeveloper('').subscribe(res => {\n      this.develop = res['data'];\n    });\n  }\n  developerClick() {\n    let devkeyvalue = \"\";\n    // this.getsprint(devkeyvalue);\n    // (this.taskAddForm.get('data') as FormArray).at(i).get('developer').valueChanges\n    this.EmpTaskCreate.get('developer').valueChanges.pipe(debounceTime(100), distinctUntilChanged(), tap(() => {\n      this.isLoading = true;\n      console.log('inside tap');\n    }), switchMap(value => this.taskmanagerservice.getdeveloper(value).pipe(finalize(() => {\n      this.isLoading = false;\n    })))).subscribe(results => {\n      let datas = results[\"data\"];\n      this.develop = datas;\n    });\n  }\n  displaydevelopclient(clt) {\n    // console.log(`Client testing data - ${clt.name}`);\n    return clt ? clt.name : undefined;\n  }\n  // isFieldReadOnly(fieldName: string){\n  //   if (this.taskstatus === 0) {\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer';\n  //   }if (this.taskstatus === 1) {\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer' || fieldName==='end_date'||fieldName==='priority_type';\n  //   }\n  //   if (this.taskstatus === 2) {\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer';\n  //   }\n  // }\n  resetdataclient() {\n    this.EmpTaskCreate.get('project').setValue('');\n    this.EmpTaskCreate.get('project_map_id').setValue('');\n  }\n  // resetproject(){\n  //   this.EmpTaskCreate.get('client').setValue('')\n  //   this.EmpTaskCreate.get('project_map_id').setValue('')\n  // }\n  resetmodule() {\n    this.EmpTaskCreate.get('project_map_id').setValue('');\n  }\n  checkEndDateValidity() {\n    const actualEndDate = new Date(this.actualenddate);\n    const taskEndDate = this.EmpTaskCreate.value.actual_end_date;\n    if (actualEndDate < taskEndDate) {\n      this.isEndDateValid = true;\n    } else {\n      this.isEndDateValid = false;\n    }\n  }\n  static ɵfac = function TaskeditComponent_Factory(t) {\n    return new (t || TaskeditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgxSpinnerService), i0.ɵɵdirectiveInject(i3.ErrorHandlingServiceService), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i5.ApicallserviceService), i0.ɵɵdirectiveInject(i3.TaskApi), i0.ɵɵdirectiveInject(i6.TaskManagerService), i0.ɵɵdirectiveInject(i7.SharedService), i0.ɵɵdirectiveInject(i8.MatDialog), i0.ɵɵdirectiveInject(i9.Overlay), i0.ɵɵdirectiveInject(i9.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i10.ShareddataService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskeditComponent,\n    selectors: [[\"app-taskedit\"]],\n    inputs: {\n      jsonData: \"jsonData\"\n    },\n    outputs: {\n      OnSubmit: \"OnSubmit\",\n      OnCancel: \"OnCancel\"\n    },\n    features: [i0.ɵɵProvidersFeature([imp.TaskApi])],\n    decls: 89,\n    vars: 32,\n    consts: [[1, \"cus-taskEdit\", 3, \"formGroup\"], [1, \"cus-taskEditMain\"], [1, \"modal-body\", 2, \"width\", \"100%\"], [1, \"cus-taskEditContainer1\"], [\"matInput\", \"\", \"formControlName\", \"client\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"cltInput\", \"\"], [3, \"displayWith\"], [\"clt\", \"matAutocomplete\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"project\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"appnmInput\", \"\"], [\"matSuffix\", \"\", 1, \"maticonsize\"], [\"appnm\", \"matAutocomplete\"], [\"matInput\", \"\", \"formControlName\", \"project_map_id\", \"autocomplete\", \"off\", 3, \"matAutocomplete\", \"keyup\"], [\"modnmInput\", \"\"], [\"modnm\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"cus-taskEditContainer2\"], [1, \"cus-taskEdit100\"], [\"rows\", \"2\", \"type\", \"text\", \"placeholder\", \"Enter Task here!\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"task\"], [\"formControlName\", \"type\"], [\"appearance\", \"outline\"], [\"placeholder\", \"Start\", \"formControlName\", \"start_date\", \"matInput\", \"\", 3, \"disabled\", \"matDatepicker\", \"min\", \"max\"], [\"matSuffix\", \"\", 1, \"maticonsize\", 3, \"for\"], [\"picker1\", \"\"], [\"placeholder\", \"End\", \"formControlName\", \"end_date\", \"matInput\", \"\", 3, \"disabled\", \"matDatepicker\", \"max\", \"min\"], [\"picker2\", \"\"], [4, \"ngIf\"], [3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"dependency_id\", \"autocomplete\", \"off\", 3, \"matAutocomplete\"], [\"depInput\", \"\"], [\"matSuffix\", \"\"], [\"dep\", \"matAutocomplete\"], [\"formControlName\", \"priority_type\"], [3, \"value\", \"click\"], [3, \"value\"], [\"type\", \"text\", \"formControlName\", \"developer\", \"autocomplete\", \"off\", \"matInput\", \"\", \"disabled\", \"\", 3, \"readonly\"], [2, \"width\", \"100%\", 3, \"click\"], [\"placeholder\", \"Select Employee\", \"matInput\", \"\", \"formControlName\", \"developer\", 3, \"matAutocomplete\"], [\"developerinput\", \"\"], [\"developerrole\", \"matAutocomplete\"], [\"placeholder\", \"Start\", \"formControlName\", \"actual_start_date\", \"matInput\", \"\", 3, \"matDatepicker\", \"min\", \"max\"], [\"picker3\", \"\"], [\"placeholder\", \"Start\", \"formControlName\", \"actual_end_date\", \"matInput\", \"\", 3, \"matDatepicker\", \"max\", \"min\", \"dateChange\"], [\"picker4\", \"\"], [\"placeholder\", \"Remarks\", \"formControlName\", \"remarks\", \"matInput\", \"\"], [1, \"cus-taskEditBtnDiv\", 2, \"width\", \"100%\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", \"color\", \"white\", 3, \"click\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n    template: function TaskeditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\")(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 4, 5);\n        i0.ɵɵlistener(\"keyup\", function TaskeditComponent_Template_input_keyup_9_listener() {\n          return ctx.clientsearch(ctx.EmpTaskCreate.value.client);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-autocomplete\", 6, 7);\n        i0.ɵɵtemplate(13, TaskeditComponent_mat_option_13_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"mat-form-field\")(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Project\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 9, 10);\n        i0.ɵɵlistener(\"keyup\", function TaskeditComponent_Template_input_keyup_18_listener() {\n          return ctx.Projectsearch(ctx.EmpTaskCreate.value.client, ctx.EmpTaskCreate.value.project);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-icon\", 11);\n        i0.ɵɵtext(21, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-autocomplete\", 6, 12);\n        i0.ɵɵtemplate(24, TaskeditComponent_mat_option_24_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\")(26, \"mat-form-field\")(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Module\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 13, 14);\n        i0.ɵɵlistener(\"keyup\", function TaskeditComponent_Template_input_keyup_29_listener() {\n          return ctx.getModule(ctx.EmpTaskCreate.value.client, ctx.EmpTaskCreate.value.project, ctx.EmpTaskCreate.value.project_map_id);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-icon\", 11);\n        i0.ɵɵtext(32, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-autocomplete\", 6, 15);\n        i0.ɵɵtemplate(35, TaskeditComponent_mat_option_35_Template, 2, 2, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(36, \"div\", 17)(37, \"div\", 18)(38, \"mat-form-field\")(39, \"mat-label\");\n        i0.ɵɵtext(40, \"Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"textarea\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\")(43, \"mat-form-field\")(44, \"mat-label\");\n        i0.ɵɵtext(45, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"mat-select\", 20);\n        i0.ɵɵtemplate(47, TaskeditComponent_mat_option_47_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"div\")(49, \"mat-form-field\", 21)(50, \"mat-label\");\n        i0.ɵɵtext(51, \" Planned Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 22)(53, \"mat-datepicker-toggle\", 23)(54, \"mat-datepicker\", null, 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(56, \"div\")(57, \"mat-form-field\", 21)(58, \"mat-label\");\n        i0.ɵɵtext(59, \"Planned End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"input\", 25)(61, \"mat-datepicker-toggle\", 23)(62, \"mat-datepicker\", null, 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(64, \"div\");\n        i0.ɵɵtemplate(65, TaskeditComponent_div_65_Template, 5, 1, \"div\", 27);\n        i0.ɵɵtemplate(66, TaskeditComponent_div_66_Template, 11, 3, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\")(68, \"mat-form-field\", 28);\n        i0.ɵɵlistener(\"click\", function TaskeditComponent_Template_mat_form_field_click_68_listener() {\n          return ctx.dependencysearch(ctx.dataIndex);\n        });\n        i0.ɵɵelementStart(69, \"mat-label\");\n        i0.ɵɵtext(70, \"Dependency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(71, \"input\", 29, 30);\n        i0.ɵɵelementStart(73, \"mat-icon\", 31);\n        i0.ɵɵtext(74, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"mat-autocomplete\", 6, 32);\n        i0.ɵɵtemplate(77, TaskeditComponent_mat_option_77_Template, 2, 2, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(78, \"div\")(79, \"mat-form-field\")(80, \"mat-label\");\n        i0.ɵɵtext(81, \"Priority Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"mat-select\", 33);\n        i0.ɵɵtemplate(83, TaskeditComponent_mat_option_83_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(84, TaskeditComponent_div_84_Template, 8, 4, \"div\", 27);\n        i0.ɵɵtemplate(85, TaskeditComponent_div_85_Template, 8, 4, \"div\", 27);\n        i0.ɵɵtemplate(86, TaskeditComponent_div_86_Template, 5, 0, \"div\", 27);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(87, TaskeditComponent_div_87_Template, 7, 0, \"div\", 27);\n        i0.ɵɵtemplate(88, TaskeditComponent_div_88_Template, 7, 0, \"div\", 27);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(12);\n        const _r4 = i0.ɵɵreference(23);\n        const _r7 = i0.ɵɵreference(34);\n        const _r10 = i0.ɵɵreference(55);\n        const _r11 = i0.ɵɵreference(63);\n        const _r15 = i0.ɵɵreference(76);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.EmpTaskCreate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"matAutocomplete\", _r1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnclt);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.clientList);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r4);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnappnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.projectList);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r7);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnmodnm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.moduleList);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.devtypelist);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.taskstatus === 1 || ctx.taskstatus === 3 || ctx.taskstatus === 2)(\"matDatepicker\", _r10)(\"min\", ctx.taskstartdate)(\"max\", ctx.tasksenddate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r10);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", ctx.taskstatus === 1 || ctx.taskstatus === 3 || ctx.taskstatus === 2)(\"matDatepicker\", _r11)(\"max\", ctx.tasksenddate)(\"min\", ctx.EmpTaskCreate.get(\"start_date\").value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r11);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.unassigned != \"Unassigned\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.unassigned === \"Unassigned\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"matAutocomplete\", _r15);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayFnDep);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.dependencylist);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpTaskCreateObj.priorityList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.taskstatus === 1 || ctx.taskstatus === 3 || ctx.taskstatus === 2) && ctx.actualstartdate != \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.taskstatus === 1 || ctx.taskstatus === 3 || ctx.taskstatus === 2) && ctx.actualenddate != \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isEndDateValid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.unassigned === \"Unassigned\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.unassigned !== \"Unassigned\");\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i11.MatIcon, i12.MatInput, i13.MatFormField, i13.MatLabel, i13.MatSuffix, i14.MatSelect, i15.MatOption, i16.MatAutocomplete, i16.MatAutocompleteTrigger, i17.MatDatepicker, i17.MatDatepickerInput, i17.MatDatepickerToggle],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];*[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.cursor[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.paddingSpace[_ngcontent-%COMP%] {\\n  padding: 5px;\\n  margin: 5px;\\n}\\n\\n.tags[_ngcontent-%COMP%] {\\n  display: inline-block;\\n}\\n\\n.badge-blue[_ngcontent-%COMP%] {\\n  background-color: cadetblue;\\n}\\n\\n.tags[_ngcontent-%COMP%]   .badges[_ngcontent-%COMP%] {\\n  margin: 5px;\\n  padding: 10px;\\n  color: white;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.tags[_ngcontent-%COMP%]   .badges[_ngcontent-%COMP%]:hover {\\n  background-color: var(--global);\\n  color: white;\\n}\\n\\n.selectedDesign[_ngcontent-%COMP%] {\\n  background-color: var(--global);\\n  color: white;\\n}\\n\\n.alignMiddle[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n\\n.padsize[_ngcontent-%COMP%] {\\n  padding-left: 20px;\\n}\\n\\n.marginset[_ngcontent-%COMP%] {\\n  margin-top: 2px;\\n}\\n\\n.noBorder[_ngcontent-%COMP%]   .headers[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  border: 1px solid rgba(0, 0, 0, 0.164);\\n  background-color: #ffffff;\\n  padding: 5px;\\n}\\n\\n.noBorder[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.164);\\n  background-color: #ffffff;\\n  border-right: 1px solid rgba(0, 0, 0, 0.164);\\n  border-left: 1px solid rgba(0, 0, 0, 0.164);\\n}\\n\\n.inputslong[_ngcontent-%COMP%] {\\n  width: 550px;\\n}\\n\\n.titlelong[_ngcontent-%COMP%] {\\n  width: 330px;\\n}\\n\\n.inputs[_ngcontent-%COMP%] {\\n  width: 1px;\\n  outline: 0;\\n}\\n\\n.outlinesnone[_ngcontent-%COMP%] {\\n  border: none;\\n  outline: none;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n  outline: 0;\\n  height: 50px;\\n  width: 120px;\\n  color: black;\\n  cursor: pointer;\\n  border: 1px solid #ffffff;\\n  border-radius: 3px;\\n  background-color: #ffffff;\\n}\\n\\n.widthset[_ngcontent-%COMP%] {\\n  width: 1px;\\n}\\n\\n.inputWidthTop[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.alignButtons[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.arrowClass[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n.my-class[_ngcontent-%COMP%]   .mat-select-arrow-wrapper[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.fonts[_ngcontent-%COMP%] {\\n  font-size: 10px;\\n}\\n\\n.fullscreen[_ngcontent-%COMP%] {\\n  overflow-x: scroll;\\n}\\n\\n.circle-icon[_ngcontent-%COMP%] {\\n  width: 24px; \\n\\n  height: 24px; \\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 2px dashed lightgray;\\n  border-radius: 50%; \\n\\n}\\n\\n.circle-border[_ngcontent-%COMP%] {\\n  width: 24px; \\n\\n  height: 24px; \\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: 2px dashed lightgray;\\n  border-radius: 50%;\\n}\\n\\n.badge[_ngcontent-%COMP%] {\\n  margin-right: 10px; \\n\\n  background: #007acc; \\n\\n  color: white; \\n\\n  border-radius: 4px; \\n\\n  padding: 3px 6px; \\n\\n}\\n\\n.icon-badge[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.icon-badge[_ngcontent-%COMP%]::before {\\n  content: \\\"{{ icon }}\\\";\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background: #007acc; \\n\\n  color: white; \\n\\n  border-radius: 4px; \\n\\n  padding: 3px 6px; \\n\\n}\\n\\n.cus-badge[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 18px;\\n  letter-spacing: 0em;\\n  text-align: left;\\n}\\n\\n.cus-badgeGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #d7f8e1;\\n  color: #057926;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeRed[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #fae6e6;\\n  color: #7f1111;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeLightGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #c2f8ff;\\n  color: #007787;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeYellow[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ffedcc;\\n  color: #966200;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeBlue[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ededfd;\\n  color: #2d2e8e;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeLightBlack[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  background-color: #eeeeef;\\n  color: #353537;\\n  padding: 2px 9px;\\n  margin-bottom: 0;\\n  font-size: 10px;\\n  font-weight: 400;\\n  margin-top: 5px;\\n  width: 120px;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.mains[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 95%;\\n  border: 1px solid blue;\\n  margin-top: 50px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.inputs[_ngcontent-%COMP%] {\\n  height: 100%;\\n  flex: 30;\\n}\\n\\n.inpt[_ngcontent-%COMP%] {\\n  height: 100%;\\n  border: none;\\n  width: 100%;\\n  outline: none;\\n}\\n\\n.main_1[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.flex[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.flex2[_ngcontent-%COMP%] {\\n  flex: 4;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n}\\n\\n.s[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 15px;\\n  display: flex;\\n  justify-content: center;\\n  background-color: blueviolet;\\n}\\n\\n.ctrl[_ngcontent-%COMP%] {\\n  color: rgb(191, 185, 185);\\n}\\n\\n.dot[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\\n  height: 30px;\\n  width: 30px;\\n  border-radius: 15px;\\n  display: flex;\\n  justify-content: center;\\n  border: 1px dashed grey;\\n  align-items: center;\\n}\\n\\n.cursor[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.cus-taskEditContainer1[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, auto);\\n  gap: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.cus-taskEditContainer2[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(3, auto);\\n  gap: 10px;\\n}\\n\\n.cus-taskEdit100[_ngcontent-%COMP%] {\\n  grid-column-start: 1;\\n  grid-column-end: 4;\\n}\\n\\n.cus-taskEditBtnDiv[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFzay1tYW5hZ2VyL3Rhc2tlZGl0L3Rhc2tlZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BO0VBQ0Usa0NBQUE7RUFDQSxnQkFBQTtBQUxGOztBQVFBO0VBQ0UseUNBQUE7QUFMRjs7QUFRQTtFQUNFLGVBQUE7QUFMRjs7QUFRQTtFQUNFLFlBQUE7RUFDQSxXQUFBO0FBTEY7O0FBT0E7RUFDRSxxQkFBQTtBQUpGOztBQU9BO0VBQ0UsMkJBQUE7QUFKRjs7QUFPQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FBSkY7O0FBT0E7RUFDRSwrQkFBQTtFQUNBLFlBQUE7QUFKRjs7QUFPQTtFQUNFLCtCQUFBO0VBQ0EsWUFBQTtBQUpGOztBQU1BO0VBQ0Usc0JBQUE7QUFIRjs7QUFNQTtFQUNFLGtCQUFBO0FBSEY7O0FBTUE7RUFDRSxlQUFBO0FBSEY7O0FBVUE7RUFDRSxzQ0FBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtBQVBGOztBQVVBO0VBQ0UsNkNBQUE7RUFDQSx5QkFBQTtFQUVBLDRDQUFBO0VBQ0EsMkNBQUE7QUFSRjs7QUFXQTtFQUNFLFlBQUE7QUFSRjs7QUFVQTtFQUNFLFlBQUE7QUFQRjs7QUFVQTtFQUNFLFVBQUE7RUFDQSxVQUFBO0FBUEY7O0FBVUE7RUFDRSxZQUFBO0VBQ0EsYUFBQTtBQVBGOztBQVVBO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUFQRjs7QUFVQTtFQUNFLFVBQUE7QUFQRjs7QUFTQTtFQUNFLFlBQUE7QUFORjs7QUFTQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQU5GOztBQVlBO0VBQ0UsWUFBQTtBQVRGOztBQVlBO0VBRUUscUJBQUE7QUFWRjs7QUFZQTtFQUNFLGVBQUE7QUFURjs7QUFXQTtFQUNF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QSxtQkFBQTtBQUxGOztBQVFBO0VBQ0UsYUFBQTtFQUNBLHNDQUFBO0VBQ0EsU0FBQTtBQUxGOztBQVFBO0VBQ0Usb0JBQUE7RUFDQSxrQkFBQTtBQUxGOztBQVFBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHlCQUFBO0FBTEYiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAuQWNjZXNzVGFnc3tcclxuLy8gICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbi8vIH1cclxuXHJcbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRANDAwOzUwMDs2MDA7NzAwOzgwMDs5MDAmZGlzcGxheT1zd2FwXCIpO1xyXG5cclxuKiB7XHJcbiAgZm9udC1mYW1pbHk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbi5tYXRlcmlhbC1pY29ucyB7XHJcbiAgZm9udC1mYW1pbHk6IFwiTWF0ZXJpYWwgSWNvbnNcIiwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuLmN1cnNvciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucGFkZGluZ1NwYWNlIHtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbn1cclxuLnRhZ3Mge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLmJhZGdlLWJsdWUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNhZGV0Ymx1ZTtcclxufVxyXG5cclxuLnRhZ3MgLmJhZGdlcyB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnRhZ3MgLmJhZGdlczpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ2xvYmFsKTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5zZWxlY3RlZERlc2lnbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ2xvYmFsKTtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuLmFsaWduTWlkZGxlIHtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG4ucGFkc2l6ZSB7XHJcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG59XHJcblxyXG4ubWFyZ2luc2V0IHtcclxuICBtYXJnaW4tdG9wOiAycHg7XHJcbn1cclxuXHJcbi8vIC5tYXJnaW5TZXRsZWZ0e1xyXG4vLyAgICAgbWFyZ2luOiAyMHB4O1xyXG4vLyB9XHJcblxyXG4ubm9Cb3JkZXIgLmhlYWRlcnMgdGgge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNjQpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG4ubm9Cb3JkZXIgdHIgdGQge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTY0KTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gIC8vIHBhZGRpbmc6IDVweDtcclxuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTY0KTtcclxuICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xNjQpO1xyXG59XHJcblxyXG4uaW5wdXRzbG9uZyB7XHJcbiAgd2lkdGg6IDU1MHB4O1xyXG59XHJcbi50aXRsZWxvbmcge1xyXG4gIHdpZHRoOiAzMzBweDtcclxufVxyXG5cclxuLmlucHV0cyB7XHJcbiAgd2lkdGg6IDFweDtcclxuICBvdXRsaW5lOiAwO1xyXG59XHJcblxyXG4ub3V0bGluZXNub25lIHtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuc2VsZWN0IHtcclxuICBvdXRsaW5lOiAwO1xyXG4gIGhlaWdodDogNTBweDtcclxuICB3aWR0aDogMTIwcHg7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG59XHJcblxyXG4ud2lkdGhzZXQge1xyXG4gIHdpZHRoOiAxcHg7XHJcbn1cclxuLmlucHV0V2lkdGhUb3Age1xyXG4gIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuLmFsaWduQnV0dG9ucyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4vLyAudGlnaHQtZ3V0dGVyIHtcclxuLy8gICAgIHBhZGRpbmc6IDAgMnB4O1xyXG4vLyB9XHJcbi5hcnJvd0NsYXNzIC5tYXQtc2VsZWN0LWFycm93IHtcclxuICBjb2xvcjogZ3JlZW47XHJcbn1cclxuXHJcbi5teS1jbGFzcyAubWF0LXNlbGVjdC1hcnJvdy13cmFwcGVyIHtcclxuICAvLyB5b3VyIHByZWZlcmVuY2VzIGhlcmUuXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcbi5mb250cyB7XHJcbiAgZm9udC1zaXplOiAxMHB4O1xyXG59XHJcbi5mdWxsc2NyZWVuIHtcclxuICBvdmVyZmxvdy14OiBzY3JvbGw7XHJcbn1cclxuXHJcbi5jaXJjbGUtaWNvbiB7XHJcbiAgd2lkdGg6IDI0cHg7IC8qIEFkanVzdCB0aGUgc2l6ZSBhcyBuZWVkZWQgKi9cclxuICBoZWlnaHQ6IDI0cHg7IC8qIEFkanVzdCB0aGUgc2l6ZSBhcyBuZWVkZWQgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyOiAycHggZGFzaGVkIGxpZ2h0Z3JheTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7IC8qIEFkanVzdCB0aGUgZm9udCBzaXplIGFzIG5lZWRlZCAqL1xyXG59XHJcblxyXG4uY2lyY2xlLWJvcmRlciB7XHJcbiAgd2lkdGg6IDI0cHg7IC8qIEFkanVzdCB0aGUgc2l6ZSBhcyBuZWVkZWQgKi9cclxuICBoZWlnaHQ6IDI0cHg7IC8qIEFkanVzdCB0aGUgc2l6ZSBhcyBuZWVkZWQgKi9cclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyOiAycHggZGFzaGVkIGxpZ2h0Z3JheTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuXHJcbi8vICAgLmljb24tY29udGFpbmVyIHtcclxuLy8gICAgIGRpc3BsYXk6IGZsZXg7XHJcbi8vICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4vLyAgIH1cclxuXHJcbi5iYWRnZSB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyAvKiBBZGp1c3QgdGhlIG1hcmdpbiB0byBwb3NpdGlvbiB0aGUgYmFkZ2UgYXMgZGVzaXJlZCAqL1xyXG4gIGJhY2tncm91bmQ6ICMwMDdhY2M7IC8qIEFkZCBiYWNrZ3JvdW5kIGNvbG9yIGZvciB0aGUgYmFkZ2UgKi9cclxuICBjb2xvcjogd2hpdGU7IC8qIFRleHQgY29sb3IgZm9yIHRoZSBiYWRnZSAqL1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDsgLyogQWRkIHJvdW5kZWQgY29ybmVycyBmb3IgdGhlIGJhZGdlICovXHJcbiAgcGFkZGluZzogM3B4IDZweDsgLyogQWRqdXN0IHBhZGRpbmcgdG8gY29udHJvbCB0aGUgYmFkZ2Ugc2l6ZSAqL1xyXG59XHJcblxyXG4uaWNvbi1iYWRnZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uaWNvbi1iYWRnZTo6YmVmb3JlIHtcclxuICBjb250ZW50OiBcInt7IGljb24gfX1cIjtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgYmFja2dyb3VuZDogIzAwN2FjYzsgLyogQWRkIGJhY2tncm91bmQgY29sb3IgZm9yIHRoZSBiYWRnZSAqL1xyXG4gIGNvbG9yOiB3aGl0ZTsgLyogVGV4dCBjb2xvciBmb3IgdGhlIGJhZGdlICovXHJcbiAgYm9yZGVyLXJhZGl1czogNHB4OyAvKiBBZGQgcm91bmRlZCBjb3JuZXJzIGZvciB0aGUgYmFkZ2UgKi9cclxuICBwYWRkaW5nOiAzcHggNnB4OyAvKiBBZGp1c3QgcGFkZGluZyB0byBjb250cm9sIHRoZSBiYWRnZSBzaXplICovXHJcbn1cclxuXHJcbi5jdXMtYmFkZ2UgcCB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgbGluZS1oZWlnaHQ6IDE4cHg7XHJcbiAgbGV0dGVyLXNwYWNpbmc6IDBlbTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4uY3VzLWJhZGdlR3JlZW4ge1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG4gIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Q3ZjhlMTtcclxuICBjb2xvcjogIzA1NzkyNjtcclxuICBwYWRkaW5nOiA0cHggMTRweDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uY3VzLWJhZGdlUmVkIHtcclxuICBib3JkZXItcmFkaXVzOiAxMDBweDtcclxuICBtYXgtd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWU2ZTY7XHJcbiAgY29sb3I6ICM3ZjExMTE7XHJcbiAgcGFkZGluZzogNHB4IDE0cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxufVxyXG5cclxuLmN1cy1iYWRnZUxpZ2h0R3JlZW4ge1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG4gIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2MyZjhmZjtcclxuICBjb2xvcjogIzAwNzc4NztcclxuICBwYWRkaW5nOiA0cHggMTRweDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uY3VzLWJhZGdlWWVsbG93IHtcclxuICBib3JkZXItcmFkaXVzOiAxMDBweDtcclxuICBtYXgtd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmVkY2M7XHJcbiAgY29sb3I6ICM5NjYyMDA7XHJcbiAgcGFkZGluZzogNHB4IDE0cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxufVxyXG5cclxuLmN1cy1iYWRnZUJsdWUge1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xyXG4gIG1heC13aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRmZDtcclxuICBjb2xvcjogIzJkMmU4ZTtcclxuICBwYWRkaW5nOiA0cHggMTRweDtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcblxyXG4uY3VzLWJhZGdlTGlnaHRCbGFjayB7XHJcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbiAgLy8gbWF4LXdpZHRoOiBmaXQtY29udGVudDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVmO1xyXG4gIGNvbG9yOiAjMzUzNTM3O1xyXG4gIHBhZGRpbmc6IDJweCA5cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcbi5tYWlucyB7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIHdpZHRoOiA5NSU7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmx1ZTtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4uaW5wdXRzIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgZmxleDogMzA7XHJcbn1cclxuLmlucHQge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG4ubWFpbl8xIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLmZsZXgge1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuLmZsZXgyIHtcclxuICBmbGV4OiA0O1xyXG59XHJcbi5jbG9zZSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuLnMgZGl2IHtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgd2lkdGg6IDMwcHg7XHJcblxyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVldmlvbGV0O1xyXG59XHJcbi5jdHJsIHtcclxuICBjb2xvcjogcmdiKDE5MSwgMTg1LCAxODUpO1xyXG59XHJcbi5kb3QgaSB7XHJcbiAgaGVpZ2h0OiAzMHB4O1xyXG4gIHdpZHRoOiAzMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXI6IDFweCBkYXNoZWQgZ3JleTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5jdXJzb3Ige1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLy8gQ3VzdG9tIFN0eWxlXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jdXMtdGFza0VkaXRDb250YWluZXIxIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIGF1dG8pO1xyXG4gIGdhcDogMTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uY3VzLXRhc2tFZGl0Q29udGFpbmVyMiB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCBhdXRvKTtcclxuICBnYXA6IDEwcHg7XHJcbn1cclxuXHJcbi5jdXMtdGFza0VkaXQxMDAge1xyXG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xyXG4gIGdyaWQtY29sdW1uLWVuZDogNDtcclxufVxyXG5cclxuLmN1cy10YXNrRWRpdEJ0bkRpdiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","imp","debounceTime","distinctUntilChanged","tap","switchMap","finalize","i0","ɵɵelementStart","ɵɵlistener","TaskeditComponent_mat_option_13_Template_mat_option_click_0_listener","ɵɵrestoreView","_r25","ctx_r24","ɵɵnextContext","ɵɵresetView","resetdataclient","ɵɵtext","ɵɵelementEnd","ɵɵproperty","clt_r23","ɵɵadvance","ɵɵtextInterpolate1","name","TaskeditComponent_mat_option_24_Template_mat_option_click_0_listener","_r28","ctx_r27","resetmodule","appnm_r26","modnm_r29","TaskeditComponent_mat_option_47_Template_mat_option_click_0_listener","restoredCtx","_r32","devtype_r30","$implicit","ctx_r31","getdevTypeId","dataIndex","id","text","ɵɵelement","ctx_r12","taskstatus","opt_r36","TaskeditComponent_div_66_Template_mat_form_field_click_2_listener","_r38","ctx_r37","developer","ɵɵelementContainerStart","ɵɵtemplate","TaskeditComponent_div_66_mat_option_10_Template","ɵɵelementContainerEnd","_r34","ctx_r13","displaydevelopclient","empList","dep_r39","task","TaskeditComponent_mat_option_83_Template_mat_option_click_0_listener","_r42","ctx_r41","getprioritytype","data","get","value","pry_r40","_r43","ctx_r18","spstartdate","spenddate","TaskeditComponent_div_85_Template_input_dateChange_4_listener","_r46","ctx_r45","checkEndDateValidity","_r44","ctx_r19","TaskeditComponent_div_87_Template_button_click_3_listener","_r48","ctx_r47","Submitassign","TaskeditComponent_div_87_Template_button_click_5_listener","ctx_r49","BackToSummary","TaskeditComponent_div_88_Template_button_click_3_listener","_r51","ctx_r50","SubmitTask","TaskeditComponent_div_88_Template_button_click_5_listener","ctx_r52","TaskeditComponent","fb","router","SpinnerService","errorHandler","datePipe","notify","shareService","apicall","taskapi","taskmanagerservice","sharedservice","dialog","overlay","overlayPositionBuilder","localService","jsonData","constructor","OnSubmit","OnCancel","EmpTaskCreate","selectedDevTypeName","selectedStartDate","selectedEndDate","StoryVals","sprstartdate","sprenddate","unassigned","assigned","assign","readonly","taskstartdate","tasksenddate","dependency_ids","taskcode","dependencyid","projectmap","modulemapid","actualenddate","actualstartdate","projectId","isEndDateValid","EmpTaskCreateObj","QuickAccessList","selectedNav","clientList","projectList","moduleList","createArray","from_date","to_date","type","devtypelist","statusListData","toSelectDropDown","toSelectDependency","submitValidation","dependencylist","priorityList","ngOnInit","group","client","project","project_map_id","dev_type_name","start_date","required","end_date","dependency_id","priority_type","developers","dev_type_names","actual_start_date","actual_end_date","remarks","dependency","taskenddate","presenttDate","transform","Date","sprintfromdate","sprinttodate","console","log","unassignedit","getdevtype","getPriority","patchValue","dev_type","task_assignee","full_name","client_name","app_id","module_id","updateSelectedValues","story_Id","getModule","show","ApiCall","tasksApi","api","devTypeDD","subscribe","results","hide","datas","length","find","c","error","handleError","deleteTask","index","control","removeAt","ChangeDateFormat","key","date","setValue","ChangeDateFormats","multiple_data","selectedDevType","dependencysearch","i","project_id","mapping_id","undefined","devkeyvalue","getdev","valueChanges","pipe","isLoading","dependencyedit","keyvalue","get_Priority","displayFnDep","clt","invalid","acstarttday","getDate","toString","padStart","actstartmonth","getMonth","actstartyear","getFullYear","formattedactualStartDate","startDate","day","month","year","formattedStartDate","endDate","days","months","years","formattedendDates","actenddays","actendmonths","actendyears","formattedactualendDates","payload","modulemappingid","obj","storyBasedTaskCreation","code","description","success","message","emit","vals","clientsearch","Typedata","queries","query","status","displayFnclt","Projectsearch","clientdata","projectSearch","displayFnappnm","appnm","projectdata","moduleSearch","displayFnmodnm","mod","empSelected","event","option","selectempByName","empInput","nativeElement","task_employeesearch_createproj","taskAddForm","task_employeesearch","getDeveloperdrop","getdeveloper","res","develop","developerClick","actualEndDate","taskEndDate","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","NgxSpinnerService","ErrorHandlingServiceService","i4","DatePipe","ToastrService","SharedService","i5","ApicallserviceService","TaskApi","i6","TaskManagerService","i7","i8","MatDialog","i9","Overlay","OverlayPositionBuilder","i10","ShareddataService","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","TaskeditComponent_Template","rf","ctx","TaskeditComponent_Template_input_keyup_9_listener","TaskeditComponent_mat_option_13_Template","TaskeditComponent_Template_input_keyup_18_listener","TaskeditComponent_mat_option_24_Template","TaskeditComponent_Template_input_keyup_29_listener","TaskeditComponent_mat_option_35_Template","TaskeditComponent_mat_option_47_Template","TaskeditComponent_div_65_Template","TaskeditComponent_div_66_Template","TaskeditComponent_Template_mat_form_field_click_68_listener","TaskeditComponent_mat_option_77_Template","TaskeditComponent_mat_option_83_Template","TaskeditComponent_div_84_Template","TaskeditComponent_div_85_Template","TaskeditComponent_div_86_Template","TaskeditComponent_div_87_Template","TaskeditComponent_div_88_Template","_r1","_r4","_r7","_r10","_r11","_r15"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\taskedit\\taskedit.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\task-manager\\taskedit\\taskedit.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, FormGroupDirective, FormArrayName } from '@angular/forms';\r\n\r\n\r\nimport { Overlay, OverlayPositionBuilder } from '@angular/cdk/overlay';\r\n// import { ComponentPortal } from '@angular/cdk/portal';\r\nimport * as imp from '../../AppAutoEngine/import-services/CommonimportFiles'\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ApicallserviceService } from 'src/app/AppAutoEngine/API Services/Api_and_Query/apicallservice.service';\r\n\r\nimport { debounceTime, distinctUntilChanged, tap, filter, switchMap, finalize, takeUntil, map } from 'rxjs/operators';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { ViewChild } from '@angular/core';\r\nimport { TaskManagerService } from '../task-manager.service';\r\nimport { SharedService } from 'src/app/service/shared.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { IconDialogComponent } from '../icon-dialog/icon-dialog.component'; \r\nimport { MatDatepicker, MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { Moment } from 'moment';\r\nimport * as moment from 'moment';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ShareddataService } from '../shareddata.service';\r\n\r\n\r\n\r\nexport interface emplistss {\r\n  id: string;\r\n  name: any\r\n}\r\n\r\nexport interface dependency {\r\n  id: string;\r\n  task: string;\r\n}\r\n\r\nexport interface interfacedatas {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface developer {\r\n  id: string;\r\n  name: string;\r\n}\r\nexport interface developclient {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-taskedit',\r\n  templateUrl: './taskedit.component.html',\r\n  styleUrls: ['./taskedit.component.scss'],\r\n  providers: [imp.TaskApi]\r\n})\r\nexport class TaskeditComponent implements OnInit {\r\n\r\n  @Input() jsonData : any;\r\n  [x: string]: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private SpinnerService: imp.NgxSpinnerService,\r\n    private errorHandler: imp.ErrorHandlingServiceService, private datePipe: DatePipe, private notify: imp.ToastrService,\r\n    private shareService: imp.SharedService,\r\n    private apicall: ApicallserviceService, private taskapi: imp.TaskApi, private taskmanagerservice: TaskManagerService, private sharedservice:SharedService,\r\n    private dialog: MatDialog, private overlay: Overlay, private overlayPositionBuilder: OverlayPositionBuilder, private localService: ShareddataService\r\n  ) { }\r\n  @Output() OnSubmit = new EventEmitter<any>();\r\n  @Output() OnCancel = new EventEmitter<any>();\r\n\r\n  EmpTaskCreate: FormGroup;\r\n  selectedDevTypeName: string;\r\n  selectedStartDate: Date;\r\n  selectedEndDate: Date;\r\n  StoryVals = 0;\r\n  sprstartdate : any = '';\r\n  sprenddate : any = '';\r\n  unassigned:any=''\r\n  assigned:any=''\r\n  assign:boolean;\r\n  readonly:boolean\r\n\r\n  spstartdate:any;\r\n  spenddate:any;\r\n  taskstartdate:any;\r\n  tasksenddate:any;\r\n  dependency_ids:any;\r\n  taskcode:any\r\n  dependencyid:any\r\n  taskstatus:any\r\n  projectmap:any\r\n  modulemapid:any\r\n  actualenddate:any\r\n  actualstartdate:any\r\n  projectId:any\r\n \r\n  empList: Array<developer>;\r\n  isEndDateValid: boolean = false;\r\n\r\n  \r\n  EmpTaskCreateObj = {\r\n    QuickAccessList: [],\r\n    selectedNav: '',\r\n    clientList: [],\r\n    projectList: [],\r\n    moduleList: [],\r\n    createArray: [],\r\n    from_date: '',\r\n    to_date: '',\r\n    task: '',\r\n    type: '',\r\n    devtypelist: [],\r\n    statusListData: '',\r\n    toSelectDropDown: null, \r\n    toSelectDependency: null,\r\n    submitValidation: false,\r\n    dependencylist: [], \r\n    priorityList:[]\r\n   \r\n    // priorityList: [{'id':1,'text':true},{'id':2,'text':false}]\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.EmpTaskCreate = this.fb.group({\r\n      client: '',\r\n      project: '', \r\n      project_map_id: '',\r\n      task:'',\r\n      dev_type_name:'',\r\n      // start_date:'',\r\n      start_date: ['', Validators.required],\r\n      end_date:'',\r\n      developer:'',\r\n      dependency_id:'',\r\n      priority_type:'',\r\n      dependencylist:'',\r\n      // title:'',\r\n      type:'',\r\n      developers:'',\r\n      id:'',\r\n      dev_type_names:'',\r\n      actual_start_date:'',\r\n      actual_end_date:'',\r\n      remarks:''\r\n      \r\n\r\n\r\n\r\n    \r\n\r\n      // data: new FormArray([\r\n         \r\n      // ])\r\n    })\r\n    this.taskstatus=this.localService.taskstatus.value\r\n   \r\n    this.dependencyid=this.localService.dependency.value\r\n    this.taskcode=this.localService.taskcode.value\r\n    this.taskstartdate=this.localService.taskstartdate.value\r\n    this.tasksenddate=this.localService.taskenddate.value\r\n    this.spstartdate=this.localService.taskstartdate.value\r\n    this.spenddate=this.localService.taskenddate.value\r\n    if(this.taskstartdate=='' && this.tasksenddate==''){\r\n\r\n    }\r\n    this. presenttDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd')\r\n        if(this.spenddate >= this. presenttDate || this.spenddate== null  ){\r\n          this.spenddate = this.presenttDate;\r\n        }\r\n    this.sprstartdate = this.datePipe.transform(this.localService?.sprintfromdate?.value, 'yyyy-MM-dd') \r\n    this.sprenddate = this.datePipe.transform(this.localService?.sprinttodate?.value, 'yyyy-MM-dd') \r\n    console.log(\"JSON DATA\",this.jsonData)\r\n    this.actualenddate=this.jsonData.actual_end_date\r\n    this.actualstartdate=this.jsonData.actual_start_date\r\n    \r\n    // this.assigned=this.localService.assignedit.value\r\n    // if( this.assigned='assigned'){\r\n    //   this.assign=true;\r\n    // }\r\n    this.unassigned=this.localService.unassignedit.value\r\n    this.getdevtype();\r\n    this.getPriority();\r\n    if(this.unassigned===\"Unassigned\"){\r\n\r\n      if(this.jsonData.start_date == 'None' || this.jsonData.end_date == 'None'){\r\n        this.EmpTaskCreate.patchValue({\r\n        \r\n          task: this.jsonData.task,\r\n          dev_type_name: this.jsonData.dev_type.id,       \r\n          developer : this.jsonData.task_assignee[0]?.full_name,      \r\n          priority_type: this.jsonData.priority_type.id,\r\n          client : this.jsonData.client_name.name,\r\n          project: this.jsonData.app_id.name, \r\n          project_map_id: this.jsonData.module_id.name,\r\n          // type: this.jsonData.dev_type.id,\r\n          // start_date: new Date(this.jsonData.start_date),\r\n          // end_date : new Date(this.jsonData.end_date), \r\n          type: this.jsonData.dev_type.id,\r\n         \r\n        })\r\n      }\r\n      else{\r\n      this.EmpTaskCreate.patchValue({\r\n        \r\n        task: this.jsonData.task,\r\n        dev_type_name: this.jsonData.dev_type.id,       \r\n        developer : this.jsonData.task_assignee[0]?.full_name,      \r\n        priority_type: this.jsonData.priority_type.id,\r\n        client : this.jsonData.client_name.name,\r\n        project: this.jsonData.app_id.name, \r\n        project_map_id: this.jsonData.module_id.name,\r\n        // type: this.jsonData.dev_type.id,\r\n        start_date: new Date(this.jsonData.start_date),\r\n        end_date : new Date(this.jsonData.end_date), \r\n        type: this.jsonData.dev_type.id,\r\n       \r\n      })\r\n    }\r\n        \r\n    }\r\n    if(this.unassigned!=\"Unassigned\"){\r\n      if(this.jsonData.start_date == \"None\")\r\n      {\r\n        this.EmpTaskCreate.patchValue({\r\n        \r\n          client : this.jsonData.client_name,\r\n          project: this.jsonData.app_id, \r\n          project_map_id: this.jsonData.module_id,\r\n          task: this.jsonData.task,\r\n          dev_type_name: this.jsonData.dev_type,\r\n          // start_date: new Date(this.jsonData.start_date),\r\n          // end_date : new Date(this.jsonData.end_date),\r\n          developer : this.jsonData.task_assignee[0].full_name,\r\n          dependency_id: this.jsonData.dependency,\r\n          dependencylist: this.jsonData.dependency,\r\n          priority_type: this.jsonData.priority_type.id,\r\n          // title: this.jsonData.title,\r\n          // developers : this.jsonData.task_assignee[0].id,\r\n          id: this.jsonData.id,\r\n          // dev_type_names: this.jsonData.dev_type.id,\r\n          type: this.jsonData.dev_type.id,\r\n        \r\n          // actual_start_date:new Date(this.jsonData.actual_start_date),\r\n          // actual_end_date:new Date(this.jsonData.actual_end_date)\r\n    \r\n         \r\n   \r\n    \r\n        })\r\n        \r\n\r\n      }\r\n      else\r\n      {\r\n  \r\n      this.EmpTaskCreate.patchValue({\r\n        client : this.jsonData.client_name,\r\n        project: this.jsonData.app_id, \r\n        project_map_id: this.jsonData.module_id,\r\n        task: this.jsonData.task,\r\n        dev_type_name: this.jsonData.dev_type,\r\n        start_date: new Date(this.jsonData.start_date),\r\n        end_date : new Date(this.jsonData.end_date),\r\n        developer : this.jsonData.task_assignee[0].full_name,\r\n        dependency_id: this.jsonData.dependency,\r\n        dependencylist: this.jsonData.dependency,\r\n        priority_type: this.jsonData.priority_type.id,\r\n        // title: this.jsonData.title,\r\n        developers : this.jsonData.task_assignee[0].id,\r\n        id: this.jsonData.id,\r\n        dev_type_names: this.jsonData.dev_type.id,\r\n        type: this.jsonData.dev_type.id,\r\n        actual_start_date:new Date(this.jsonData.actual_start_date),\r\n        actual_end_date:new Date(this.jsonData.actual_end_date)\r\n  \r\n      })\r\n  \r\n      this.updateSelectedValues();\r\n  \r\n      this.StoryVals=this.localService.story_Id.value;\r\n\r\n      this.start_date = new Date(this.jsonData.start_date)\r\n      this.dev_type_name = this.jsonData.dev_type.text,\r\n      this.end_date = new Date(this.jsonData.end_date)\r\n  \r\n      this.getModule( this.jsonData.client_name, this.jsonData.app_id, this.jsonData.module_id )\r\n  \r\n\r\n  \r\n  this.getdevtype();\r\n  this.getPriority();\r\n    }\r\n    }\r\n    else{\r\n      this.EmpTaskCreate.patchValue({\r\n        \r\n        task: this.jsonData.task,\r\n        client : this.jsonData.client_name,\r\n        project: this.jsonData.app_id, \r\n        project_map_id: this.jsonData.module_id,\r\n        id: this.jsonData.id,\r\n\r\n        priority_type:  this.jsonData.priority_type.id,  \r\n      })\r\n  \r\n      this.getModule( this.jsonData.client_name, this.jsonData.app_id, this.jsonData.module_id )\r\n  \r\n\r\n  \r\n  this.getdevtype();\r\n  this.getPriority();\r\n    }\r\n    \r\n  \r\n}\r\n\r\n  getdevtype() {\r\n    this.SpinnerService.show()\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.devTypeDD)\r\n      .subscribe((results: any[]) => {\r\n        this.SpinnerService.hide() \r\n        let datas = results[\"data\"];\r\n        this.EmpTaskCreateObj.devtypelist = datas;\r\n        if(this.EmpTaskCreateObj.devtypelist?.length > 0){\r\n          // this.EmpTaskCreateObj.statusListData = this.EmpTaskCreateObj.devtypelist[0]?.id  \r\n          this.EmpTaskCreateObj.toSelectDropDown = this.EmpTaskCreateObj.devtypelist?.find(c => c.id == 1);\r\n          console.log(\"---------> data for dropdown\", this.EmpTaskCreateObj.toSelectDropDown, this.EmpTaskCreateObj.devtypelist)\r\n        }\r\n        \r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n  deleteTask(index){ \r\n    let control = this.EmpTaskCreate.get(\"data\") as FormArray;\r\n    control.removeAt(index) \r\n  }\r\n\r\n  ChangeDateFormat(index, key, date){\r\n    // this.EmpTaskCreate.get('data')['controls'][index].get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n\r\n    this.EmpTaskCreate.get(key).setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n  }\r\n  ChangeDateFormats(index, key, date){\r\n    // this.EmpTaskCreate.get('data')['controls'][index].get('end_date').setValue(this.datePipe.transform(date, 'yyyy-MM-dd'))\r\n  }\r\n\r\n  getdevTypeId(index, data, key){\r\n    console.log(index, data, key) \r\n    this.EmpTaskCreate.get(key).setValue(data.id)\r\n    this.EmpTaskCreate.get('dev_type_name').setValue(data?.id)\r\n    this.EmpTaskCreate.get('dev_type_names').setValue(data?.id)\r\n    let multiple_data = ['Management', 'Planning', 'Meeting']\r\n    // if (multiple_data.includes(data.text) == false){\r\n    //   if(this.chipSelectedempid[index].length > 1)\r\n    //     {\r\n    //       this.EmpTaskCreate.get('data')['controls'][index].get(\"developer\").setValue([this.chipSelectedempid[index][0]])\r\n    //     this.chipSelectedemp[index] = [this.chipSelectedemp[index][0]]\r\n    //     this.chipSelectedempid[index] = [this.chipSelectedempid[index][0]]\r\n    //   }\r\n    // }\r\n    this.selectedDevType = data\r\n   \r\n  }\r\n\r\n  dependencysearch(i) {\r\n    let data = this.EmpTaskCreate.value\r\n\r\n    let project_id=data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id \r\n    if(project_id==undefined){\r\n      project_id=\"\"\r\n    }\r\n    let devkeyvalue: String = \"\";\r\n    this.getdev(devkeyvalue);\r\n    // (this.EmpTaskCreate.get('data') as FormArray).at(i).get('dependency_id').valueChanges\r\n    this.EmpTaskCreate.get('dependency_id').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n          console.log('inside tap')\r\n  \r\n        }),\r\n        switchMap(value => this.taskmanagerservice.dependencyedit(value,1,project_id,this.taskcode)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        \r\n        let datas = results[\"data\"];\r\n        this.EmpTaskCreateObj.dependencylist = datas;\r\n  \r\n      })\r\n  \r\n  }\r\n\r\n  getdev(keyvalue) {\r\n    // this.SpinnerService.show();\r\n    let data = this.EmpTaskCreate.value\r\n\r\n    let project_id=data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id \r\n    if(project_id==undefined){\r\n      project_id=\"\"\r\n    }\r\n    this.taskmanagerservice.dependencyedit(keyvalue, 1,project_id,this.taskcode)\r\n      .subscribe((results: any[]) => {\r\n        this.SpinnerService.hide();\r\n        let datas = results[\"data\"];\r\n        this.EmpTaskCreateObj.dependencylist = datas;\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n    }\r\n\r\n    getPriority() {\r\n      this.SpinnerService.show()\r\n      this.taskmanagerservice.get_Priority()\r\n        .subscribe((results: any[]) => {\r\n          this.SpinnerService.hide() \r\n          // let datas = results[\"data\"];\r\n          this.EmpTaskCreateObj.priorityList = results;\r\n          console.log(\"priority dropdown\",this.EmpTaskCreateObj.priorityList)\r\n          \r\n        }, (error) => {\r\n          this.errorHandler.handleError(error);\r\n          this.SpinnerService.hide();\r\n        })\r\n    }\r\n\r\n    displayFnDep(clt?: dependency): string | undefined {\r\n      return clt ? clt.task : undefined;\r\n    }\r\n    Submitassign(){\r\n      this.SpinnerService.show();\r\n    if (this.EmpTaskCreate.value.type === \"\"||this.EmpTaskCreate.value.type === null||this.EmpTaskCreate.value.type === undefined) {\r\n      this.notify.error('choose type')\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    if (this.EmpTaskCreate.get('start_date').value === \"\"||this.EmpTaskCreate.value.start_date === null||this.EmpTaskCreate.value.start_date === undefined ||this.EmpTaskCreate.value.start_date === 'Invalid Date' )  {\r\n      this.notify.error('choose start date')\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    if (this.EmpTaskCreate.value.start_date.invalid)\r\n    {\r\n      this.notify.error('choose start date')\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    if (this.EmpTaskCreate.value.end_date === \"\"||this.EmpTaskCreate.value.end_date === null||this.EmpTaskCreate.value.end_date === undefined) {\r\n      this.notify.error('choose End date')\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    \r\n    if (this.EmpTaskCreate.value.developer === \"\"||this.EmpTaskCreate.value.developer === null||this.EmpTaskCreate.value.developer === undefined) {\r\n      this.notify.error('choose Employee')\r\n      this.SpinnerService.hide();\r\n      return false;\r\n    }\r\n    this.SubmitTask()\r\n    }\r\n\r\n\r\n    SubmitTask(){\r\n      let data = this.EmpTaskCreate.value\r\n      \r\n      \r\n      let dependency_id=this.EmpTaskCreate.get('dependency_id').value\r\n\r\n      if(dependency_id){\r\n        this.dependency_ids=dependency_id.id\r\n      }\r\n      else{\r\n        this.dependency_ids=null\r\n      }\r\n\r\n      if(this.isEndDateValid == true)\r\n      {\r\n\r\n      }\r\n      // data.data[0].story_id = this.stories_Id; \r\n      console.log(\"EMP Data\", data)\r\n      let actual_start_date = new Date(data.actual_start_date);\r\n\r\n        let acstarttday = actual_start_date.getDate().toString().padStart(2, '0');\r\n        let actstartmonth = (actual_start_date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\r\n        let actstartyear = actual_start_date.getFullYear();\r\n\r\n        // let formattedStartDate = `${day}-${month}-${year}`;\r\n        let formattedactualStartDate = `${actstartyear}-${actstartmonth}-${acstarttday}`;\r\n        if( this.actualstartdate ===''){\r\n          formattedactualStartDate=null\r\n        }\r\n        else{\r\n          formattedactualStartDate\r\n        }\r\n        if(data.start_date === '' || data.start_date === null || data.start_date === undefined)\r\n        {\r\n          this.notify.error(\"Please select Planned Start Date\");\r\n          return false;\r\n        }\r\n        if(data.end_date === '' || data.end_date === null || data.end_date === undefined)\r\n        {\r\n          this.notify.error(\"Please select Planned End Date\");\r\n          return false;\r\n        }\r\n            \r\n      let startDate = new Date(data.start_date);\r\n\r\n        let day = startDate.getDate().toString().padStart(2, '0');\r\n        let month = (startDate.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\r\n        let year = startDate.getFullYear();\r\n\r\n        // let formattedStartDate = `${day}-${month}-${year}`;\r\n        let formattedStartDate = `${year}-${month}-${day}`;\r\n\r\n        let endDate = new Date(data.end_date);\r\n\r\n        let days = endDate.getDate().toString().padStart(2, '0');\r\n        let months = (endDate.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\r\n        let years = endDate.getFullYear();\r\n\r\n        // let formattedStartDates = `${days}-${months}-${years}`;\r\n        let formattedendDates = `${years}-${months}-${days}`;\r\n\r\n        let actual_end_date = new Date(data.actual_end_date);\r\n\r\n        let actenddays = actual_end_date.getDate().toString().padStart(2, '0');\r\n        let actendmonths = (actual_end_date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based, so we add 1.\r\n        let actendyears = actual_end_date.getFullYear();\r\n\r\n        // let formattedStartDates = `${days}-${months}-${years}`;\r\n        let formattedactualendDates = `${actendyears}-${actendmonths}-${actenddays}`;\r\n      \r\n        if( this.actualenddate ===''){\r\n          formattedactualendDates=null\r\n        }\r\n        else{\r\n          formattedactualendDates\r\n        }\r\n\r\nlet payload = {\r\n  \"type\": data.type,\r\n  \"start_date\": formattedStartDate,\r\n  \"end_date\": formattedendDates,\r\n  // \"developer\": [data.developers],\r\n  \"task\": data.task,\r\n  \"dependency_id\": this.dependency_ids,\r\n  \"priority_type\": data.priority_type,\r\n  // \"title\": data.title,\r\n  \"id\": data.id,\r\n  \"story_id\" : this.StoryVals,\r\n  \"actual_start_date\":formattedactualStartDate,\r\n  \"actual_end_date\":formattedactualendDates,\r\n  \"remarks\": data?.remarks\r\n};\r\nif (this.unassigned===\"Unassigned\"){\r\n  payload[\"developer\"]=[this.EmpTaskCreate.get('developer').value.id]\r\n}\r\n\r\n\r\n      // data = [...data,{story_id: this.stories_Id}]\r\n      // data.push({story_id: this.stories_Id})\r\n      // let payload = {\r\n      //   \"type\": data.dev_type_name.id,\r\n      //   \"start_date\":data.start_date,\r\n      //   \"end_date\": data.end_date,\r\n      //   \"developer\": [data.developers],\r\n      //   \"task\": data.task,\r\n      //   \"dependency_id\": data.dependency_id.id,\r\n      //   \"priority_type\":data.priority_type,\r\n      //   \"title\": data.title,\r\n      //   \"id\": data.id\r\n\r\n      // }\r\n      let modulemappingid=this.EmpTaskCreate.get('project_map_id').value\r\n      this.modulemapid =modulemappingid.mapping_id\r\n      if(this.modulemapid){\r\n        this.projectmap=this.modulemapid\r\n      }\r\n      else{\r\n        this.projectmap =this.jsonData.mapping_id\r\n      }\r\n      \r\n      console.log(\"opayload\", payload)\r\n      let obj = {\r\n        project_id: this.projectmap , \r\n        data: [payload]\r\n        // story_id: this.stories_Id\r\n        \r\n        \r\n      }\r\n      if (this.unassigned==\"Unassigned\"){\r\n        obj[\"action\"]='assign'\r\n      }\r\n      this.EmpTaskCreateObj.submitValidation = true \r\n      this.SpinnerService.show()\r\n      this.taskmanagerservice.storyBasedTaskCreation(obj)\r\n      .subscribe(results=>{\r\n        if(results.code)\r\n        {\r\n          this.SpinnerService.hide()\r\n\r\n          this.notify.error(results.description)\r\n        }\r\n        else{\r\n          this.SpinnerService.hide()\r\n          this.notify.success(results.message)\r\n          this.OnSubmit.emit() \r\n          return true \r\n        }\r\n      }) \r\n  \r\n    }\r\n  \r\n    BackToSummary(){\r\n      this.OnSubmit.emit()\r\n  \r\n    }\r\n\r\n    // getModule(clientdata, projectdata, Typedata) {\r\n    //   if(clientdata?.id == undefined || projectdata?.id == undefined){\r\n    //     return false \r\n    //   }\r\n    //   this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch+projectdata?.id +'?'+ 'client_id='+clientdata?.id +'&' +  this.taskapi.tasksApi.queries.query +\r\n    //    Typedata + '&' + this.taskapi.tasksApi.queries.status + 2 )\r\n    //     .subscribe(results => {\r\n    //       this.EmpTaskCreateObj.moduleList = results['data']\r\n    //       console.log(\"Module Data\", this.EmpTaskCreateObj.moduleList)\r\n    //     }, (error) => {\r\n    //       this.errorHandler.handleError(error);\r\n    //       this.SpinnerService.hide();\r\n    //     })\r\n    // }\r\n\r\n    updateSelectedValues() {\r\n      let vals = this.EmpTaskCreate.get('dev_type_name').value;\r\n      this.selectedDevTypeName = vals.text\r\n      this.selectedStartDate = this.EmpTaskCreate.get('start_date').value;\r\n      this.selectedEndDate = this.EmpTaskCreate.get('end_date').value;\r\n    }\r\n\r\n    \r\n\r\n  clientsearch(Typedata) {\r\n\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.clientsearch +\r\n      this.taskapi.tasksApi.queries.query + Typedata + '&' +\r\n      this.taskapi.tasksApi.queries.status + 2)\r\n\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.clientList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n\r\n  }\r\n\r\n  displayFnclt(clt?: interfacedatas): string | undefined {\r\n    return clt ? clt.name : undefined;\r\n  }\r\n\r\n\r\n  Projectsearch(clientdata, Typedata) {\r\n    if(clientdata?.id == undefined){\r\n      return false \r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.projectSearch+'/'+clientdata?.id+'?'+ this.taskapi.tasksApi.queries.query + Typedata +\r\n     '&' + this.taskapi.tasksApi.queries.status + 2) \r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.projectList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n\r\n  displayFnappnm(appnm?: interfacedatas): string | undefined {\r\n    return appnm ? appnm.name : undefined;\r\n  }\r\n\r\n\r\n\r\n\r\n  getModule(clientdata, projectdata, Typedata) {\r\n    if(clientdata?.id == undefined || projectdata?.id == undefined){\r\n      return false \r\n    }\r\n    this.apicall.ApiCall('get', this.taskapi.tasksApi.api.moduleSearch+projectdata?.id +'?'+ 'client_id='+clientdata?.id +'&' +  this.taskapi.tasksApi.queries.query +\r\n     Typedata + '&' + this.taskapi.tasksApi.queries.status + 2 )\r\n      .subscribe(results => {\r\n        this.EmpTaskCreateObj.moduleList = results['data']\r\n      }, (error) => {\r\n        this.errorHandler.handleError(error);\r\n        this.SpinnerService.hide();\r\n      })\r\n  }\r\n  displayFnmodnm(mod?: interfacedatas): string | undefined {\r\n    return mod ? mod.name : undefined;\r\n  }\r\n\r\n    \r\n  public empSelected(data,i,event: MatAutocompleteSelectedEvent): void {\r\n    console.log('event.option.value', event.option.value)\r\n    this.selectempByName(data,i,event.option.value);\r\n    this.empInput.nativeElement.value = '';\r\n    // console.log('chipSelectedempid', this.chipSelectedempid)\r\n  }\r\n//   getemp(keyvalue) {\r\n//     // let type = 2 // employee\r\n//     console.log(\"emp fun called\")\r\n//     let data = this.EmpTaskCreate.value;\r\n//     let projectId = data?.project_map_id?.mapping_id ? data?.project_map_id?.mapping_id : data?.project_map_id?.id\r\n//     if(projectId !== undefined && projectId !== null && projectId !=='')\r\n//     {\r\n//       this.taskmanagerservice.task_employeesearch_createproj(keyvalue, 1, projectId)\r\n//       .subscribe((results: any[]) => {\r\n//         this.SpinnerService.hide();\r\n//         let datas = results[\"data\"];\r\n//         this.empList = datas;\r\n//         console.log(\"emp data get \", this.empList)\r\n//       }, (error) => {\r\n//         this.errorHandler.handleError(error);\r\n//         this.SpinnerService.hide();\r\n//       })\r\n    \r\n//     }\r\n//  else\r\n//  {\r\n    \r\n//     // this.SpinnerService.show();\r\n//     this.taskmanagerservice.task_employeesearch_create(keyvalue, 1)\r\n//       .subscribe((results: any[]) => {\r\n//         this.SpinnerService.hide();\r\n//         let datas = results[\"data\"];\r\n//         this.empList = datas;\r\n//         console.log(\"emp data get \", this.empList)\r\n//       }, (error) => {\r\n//         this.errorHandler.handleError(error);\r\n//         this.SpinnerService.hide();\r\n//       })\r\n//     }\r\n//   }\r\n  developer(i){\r\n    let data = this.EmpTaskCreate.value;\r\n    this. projectId =  data?.project?.id\r\n    if(this. projectId !== undefined && this. projectId !== null && this. projectId !== '')\r\n    {\r\n      // let devkeyvalue: String = \"\";\r\n      // this.getemp(devkeyvalue);\r\n      (this.EmpTaskCreate.get('developer')).valueChanges\r\n      // this.taskAddForm.get('developer').valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n            console.log('inside tap')\r\n  \r\n          }),\r\n          switchMap(value => this.taskmanagerservice.task_employeesearch_createproj(value,1, this. projectId)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          \r\n          let datas = results[\"data\"];\r\n          this.empList = datas;\r\n          // this.EmpTaskCreateObj.devtypelist = this.empList;\r\n          // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\r\n          // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\r\n  \r\n        })\r\n  \r\n    }\r\n    else\r\n    {\r\n\r\n    // let devkeyvalue: String = \"\";\r\n    //   this.getemp(devkeyvalue);\r\n      // (this.EmpTaskCreate.get('data') as FormArray).at(i).get('developer').valueChanges\r\n      this.taskAddForm.get('developer').valueChanges\r\n        .pipe(\r\n          debounceTime(100),\r\n          distinctUntilChanged(),\r\n          tap(() => {\r\n            this.isLoading = true;\r\n            console.log('inside tap')\r\n  \r\n          }),\r\n          switchMap(value => this.taskmanagerservice.task_employeesearch(value,1)\r\n            .pipe(\r\n              finalize(() => {\r\n                this.isLoading = false\r\n              }),\r\n            )\r\n          )\r\n        )\r\n        .subscribe((results: any[]) => {\r\n          \r\n          let datas = results[\"data\"];\r\n          this.empList = datas;\r\n          // this.EmpTaskCreateObj.devtypelist = this.empList;\r\n          // console.log(\"this.EmpTaskCreateObj.devtypelist\",this.EmpTaskCreateObj.devtypelist)\r\n          // this.EmpTaskCreate.get('data')['controls'][i].get(\"emp_id\").setValue(this.chipSelectedempid[i])\r\n  \r\n        })\r\n      }\r\n\r\n  }\r\n  getDeveloperdrop() {\r\n    this.taskmanagerservice.getdeveloper('').subscribe(res=>{\r\n      this.develop = res['data']\r\n    })\r\n  }\r\n\r\n  developerClick(){\r\n    let devkeyvalue: String = \"\";\r\n    // this.getsprint(devkeyvalue);\r\n    // (this.taskAddForm.get('data') as FormArray).at(i).get('developer').valueChanges\r\n    this.EmpTaskCreate.get('developer').valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.isLoading = true;\r\n          console.log('inside tap')\r\n  \r\n        }),\r\n        switchMap(value => this.taskmanagerservice.getdeveloper(value)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.isLoading = false\r\n            }),\r\n          )\r\n        )\r\n      )\r\n      .subscribe((results: any[]) => {\r\n        let datas = results[\"data\"];\r\n        this.develop = datas;\r\n  \r\n  \r\n  \r\n  \r\n      })\r\n  \r\n  }\r\n  public displaydevelopclient(clt?: developclient): string | undefined {\r\n    // console.log(`Client testing data - ${clt.name}`);\r\n    return clt ? clt.name : undefined;\r\n  }\r\n  // isFieldReadOnly(fieldName: string){\r\n  //   if (this.taskstatus === 0) {\r\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer';\r\n      \r\n  //   }if (this.taskstatus === 1) {\r\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer' || fieldName==='end_date'||fieldName==='priority_type';\r\n    \r\n  //   }\r\n  //   if (this.taskstatus === 2) {\r\n  //     fieldName === 'client' || fieldName === 'project'|| fieldName==='project_map_id' ||fieldName==='developer';\r\n    \r\n  //   }\r\n    \r\n  // }\r\n  resetdataclient(){\r\n    this.EmpTaskCreate.get('project').setValue('')\r\n    this.EmpTaskCreate.get('project_map_id').setValue('')\r\n  }\r\n  // resetproject(){\r\n  //   this.EmpTaskCreate.get('client').setValue('')\r\n  //   this.EmpTaskCreate.get('project_map_id').setValue('')\r\n  // }\r\n  resetmodule(){\r\n    \r\n    this.EmpTaskCreate.get('project_map_id').setValue('')\r\n  }\r\n\r\n  checkEndDateValidity() {\r\n    const actualEndDate = new Date(this.actualenddate);\r\n    const taskEndDate = this.EmpTaskCreate.value.actual_end_date;\r\n  \r\n    if (actualEndDate < taskEndDate) {\r\n      this.isEndDateValid = true;\r\n    } else {\r\n      this.isEndDateValid = false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div>\r\n  <form [formGroup]=\"EmpTaskCreate\" class=\"cus-taskEdit\">\r\n    <div class=\"cus-taskEditMain\">\r\n      <div class=\"modal-body\" style=\"width: 100%\">\r\n        <!-- <h3>Task Edit Screen</h3> -->\r\n        <!-- <div class=\"row\">\r\n                      <div class=\"col-sm-8 col-md-8 col-lg-4\">\r\n                          <mat-label>Client</mat-label><br>\r\n                          <mat-form-field class=\"inputWidthTop\">\r\n                              <input matInput   formControlName=\"client\">                          \r\n                          </mat-form-field>\r\n  \r\n                      </div>\r\n                      <div class=\"col-sm-8 col-md-8 col-lg-4\">\r\n                          <mat-label>Project</mat-label><br>\r\n                          <mat-form-field class=\"inputWidthTop\">\r\n                              <input  matInput type=\"text\" formControlName=\"project\" >            \r\n                          </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-sm-8 col-md-8 col-lg-4\">\r\n                          <mat-label>Module</mat-label><br>\r\n                          <mat-form-field class=\"inputWidthTop\">\r\n                              <input #modnmInput matInput formControlName=\"project_map_id\" >\r\n                             \r\n                          </mat-form-field>\r\n                      </div>\r\n                  </div> -->\r\n        <div class=\"cus-taskEditContainer1\">\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Client</mat-label>\r\n              <input #cltInput matInput formControlName=\"client\" [matAutocomplete]=\"clt\" autocomplete=\"off\"\r\n                (keyup)=\"clientsearch(this.EmpTaskCreate.value.client)\" />\r\n              <!-- <mat-icon matSuffix>unfold_more</mat-icon> -->\r\n              <mat-autocomplete #clt=\"matAutocomplete\" [displayWith]=\"displayFnclt\">\r\n                <mat-option *ngFor=\"let clt of EmpTaskCreateObj.clientList\" [value]=\"clt\" (click)=\"resetdataclient()\">\r\n                  {{ clt.name }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Project</mat-label>\r\n              <input #appnmInput matInput type=\"text\" formControlName=\"project\" [matAutocomplete]=\"appnm\"\r\n                autocomplete=\"off\" (keyup)=\"\r\n                    Projectsearch(\r\n                      this.EmpTaskCreate.value.client,\r\n                      this.EmpTaskCreate.value.project\r\n                    )\r\n                  \" />\r\n              <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n              <mat-autocomplete #appnm=\"matAutocomplete\" [displayWith]=\"displayFnappnm\">\r\n                <mat-option *ngFor=\"let appnm of EmpTaskCreateObj.projectList\" [value]=\"appnm\" (click)=\"resetmodule()\">\r\n                  {{ appnm.name }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Module</mat-label>\r\n              <input #modnmInput matInput formControlName=\"project_map_id\" autocomplete=\"off\" (keyup)=\"\r\n                    getModule(\r\n                      this.EmpTaskCreate.value.client,\r\n                      this.EmpTaskCreate.value.project,\r\n                      this.EmpTaskCreate.value.project_map_id\r\n                    )\r\n                  \" [matAutocomplete]=\"modnm\" />\r\n              <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n              <mat-autocomplete #modnm=\"matAutocomplete\" [displayWith]=\"displayFnmodnm\">\r\n                <mat-option *ngFor=\"let modnm of EmpTaskCreateObj.moduleList\" [value]=\"modnm\">\r\n                  {{ modnm.name }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"cus-taskEditContainer2\">\r\n          <div class=\"cus-taskEdit100\">\r\n            <!-- <mat-form-field appearance=\"outline\">\r\n                <mat-label>Task</mat-label>\r\n                <input\r\n                \r\n                  type=\"text\"\r\n                  placeholder=\"Enter Task here!\"\r\n                  formControlName=\"task\"\r\n                  autocomplete=\"off\"\r\n                  matInput\r\n                />\r\n              </mat-form-field> -->\r\n            <mat-form-field>\r\n              <mat-label>Task</mat-label>\r\n              <textarea rows=\"2\" type=\"text\" placeholder=\"Enter Task here!\" matInput autocomplete=\"off\"\r\n                formControlName=\"task\"></textarea>\r\n            </mat-form-field>\r\n\r\n            <!-- <div>\r\n                    <span class=\"badge badge-pill badge-warning paddingSpace\">\r\n                      <span class=\"material-icons fonts\">tag</span>\r\n                      {{ selectedDevTypeName }}\r\n                    </span>\r\n                    <span class=\"badge badge-pill badge-secondary paddingSpace\">\r\n                      From: {{ selectedStartDate | date : \"dd-MM-yyyy\" }}\r\n                    </span>\r\n                    <span class=\"badge badge-pill badge-secondary paddingSpace\">\r\n                      To: {{ selectedEndDate | date : \"dd-MM-yyyy\" }}\r\n                    </span>\r\n                  </div> -->\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Type</mat-label>\r\n              <mat-select formControlName=\"type\">\r\n                <mat-option [value]=\"devtype.id\" *ngFor=\"let devtype of EmpTaskCreateObj.devtypelist\"\r\n                  (click)=\"getdevTypeId(dataIndex, devtype, 'type')\">\r\n                  {{ devtype.text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> Planned Start Date</mat-label>\r\n              <input [disabled]=\"taskstatus===1 || taskstatus===3 || taskstatus===2  \" placeholder=\"Start\"\r\n                [matDatepicker]=\"picker1\" formControlName=\"start_date\" matInput [min]=\"taskstartdate\"\r\n                [max]=\"tasksenddate\" />\r\n              <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker1\">\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker1></mat-datepicker>\r\n            </mat-form-field>                   \r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Planned End Date</mat-label>\r\n              <input [disabled]=\"taskstatus===1 ||  taskstatus===3 || taskstatus===2 \" placeholder=\"End\"\r\n                [matDatepicker]=\"picker2\" formControlName=\"end_date\" matInput [max]=\"tasksenddate\" \r\n                [min]=\"this.EmpTaskCreate.get('start_date').value\" />\r\n              <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker2\">\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <div *ngIf=\"this.unassigned != 'Unassigned'\">\r\n              <mat-form-field>\r\n                <mat-label>Employee</mat-label>\r\n                <input [readonly]=\"taskstatus===0|| taskstatus===1||taskstatus===2 ||  taskstatus===3\" type=\"text\"\r\n                  formControlName=\"developer\" autocomplete=\"off\" matInput disabled />\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div *ngIf=\"unassigned === 'Unassigned'\">\r\n              <div>\r\n                <mat-form-field style=\"width: 100%\" (click)=\"developer(dataIndex)\">\r\n                  <mat-label>Employee</mat-label>\r\n                  <input #developerinput placeholder=\"Select Employee\" matInput formControlName=\"developer\"\r\n                    [matAutocomplete]=\"developerrole\" />\r\n                  <mat-autocomplete #developerrole=\"matAutocomplete\" [displayWith]=\"displaydevelopclient\">\r\n                    <ng-container>\r\n                      <mat-option *ngFor=\"let opt of empList\" [value]=\"opt\">\r\n                        {{ opt.name }}\r\n                      </mat-option>\r\n                    </ng-container>\r\n                  </mat-autocomplete>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <!-- <div class=\"\">\r\n                              <mat-form-field style=\"padding: 5px;\">\r\n                                  <mat-select formControlName=\"dependency_id\">\r\n                                      <mat-option [value]=\"dependency.id\" *ngFor=\"let dependency of EmpTaskCreateObj.dependencylist\" (click)='getdependencyTypeId(dataIndex, data.get(\"dependency_id\").value, \"dependency_id\")'>\r\n                                          {{dependency.text}} </mat-option>\r\n                                  </mat-select>\r\n                              </mat-form-field>\r\n                              \r\n                          </div> -->\r\n            <mat-form-field (click)=\"dependencysearch(dataIndex)\">\r\n              <mat-label>Dependency</mat-label>\r\n              <input #depInput matInput formControlName=\"dependency_id\" [matAutocomplete]=\"dep\" autocomplete=\"off\" />\r\n              <mat-icon matSuffix>unfold_more</mat-icon>\r\n              <mat-autocomplete #dep=\"matAutocomplete\" [displayWith]=\"displayFnDep\">\r\n                <mat-option *ngFor=\"let dep of EmpTaskCreateObj.dependencylist\" [value]=\"dep\">\r\n                  {{ dep.task }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div>\r\n            <mat-form-field>\r\n              <mat-label>Priority Type</mat-label>\r\n              <mat-select formControlName=\"priority_type\">\r\n                <mat-option [value]=\"pry.id\" *ngFor=\"let pry of EmpTaskCreateObj.priorityList\" (click)=\"\r\n                      getprioritytype(\r\n                        dataIndex,\r\n                        data.get('priority_type').value,\r\n                        'priority_type'\r\n                      )\r\n                    \">\r\n                  {{ pry.text }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n          <div *ngIf=\"(taskstatus===1 ||taskstatus===3 || taskstatus===2 ) && (actualstartdate!='')\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> Actual Start Date</mat-label>\r\n              <input placeholder=\"Start\" [matDatepicker]=\"picker3\" formControlName=\"actual_start_date\"\r\n                [min]=\"spstartdate\" [max]=\"spenddate\" matInput />\r\n              <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker3\">\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker3></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div *ngIf=\"(taskstatus===1 ||taskstatus===3 || taskstatus===2) && (actualenddate!='')\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label> Actual End Date</mat-label>\r\n              <input placeholder=\"Start\" [matDatepicker]=\"picker4\" formControlName=\"actual_end_date\" matInput (dateChange)=\"checkEndDateValidity()\"\r\n                [max]=\"spenddate\" [min]=\"spstartdate\" />\r\n              <mat-datepicker-toggle class=\"maticonsize\" matSuffix [for]=\"picker4\" >\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker4></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          <div  *ngIf=\"isEndDateValid\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Remarks</mat-label>\r\n              <input placeholder=\"Remarks\"  formControlName=\"remarks\" matInput />\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"this.unassigned==='Unassigned'\">\r\n      <div class=\"cus-taskEditBtnDiv\" style=\"width: 100%\">\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"Submitassign()\"\r\n            style=\"background-color: #044063;color: white;\">\r\n            Assign\r\n          </button>\r\n          <!-- <button class=\"btn\" id=\"WhiteBtn\" (click)=\"BackToSummary()\">\r\n            Close\r\n          </button> -->\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"BackToSummary()\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"this.unassigned!=='Unassigned'\">\r\n      <div class=\"cus-taskEditBtnDiv\" style=\"width: 100%\">\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"SubmitTask()\"\r\n            style=\"background-color: #044063;color: white;\">\r\n            Update\r\n          </button>\r\n          <!-- <button class=\"btn\" id=\"WhiteBtn\" (click)=\"BackToSummary()\">\r\n            Close\r\n          </button> -->\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" (click)=\"BackToSummary()\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}