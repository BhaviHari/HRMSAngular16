{"ast":null,"code":"import { Validators, FormGroup, FormControl } from '@angular/forms';\n// import { viewClassName } from '@angular/compiler';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/hrms/master-hrms.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"ngx-spinner\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/autocomplete\";\nimport * as i13 from \"@angular/material/datepicker\";\nimport * as i14 from \"ng2-pdf-viewer\";\nconst _c0 = [\"closeButton\"];\nconst _c1 = [\"closebutton\"];\nconst _c2 = [\"fileInput\"];\nfunction EmployeeExperienceComponent_div_16_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 75);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const exp_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", exp_r16.doj, \" to \", exp_r16.dor, \" \");\n  }\n}\nfunction EmployeeExperienceComponent_div_16_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 75);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const exp_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Working Since \", exp_r16.doj, \" \");\n  }\n}\nfunction EmployeeExperienceComponent_div_16_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 76)(1, \"i\", 77);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_div_16_span_16_Template_i_click_1_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const exp_r16 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.downloadfiles(exp_r16));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmployeeExperienceComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 63)(1, \"div\", 64)(2, \"div\", 65)(3, \"p\")(4, \"span\", 66);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"span\", 67);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtemplate(10, EmployeeExperienceComponent_div_16_span_10_Template, 2, 2, \"span\", 68);\n    i0.ɵɵtemplate(11, EmployeeExperienceComponent_div_16_span_11_Template, 2, 1, \"span\", 69);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 70)(13, \"a\", 71);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_div_16_Template_a_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const exp_r16 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.editRowExp(exp_r16));\n    });\n    i0.ɵɵelement(14, \"i\", 72);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"i\", 73);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_div_16_Template_i_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const exp_r16 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.deleteExperience(exp_r16 == null ? null : exp_r16.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, EmployeeExperienceComponent_div_16_span_16_Template, 2, 0, \"span\", 74);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const exp_r16 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(exp_r16.role);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" | \", exp_r16.company, \"| \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(exp_r16.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", exp_r16.dor !== \"undefined NaN NaN\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", exp_r16.dor == \"undefined NaN NaN\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (exp_r16 == null ? null : exp_r16.employee_document) !== null);\n  }\n}\nfunction EmployeeExperienceComponent_mat_option_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 78);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const city_r29 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"title\", city_r29.name);\n    i0.ɵɵproperty(\"value\", city_r29);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r29.name, \" \");\n  }\n}\nfunction EmployeeExperienceComponent_div_74_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 42)(2, \"label\", 79)(3, \"input\", 80, 81);\n    i0.ɵɵlistener(\"change\", function EmployeeExperienceComponent_div_74_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.fileChange($event));\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction EmployeeExperienceComponent_div_75_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 84)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 85);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_div_75_div_2_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r34.viewfiles(ctx_r34.reuploadfileArr));\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\", 86);\n    i0.ɵɵtext(5, \"visibility\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 87);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_div_75_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r36.deletefile(ctx_r36.reuploadfileArr));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\", 88);\n    i0.ɵɵtext(8, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r33.reuploadfileArr == null ? null : ctx_r33.reuploadfileArr.file_name);\n  }\n}\nfunction EmployeeExperienceComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 82);\n    i0.ɵɵtemplate(2, EmployeeExperienceComponent_div_75_div_2_Template, 9, 1, \"div\", 83);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r8.reuploadfileArr == null ? null : ctx_r8.reuploadfileArr.file_name) !== null);\n  }\n}\nfunction EmployeeExperienceComponent_button_80_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 89);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_button_80_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onSubmitss());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeExperienceComponent_button_81_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 90);\n    i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_button_81_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onUpdateVals());\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeExperienceComponent_span_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 91);\n    i0.ɵɵtext(1, \" *Remarks required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeExperienceComponent_pdf_viewer_123_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pdf-viewer\", 92);\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r14.filesrc)(\"original-size\", false)(\"render-text\", false)(\"show-borders\", true)(\"fit-to-page\", true)(\"show-all\", true)(\"fit-to-page\", true);\n  }\n}\nfunction EmployeeExperienceComponent_img_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 93);\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r15.filesrc, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class EmployeeExperienceComponent {\n  hrmsService;\n  activateroute;\n  fb;\n  datePipe;\n  toastr;\n  renderer;\n  spinner;\n  closeButton;\n  closebutton;\n  EmpInfoObjects = {\n    datafrom: null,\n    booleanList: [{\n      text: \"Yes\",\n      value: true\n    }, {\n      text: \"No\",\n      value: false\n    }]\n  };\n  //check box\n  checked = false;\n  indeterminate = false;\n  labelPosition = 'after';\n  disabled = false;\n  dor = new FormControl(new Date());\n  // Define a custom date format\n  customDateFormat = 'yyyy-MM-dd';\n  EmpId;\n  EmpExperienceInfo;\n  addingMode = true;\n  // Inside your component class\n  isCurrentlyWorking = false;\n  fileUploadForm;\n  EmployeeDocuments = [];\n  typeValue;\n  images = [];\n  docFunctionList = [];\n  dataname;\n  filenames;\n  fileextension;\n  file_ext;\n  filesrc;\n  pdfshow = false;\n  imgshow = false;\n  imageUrls = environment.apiURL;\n  imageUrl = null;\n  fileInput;\n  reuploadfileArr;\n  fileupdate = false;\n  docFunctionLists = [];\n  patchid;\n  addnewdata = true;\n  // Function to toggle the \"Currently working\" state\n  toggleCurrentlyWorking() {\n    this.isCurrentlyWorking = !this.isCurrentlyWorking;\n  }\n  displayCity(city) {\n    return city && city.name ? city.name : '';\n  }\n  // Initialize your educationForm\n  experienceForm = new FormGroup({\n    company: new FormControl(),\n    work_experience: new FormControl(),\n    doj: new FormControl(),\n    dor: new FormControl(),\n    role: new FormControl(),\n    city: new FormControl(),\n    disableField: new FormControl(false)\n  });\n  constructor(hrmsService, activateroute, fb, datePipe, toastr, renderer, spinner) {\n    this.hrmsService = hrmsService;\n    this.activateroute = activateroute;\n    this.fb = fb;\n    this.datePipe = datePipe;\n    this.toastr = toastr;\n    this.renderer = renderer;\n    this.spinner = spinner;\n    this.experienceForm = this.fb.group({\n      company: [''],\n      work_experience: [''],\n      doj: [''],\n      dor: [''],\n      role: [''],\n      city: [''],\n      disableField: [false]\n    });\n  }\n  get companyName() {\n    return this.experienceForm.get(\"company\");\n  }\n  get joiningDate() {\n    return this.experienceForm.get(\"doj\");\n  }\n  get expRole() {\n    return this.experienceForm.get(\"role\");\n  }\n  get expCity() {\n    return this.experienceForm.get(\"city\");\n  }\n  selectedItem;\n  editId;\n  dojDate;\n  dorDate;\n  dateObject;\n  formattedDoj;\n  formattedDor;\n  dateObjDoj;\n  dateObjDor;\n  EmpObjects = {\n    employeeList: null,\n    employeeFirstLetter: null,\n    ActivityStatus: null,\n    TimeLogList: null,\n    empId: null,\n    pendingCounts: null\n  };\n  editRowExp(expitem) {\n    this.patchid = expitem?.id;\n    this.addingMode = false;\n    this.selectedItem = expitem;\n    this.editId = expitem.id;\n    this.dojDate = new Date(expitem.doj);\n    const dorIsInvalid = expitem.dor === 'undefined NaN NaN';\n    const dorValue = dorIsInvalid ? null : new Date(expitem.dor);\n    this.formattedDoj = this.datePipe.transform(this.dojDate, 'MM/dd/yyyy');\n    const formattedDor = dorIsInvalid ? null : this.datePipe.transform(dorValue, 'MM/dd/yyyy');\n    this.dateObjDoj = new Date(this.formattedDoj);\n    const dateObjDor = dorIsInvalid ? null : new Date(formattedDor);\n    this.experienceForm.patchValue({\n      company: expitem.company,\n      work_experience: expitem.work_experience,\n      doj: this.dateObjDoj,\n      dor: dateObjDor,\n      role: expitem.role,\n      city: {\n        name: expitem.city\n      }\n    });\n    this.reuploadfileArr = expitem?.employee_document;\n    if (this.reuploadfileArr == undefined || this.reuploadfileArr == null || this.reuploadfileArr == '') {\n      {\n        this.fileupdate = true;\n      }\n    } else {\n      this.fileupdate = false;\n    }\n  }\n  showSaveButton() {\n    this.addingMode = true;\n    this.experienceForm.reset();\n  }\n  streamInput;\n  CityDropdownList;\n  isDateValid(dateString) {\n    return !isNaN(Date.parse(dateString));\n  }\n  getCityAutocomplete() {\n    this.streamInput = this.experienceForm.get('city').value;\n    this.hrmsService.getCitySearchResults(this.streamInput).subscribe(results => {\n      this.CityDropdownList = results['data'];\n    });\n  }\n  formatDate(date) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const day = date.getDate();\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n    return `${month} ${day} ${year}`;\n  }\n  ngOnInit() {\n    this.experienceForm = new FormGroup({\n      company: new FormControl(\"\"),\n      work_experience: new FormControl(),\n      doj: new FormControl(\"\"),\n      dor: new FormControl(),\n      role: new FormControl(\"\"),\n      city: new FormControl(\"\"),\n      disableField: new FormControl(false)\n    });\n    this.activateroute.queryParams.subscribe(params => {\n      this.EmpInfoObjects.datafrom = params['datafrom'];\n      this.EmpId = params['id'];\n    });\n    this.getEmpExperienceInfo();\n    this.getEmployeeBasicDetails();\n    this.getEmployee();\n    this.initializeForm();\n    this.getEmpDocs();\n  }\n  EmpBasicDetails;\n  getEmployeeBasicDetails() {\n    this.spinner.show();\n    this.hrmsService.getEmpDetails(this.EmpId).subscribe(results => {\n      this.spinner.hide();\n      this.EmpBasicDetails = results;\n    });\n  }\n  getEmpExperienceInfo() {\n    this.spinner.show();\n    this.hrmsService.getEmpExperienceInfoNew(this.EmpId).subscribe(results => {\n      if (results.code) {\n        this.spinner.hide();\n        this.toastr.error(results.code);\n      } else {\n        this.spinner.hide();\n        this.EmpExperienceInfo = results['experience'];\n        this.EmpExperienceInfo.reverse();\n        this.EmpExperienceInfo.forEach(experience => {\n          const dojDate = new Date(experience.doj);\n          experience.doj = this.formatDate(dojDate);\n          const dorDate = new Date(experience.dor);\n          experience.dor = this.formatDate(dorDate);\n        });\n      }\n    });\n  }\n  dojVal;\n  dorVal;\n  formattedDateDoj;\n  formattedDateDor;\n  jsonDataExp;\n  onCheckboxChange(event) {\n    if (event.checked) {\n      this.experienceForm.get('dor').setValue(null);\n    }\n  }\n  onSave() {\n    if (this.experienceForm.value.company == '' || this.experienceForm.value.company == null || this.experienceForm.value.company == undefined) {\n      this.toastr.error(\"Please Enter Company Name\");\n      return false;\n    }\n    if (this.experienceForm.value.doj == '' || this.experienceForm.value.doj == null || this.experienceForm.value.doj == undefined) {\n      this.toastr.error(\"Please Select Date of Joining\");\n      return false;\n    }\n    if (this.experienceForm.value.dor == '' || this.experienceForm.value.dor == null || this.experienceForm.value.dor == undefined) {\n      this.toastr.error(\"Please Select Date of Relieving\");\n      return false;\n    }\n    if (this.experienceForm.value.role == '' || this.experienceForm.value.role == null || this.experienceForm.value.role == undefined) {\n      this.toastr.error(\"Please Enter Role\");\n      return false;\n    }\n    if (this.experienceForm.value.city == '' || this.experienceForm.value.city == null || this.experienceForm.value.city == undefined) {\n      this.toastr.error(\"Please Select City\");\n      return false;\n    }\n    if (!this.fileUploadForm.get('file').value) {\n      this.toastr.error('Please Select File');\n      return false;\n    }\n    if (this.experienceForm.valid || this.experienceForm.get('dor').value === '') {\n      this.dojVal = this.experienceForm.get('doj').value;\n      this.dorVal = this.experienceForm.get('dor').value;\n      this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\n      this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd');\n      const formValue = this.experienceForm.value;\n      const formIntoJson = {\n        company: formValue.company || null,\n        work_experience: formValue.work_experience || null,\n        doj: this.formattedDateDoj || null,\n        dor: this.formattedDateDor || null,\n        role: formValue.role || null,\n        city: formValue.city.name || null\n      };\n      this.jsonDataExp = JSON.stringify([formIntoJson]);\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, this.jsonDataExp).subscribe(response => {\n        this.toastr.success('Successfully posted experience info');\n        this.getEmpExperienceInfo();\n        this.onSubmit();\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        // setTimeout(() => {\n        //   location.reload();\n        // }, 3000);\n      }, error => {\n        this.toastr.error('Error while posting experience info');\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n      });\n    } else {\n      for (const control in this.experienceForm.controls) {\n        if (this.experienceForm.controls.hasOwnProperty(control)) {\n          this.experienceForm.get(control).markAsTouched();\n        }\n      }\n      this.toastr.warning('All required details needed to be filled');\n    }\n  }\n  editDojVal;\n  editDorVal;\n  editFormattedDateDoj;\n  editFormattedDateDor;\n  onUpdate() {\n    if (this.experienceForm.value.company == '' || this.experienceForm.value.company == null || this.experienceForm.value.company == undefined) {\n      this.toastr.error(\"Please Enter Company Name\");\n      return false;\n    }\n    if (this.experienceForm.value.doj == '' || this.experienceForm.value.doj == null || this.experienceForm.value.doj == undefined) {\n      this.toastr.error(\"Please Select Date of Joining\");\n      return false;\n    }\n    if (this.experienceForm.value.dor == '' || this.experienceForm.value.dor == null || this.experienceForm.value.dor == undefined) {\n      this.toastr.error(\"Please Select Date of Relieving\");\n      return false;\n    }\n    if (this.experienceForm.value.role == '' || this.experienceForm.value.role == null || this.experienceForm.value.role == undefined) {\n      this.toastr.error(\"Please Enter Role\");\n      return false;\n    }\n    if (this.experienceForm.value.city == '' || this.experienceForm.value.city == null || this.experienceForm.value.city == undefined) {\n      this.toastr.error(\"Please Select City\");\n      return false;\n    }\n    // if(this.experienceForm.value.city.id == '' || this.experienceForm.value.city.id == null || this.experienceForm.value.city.id == undefined)\n    // {\n    //   this.toastr.error(\"Please Select City from DropDown\");\n    //   return false;\n    // }\n    if (this.experienceForm.valid) {\n      const formValue = this.experienceForm.value;\n      formValue.id = this.editId;\n      formValue.city = formValue.city.name;\n      this.editDojVal = this.experienceForm.get('doj').value;\n      this.editDorVal = this.experienceForm.get('dor').value;\n      this.editFormattedDateDoj = this.datePipe.transform(this.editDojVal, 'yyyy-MM-dd');\n      this.editFormattedDateDor = this.datePipe.transform(this.editDorVal, 'yyyy-MM-dd');\n      formValue.doj = this.editFormattedDateDoj;\n      formValue.dor = this.editFormattedDateDor;\n      const jsonData = JSON.stringify([formValue]);\n      this.spinner.show();\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, jsonData).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success('Successfully updated experience info');\n        this.getEmpExperienceInfo();\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n        // setTimeout(() => {\n        //   location.reload();\n        // }, 3000);\n      }, error => {\n        this.spinner.hide();\n        this.toastr.error('Error while posting/updated experience info');\n        this.renderer.selectRootElement(this.closeButton.nativeElement).click();\n      });\n    } else {\n      this.spinner.hide();\n      this.toastr.warning('All details need to be filled');\n    }\n  }\n  deleteExperienceRecord(recordId) {\n    if (confirm('Are you sure you want to delete this education record?')) {\n      this.spinner.show();\n      this.hrmsService.deleteEmployeeExperienceRecord(recordId, this.EmpId).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success(\"Experience Record Deleted successfully\");\n        this.getEmpExperienceInfo();\n        this.fileupdate = true;\n      }, error => {\n        this.spinner.hide();\n        this.toastr.error(\"Delete failed\");\n      });\n    }\n  }\n  getEmployee() {\n    const getDataid = localStorage.getItem(\"sessionData\");\n    let idValue = JSON.parse(getDataid);\n    let id = idValue.employee_id;\n    this.EmpObjects.empId = idValue.employee_id;\n    this.hrmsService.getEmpDetails(id).subscribe(res => {\n      this.EmpObjects.employeeList = res;\n      if (res?.id) {\n        this.gettingProfilename(res?.full_name);\n      }\n    }, error => {});\n  }\n  gettingProfilename(data) {\n    let name = data;\n    let letter = name[0];\n    this.EmpObjects.employeeFirstLetter = letter;\n  }\n  typeid() {\n    const data = this.EmployeeDocuments.data.find(document => document.type.name === 'Work experience');\n    return data ? data?.type?.id : null;\n  }\n  onSubmit() {\n    console.log(this.fileUploadForm.value);\n    const typeIdFromForm = this.fileUploadForm.get('type').value;\n    // const typeIdFromMethod = this.getTypeId();\n    // if (typeIdFromForm !== typeIdFromMethod) {\n    //   this.fileUploadForm.get('type').setValue(typeIdFromMethod);\n    // }\n    if (this.fileUploadForm.get('file').value) {\n      const formDataArray = [];\n      this.typeValue = this.typeid();\n      const typeAndRemarksObject = {\n        type: this.typeid(),\n        remarks: ''\n      };\n      formDataArray.push(typeAndRemarksObject);\n      const formData = new FormData();\n      formData.append(`${this.typeValue}`, this.fileUploadForm.get('file').value);\n      console.log('Formatted Array:', formDataArray);\n      this.hrmsService.postDocumentDetails(this.EmpId, formDataArray, formData).subscribe(response => {\n        console.log('File uploaded successfully', response);\n        this.toastr.success(\"File uploaded Successfully\");\n        this.closebutton.nativeElement.click();\n        this.fileUploadForm.reset();\n      }, error => {\n        console.error('Error uploading file', error);\n        this.toastr.error(\"Error uploading file\");\n      });\n    } else {\n      for (const control in this.fileUploadForm.controls) {\n        if (this.fileUploadForm.controls.hasOwnProperty(control)) {\n          this.fileUploadForm.get(control).markAsTouched();\n        }\n      }\n      console.log(\"not valid\");\n      this.toastr.warning('All details needed to be filled');\n    }\n  }\n  getEmpDocs() {\n    this.hrmsService.getEmpDocuments(this.EmpId).subscribe(results => {\n      this.EmployeeDocuments = results;\n      console.log(\"docs details\", this.EmployeeDocuments);\n    });\n  }\n  initializeForm() {\n    // const typeValue = this.getTypeId();\n    this.fileUploadForm = this.fb.group({\n      type: [null],\n      remarks: [null, Validators.required],\n      file: [null, Validators.required]\n    });\n    // this.fileUploadForm.patchValue({\n    //   type: 4\n    // });\n  }\n  get remarkInfo() {\n    return this.fileUploadForm.get(\"remarks\");\n  }\n  get docsFile() {\n    return this.fileUploadForm.get(\"file\");\n  }\n  onFileChange(event) {\n    const allowedFileTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\n    const maxFileSize = 5 * 1024 * 1024;\n    const fileInput = event.target;\n    const selectedFiles = fileInput.files;\n    if (selectedFiles.length > 0) {\n      const file = selectedFiles[0];\n      if (!allowedFileTypes.includes(file.type)) {\n        this.toastr.error('Invalid file type. Please select a PDF, JPEG, PNG, or JPG file.');\n        fileInput.value = '';\n        return;\n      }\n      if (file.size > maxFileSize) {\n        this.toastr.error('File size exceeds the maximum limit (5 MB). Please select a smaller file.');\n        fileInput.value = '';\n        return;\n      }\n      console.log('File is valid:', file.name);\n    }\n    const file = event.target.files[0];\n    this.fileUploadForm.patchValue({\n      file\n    });\n  }\n  fileChange(event) {\n    // let imagesList = [];\n    this.images = [];\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.images.push(event.target.files[i]);\n    }\n    // this.adddocformarray();\n  }\n  adddocformarray() {\n    //  const formValue = this.experienceForm.value;\n    this.dojVal = this.experienceForm.get('doj').value;\n    this.dorVal = this.experienceForm.get('dor').value;\n    this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\n    this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd');\n    const formValue = this.experienceForm.value;\n    let data = {\n      company: formValue.company || null,\n      work_experience: formValue.work_experience || null,\n      doj: this.formattedDateDoj || null,\n      dor: this.formattedDateDor || null,\n      role: formValue.role || null,\n      city: formValue.city.name || null,\n      type: 6,\n      attachment: \"\",\n      filekey: this.images\n    };\n    console.log(\"dataArray\", data);\n    this.docFunctionList.push(data);\n    console.log(\"array docs\", this.docFunctionList);\n    // this.issueForm.controls[\"description\"].reset('');\n    // this.issueForm.controls[\"priority_type\"].reset('');\n    // this.images = [];\n    // this.fileInput.nativeElement.value = \"\"\n  }\n  onSubmitss() {\n    this.adddocformarray();\n    // this.SpinnerService.show();\n    console.log(\"submit\", this.docFunctionList);\n    // if (this.docFunctionList.length === 0) {\n    //   this.notify.error('Please Fill All Details');\n    //   this.SpinnerService.hide();\n    //   return false;\n    // }\n    let count = 1;\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      this.docFunctionList[i].attachment = 'file' + count++;\n    }\n    console.log(\"ffff\", this.docFunctionList);\n    console.log(\"docgp\", this.docFunctionList);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionList[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      const string_value = this.docFunctionList[index].attachment;\n      const file_list = this.docFunctionList[index].filekey;\n      formData.append(string_value, file_list[0]);\n      // this.SpinnerService.show();\n      // this.taskmanagerservice.issueCreation(formData)\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, formData).subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Created') {\n          this.toastr.success(\"Created Successfully!...\");\n          this.docFunctionList = [];\n          this.getEmpExperienceInfo();\n          this.closeButton.nativeElement.click();\n          // this.OnSubmit.emit();\n          // this.SpinnerService.hide();\n          // this.issueForm.reset();\n          this;\n        } else {\n          // this.notify.error(res.description)\n          // this.SpinnerService.hide();\n          // return false;\n        }\n      }, error => {\n        // this.errorHandler.handleError(error);\n        // this.SpinnerService.hide();\n      });\n      // this.SpinnerService.hide();\n    };\n    for (let i = 0; i < this.docFunctionList.length; i++) {\n      processSubmission(i);\n    }\n    // this.SpinnerService.hide();\n    // this.issueForm.reset();\n  }\n  viewfile(data) {\n    let filedata = data.employee_document;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    // this.spinner.show();\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      const getToken = localStorage.getItem(\"sessionData\");\n      let tokenValue = JSON.parse(getToken);\n      let token = tokenValue.token;\n      if (this.file_ext.includes(this.fileextension.toLowerCase())) {\n        // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\n        this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\n      } else {\n        let binaryData = [];\n        binaryData.push(results);\n        let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n        this.filesrc = downloadUrl;\n      }\n      if (msg == 1) {\n        this.pdfshow = false;\n        this.imgshow = true;\n      } else {\n        this.pdfshow = true;\n        this.imgshow = false;\n      }\n    });\n    // this.spinner.hide();\n    // this.getEmpDocs();\n    this.filesrc = null;\n  }\n  filetype_check2(i) {\n    let file_name = i;\n    let stringValue = file_name.split('.');\n    this.fileextension = stringValue.pop();\n    this.file_ext = ['jpg', 'png', 'JPG', 'JPEG', 'jpeg', 'image'];\n    if (this.file_ext.includes(this.fileextension)) {\n      var msg = 1;\n    } else {\n      var msg = 0;\n    }\n    return msg;\n  }\n  deleteExperience(recordId) {\n    if (confirm('Are you sure you want to delete this Experience record?')) {\n      this.spinner.show();\n      this.hrmsService.deleteExperienceInfo(recordId, this.EmpId).subscribe(response => {\n        this.spinner.hide();\n        this.toastr.success(\"Experience Record Deleted successfully\");\n        // this.getEmpExperienceInfo()\n        this.getEmpExperienceInfo();\n      }, error => {\n        this.spinner.hide();\n        this.toastr.error(\"Delete failed\");\n      });\n    }\n  }\n  downloadfiles(data) {\n    // this.spinner.show();\n    let filedata = data.employee_document;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      let binaryData = [];\n      binaryData.push(results);\n      let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n      let link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = this.filenames;\n      link.click();\n    });\n    // this.spinner.hide();\n    // this.getEmpDocs();\n  }\n  deletefile(data) {\n    console.log('File ID:', data?.id);\n    this.hrmsService.getEmployeeDocumentDetails(this.EmpId, data?.id).subscribe(results => {\n      this.EmployeeDocuments = results;\n      console.log(\"Docs details\", this.EmployeeDocuments);\n      this.toastr.success(\"File deleted successfully\");\n      this.getEmpDocs();\n      this.fileupdate = true;\n    }, error => {\n      console.error('Error deleting document:', error);\n      this.toastr.error(\"Error deleting file\", \"Error\");\n    });\n  }\n  viewfiles(data) {\n    let filedata = data;\n    this.dataname = filedata.file_id;\n    this.filenames = filedata.file_name;\n    this.spinner.show();\n    let option = 'view';\n    let msg = this.filetype_check2(this.filenames);\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname).subscribe(results => {\n      const getToken = localStorage.getItem(\"sessionData\");\n      let tokenValue = JSON.parse(getToken);\n      let token = tokenValue.token;\n      if (this.file_ext.includes(this.fileextension.toLowerCase())) {\n        // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\n        this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\n      } else {\n        let binaryData = [];\n        binaryData.push(results);\n        let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\n        this.filesrc = downloadUrl;\n      }\n      if (msg == 1) {\n        this.pdfshow = false;\n        this.imgshow = true;\n      } else {\n        this.pdfshow = true;\n        this.imgshow = false;\n      }\n    });\n    this.spinner.hide();\n    // this.getEmpDocs();\n    this.filesrc = null;\n  }\n  onUpdateVals() {\n    this.adddocformarrays();\n    console.log(\"submit\", this.docFunctionLists);\n    let count = 1;\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\n      this.docFunctionLists[i].attachment = this.docFunctionLists[i].filekey.length > 0 ? 'file' + count++ : \"\"; // Check if filekey exists to set attachment\n    }\n    console.log(\"ffff\", this.docFunctionLists);\n    console.log(\"docgp\", this.docFunctionLists);\n    let successfulSubmissions = 0;\n    const processSubmission = index => {\n      const dataset = this.docFunctionLists[index];\n      const formData = new FormData();\n      const Finaldata = [dataset];\n      const datavalue = JSON.stringify(Finaldata);\n      formData.append('data', datavalue);\n      // Append file only if it exists\n      if (dataset.attachment !== \"\") {\n        formData.append(dataset.attachment, dataset.filekey[0]);\n      }\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, formData) // Assuming this is an update operation\n      .subscribe(res => {\n        console.log(\"issue click\", res);\n        if (res.message == 'Successfully Updated') {\n          this.toastr.success(\"Updated Successfully!...\");\n          this.docFunctionLists = [];\n          this.getEmpExperienceInfo();\n          this.experienceForm.reset();\n          this.closeButton.nativeElement.click();\n        } else {\n          // Handle error condition if required\n        }\n      }, error => {\n        // Handle error condition if required\n      });\n    };\n    for (let i = 0; i < this.docFunctionLists.length; i++) {\n      processSubmission(i);\n    }\n  }\n  adddocformarrays() {\n    //  const formValue = this.experienceForm.value;\n    this.dojVal = this.experienceForm.get('doj').value;\n    this.dorVal = this.experienceForm.get('dor').value;\n    this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\n    this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd');\n    const formValue = this.experienceForm.value;\n    let data = {\n      company: formValue.company || null,\n      work_experience: formValue.work_experience || null,\n      doj: this.formattedDateDoj || null,\n      dor: this.formattedDateDor || null,\n      role: formValue.role || null,\n      city: formValue.city.name || null,\n      type: 6,\n      attachment: \"\",\n      filekey: this.images,\n      id: this.patchid\n    };\n    console.log(\"dataArray\", data);\n    this.docFunctionLists.push(data);\n    console.log(\"array docs\", this.docFunctionList);\n    // this.issueForm.controls[\"description\"].reset('');\n    // this.issueForm.controls[\"priority_type\"].reset('');\n    // this.images = [];\n    // this.fileInput.nativeElement.value = \"\"\n  }\n  static ɵfac = function EmployeeExperienceComponent_Factory(t) {\n    return new (t || EmployeeExperienceComponent)(i0.ɵɵdirectiveInject(i1.MasterHrmsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DatePipe), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i6.NgxSpinnerService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmployeeExperienceComponent,\n    selectors: [[\"app-employee-experience\"]],\n    viewQuery: function EmployeeExperienceComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closebutton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 127,\n    vars: 21,\n    consts: [[2, \"width\", \"100%\"], [1, \"row\"], [1, \"col-sm-1\", \"col-md-1\", \"col-1\", \"col-lg-1\", \"col-xl-1\"], [1, \"cardspaceListProfile\", \"color\", \"display\"], [1, \"col-sm-3\", \"col-md-3\", \"col-3\", \"col-lg-3\", \"col-xl-3\"], [2, \"color\", \"#046ba8\", \"font-size\", \"x-large\", \"font-weight\", \"700\", \"margin-top\", \"7%\"], [1, \"col-sm-4\", \"col-md-4\", \"col-4\", \"col-lg-4\", \"col-xl-4\"], [1, \"col-sm-2\", \"col-md-2\", \"col-2\", \"col-lg-2\", \"col-xl-2\", 2, \"margin-top\", \"1.2%\", \"padding-left\", \"6%\", \"margin-left\", \"12%\"], [1, \"popup-btn\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#expModal\", 1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", 3, \"click\"], [\"class\", \"newCard\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"expModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", \"bottom-modal\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\", 2, \"width\", \"800px\"], [\"id\", \"educationHeader\", 1, \"modal-header\", 2, \"width\", \"800px\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", 2, \"text-align\", \"center\", \"font-size\", \"large\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", 2, \"color\", \"white\", \"opacity\", \"1\"], [\"closeButton\", \"\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"formAbove\", 3, \"formGroup\"], [1, \"container\"], [1, \"col\", \"smallfield\"], [1, \"spacingForm\", \"shortinput\"], [\"matInput\", \"\", \"placeholder\", \"Company\", \"name\", \"companyName\", \"formControlName\", \"company\"], [1, \"col\", \"smallfieldDegree\"], [\"formControlName\", \"doj\", \"name\", \"joiningDate\", \"matInput\", \"\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"formControlName\", \"dor\", \"matInput\", \"\", 3, \"matDatepicker\", \"disabled\"], [\"pickern\", \"\"], [1, \"row\", \"rolecityRow\"], [1, \"dateFormat\", \"shortinput\"], [\"matInput\", \"\", \"name\", \"expRole\", \"placeholder\", \"Role\", \"formControlName\", \"role\"], [1, \"form-field\", \"shortinputPercentage\"], [\"name\", \"cityName\", \"name\", \"expCity\", \"placeholder\", \"Select City\", \"matInput\", \"\", \"formControlName\", \"city\", 3, \"matAutocomplete\", \"input\"], [\"titleInputCity\", \"\"], [\"matSuffix\", \"\", 1, \"maticonsize\"], [3, \"displayWith\"], [\"empcity\", \"matAutocomplete\"], [3, \"value\", \"title\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-sm-7\"], [1, \"col-sm-2\"], [1, \"col-sm-2\", 2, \"margin-top\", \"-1%\", \"margin-left\", \"5%\"], [\"class\", \"btn btn-primary\", \"style\", \"background-color: #044063;margin-top: -3%;\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-dark\", \"style\", \"background-color: #044063;margin-top: -3%;\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"docsModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"bottom-modal\"], [\"closebutton\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\"], [\"type\", \"file\", \"id\", \"file\", \"name\", \"docsFile\", \"accept\", \".pdf, .jpeg, .jpg, .png\", \"id\", \"inputGroupFile01\", \"formControlName\", \"file\", 1, \"form-control\", 3, \"change\"], [1, \"col-md-4\"], [1, \"remarks\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Remarks\", \"name\", \"remarkInfo\", \"formControlName\", \"remarks\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"inputFile\"], [\"id\", \"viewDownload\", \"role\", \"dialog\", \"aria-labelledby\", \"bankModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\"], [\"fxLayoutAlign\", \"space-between\", 1, \"col-lg-12\", \"col-sm-12\"], [\"style\", \"display: block; height: 500px;\", 3, \"src\", \"original-size\", \"render-text\", \"show-borders\", \"fit-to-page\", \"show-all\", 4, \"ngIf\"], [\"class\", \"img-responsive\", \"style\", \"display: block;border-width: 2px;border-style: solid;width: 100%;\", 3, \"src\", 4, \"ngIf\"], [1, \"modal-footer\"], [1, \"newCard\"], [1, \"d-flex\"], [1, \"p-2\", \"flex-grow-1\"], [1, \"color\", 2, \"font-weight\", \"600\", \"font-size\", \"medium\"], [1, \"cus-badgeGreen\"], [\"class\", \" cus-badgeBlue\", 4, \"ngIf\"], [\"class\", \"cus-badgeBlue\", 4, \"ngIf\"], [1, \"p-2\", 2, \"width\", \"100px\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#expModal\", 3, \"click\"], [1, \"fa\", \"solid\", \"fa-pencil\", 2, \"margin-left\", \"-44%\"], [1, \"fa\", \"solid\", \"fa-trash-can\", 2, \"margin-left\", \"5px\", 3, \"click\"], [\"class\", \"col-md-1\", \"style\", \"margin-left: -10px;margin-top: 2px;\", 4, \"ngIf\"], [1, \"cus-badgeBlue\"], [1, \"col-md-1\", 2, \"margin-left\", \"-10px\", \"margin-top\", \"2px\"], [1, \"fa\", \"solid\", \"fa-download\", 3, \"click\"], [3, \"value\", \"title\"], [2, \"margin-right\", \"1em\"], [\"type\", \"file\", \"accept\", \".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\\n                  .dotx,.dotm,.docb,\\n                  .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\", \"multiple\", \"true\", \"name\", \"images\", 1, \"borderremove\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"col-sm-9\", 2, \"margin-left\", \"2%\"], [\"class\", \"cus-attachCard\", \"style\", \"margin-left: -2%;\", 4, \"ngIf\"], [1, \"cus-attachCard\", 2, \"margin-left\", \"-2%\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"data-bs-target\", \"#viewDownload\", \"data-bs-toggle\", \"modal\", 2, \"margin-left\", \"37%\", 3, \"click\"], [\"aria-label\", \"View\", 2, \"font-size\", \"x-large\", \"color\", \"blue\", \"margin-top\", \"-19px\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\"], [\"aria-label\", \"Delete\", 2, \"font-size\", \"x-large\", \"color\", \"blue\", \"margin-top\", \"-19px\"], [1, \"btn\", \"btn-primary\", 2, \"background-color\", \"#044063\", \"margin-top\", \"-3%\", 3, \"click\"], [1, \"btn\", \"btn-dark\", 2, \"background-color\", \"#044063\", \"margin-top\", \"-3%\", 3, \"click\"], [1, \"error-message\"], [2, \"display\", \"block\", \"height\", \"500px\", 3, \"src\", \"original-size\", \"render-text\", \"show-borders\", \"fit-to-page\", \"show-all\"], [1, \"img-responsive\", 2, \"display\", \"block\", \"border-width\", \"2px\", \"border-style\", \"solid\", \"width\", \"100%\", 3, \"src\"]],\n    template: function EmployeeExperienceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"uppercase\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"p\", 5);\n        i0.ɵɵtext(8, \"Experience\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function EmployeeExperienceComponent_Template_button_click_12_listener() {\n          return ctx.showSaveButton();\n        });\n        i0.ɵɵelementStart(13, \"span\");\n        i0.ɵɵtext(14, \"+ Add\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(15, \"hr\");\n        i0.ɵɵtemplate(16, EmployeeExperienceComponent_div_16_Template, 17, 6, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 12)(19, \"div\", 13)(20, \"div\", 14)(21, \"h5\", 15)(22, \"b\");\n        i0.ɵɵtext(23, \"Experience\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 16, 17)(26, \"span\", 18);\n        i0.ɵɵtext(27, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 19)(29, \"form\", 20)(30, \"div\", 21)(31, \"div\", 1)(32, \"div\", 22)(33, \"mat-form-field\", 23)(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Company\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 25)(38, \"mat-form-field\", 23)(39, \"mat-label\");\n        i0.ɵɵtext(40, \"Joining date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(41, \"input\", 26)(42, \"mat-datepicker-toggle\", 27)(43, \"mat-datepicker\", null, 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"div\", 22)(46, \"mat-form-field\", 23)(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Relieving date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"input\", 29)(50, \"mat-datepicker-toggle\", 27)(51, \"mat-datepicker\", null, 30);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(53, \"div\", 31)(54, \"div\", 22)(55, \"mat-form-field\", 32)(56, \"mat-label\");\n        i0.ɵɵtext(57, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"input\", 33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(59, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 22)(61, \"mat-form-field\", 34)(62, \"mat-label\");\n        i0.ɵɵtext(63, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"input\", 35, 36);\n        i0.ɵɵlistener(\"input\", function EmployeeExperienceComponent_Template_input_input_64_listener() {\n          return ctx.getCityAutocomplete();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"mat-icon\", 37);\n        i0.ɵɵtext(67, \"unfold_more\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"mat-autocomplete\", 38, 39);\n        i0.ɵɵtemplate(70, EmployeeExperienceComponent_mat_option_70_Template, 2, 3, \"mat-option\", 40);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(71, \"br\")(72, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(73, \"div\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(74, EmployeeExperienceComponent_div_74_Template, 5, 0, \"div\", 41);\n        i0.ɵɵtemplate(75, EmployeeExperienceComponent_div_75_Template, 3, 1, \"div\", 41);\n        i0.ɵɵelementStart(76, \"div\", 1);\n        i0.ɵɵelement(77, \"div\", 42)(78, \"div\", 43);\n        i0.ɵɵelementStart(79, \"div\", 44);\n        i0.ɵɵtemplate(80, EmployeeExperienceComponent_button_80_Template, 2, 0, \"button\", 45);\n        i0.ɵɵtemplate(81, EmployeeExperienceComponent_button_81_Template, 2, 0, \"button\", 46);\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(82, \"div\", 47)(83, \"div\", 12)(84, \"div\", 13)(85, \"div\", 14)(86, \"h5\", 15)(87, \"b\");\n        i0.ɵɵtext(88, \" Upload Work Experience \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(89, \"button\", 16, 48)(91, \"span\", 18);\n        i0.ɵɵtext(92, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(93, \"div\", 19)(94, \"form\", 49);\n        i0.ɵɵlistener(\"ngSubmit\", function EmployeeExperienceComponent_Template_form_ngSubmit_94_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(95, \"div\", 1)(96, \"div\", 50)(97, \"input\", 51);\n        i0.ɵɵlistener(\"change\", function EmployeeExperienceComponent_Template_input_change_97_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(98, \"div\", 52)(99, \"mat-form-field\", 53)(100, \"mat-label\");\n        i0.ɵɵtext(101, \"Remarks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(102, \"input\", 54);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(103, \"br\");\n        i0.ɵɵtemplate(104, EmployeeExperienceComponent_span_104_Template, 2, 0, \"span\", 55);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"div\", 56)(106, \"button\", 57)(107, \"mat-icon\");\n        i0.ɵɵtext(108, \"cloud_upload\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(109, \"br\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(110, \"div\", 58)(111, \"div\", 12)(112, \"div\", 13)(113, \"div\", 14)(114, \"h5\", 15);\n        i0.ɵɵtext(115, \" View File \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(116, \"button\", 16, 48)(118, \"span\", 18);\n        i0.ɵɵtext(119, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(120, \"div\", 19)(121, \"div\", 1)(122, \"div\", 59);\n        i0.ɵɵtemplate(123, EmployeeExperienceComponent_pdf_viewer_123_Template, 1, 7, \"pdf-viewer\", 60);\n        i0.ɵɵelement(124, \"br\");\n        i0.ɵɵtemplate(125, EmployeeExperienceComponent_img_125_Template, 1, 1, \"img\", 61);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(126, \"div\", 62);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(44);\n        const _r3 = i0.ɵɵreference(52);\n        const _r5 = i0.ɵɵreference(69);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.EmpObjects.employeeFirstLetter == null ? \"VS\" : i0.ɵɵpipeBind1(5, 19, ctx.EmpObjects.employeeFirstLetter), \" \");\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.EmpExperienceInfo);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.experienceForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"matDatepicker\", _r2);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matDatepicker\", _r3)(\"disabled\", ctx.experienceForm.get(\"disableField\").value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"matAutocomplete\", _r5);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"displayWith\", ctx.displayCity);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.CityDropdownList);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode || ctx.fileupdate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.fileupdate);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addingMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.addingMode);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.fileUploadForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.remarkInfo == null ? null : ctx.remarkInfo.valid) && ((ctx.remarkInfo == null ? null : ctx.remarkInfo.touched) || (ctx.remarkInfo == null ? null : ctx.remarkInfo.dirty)));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngIf\", ctx.pdfshow);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.imgshow);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i7.MatIconButton, i8.MatIcon, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatSuffix, i11.MatOption, i12.MatAutocomplete, i12.MatAutocompleteTrigger, i13.MatDatepicker, i13.MatDatepickerInput, i13.MatDatepickerToggle, i14.PdfViewerComponent, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.UpperCasePipe],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700[_ngcontent-%COMP%];800[_ngcontent-%COMP%];900&display=swap)[_ngcontent-%COMP%];.mat-form-field[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  cursor: pointer;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-radius: 3px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointer;\\n}\\n\\n\\n\\n.cus-tableContainer[_ngcontent-%COMP%] {\\n  border-width: 1px 0px 1px 0px;\\n  border-style: solid;\\n  border-color: #dedede;\\n  padding: 16px 30px;\\n}\\n\\n\\n\\n.cus-tableSearch[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 10px 0 20px 0;\\n}\\n\\n.cus-tableSearchContent[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 10px;\\n}\\n\\n.cus-tableSearchHead[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n  font-size: 20px;\\n  font-weight: 600;\\n  line-height: 27px;\\n  letter-spacing: 0em;\\n  text-align: left;\\n}\\n\\n#editicon[_ngcontent-%COMP%] {\\n  color: rgb(23, 111, 244);\\n}\\n\\n#deleteicon[_ngcontent-%COMP%] {\\n  color: rgb(23, 111, 244);\\n}\\n\\n.insidePopup[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n}\\n\\n#saveEdu[_ngcontent-%COMP%] {\\n  margin-right: 40rem;\\n}\\n\\n.dateFormat[_ngcontent-%COMP%] {\\n  width: 7rem;\\n}\\n\\n.shortinput[_ngcontent-%COMP%] {\\n  width: 13rem;\\n}\\n\\n.shortinputPercentage[_ngcontent-%COMP%] {\\n  width: 13rem;\\n}\\n\\n.city[_ngcontent-%COMP%] {\\n  font-size: 15px;\\n  margin-bottom: 2rem;\\n}\\n\\n.addbutton[_ngcontent-%COMP%] {\\n  background-color: #f5c68b;\\n  width: 60px;\\n  height: 60px;\\n  border-radius: 50%;\\n}\\n\\n#educationHeader[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n}\\n\\n.cityInst[_ngcontent-%COMP%] {\\n  margin-left: 2rem;\\n  height: 50px;\\n  position: relative;\\n  bottom: 15px;\\n  font-family: \\\"Montserrat\\\";\\n  font-size: 20px;\\n}\\n\\n.close[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n#percentErr[_ngcontent-%COMP%] {\\n  right: 8rem;\\n}\\n\\n.dateleft[_ngcontent-%COMP%] {\\n  position: relative;\\n  right: 8rem;\\n}\\n\\n.cus-badgeGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #d7f8e1;\\n  color: #057926;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeBlue[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #ededfd;\\n  color: #2d2e8e;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badgeLightBlack[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #eeeeef;\\n  color: #353537;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\nmat-icon[_ngcontent-%COMP%] {\\n  font-size: 15px;\\n}\\n\\nmat-checkbox[_ngcontent-%COMP%] {\\n  position: relative;\\n  bottom: 1rem;\\n  font-size: 10px;\\n  height: 10px;\\n  width: 10px;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 12px;\\n  position: relative;\\n  bottom: 1rem;\\n}\\n\\n.roleErr[_ngcontent-%COMP%] {\\n  position: absolute;\\n  bottom: 10rem;\\n  left: 5rem;\\n}\\n\\n.rolecityRow[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.saveUpdate[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.cus-badgeLightGreen[_ngcontent-%COMP%] {\\n  border-radius: 100px;\\n  max-width: -moz-fit-content;\\n  max-width: fit-content;\\n  background-color: #c2f8ff;\\n  color: #007787;\\n  padding: 4px 14px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n}\\n\\n.cus-badge[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: center;\\n  gap: 20px;\\n}\\n\\n.newCard[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n  border-radius: 10px;\\n  margin-bottom: 10px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.cardspaceListProfile[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  width: 50px;\\n  height: 50px;\\n  font-size: 32px;\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.color[_ngcontent-%COMP%] {\\n  color: #525CEB;\\n}\\n\\n*[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.matCard[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  padding: 3px;\\n}\\n\\n#matCard[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  padding: 3px;\\n}\\n\\n.cardspaceListProfile[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  width: 50px;\\n  height: 50px;\\n  font-size: 32px;\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n}\\n\\n.display[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.color[_ngcontent-%COMP%] {\\n  color: #525CEB;\\n}\\n\\n*[_ngcontent-%COMP%] {\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-weight: 400;\\n}\\n\\n.material-icons[_ngcontent-%COMP%] {\\n  font-family: \\\"Material Icons\\\", sans-serif;\\n}\\n\\n.matCard[_ngcontent-%COMP%] {\\n  box-shadow: 0px 0px 4px -1px #c8c2c2;\\n  border-radius: 3px;\\n  padding: 3px;\\n}\\n\\n.fa-pencil[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 7%;\\n  cursor: pointer;\\n}\\n\\n.fa-trash-can[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 7%;\\n  cursor: pointer;\\n}\\n\\n.inputFile[_ngcontent-%COMP%] {\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n  background-color: #f5c68b;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.inputFile[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n\\n.remarks[_ngcontent-%COMP%] {\\n  margin-top: 0px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.fa-download[_ngcontent-%COMP%] {\\n  background-color: #044063;\\n  color: white;\\n  padding: 6px;\\n  border-radius: 4px;\\n  margin-top: 7%;\\n  cursor: pointer;\\n}\\n\\n.cus-attachCard[_ngcontent-%COMP%] {\\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.171);\\n  padding: 4px 10px;\\n  max-width: 500px;\\n  width: 100%;\\n  margin: 10px 0 0 0;\\n  border-radius: 6px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"names":["Validators","FormGroup","FormControl","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","exp_r16","doj","dor","ɵɵtextInterpolate1","ɵɵlistener","EmployeeExperienceComponent_div_16_span_16_Template_i_click_1_listener","ɵɵrestoreView","_r25","ɵɵnextContext","$implicit","ctx_r23","ɵɵresetView","downloadfiles","ɵɵtemplate","EmployeeExperienceComponent_div_16_span_10_Template","EmployeeExperienceComponent_div_16_span_11_Template","EmployeeExperienceComponent_div_16_Template_a_click_13_listener","restoredCtx","_r27","ctx_r26","editRowExp","ɵɵelement","EmployeeExperienceComponent_div_16_Template_i_click_15_listener","ctx_r28","deleteExperience","id","EmployeeExperienceComponent_div_16_span_16_Template","ɵɵtextInterpolate","role","company","city","ɵɵproperty","employee_document","ɵɵpropertyInterpolate","city_r29","name","EmployeeExperienceComponent_div_74_Template_input_change_3_listener","$event","_r32","ctx_r31","fileChange","EmployeeExperienceComponent_div_75_div_2_Template_button_click_3_listener","_r35","ctx_r34","viewfiles","reuploadfileArr","EmployeeExperienceComponent_div_75_div_2_Template_button_click_6_listener","ctx_r36","deletefile","ctx_r33","file_name","EmployeeExperienceComponent_div_75_div_2_Template","ctx_r8","EmployeeExperienceComponent_button_80_Template_button_click_0_listener","_r38","ctx_r37","onSubmitss","EmployeeExperienceComponent_button_81_Template_button_click_0_listener","_r40","ctx_r39","onUpdateVals","ctx_r14","filesrc","ctx_r15","ɵɵsanitizeUrl","EmployeeExperienceComponent","hrmsService","activateroute","fb","datePipe","toastr","renderer","spinner","closeButton","closebutton","EmpInfoObjects","datafrom","booleanList","text","value","checked","indeterminate","labelPosition","disabled","Date","customDateFormat","EmpId","EmpExperienceInfo","addingMode","isCurrentlyWorking","fileUploadForm","EmployeeDocuments","typeValue","images","docFunctionList","dataname","filenames","fileextension","file_ext","pdfshow","imgshow","imageUrls","apiURL","imageUrl","fileInput","fileupdate","docFunctionLists","patchid","addnewdata","toggleCurrentlyWorking","displayCity","experienceForm","work_experience","disableField","constructor","group","companyName","get","joiningDate","expRole","expCity","selectedItem","editId","dojDate","dorDate","dateObject","formattedDoj","formattedDor","dateObjDoj","dateObjDor","EmpObjects","employeeList","employeeFirstLetter","ActivityStatus","TimeLogList","empId","pendingCounts","expitem","dorIsInvalid","dorValue","transform","patchValue","undefined","showSaveButton","reset","streamInput","CityDropdownList","isDateValid","dateString","isNaN","parse","getCityAutocomplete","getCitySearchResults","subscribe","results","formatDate","date","monthNames","day","getDate","month","getMonth","year","getFullYear","ngOnInit","queryParams","params","getEmpExperienceInfo","getEmployeeBasicDetails","getEmployee","initializeForm","getEmpDocs","EmpBasicDetails","show","getEmpDetails","hide","getEmpExperienceInfoNew","code","error","reverse","forEach","experience","dojVal","dorVal","formattedDateDoj","formattedDateDor","jsonDataExp","onCheckboxChange","event","setValue","onSave","valid","formValue","formIntoJson","JSON","stringify","postEmployeeExperienceInfoNew","response","success","onSubmit","selectRootElement","nativeElement","click","control","controls","hasOwnProperty","markAsTouched","warning","editDojVal","editDorVal","editFormattedDateDoj","editFormattedDateDor","onUpdate","jsonData","deleteExperienceRecord","recordId","confirm","deleteEmployeeExperienceRecord","getDataid","localStorage","getItem","idValue","employee_id","res","gettingProfilename","full_name","data","letter","typeid","find","document","type","console","log","typeIdFromForm","formDataArray","typeAndRemarksObject","remarks","push","formData","FormData","append","postDocumentDetails","getEmpDocuments","required","file","remarkInfo","docsFile","onFileChange","allowedFileTypes","maxFileSize","target","selectedFiles","files","length","includes","size","i","adddocformarray","attachment","filekey","count","successfulSubmissions","processSubmission","index","dataset","Finaldata","datavalue","string_value","file_list","message","viewfile","filedata","file_id","option","msg","filetype_check2","viewDocumentDetails","getToken","tokenValue","token","toLowerCase","binaryData","downloadUrl","window","URL","createObjectURL","Blob","stringValue","split","pop","deleteExperienceInfo","link","createElement","href","download","getEmployeeDocumentDetails","adddocformarrays","ɵɵdirectiveInject","i1","MasterHrmsService","i2","ActivatedRoute","i3","FormBuilder","i4","DatePipe","i5","ToastrService","Renderer2","i6","NgxSpinnerService","selectors","viewQuery","EmployeeExperienceComponent_Query","rf","ctx","EmployeeExperienceComponent_Template_button_click_12_listener","EmployeeExperienceComponent_div_16_Template","EmployeeExperienceComponent_Template_input_input_64_listener","EmployeeExperienceComponent_mat_option_70_Template","EmployeeExperienceComponent_div_74_Template","EmployeeExperienceComponent_div_75_Template","EmployeeExperienceComponent_button_80_Template","EmployeeExperienceComponent_button_81_Template","EmployeeExperienceComponent_Template_form_ngSubmit_94_listener","EmployeeExperienceComponent_Template_input_change_97_listener","EmployeeExperienceComponent_span_104_Template","EmployeeExperienceComponent_pdf_viewer_123_Template","EmployeeExperienceComponent_img_125_Template","ɵɵpipeBind1","_r2","_r3","_r5","touched","dirty"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\EMPData\\AllEmployeeDetails\\employee-experience\\employee-experience.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\hrms\\EMPData\\AllEmployeeDetails\\employee-experience\\employee-experience.component.html"],"sourcesContent":["import { Component, OnInit ,ElementRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MasterHrmsService } from 'src/app/hrms/master-hrms.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n// import { viewClassName } from '@angular/compiler';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-experience',\r\n  templateUrl: './employee-experience.component.html',\r\n  styleUrls: ['./employee-experience.component.scss']\r\n})\r\nexport class EmployeeExperienceComponent implements OnInit {\r\n  @ViewChild('closeButton', { static: false }) closeButton: ElementRef;\r\n  @ViewChild('closebutton')closebutton:ElementRef\r\n\r\n  EmpInfoObjects = {\r\n    datafrom: null,\r\n    booleanList: [{ text: \"Yes\", value: true }, { text: \"No\", value: false }]\r\n  }\r\n  //check box\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n  dor = new FormControl(new Date());\r\n\r\n  // Define a custom date format\r\n  customDateFormat = 'yyyy-MM-dd';\r\n  EmpId: any;\r\n  EmpExperienceInfo: any\r\n  addingMode: boolean = true;\r\n  // Inside your component class\r\n  isCurrentlyWorking: boolean = false;\r\n  fileUploadForm: any;\r\n  EmployeeDocuments: any=[];\r\n  typeValue: any;\r\n  images: string[] = [];\r\n  docFunctionList = [];\r\n  dataname: any;\r\n  filenames: any;\r\n  fileextension: any;\r\n  file_ext: string[];\r\n  filesrc: string;\r\n  pdfshow: boolean = false;\r\n  imgshow: boolean = false;\r\n  imageUrls = environment.apiURL;\r\n  imageUrl: string | ArrayBuffer | null = null;\r\n  @ViewChild('fileInput') fileInput: any;\r\n  reuploadfileArr: any;\r\n  fileupdate: boolean = false;\r\n  docFunctionLists: any = [];\r\n  patchid: any;\r\n  addnewdata: boolean = true;\r\n\r\n  // Function to toggle the \"Currently working\" state\r\n  toggleCurrentlyWorking() {\r\n    this.isCurrentlyWorking = !this.isCurrentlyWorking;\r\n  }\r\n\r\n  displayCity(city: any): string {\r\n    return city && city.name ? city.name : '';\r\n  }\r\n  // Initialize your educationForm\r\n  experienceForm: FormGroup = new FormGroup({\r\n    company: new FormControl(),\r\n    work_experience: new FormControl(),\r\n    doj: new FormControl(),\r\n    dor: new FormControl(),\r\n    role: new FormControl(),\r\n    city: new FormControl(),\r\n   \r\n    disableField: new FormControl(false)\r\n  });\r\n\r\n\r\n  constructor(private hrmsService: MasterHrmsService, private activateroute: ActivatedRoute, private fb: FormBuilder,\r\n    private datePipe: DatePipe, private toastr: ToastrService,private renderer: Renderer2, private spinner : NgxSpinnerService) {\r\n\r\n    this.experienceForm = this.fb.group({\r\n      company: [''],\r\n      work_experience: [''],\r\n      doj: [''],\r\n      dor: [''],\r\n      role: [''],\r\n      city: [''],\r\n      disableField: [false],\r\n\r\n    });\r\n  }\r\n\r\n\r\n  get companyName() {\r\n    return this.experienceForm.get(\"company\")\r\n  }\r\n\r\n  get joiningDate() {\r\n    return this.experienceForm.get(\"doj\")\r\n  }\r\n\r\n  get expRole() {\r\n    return this.experienceForm.get(\"role\")\r\n  }\r\n  get expCity() {\r\n    return this.experienceForm.get(\"city\")\r\n  }\r\n  selectedItem: any;\r\n  editId: any;\r\n  dojDate: any\r\n  dorDate: any\r\n  dateObject: any\r\n  formattedDoj: any\r\n  formattedDor: any\r\n  dateObjDoj: any\r\n  dateObjDor: any\r\n  EmpObjects = {\r\n    employeeList: null, \r\n    employeeFirstLetter: null,\r\n    ActivityStatus: null,\r\n    TimeLogList: null,\r\n    empId: null,\r\n    pendingCounts: null   \r\n  }  \r\n\r\n  editRowExp(expitem: any) {\r\n    this.patchid = expitem?.id;\r\n    this.addingMode = false;\r\n    this.selectedItem = expitem;\r\n    this.editId = expitem.id;\r\n    this.dojDate = new Date(expitem.doj);\r\n    const dorIsInvalid = expitem.dor === 'undefined NaN NaN';\r\n    const dorValue = dorIsInvalid ? null : new Date(expitem.dor);\r\n    this.formattedDoj = this.datePipe.transform(this.dojDate, 'MM/dd/yyyy');\r\n    const formattedDor = dorIsInvalid ? null : this.datePipe.transform(dorValue, 'MM/dd/yyyy');\r\n    this.dateObjDoj = new Date(this.formattedDoj);\r\n    const dateObjDor = dorIsInvalid ? null : new Date(formattedDor);\r\n\r\n    this.experienceForm.patchValue({\r\n      company: expitem.company,\r\n      work_experience: expitem.work_experience,\r\n      doj: this.dateObjDoj,\r\n      dor: dateObjDor,\r\n      role: expitem.role,\r\n      city: { name: expitem.city },\r\n    });\r\n    this.reuploadfileArr  = expitem?.employee_document;\r\n    if(this.reuploadfileArr == undefined  || this.reuploadfileArr == null || this.reuploadfileArr == '') {\r\n    {\r\n      this.fileupdate = true;\r\n    }\r\n  }\r\n    else\r\n    {\r\n      this.fileupdate = false;\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  showSaveButton() {\r\n    this.addingMode = true;\r\n    this.experienceForm.reset();\r\n  }\r\n  streamInput: any\r\n  CityDropdownList: any\r\n  isDateValid(dateString: string): boolean {\r\n    return !isNaN(Date.parse(dateString));\r\n  }\r\n  getCityAutocomplete() {\r\n    this.streamInput = this.experienceForm.get('city').value;\r\n    this.hrmsService.getCitySearchResults(this.streamInput).subscribe((results) => {\r\n      this.CityDropdownList = results['data'];\r\n    });\r\n\r\n  }\r\n  formatDate(date: Date): string {\r\n    const monthNames = [\r\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = monthNames[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    return `${month} ${day} ${year}`;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.experienceForm = new FormGroup({\r\n      company: new FormControl(\"\"),\r\n      work_experience: new FormControl(),\r\n      doj: new FormControl(\"\"),\r\n      dor: new FormControl(),\r\n      role: new FormControl(\"\"),\r\n      city: new FormControl(\"\"),\r\n      disableField: new FormControl(false)\r\n    });\r\n    this.activateroute.queryParams.subscribe((params) => {\r\n      this.EmpInfoObjects.datafrom = params['datafrom'];\r\n      this.EmpId = params['id'];\r\n    })\r\nthis.getEmpExperienceInfo()\r\nthis.getEmployeeBasicDetails();\r\nthis.getEmployee();\r\nthis.initializeForm()\r\nthis.getEmpDocs()\r\n  }\r\n  EmpBasicDetails:any;\r\n  getEmployeeBasicDetails(){\r\n    this.spinner.show();\r\n   this.hrmsService.getEmpDetails(this.EmpId).subscribe(results => {\r\n    this.spinner.hide();\r\n     this.EmpBasicDetails = results;\r\n   }\r\n   )\r\n }\r\n  getEmpExperienceInfo(){\r\n    this.spinner.show();\r\n    this.hrmsService.getEmpExperienceInfoNew(this.EmpId)\r\n    .subscribe(results => {\r\n      if(results.code)\r\n      {\r\n        this.spinner.hide();\r\n        this.toastr.error(results.code);\r\n      }\r\n      else\r\n      {\r\n      this.spinner.hide();\r\n      this.EmpExperienceInfo = results['experience']\r\n   \r\n      this.EmpExperienceInfo.reverse();\r\n      this.EmpExperienceInfo.forEach((experience: any) => {\r\n        const dojDate = new Date(experience.doj);\r\n        experience.doj = this.formatDate(dojDate);\r\n        const dorDate = new Date(experience.dor);\r\n        experience.dor = this.formatDate(dorDate);\r\n      });\r\n    }\r\n    })\r\n  }\r\n  dojVal: any;\r\n  dorVal: any;\r\n  formattedDateDoj: any;\r\n  formattedDateDor: any;\r\n  jsonDataExp: any\r\n\r\n  onCheckboxChange(event: MatCheckboxChange) {\r\n    if (event.checked) {\r\n      this.experienceForm.get('dor').setValue(null); \r\n    }\r\n  }\r\n  onSave() {\r\n    if(this.experienceForm.value.company == '' || this.experienceForm.value.company == null || this.experienceForm.value.company == undefined)\r\n    {\r\n      this.toastr.error(\"Please Enter Company Name\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.doj == '' || this.experienceForm.value.doj == null || this.experienceForm.value.doj == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select Date of Joining\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.dor == '' || this.experienceForm.value.dor == null || this.experienceForm.value.dor == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select Date of Relieving\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.role == '' || this.experienceForm.value.role == null || this.experienceForm.value.role == undefined)\r\n    {\r\n      this.toastr.error(\"Please Enter Role\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.city == '' || this.experienceForm.value.city == null || this.experienceForm.value.city == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select City\");\r\n      return false;\r\n    }\r\n    if(!this.fileUploadForm.get('file').value){\r\n      this.toastr.error('Please Select File')\r\n      return false;\r\n    }\r\n    if (this.experienceForm.valid ||\r\n      (this.experienceForm.get('dor').value === '')) {\r\n      this.dojVal = this.experienceForm.get('doj').value\r\n      this.dorVal = this.experienceForm.get('dor').value\r\n      this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\r\n      this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd')\r\n      const formValue = this.experienceForm.value;\r\n      const formIntoJson = {\r\n        company: formValue.company || null,\r\n        work_experience: formValue.work_experience || null,\r\n        doj: this.formattedDateDoj || null,\r\n        dor: this.formattedDateDor || null,\r\n        role: formValue.role || null,\r\n        city: formValue.city.name || null,\r\n      };\r\n      this.jsonDataExp = JSON.stringify([formIntoJson]);\r\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, this.jsonDataExp).subscribe(\r\n        (response) => {\r\n          this.toastr.success('Successfully posted experience info');\r\n          this.getEmpExperienceInfo()\r\n          this.onSubmit()\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n          // setTimeout(() => {\r\n          //   location.reload();\r\n          // }, 3000);\r\n        },\r\n        (error) => {\r\n          this.toastr.error('Error while posting experience info');\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n        }\r\n      );\r\n    } else {\r\n      for (const control in this.experienceForm.controls) {\r\n        if (this.experienceForm.controls.hasOwnProperty(control)) {\r\n          this.experienceForm.get(control).markAsTouched();\r\n        }\r\n      }\r\n      this.toastr.warning('All required details needed to be filled');\r\n    }\r\n  }\r\n\r\n  editDojVal: any;\r\n  editDorVal: any;\r\n  editFormattedDateDoj: any;\r\n  editFormattedDateDor: any;\r\n\r\n  onUpdate() {\r\n    if(this.experienceForm.value.company == '' || this.experienceForm.value.company == null || this.experienceForm.value.company == undefined)\r\n    {\r\n      this.toastr.error(\"Please Enter Company Name\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.doj == '' || this.experienceForm.value.doj == null || this.experienceForm.value.doj == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select Date of Joining\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.dor == '' || this.experienceForm.value.dor == null || this.experienceForm.value.dor == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select Date of Relieving\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.role == '' || this.experienceForm.value.role == null || this.experienceForm.value.role == undefined)\r\n    {\r\n      this.toastr.error(\"Please Enter Role\");\r\n      return false;\r\n    }\r\n    if(this.experienceForm.value.city == '' || this.experienceForm.value.city == null || this.experienceForm.value.city == undefined)\r\n    {\r\n      this.toastr.error(\"Please Select City\");\r\n      return false;\r\n    }\r\n    // if(this.experienceForm.value.city.id == '' || this.experienceForm.value.city.id == null || this.experienceForm.value.city.id == undefined)\r\n    // {\r\n    //   this.toastr.error(\"Please Select City from DropDown\");\r\n    //   return false;\r\n    // }\r\n    if (this.experienceForm.valid) {\r\n      const formValue = this.experienceForm.value;\r\n      formValue.id = this.editId\r\n      formValue.city = formValue.city.name;\r\n      this.editDojVal = this.experienceForm.get('doj').value\r\n      this.editDorVal = this.experienceForm.get('dor').value\r\n      this.editFormattedDateDoj = this.datePipe.transform(this.editDojVal, 'yyyy-MM-dd');\r\n      this.editFormattedDateDor = this.datePipe.transform(this.editDorVal, 'yyyy-MM-dd')\r\n      formValue.doj = this.editFormattedDateDoj;\r\n      formValue.dor = this.editFormattedDateDor;\r\n      const jsonData = JSON.stringify([formValue]);\r\n      this.spinner.show();\r\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, jsonData).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success('Successfully updated experience info');\r\n          this.getEmpExperienceInfo()\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n          // setTimeout(() => {\r\n          //   location.reload();\r\n          // }, 3000);\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.toastr.error('Error while posting/updated experience info');\r\n          this.renderer.selectRootElement(this.closeButton.nativeElement).click();\r\n\r\n        });\r\n    } else {\r\n      this.spinner.hide();\r\n      this.toastr.warning('All details need to be filled');\r\n    }\r\n  }\r\n\r\n\r\n  deleteExperienceRecord(recordId: number) {\r\n    if (confirm('Are you sure you want to delete this education record?')) {\r\n      this.spinner.show();\r\n      this.hrmsService.deleteEmployeeExperienceRecord(recordId, this.EmpId).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success(\"Experience Record Deleted successfully\")\r\n          this.getEmpExperienceInfo()\r\n          this.fileupdate = true;\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.toastr.error(\"Delete failed\")\r\n        }\r\n      );\r\n    }\r\n  }\r\n  getEmployee(){\r\n\r\n    const getDataid = localStorage.getItem(\"sessionData\")\r\n    let idValue = JSON.parse(getDataid);\r\n    let id = idValue.employee_id;\r\n    this.EmpObjects.empId = idValue.employee_id;\r\n    this.hrmsService.getEmpDetails( id )\r\n    .subscribe(res=>{\r\n      this.EmpObjects.employeeList = res \r\n      if(res?.id){ \r\n        this.gettingProfilename(res?.full_name) \r\n      }\r\n    }, error=>{\r\n      \r\n    })\r\n  }\r\n  \r\n  gettingProfilename(data){\r\n    let name:any = data \r\n    let letter = name[0]\r\n    this.EmpObjects.employeeFirstLetter = letter \r\n  }\r\n  typeid(){\r\n    const data=this.EmployeeDocuments.data.find(document=>document.type.name==='Work experience')\r\n    return data ? data?.type?.id : null\r\n  }\r\n  onSubmit(): void {\r\n    console.log(this.fileUploadForm.value);\r\n    const typeIdFromForm = this.fileUploadForm.get('type').value;\r\n    // const typeIdFromMethod = this.getTypeId();\r\n\r\n    // if (typeIdFromForm !== typeIdFromMethod) {\r\n    //   this.fileUploadForm.get('type').setValue(typeIdFromMethod);\r\n    // }\r\n    if (this.fileUploadForm.get('file').value) {\r\n\r\n      const formDataArray: any[] = [];\r\n      this.typeValue = this.typeid()\r\n\r\n      const typeAndRemarksObject = {\r\n        type: this.typeid(),\r\n        remarks: ''\r\n      };\r\n\r\n      formDataArray.push(typeAndRemarksObject);\r\n\r\n      const formData = new FormData();\r\n      formData.append(`${this.typeValue}`, this.fileUploadForm.get('file').value);\r\n\r\n      console.log('Formatted Array:', formDataArray);\r\n\r\n      this.hrmsService.postDocumentDetails(this.EmpId, formDataArray, formData).subscribe(\r\n        (response) => {\r\n          console.log('File uploaded successfully', response);\r\n      \r\n          this.toastr.success(\"File uploaded Successfully\");\r\n          this.closebutton.nativeElement.click()\r\n          this.fileUploadForm.reset()\r\n    \r\n        },\r\n        (error) => {\r\n          console.error('Error uploading file', error);\r\n          this.toastr.error(\"Error uploading file\");\r\n \r\n\r\n        }\r\n\r\n      );\r\n\r\n    } else {\r\n      for (const control in this.fileUploadForm.controls) {\r\n        if (this.fileUploadForm.controls.hasOwnProperty(control)) {\r\n          this.fileUploadForm.get(control).markAsTouched();\r\n        }\r\n      }\r\n      console.log(\"not valid\");\r\n      this.toastr.warning('All details needed to be filled');\r\n    }\r\n  }\r\n  getEmpDocs() {\r\n    this.hrmsService.getEmpDocuments(this.EmpId)\r\n      .subscribe(results => {\r\n        this.EmployeeDocuments = results;\r\n\r\n        console.log(\"docs details\", this.EmployeeDocuments)\r\n      });\r\n\r\n  }\r\n  initializeForm(): void {\r\n    // const typeValue = this.getTypeId();\r\n\r\n    this.fileUploadForm = this.fb.group({\r\n      type: [null],\r\n      remarks: [null, Validators.required],\r\n      file: [null, Validators.required]\r\n    });\r\n    // this.fileUploadForm.patchValue({\r\n    //   type: 4\r\n    // });\r\n  }\r\n  get remarkInfo() {\r\n    return this.fileUploadForm.get(\"remarks\")\r\n  }\r\n  get docsFile() {\r\n    return this.fileUploadForm.get(\"file\")\r\n  }\r\n  onFileChange(event): void {\r\n    const allowedFileTypes = ['application/pdf', 'image/jpeg', 'image/png', 'image/jpg'];\r\n    const maxFileSize = 5 * 1024 * 1024;\r\n\r\n    const fileInput = event.target;\r\n    const selectedFiles = fileInput.files;\r\n\r\n\r\n    if (selectedFiles.length > 0) {\r\n      const file = selectedFiles[0];\r\n      if (!allowedFileTypes.includes(file.type)) {\r\n        this.toastr.error('Invalid file type. Please select a PDF, JPEG, PNG, or JPG file.');\r\n        fileInput.value = '';\r\n        return;\r\n      }\r\n      if (file.size > maxFileSize) {\r\n        this.toastr.error('File size exceeds the maximum limit (5 MB). Please select a smaller file.');\r\n        fileInput.value = '';\r\n        return;\r\n      }\r\n\r\n\r\n      console.log('File is valid:', file.name);\r\n    }\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.fileUploadForm.patchValue({\r\n      file\r\n    });\r\n  }\r\n  fileChange(event) {\r\n    // let imagesList = [];\r\n    this.images = [];\r\n    for (var i = 0; i < event.target.files.length; i++) {\r\n      this.images.push(event.target.files[i]);\r\n    }\r\n    // this.adddocformarray();\r\n  }\r\n\r\n  adddocformarray() {\r\n    //  const formValue = this.experienceForm.value;\r\n     this.dojVal = this.experienceForm.get('doj').value\r\n     this.dorVal = this.experienceForm.get('dor').value\r\n     this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\r\n     this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd')\r\n     const formValue = this.experienceForm.value;\r\n     let data = {\r\n       company: formValue.company || null,\r\n       work_experience: formValue.work_experience || null,\r\n       doj: this.formattedDateDoj || null,\r\n       dor: this.formattedDateDor || null,\r\n       role: formValue.role || null,\r\n       city: formValue.city.name || null,\r\n       type: 6,\r\n      attachment: \"\",\r\n      filekey: this.images\r\n     };\r\n\r\n    console.log(\"dataArray\", data)\r\n    this.docFunctionList.push(data)\r\n    console.log(\"array docs\", this.docFunctionList)\r\n\r\n    // this.issueForm.controls[\"description\"].reset('');\r\n    // this.issueForm.controls[\"priority_type\"].reset('');\r\n    // this.images = [];\r\n    // this.fileInput.nativeElement.value = \"\"\r\n\r\n\r\n  }\r\n\r\n  onSubmitss() {\r\n\r\n    this.adddocformarray();\r\n    // this.SpinnerService.show();\r\n    console.log(\"submit\", this.docFunctionList);\r\n\r\n    // if (this.docFunctionList.length === 0) {\r\n    //   this.notify.error('Please Fill All Details');\r\n    //   this.SpinnerService.hide();\r\n    //   return false;\r\n    // }\r\n\r\n    let count = 1;\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      this.docFunctionList[i].attachment = 'file' + count++;\r\n    }\r\n    console.log(\"ffff\", this.docFunctionList);\r\n    console.log(\"docgp\", this.docFunctionList);\r\n    let successfulSubmissions = 0;\r\n    const processSubmission = (index) => {\r\n      const dataset = this.docFunctionList[index];\r\n      const formData: FormData = new FormData();\r\n      const Finaldata = [dataset];\r\n      const datavalue = JSON.stringify(Finaldata);\r\n      formData.append('data', datavalue);\r\n\r\n      const string_value = this.docFunctionList[index].attachment;\r\n      const file_list = this.docFunctionList[index].filekey;\r\n\r\n      formData.append(string_value, file_list[0]);\r\n      // this.SpinnerService.show();\r\n      // this.taskmanagerservice.issueCreation(formData)\r\n      this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, formData)\r\n        .subscribe(res => {\r\n          console.log(\"issue click\", res)\r\n\r\n          if (res.message == 'Successfully Created') {\r\n            this.toastr.success(\"Created Successfully!...\");\r\n            this.docFunctionList = [];\r\n            this.getEmpExperienceInfo();\r\n            this.closeButton.nativeElement.click();\r\n            // this.OnSubmit.emit();\r\n            // this.SpinnerService.hide();\r\n            // this.issueForm.reset();\r\n\r\n            this\r\n          } else {\r\n            // this.notify.error(res.description)\r\n            // this.SpinnerService.hide();\r\n            // return false;\r\n          }\r\n        },\r\n          error => {\r\n            // this.errorHandler.handleError(error);\r\n            // this.SpinnerService.hide();\r\n          }\r\n\r\n        )\r\n\r\n      // this.SpinnerService.hide();\r\n\r\n    }\r\n    for (let i = 0; i < this.docFunctionList.length; i++) {\r\n      processSubmission(i);\r\n    }\r\n    // this.SpinnerService.hide();\r\n    // this.issueForm.reset();\r\n  }\r\n\r\n  viewfile(data)\r\n  {\r\n    let filedata =  data.employee_document\r\n    this.dataname = filedata.file_id;\r\n    this.filenames = filedata.file_name\r\n    // this.spinner.show();\r\n    let option = 'view'\r\n    let msg = this.filetype_check2(this.filenames);\r\n    this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname )\r\n      .subscribe(\r\n        results => {\r\n          const getToken = localStorage.getItem(\"sessionData\");\r\n          let tokenValue = JSON.parse(getToken);\r\n  \r\n          let token = tokenValue.token;\r\n          if (this.file_ext.includes(this.fileextension.toLowerCase())) {\r\n            // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\r\n            this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\r\n  \r\n          }\r\n          else {\r\n            let binaryData = [];\r\n            binaryData.push(results)\r\n            let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n            this.filesrc = downloadUrl;\r\n  \r\n          }\r\n  \r\n          if (msg == 1) {\r\n            this.pdfshow = false;\r\n            this.imgshow = true;\r\n  \r\n  \r\n          }\r\n          else {\r\n            this.pdfshow = true;\r\n            this.imgshow = false\r\n          }\r\n  \r\n        })\r\n    // this.spinner.hide();\r\n    // this.getEmpDocs();\r\n    this.filesrc = null;\r\n  \r\n  }\r\n  \r\n  filetype_check2(i) {\r\n    let file_name = i;\r\n    let stringValue = file_name.split('.')\r\n    this.fileextension = stringValue.pop();\r\n    this.file_ext = ['jpg', 'png', 'JPG', 'JPEG', 'jpeg', 'image']\r\n    if (this.file_ext.includes(this.fileextension)) {\r\n      var msg = 1;\r\n    }\r\n    else {\r\n      var msg = 0;\r\n    }\r\n    return msg\r\n  \r\n  \r\n  }\r\n\r\n  deleteExperience(recordId: number) {\r\n    if (confirm('Are you sure you want to delete this Experience record?')) {\r\n      this.spinner.show();\r\n      this.hrmsService.deleteExperienceInfo(recordId, this.EmpId).subscribe(\r\n        (response) => {\r\n          this.spinner.hide();\r\n          this.toastr.success(\"Experience Record Deleted successfully\")\r\n          // this.getEmpExperienceInfo()\r\n          this.getEmpExperienceInfo();\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.toastr.error(\"Delete failed\")\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  downloadfiles(data)\r\n{\r\n  // this.spinner.show();\r\n  let filedata =  data.employee_document\r\n  this.dataname = filedata.file_id;\r\n  this.filenames = filedata.file_name\r\n  let option = 'view'\r\n  let msg = this.filetype_check2(this.filenames);\r\n  this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname)\r\n    .subscribe(\r\n      results => {\r\n        let binaryData = [];\r\n        binaryData.push(results)\r\n        let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n        let link = document.createElement('a');\r\n        link.href = downloadUrl;\r\n        link.download = this.filenames;\r\n        link.click();\r\n      })\r\n  // this.spinner.hide();\r\n  // this.getEmpDocs();\r\n\r\n}\r\n\r\ndeletefile(data)\r\n{\r\n  \r\n\r\n  console.log('File ID:', data?.id);\r\n\r\n  this.hrmsService.getEmployeeDocumentDetails(this.EmpId, data?.id)\r\n    .subscribe(\r\n      results => {\r\n        this.EmployeeDocuments = results;\r\n        console.log(\"Docs details\", this.EmployeeDocuments);\r\n        this.toastr.success(\"File deleted successfully\");\r\n        this.getEmpDocs();\r\n        this.fileupdate = true;\r\n      },\r\n      error => {\r\n        console.error('Error deleting document:', error);\r\n        this.toastr.error(\"Error deleting file\", \"Error\");\r\n      }\r\n    );\r\n}\r\n\r\nviewfiles(data)\r\n{\r\n  let filedata =  data;\r\n  this.dataname = filedata.file_id;\r\n  this.filenames = filedata.file_name\r\n  this.spinner.show();\r\n  let option = 'view'\r\n  let msg = this.filetype_check2(this.filenames);\r\n  this.hrmsService.viewDocumentDetails(this.EmpId, this.dataname )\r\n    .subscribe(\r\n      results => {\r\n        const getToken = localStorage.getItem(\"sessionData\");\r\n        let tokenValue = JSON.parse(getToken);\r\n\r\n        let token = tokenValue.token;\r\n        if (this.file_ext.includes(this.fileextension.toLowerCase())) {\r\n          // this.filesrc =  this.hrmsService.viewDocumentDetails(this.EmpId, data);\r\n          this.filesrc = this.imageUrls + 'docserv/doc_download/' + this.dataname + '?entity_id=1&user_id=' + this.EmpId + \"&token=\" + token;\r\n\r\n        }\r\n        else {\r\n          let binaryData = [];\r\n          binaryData.push(results)\r\n          let downloadUrl = window.URL.createObjectURL(new Blob(binaryData));\r\n          this.filesrc = downloadUrl;\r\n\r\n        }\r\n\r\n        if (msg == 1) {\r\n          this.pdfshow = false;\r\n          this.imgshow = true;\r\n\r\n\r\n        }\r\n        else {\r\n          this.pdfshow = true;\r\n          this.imgshow = false\r\n        }\r\n\r\n      })\r\n  this.spinner.hide();\r\n  // this.getEmpDocs();\r\n  this.filesrc = null;\r\n}\r\n\r\nonUpdateVals()\r\n{\r\n  this.adddocformarrays();\r\n  console.log(\"submit\", this.docFunctionLists);\r\n  let count = 1;\r\n  for (let i = 0; i < this.docFunctionLists.length; i++) {\r\n    this.docFunctionLists[i].attachment = this.docFunctionLists[i].filekey.length > 0 ? 'file' + count++ : \"\"; // Check if filekey exists to set attachment\r\n  }\r\n  console.log(\"ffff\", this.docFunctionLists);\r\n  console.log(\"docgp\", this.docFunctionLists);\r\n  let successfulSubmissions = 0;\r\n  const processSubmission = (index) => {\r\n    const dataset = this.docFunctionLists[index];\r\n    const formData: FormData = new FormData();\r\n    const Finaldata = [dataset];\r\n    const datavalue = JSON.stringify(Finaldata);\r\n    formData.append('data', datavalue);\r\n\r\n    // Append file only if it exists\r\n    if (dataset.attachment !== \"\") {\r\n      formData.append(dataset.attachment, dataset.filekey[0]);\r\n    }\r\n\r\n    this.hrmsService.postEmployeeExperienceInfoNew(this.EmpId, formData) // Assuming this is an update operation\r\n      .subscribe(res => {\r\n        console.log(\"issue click\", res)\r\n        if (res.message == 'Successfully Updated') {\r\n          this.toastr.success(\"Updated Successfully!...\");\r\n          this.docFunctionLists = [];\r\n          this.getEmpExperienceInfo();\r\n          this.experienceForm.reset();\r\n          this.closeButton.nativeElement.click();\r\n        } else {\r\n          // Handle error condition if required\r\n        }\r\n      },\r\n      error => {\r\n        // Handle error condition if required\r\n      });\r\n  };\r\n\r\n  for (let i = 0; i < this.docFunctionLists.length; i++) {\r\n    processSubmission(i);\r\n  }\r\n}\r\n\r\nadddocformarrays() {\r\n  //  const formValue = this.experienceForm.value;\r\n   this.dojVal = this.experienceForm.get('doj').value\r\n   this.dorVal = this.experienceForm.get('dor').value\r\n   this.formattedDateDoj = this.datePipe.transform(this.dojVal, 'yyyy-MM-dd');\r\n   this.formattedDateDor = this.datePipe.transform(this.dorVal, 'yyyy-MM-dd')\r\n   const formValue = this.experienceForm.value;\r\n   let data = {\r\n     company: formValue.company || null,\r\n     work_experience: formValue.work_experience || null,\r\n     doj: this.formattedDateDoj || null,\r\n     dor: this.formattedDateDor || null,\r\n     role: formValue.role || null,\r\n     city: formValue.city.name || null,\r\n     type: 6,\r\n    attachment: \"\",\r\n    filekey: this.images,\r\n    id: this.patchid \r\n   };\r\n\r\n  console.log(\"dataArray\", data)\r\n  this.docFunctionLists.push(data)\r\n  console.log(\"array docs\", this.docFunctionList)\r\n\r\n  // this.issueForm.controls[\"description\"].reset('');\r\n  // this.issueForm.controls[\"priority_type\"].reset('');\r\n  // this.images = [];\r\n  // this.fileInput.nativeElement.value = \"\"\r\n\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n","<div style=\"  width: 100%; \">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-1 col-md-1 col-1 col-lg-1 col-xl-1\">\r\n      <div class=\"cardspaceListProfile color display\">\r\n        {{EmpObjects.employeeFirstLetter == null ? 'VS': EmpObjects.employeeFirstLetter | uppercase}}\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-3 col-md-3 col-3 col-lg-3 col-xl-3\">\r\n      <p style=\"color: #046ba8;font-size:x-large;font-weight: 700;margin-top: 7%;\">Experience</p>\r\n    </div>\r\n    <div class=\"col-sm-4 col-md-4 col-4 col-lg-4 col-xl-4\">\r\n    </div>\r\n    <!-- <div class=\"col-sm-2 col-md-2 col-2 col-lg-2 col-xl-2\" style=\"margin-top: 1.2%;\">\r\n\r\n    </div> -->\r\n    <div class=\"col-sm-2 col-md-2 col-2 col-lg-2 col-xl-2\" style=\"margin-top: 1.2%;padding-left:6%;margin-left:12%\">\r\n      <div class=\"popup-btn\">\r\n        <button class=\"btn btn-primary\" style=\"background-color: #044063;\" type=\"button\" (click)=\"showSaveButton()\"\r\n          data-bs-toggle=\"modal\" data-bs-target=\"#expModal\">\r\n          <span>+ Add</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"col-sm-2 col-md-2 col-2 col-lg-2 col-xl-2\" style=\"margin-top: 1.2%;\">\r\n      <div class=\"popup-btn\">\r\n        <button class=\"btn btn-primary\" style=\"background-color: #044063;\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#docsModal\">\r\n          <span>Upload</span>\r\n        </button>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n  <hr>\r\n  <div *ngFor=\"let exp of EmpExperienceInfo; let i = index\" class=\"newCard\">\r\n\r\n\r\n    <div class=\"d-flex\">\r\n      <div class=\"p-2 flex-grow-1\">\r\n        <p><span class=\"color\" style=\"font-weight: 600; font-size: medium;\">{{ exp.role }}</span> | {{ exp.company }}|\r\n          <span class=\"cus-badgeGreen\">{{exp.city}}</span>\r\n        </p>\r\n        <p>\r\n          <span class=\" cus-badgeBlue\" *ngIf=\"exp.dor !== 'undefined NaN NaN'\">\r\n            {{ exp.doj }} to {{ exp.dor }}\r\n          </span>\r\n          <span class=\"cus-badgeBlue\" *ngIf=\"exp.dor == 'undefined NaN NaN'\">\r\n            Working Since {{ exp.doj }}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class=\"p-2\" style=\"width: 100px;\">\r\n        <a (click)=\"editRowExp(exp)\" data-bs-toggle=\"modal\" data-bs-target=\"#expModal\">\r\n          <i class=\"fa solid fa-pencil\" style=\"margin-left: -44%;\"></i>\r\n        </a>\r\n        <i style=\"margin-left: 5px;\" class=\"fa solid fa-trash-can\" (click)=\"deleteExperience(exp?.id)\"></i>\r\n        <span *ngIf=\"exp?.employee_document !== null\" class=\"col-md-1\" style=\"margin-left: -10px;margin-top: 2px;\">\r\n          <i class=\"fa solid fa-download\" (click)=\"downloadfiles(exp)\"></i>\r\n        </span>\r\n\r\n\r\n        <!-- <i *ngIf=\"exp?.employee_document !== null\" style=\"margin-left: 20%;\" class=\"fa solid fa-eye\" data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#viewDownload\" (click)=\"viewfile(exp)\"></i> -->\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n<div class=\"modal fade bottom-modal\" id=\"expModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b>Experience</b>\r\n\r\n        </h5>\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closeButton\r\n          style=\"color: white;opacity: 1;\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"experienceForm\" class=\"formAbove\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col smallfield\">\r\n                <mat-form-field class=\"spacingForm shortinput\">\r\n                  <mat-label>Company</mat-label>\r\n                  <input matInput placeholder=\"Company\" name=\"companyName\" formControlName=\"company\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col smallfieldDegree\">\r\n                <mat-form-field class=\"spacingForm shortinput\">\r\n                  <mat-label>Joining date</mat-label>\r\n                  <input formControlName=\"doj\" name=\"joiningDate\" matInput [matDatepicker]=\"picker\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"col smallfield\">\r\n                <mat-form-field class=\"spacingForm shortinput\">\r\n                  <mat-label>Relieving date</mat-label>\r\n                  <input formControlName=\"dor\" matInput [matDatepicker]=\"pickern\"\r\n                    [disabled]=\"experienceForm.get('disableField').value\">\r\n                  <mat-datepicker-toggle matSuffix [for]=\"pickern\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #pickern></mat-datepicker>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"row rolecityRow\">\r\n              <div class=\"col smallfield\">\r\n                <mat-form-field class=\"dateFormat shortinput\">\r\n                  <mat-label>Role</mat-label>\r\n                  <input matInput name=\"expRole\" placeholder=\"Role\" formControlName=\"role\">\r\n                </mat-form-field>\r\n                <br>\r\n              </div>\r\n              <div class=\"col smallfield\">\r\n                <mat-form-field class=\"form-field shortinputPercentage\">\r\n                  <mat-label>City</mat-label>\r\n                  <input name=\"cityName\" name=\"expCity\" #titleInputCity placeholder=\"Select City\" matInput\r\n                    formControlName=\"city\" [matAutocomplete]=\"empcity\" (input)=\"getCityAutocomplete()\">\r\n                  <mat-icon matSuffix class=\"maticonsize\">unfold_more</mat-icon>\r\n                  <mat-autocomplete #empcity=\"matAutocomplete\" [displayWith]=\"displayCity\">\r\n                    <mat-option *ngFor=\"let city of CityDropdownList\" [value]=\"city\" title=\"{{city.name}}\">\r\n                      {{ city.name }}\r\n                    </mat-option>\r\n                  </mat-autocomplete>\r\n                </mat-form-field>\r\n                <br>\r\n                <br>\r\n              </div>\r\n              <div class=\"col smallfield\">\r\n                <!-- <form [formGroup]=\"fileUploadForm\" class=\"form-group\">\r\n                  <input type=\"file\" id=\"file\" name=\"docsFile\" (change)=\"onFileChange($event)\" class=\"form-control\"\r\n                  accept=\".pdf, .jpeg, .jpg, .png\" id=\"inputGroupFile01\" formControlName=\"file\" />\r\n                </form> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"addingMode || fileupdate\">\r\n              <div class=\"col-sm-7\">\r\n                <label style=\"margin-right: 1em;\">\r\n                  <input type=\"file\" class=\"borderremove\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                  .dotx,.dotm,.docb,\r\n                  .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" multiple=\"true\" name=\"images\"\r\n                    (change)=\"fileChange($event)\">\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"!fileupdate\">\r\n              <div class=\"col-sm-9\" style=\"margin-left: 2%;\">\r\n                <div class=\"cus-attachCard\" *ngIf=\"reuploadfileArr?.file_name !== null\" style=\"margin-left: -2%;\">\r\n                  <!-- H -->\r\n                  <span>{{ reuploadfileArr?.file_name }}</span>\r\n                  <button mat-icon-button type=\"button\" (click)=\"viewfiles(reuploadfileArr)\" data-bs-target=\"#viewDownload\"\r\n                    data-bs-toggle=\"modal\" style=\"    margin-left: 37%;\">\r\n                    <mat-icon aria-label=\"View\" style=\"font-size: x-large;color: blue;\r\n                      margin-top: -19px;\">visibility</mat-icon>\r\n\r\n                  </button>\r\n                  <button mat-icon-button type=\"button\" (click)=\"deletefile(reuploadfileArr)\">\r\n\r\n                    <mat-icon aria-label=\"Delete\" style=\"font-size: x-large;color: blue;\r\n                       margin-top: -19px;\">delete</mat-icon>\r\n\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <!-- <div *ngIf=\"fileupdate\" class=\"col-sm-5\" style=\"    margin-top: 3%;\">\r\n                  <label style=\"margin-right: 1em;\">\r\n                    <input type=\"file\" class=\"borderremove\" style=\"margin-left: 5%;\" #fileInput accept=\".txt,.doc,.pdf,.ppt,.pot,.pps,.pptx,.odt,.odg,.odp,.ods,.docx,.docm,\r\n                    .dotx,.dotm,.docb,\r\n                    .xlsx,.xls,.xlt,.xlm,.xlsm,.xltx,.xltm,.jpg,.jpeg,.tiff,.tif,.png\" multiple=\"true\" name=\"images\"\r\n                      (change)=\"fileChanges($event)\">\r\n                  </label>\r\n                </div> -->\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-7\"></div>\r\n              <div class=\"col-sm-2\"></div>\r\n              <div class=\"col-sm-2\" style=\"    margin-top: -1%;\r\n              margin-left: 5%;\">\r\n                <button class=\"btn btn-primary\" *ngIf=\"addingMode\" (click)=\"onSubmitss()\"\r\n                  style=\"background-color: #044063;margin-top: -3%;\">Submit</button>\r\n                <button class=\"btn btn-dark\" *ngIf=\"!addingMode\" (click)=\"onUpdateVals()\"\r\n                  style=\"background-color: #044063;margin-top: -3%;\">Update</button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <!-- <div class=\"container\">\r\n            <div class=\"row\">\r\n              \r\n              <div class=\"col\">\r\n               \r\n                    <button class=\"btn btn-primary\"  *ngIf=\"addingMode\"\r\n                      (click)=\"onSubmitss()\" style=\"background-color: #044063;margin-top: -3%;\">Save</button>\r\n                    <button class=\"btn btn-dark\" *ngIf=\"!addingMode\"\r\n                      (click)=\"onUpdate()\" style=\"background-color: #044063;margin-top: -3%;\">Update</button>\r\n                \r\n              </div>\r\n              <div class=\"col\">\r\n              </div>\r\n            </div>\r\n          </div> -->\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"modal bottom-modal\" id=\"docsModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"bankModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\"><b> Upload Work\r\n            Experience </b>\r\n\r\n\r\n\r\n        </h5>\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" style=\"color: white;opacity: 1;\"\r\n          #closebutton>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"fileUploadForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n\r\n              <input type=\"file\" id=\"file\" name=\"docsFile\" (change)=\"onFileChange($event)\" class=\"form-control\"\r\n                accept=\".pdf, .jpeg, .jpg, .png\" id=\"inputGroupFile01\" formControlName=\"file\" />\r\n\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n\r\n              <mat-form-field class=\"remarks\">\r\n                <mat-label>Remarks</mat-label>\r\n                <input type=\"text\" matInput placeholder=\"Remarks\" name=\"remarkInfo\" formControlName=\"remarks\" />\r\n              </mat-form-field>\r\n              <br>\r\n              <span class=\"error-message\" *ngIf=\"(!remarkInfo?.valid && (remarkInfo?.touched || remarkInfo?.dirty))\">\r\n                *Remarks required\r\n              </span>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-1\">\r\n\r\n              <button class=\"inputFile\" type=\"submit\"><mat-icon>cloud_upload</mat-icon></button>\r\n\r\n            </div>\r\n          </div>\r\n          <br>\r\n          <!-- <span class=\"error-message\" *ngIf=\"(!docsFile?.valid && (docsFile?.touched || docsFile?.dirty))\">\r\n        *File required\r\n                 </span> -->\r\n\r\n        </form>\r\n\r\n      </div>\r\n      <!-- <div class=\"modal-footer\">\r\n  </div> -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal\" id=\"viewDownload\" role=\"dialog\" aria-labelledby=\"bankModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\" style=\"width: 800px;\">\r\n\r\n      <div class=\"modal-header\" id=\"educationHeader\" style=\"width: 800px; \">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"text-align: center; font-size: large;\">\r\n          View File\r\n        </h5>\r\n        <!-- <mat-icon  style=\"margin-left: 7%;\r\n        font-size: 25px; cursor: pointer;\" (click)=\"onDownload()\">cloud_download</mat-icon> -->\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" #closebutton\r\n          style=\"color: white; opacity: 1;\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-12 col-sm-12\" fxLayoutAlign=\"space-between\">\r\n            <pdf-viewer *ngIf=\"pdfshow\" [src]=\"filesrc\" [original-size]=\"false\" [render-text]='false'\r\n              [show-borders]=\"true\" [fit-to-page]=\"true\" [show-all]=\"true\" style=\"display: block; height: 500px;\"\r\n              [fit-to-page]=\"true\">\r\n            </pdf-viewer>\r\n            <br>\r\n            <img *ngIf=\"imgshow\" src=\"{{filesrc}}\" class=\"img-responsive\"\r\n              style=\"display: block;border-width: 2px;border-style: solid;width: 100%;\" />\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"modal-footer\">\r\n  </div> -->\r\n    </div>\r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}