{"ast":null,"code":"import { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../payingemp-share.service\";\nimport * as i4 from \"../payingemp.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"ngx-toastr\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/autocomplete\";\nimport * as i14 from \"@angular/material/checkbox\";\nimport * as i15 from \"@angular/material/radio\";\nimport * as i16 from \"@angular/material/datepicker\";\nfunction EmppayrollthbComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 90);\n    i0.ɵɵlistener(\"focusout\", function EmppayrollthbComponent_mat_option_28_Template_mat_option_focusout_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const option_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.LevelClick(option_r13));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r13.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r13.name, \" \");\n  }\n}\nfunction EmppayrollthbComponent_mat_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 91);\n    i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_mat_option_35_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const option_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.TemplateClick(option_r16));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r16.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r16.name, \" \");\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"input\", 98);\n    i0.ɵɵlistener(\"input\", function EmppayrollthbComponent_div_114_div_6_Template_input_input_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23._letcalculate(ctx_r23.payrollgenform.value.gross_pay));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 99)(3, \"span\", 100);\n    i0.ɵɵtext(4, \"%\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_3_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 110);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r37 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r37.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r37.name, \" \");\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_3_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 111)(3, \"mat-datepicker-toggle\", 112)(4, \"mat-datepicker\", null, 113);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 35);\n    i0.ɵɵelement(7, \"input\", 114)(8, \"mat-datepicker-toggle\", 112)(9, \"mat-datepicker\", null, 115);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r38 = i0.ɵɵreference(5);\n    const _r39 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matDatepicker\", _r38);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r38);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r39);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 107)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Bonus Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 108);\n    i0.ɵɵlistener(\"selectionChange\", function EmppayrollthbComponent_div_114_div_13_div_2_div_3_Template_mat_select_selectionChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const i_r20 = i0.ɵɵnextContext(3).index;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onBonusTypeChange($event, i_r20));\n    });\n    i0.ɵɵtemplate(6, EmppayrollthbComponent_div_114_div_13_div_2_div_3_mat_option_6_Template, 2, 2, \"mat-option\", 109);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(7, EmppayrollthbComponent_div_114_div_13_div_2_div_3_ng_container_7_Template, 11, 4, \"ng-container\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r28.deduction_type_data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r28.selectedBonusType === 5);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35)(2, \"input\", 116);\n    i0.ɵɵlistener(\"focusout\", function EmppayrollthbComponent_div_114_div_13_div_2_div_4_Template_input_focusout_2_listener() {\n      i0.ɵɵrestoreView(_r45);\n      const i_r20 = i0.ɵɵnextContext(3).index;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.calculateAmountYearly(i_r20));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 117);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readonly\", true);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 110);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r51 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r51.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r51.name, \" \");\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 111)(3, \"mat-datepicker-toggle\", 112)(4, \"mat-datepicker\", null, 113);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 35);\n    i0.ɵɵelement(7, \"input\", 114)(8, \"mat-datepicker-toggle\", 112)(9, \"mat-datepicker\", null, 115);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r52 = i0.ɵɵreference(5);\n    const _r53 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matDatepicker\", _r52);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r52);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r53);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r53);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r56 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementContainerStart(1);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 107)(3, \"mat-label\");\n    i0.ɵɵtext(4, \"Bonus Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 108);\n    i0.ɵɵlistener(\"selectionChange\", function EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_Template_mat_select_selectionChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r56);\n      const i_r20 = i0.ɵɵnextContext(4).index;\n      const ctx_r54 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r54.onBonusTypeChanges($event, i_r20));\n    });\n    i0.ɵɵtemplate(6, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_mat_option_6_Template, 2, 2, \"mat-option\", 109);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(7, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_ng_container_7_Template, 11, 4, \"ng-container\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r46.deduction_type_data);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r46.selectedBonusTypes === 5);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35)(2, \"input\", 116);\n    i0.ɵɵlistener(\"focusout\", function EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_2_Template_input_focusout_2_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const i_r20 = i0.ɵɵnextContext(4).index;\n      const ctx_r57 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r57.calculateAmountYearlys(i_r20));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 117);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readonly\", true);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_Template, 8, 2, \"div\", 106);\n    i0.ɵɵtemplate(2, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_2_Template, 3, 0, \"div\", 106);\n    i0.ɵɵtemplate(3, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_3_Template, 3, 1, \"div\", 106);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r20 = i0.ɵɵnextContext(3).index;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) === \"deductions\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) === \"deductions\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r31.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) === \"deductions\");\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r62 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"div\", 23)(2, \"input\", 118);\n    i0.ɵɵlistener(\"input\", function EmppayrollthbComponent_div_114_div_13_div_2_div_7_Template_input_input_2_listener() {\n      i0.ɵɵrestoreView(_r62);\n      const ctx_r61 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r61._letcalculate(ctx_r61.payrollgenform.value.gross_pay));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 99)(4, \"span\", 100);\n    i0.ɵɵtext(5, \"%\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 95);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readonly\", true);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 35);\n    i0.ɵɵelement(2, \"input\", 96);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"readonly\", true);\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 105)(1, \"div\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, EmppayrollthbComponent_div_114_div_13_div_2_div_3_Template, 8, 2, \"div\", 106);\n    i0.ɵɵtemplate(4, EmppayrollthbComponent_div_114_div_13_div_2_div_4_Template, 3, 0, \"div\", 106);\n    i0.ɵɵtemplate(5, EmppayrollthbComponent_div_114_div_13_div_2_div_5_Template, 3, 1, \"div\", 106);\n    i0.ɵɵtemplate(6, EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_Template, 4, 3, \"ng-container\", 44);\n    i0.ɵɵtemplate(7, EmppayrollthbComponent_div_114_div_13_div_2_div_7_Template, 6, 0, \"div\", 106);\n    i0.ɵɵtemplate(8, EmppayrollthbComponent_div_114_div_13_div_2_div_8_Template, 3, 1, \"div\", 106);\n    i0.ɵɵtemplate(9, EmppayrollthbComponent_div_114_div_13_div_2_div_9_Template, 3, 1, \"div\", 106);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r27 = ctx.index;\n    const i_r20 = i0.ɵɵnextContext(2).index;\n    const ctx_r25 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", j_r27);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_data[j_r27].paycomponent_name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type === \"Monthly Bonus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type === \"Monthly Bonus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type === \"Monthly Bonus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.showDedcutEntry);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type !== \"Monthly Bonus\" && (ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) !== \"deductions\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type !== \"Monthly Bonus\" && (ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) !== \"deductions\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type !== \"Monthly Bonus\" && (ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r25.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) !== \"deductions\");\n  }\n}\nfunction EmppayrollthbComponent_div_114_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 101)(1, \"div\");\n    i0.ɵɵtemplate(2, EmppayrollthbComponent_div_114_div_13_div_2_Template, 10, 9, \"div\", 102);\n    i0.ɵɵelementStart(3, \"div\", 103);\n    i0.ɵɵelement(4, \"div\", 21);\n    i0.ɵɵelementStart(5, \"div\", 104);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"div\", 21)(8, \"div\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r64 = i0.ɵɵnextContext();\n    const list_r19 = ctx_r64.$implicit;\n    const i_r20 = ctx_r64.index;\n    const ctx_r22 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", list_r19.get(\"paycomponent_data\")[\"controls\"]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r22.paycomponentvalue[i_r20]);\n  }\n}\nfunction EmppayrollthbComponent_div_114_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r66 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 92)(1, \"div\", 37)(2, \"div\", 21)(3, \"b\", 93);\n    i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_div_114_Template_b_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r66);\n      const i_r20 = restoredCtx.index;\n      const ctx_r65 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r65.showpaycom(ctx_r65.payrollgenform.get(\"segment_data\").value, i_r20));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 21);\n    i0.ɵɵtemplate(6, EmppayrollthbComponent_div_114_div_6_Template, 5, 0, \"div\", 94);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"mat-form-field\", 35);\n    i0.ɵɵelement(9, \"input\", 95);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 21)(11, \"mat-form-field\", 35);\n    i0.ɵɵelement(12, \"input\", 96);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(13, EmppayrollthbComponent_div_114_div_13_Template, 9, 2, \"div\", 97);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r20 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r20);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.payrollgenform.get(\"segment_data\").value[i_r20].segment_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type !== \"Monthly Bonus\" && (ctx_r3.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type == null ? null : ctx_r3.payrollgenform.get(\"segment_data\").value[i_r20].paycomponent_type.toLowerCase()) !== \"deductions\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"readonly\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.payrollgenform.get(\"segment_data\").value[i_r20].is_paycomponent);\n  }\n}\nfunction EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 110);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r73 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r73.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r73.name, \" \");\n  }\n}\nfunction EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵelementContainerStart(4);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 107)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Bonus Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-select\", 108);\n    i0.ɵɵlistener(\"selectionChange\", function EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template_mat_select_selectionChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const z_r70 = i0.ɵɵnextContext().index;\n      const ctx_r74 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r74.onBonusTypeChangeD($event, z_r70));\n    });\n    i0.ɵɵtemplate(9, EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_mat_option_9_Template, 2, 2, \"mat-option\", 109);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 21)(11, \"mat-form-field\", 35)(12, \"input\", 116);\n    i0.ɵɵlistener(\"focusout\", function EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template_input_focusout_12_listener() {\n      i0.ɵɵrestoreView(_r76);\n      const ctx_r77 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r77.calculateAmountYearVal());\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"mat-form-field\", 35);\n    i0.ɵɵelement(15, \"input\", 124);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const z_r70 = i0.ɵɵnextContext().index;\n    const ctx_r71 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r71.payrollgenform.get(\"deductions\").value[z_r70] == null ? null : ctx_r71.payrollgenform.get(\"deductions\").value[z_r70].paycomponent_name);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r71.deduction_type_data);\n  }\n}\nfunction EmppayrollthbComponent_ng_container_115_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 123);\n    i0.ɵɵtemplate(1, EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template, 16, 2, \"ng-container\", 44);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const z_r70 = ctx.index;\n    const ctx_r68 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"formGroupName\", z_r70);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r68.payrollgenform.get(\"deductions\").value[z_r70] == null ? null : ctx_r68.payrollgenform.get(\"deductions\").value[z_r70].paycomponent_name) !== \"\");\n  }\n}\nfunction EmppayrollthbComponent_ng_container_115_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 120)(1, \"div\", 121);\n    i0.ɵɵtemplate(2, EmppayrollthbComponent_ng_container_115_div_4_div_2_Template, 2, 2, \"div\", 122);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r67 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r67.payrollgenform.get(\"deductions\")[\"controls\"]);\n  }\n}\nfunction EmppayrollthbComponent_ng_container_115_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r80 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 48)(2, \"div\", 46);\n    i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_ng_container_115_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r80);\n      const ctx_r79 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r79.showhideecs(ctx_r79.payrollgenform.get(\"companycontribution\").value));\n    });\n    i0.ɵɵtext(3, \" Deductions\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, EmppayrollthbComponent_ng_container_115_div_4_Template, 3, 1, \"div\", 119);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.is_pfs);\n  }\n}\nfunction EmppayrollthbComponent_div_119_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 123)(1, \"div\", 21)(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"div\", 129)(6, \"div\", 130);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 131);\n    i0.ɵɵtext(9, \"%\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 21)(11, \"mat-form-field\", 35);\n    i0.ɵɵelement(12, \"input\", 132);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 21)(14, \"mat-form-field\", 35);\n    i0.ɵɵelement(15, \"input\", 133);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r83 = ctx.index;\n    const ctx_r81 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", c_r83);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r81.payrollgenform.get(\"companycontribution\").value[c_r83] == null ? null : ctx_r81.payrollgenform.get(\"companycontribution\").value[c_r83].paycomponent_name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r81.payrollgenform.get(\"companycontribution\").value[c_r83] == null ? null : ctx_r81.payrollgenform.get(\"companycontribution\").value[c_r83].paycomponent_percentage, \"\");\n  }\n}\nfunction EmppayrollthbComponent_div_119_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 125)(1, \"div\", 121);\n    i0.ɵɵtemplate(2, EmppayrollthbComponent_div_119_div_2_Template, 16, 3, \"div\", 126);\n    i0.ɵɵelementStart(3, \"div\", 103);\n    i0.ɵɵelement(4, \"div\", 21)(5, \"div\", 21);\n    i0.ɵɵelementStart(6, \"div\", 127);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 128);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.payrollgenform.get(\"companycontribution\")[\"controls\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r5.totalCompany);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.totalCompanyYearly);\n  }\n}\nfunction EmppayrollthbComponent_div_123_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 123)(1, \"div\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 21)(4, \"div\", 129)(5, \"div\", 130);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 131);\n    i0.ɵɵtext(8, \"%\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 21)(10, \"mat-form-field\", 35);\n    i0.ɵɵelement(11, \"input\", 135);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 21)(13, \"mat-form-field\", 35);\n    i0.ɵɵelement(14, \"input\", 124);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r86 = ctx.index;\n    const ctx_r84 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroupName\", c_r86);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r84.payrollgenform.get(\"employeecontribution\").value[c_r86] == null ? null : ctx_r84.payrollgenform.get(\"employeecontribution\").value[c_r86].paycomponent_name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r84.payrollgenform.get(\"employeecontribution\").value[c_r86] == null ? null : ctx_r84.payrollgenform.get(\"employeecontribution\").value[c_r86].paycomponent_percentage, \" \");\n  }\n}\nfunction EmppayrollthbComponent_div_123_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 134)(1, \"div\", 121);\n    i0.ɵɵtemplate(2, EmppayrollthbComponent_div_123_div_2_Template, 15, 3, \"div\", 122);\n    i0.ɵɵelementStart(3, \"div\", 103);\n    i0.ɵɵelement(4, \"div\", 21)(5, \"div\", 21);\n    i0.ɵɵelementStart(6, \"div\", 127);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 128);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.payrollgenform.get(\"employeecontribution\")[\"controls\"]);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r6.totalEmployee);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r6.totalEmployeeYearly);\n  }\n}\nfunction EmppayrollthbComponent_div_124_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r90 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 76)(2, \"p\", 136);\n    i0.ɵɵtext(3, \"Payout Preferences\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 76)(5, \"div\", 137)(6, \"p\", 138);\n    i0.ɵɵtext(7, \"Revised Salary Effective From \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 139)(9, \"form\", 19)(10, \"mat-form-field\", 140);\n    i0.ɵɵelement(11, \"input\", 141)(12, \"mat-datepicker-toggle\", 112)(13, \"mat-datepicker\", null, 113);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"div\", 142)(16, \"div\", 137)(17, \"p\", 143);\n    i0.ɵɵtext(18, \"Payout Month : \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 137)(20, \"form\", 19)(21, \"mat-form-field\", 144)(22, \"mat-label\");\n    i0.ɵɵtext(23, \" Month \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 145)(25, \"mat-datepicker-toggle\", 112);\n    i0.ɵɵelementStart(26, \"mat-datepicker\", 146, 147);\n    i0.ɵɵlistener(\"yearSelected\", function EmppayrollthbComponent_div_124_Template_mat_datepicker_yearSelected_26_listener($event) {\n      i0.ɵɵrestoreView(_r90);\n      const ctx_r89 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r89.chosenYearHandler($event));\n    })(\"monthSelected\", function EmppayrollthbComponent_div_124_Template_mat_datepicker_monthSelected_26_listener($event) {\n      i0.ɵɵrestoreView(_r90);\n      const _r88 = i0.ɵɵreference(27);\n      const ctx_r91 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r91.chosenMonthHandler($event, _r88));\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const _r87 = i0.ɵɵreference(14);\n    const _r88 = i0.ɵɵreference(27);\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"formGroup\", ctx_r7.revisePay);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matDatepicker\", _r87);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r87);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formGroup\", ctx_r7.revisePay);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matDatepicker\", _r88)(\"formControl\", ctx_r7.monyear);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r88);\n  }\n}\nfunction EmppayrollthbComponent_ng_container_177_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 70);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 70);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 70);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mark_r95 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(mark_r95.value.paycomponent_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, mark_r95.value.amount, \"INR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 6, mark_r95.value.amount_yearly, \"INR\"));\n  }\n}\nfunction EmppayrollthbComponent_ng_container_177_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\", 148)(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\", 148);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 148);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, EmppayrollthbComponent_ng_container_177_tr_10_Template, 9, 9, \"tr\", 67);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const list_r92 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(list_r92.value.segment_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(6, 4, list_r92.value.amount, \"INR\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 7, list_r92.value.amount_yearly, \"INR\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", list_r92.get(\"paycomponent_data\")[\"controls\"]);\n  }\n}\nfunction EmppayrollthbComponent_tr_181_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 70);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 70);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 70);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r97 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r97.value.paycomponent_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, d_r97.value.amount, \"INR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 6, d_r97.value.amount_yearly, \"INR\"));\n  }\n}\nfunction EmppayrollthbComponent_tr_193_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 70);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 70);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\", 70);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const d_r99 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(d_r99.value.paycomponent_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 3, d_r99.value.amount, \"INR\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 6, d_r99.value.amount_yearly, \"INR\"));\n  }\n}\nfunction EmppayrollthbComponent_span_257_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵtext(2, \" % \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction EmppayrollthbComponent_span_258_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\");\n    i0.ɵɵtext(2, \" \\u20B9 \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class EmppayrollthbComponent {\n  http;\n  fb;\n  payrollShareService;\n  apiservice;\n  router;\n  toast;\n  datepipe;\n  myControl = new FormControl();\n  seg_id = false;\n  payrollgenform;\n  emp_paysrtuctureform;\n  gross_pay = 0;\n  emp_esi;\n  emppf;\n  empesi;\n  is_company = false;\n  pf_cal_prec;\n  pfsegment_prec;\n  esisement_prec;\n  esi_cal_prec;\n  is_paycomponent = false;\n  paycomponent_data = [];\n  employee_data;\n  gradedata;\n  finaldata;\n  list = [];\n  emp_id;\n  is_pf;\n  ctc_amout = 0;\n  pfcalamount;\n  esicalamount;\n  no_esi = false;\n  std_pf = false;\n  vpf = false;\n  sum;\n  amount;\n  toaster;\n  is_esi = true;\n  totalCompany;\n  totalEmployee;\n  paycomponentvalue = [];\n  totalCompanyYearly;\n  totalEmployeeYearly;\n  deduction_type_data;\n  paycomponentflagmaster;\n  finalCC;\n  pfFinal;\n  esiFinal;\n  PercentageValue = [];\n  indexes = [];\n  datas;\n  emp_grade_id;\n  selectedBonusType;\n  selectedBonusTypes;\n  yrlyAmt;\n  deductPatch;\n  bonusPatch;\n  deductPatchYr;\n  bonusPatchYr;\n  yearly_amounts;\n  yearly_amountss;\n  yearly_amoun;\n  Sumd1;\n  Sumb1;\n  bonusValue;\n  bonusValueY;\n  deductValue;\n  deductValueY;\n  is_pfs;\n  yrlyAmts;\n  showDedcutEntry = true;\n  deductPatchrow = false;\n  typeVal;\n  takeHomeWBDMon;\n  yrlyAmtd;\n  totalMon;\n  amountD;\n  typeD;\n  totalMons;\n  bonusTypes;\n  yrlyAmtD;\n  amountYearlyControls;\n  templatedrop;\n  takeHomeYr;\n  selectedTemplateId;\n  Sumy2;\n  newsum;\n  sumdata;\n  revisePay;\n  selectedOption;\n  enableRevise = true;\n  monthlyTakeHome;\n  calcAmount;\n  showPercent = false;\n  showRupee = false;\n  yrcalcAmount;\n  showpreference = false;\n  intialCTC;\n  constructor(http, fb, payrollShareService, apiservice, router, toast, datepipe) {\n    this.http = http;\n    this.fb = fb;\n    this.payrollShareService = payrollShareService;\n    this.apiservice = apiservice;\n    this.router = router;\n    this.toast = toast;\n    this.datepipe = datepipe;\n    let emp_info = this.payrollShareService.empView_id.value;\n    this.employee_data = emp_info;\n    this.list = emp_info;\n    this.emp_id = emp_info?.id;\n    this.payrollgenform = this.fb.group({\n      employee_id: [emp_info?.id],\n      employee_name: [emp_info.employee_name],\n      pf: [''],\n      esi: [''],\n      take_home: new FormControl(0, [Validators.required]),\n      takehome_monthly: [''],\n      cmp_percentage: [0],\n      cmp_monthly: [0],\n      cmp_yearly: [0],\n      emp_percentage: [0],\n      emp_monthly: [0],\n      emp_yearly: [0],\n      takehome_yearly: [''],\n      gross_pay_monthly: [''],\n      gross_pay_yearly: [''],\n      gross_pay: [0],\n      ctc_monthly: [''],\n      ctc_yearly: [''],\n      standard_ctc: [''],\n      companycontribution: new FormArray([this._cc_contribution()]),\n      employeecontribution: new FormArray([this._pf_contribution()]),\n      deductions: new FormArray([this._deductions()]),\n      is_pf: [false],\n      segment_data: new FormArray([this._CreateSegmentroup()]),\n      takehomeWBD: new FormControl(0, [Validators.required]),\n      takehome_monthlyWBD: [''],\n      takehome_yearlyWBD: ['']\n    });\n    const totall = this.payrollgenform.get('companycontribution');\n    let n = 0;\n    for (let z in totall.value) {\n      n += Number(this.payrollgenform.value.companycontribution[z].amount);\n    }\n    console.log('totalll', n);\n    this.totalCompany = n;\n    const totall2 = this.payrollgenform.get('employeecontribution');\n    let s = 0;\n    for (let z in totall2.value) {\n      s += Number(this.payrollgenform.value.employeecontribution[z].amount);\n    }\n    console.log('totalll', s);\n    this.totalEmployee = s;\n    this.getgradeinfo();\n    this.deduction_type();\n  }\n  showpaycom(data, index) {\n    this.paycomponent_data = data[index].paycomponent_data;\n    this.seg_id = data[index].segment_name;\n    if (this.payrollgenform.value.segment_data[index].is_paycomponent) {\n      this.payrollgenform.get('segment_data').get([index, 'is_paycomponent']).patchValue(false);\n    } else {\n      this.payrollgenform.get('segment_data').get([index, 'is_paycomponent']).patchValue(true);\n    }\n  }\n  showhidecc(data) {\n    if (this.is_company) {\n      this.is_company = false;\n    } else {\n      this.is_company = true;\n    }\n  }\n  showhideec(data) {\n    if (this.is_pf) {\n      this.is_pf = false;\n    } else {\n      this.is_pf = true;\n    }\n  }\n  showhideecs(data) {\n    this.is_pfs = !this.is_pfs;\n  }\n  ngOnInit() {\n    this.myControl.valueChanges.pipe(switchMap(value => this.apiservice.getGradeApi(value, 1))).subscribe(data => {\n      this.gradedata = data['data'];\n    });\n    if (this.employee_data?.grade) {\n      this.myControl.setValue(this.employee_data.grade.name);\n      this.LevelClick(this.employee_data.grade);\n      // this.getgradebasedemployeeinfo(this.employee_data.grade.id)\n      console.log('ONitID', this.employee_data.grade.id);\n      this.validation();\n    }\n    console.log('ONit', this.employee_data);\n    console.log('GradeData', this.gradedata);\n    console.log('takehome', this.payrollgenform.get('take_home').value);\n    // this.gettemplatedata();\n    this.revisePay = this.fb.group({\n      revPercent: '',\n      revValue: '',\n      monthyear: '',\n      revisedate: ''\n    });\n  }\n  ngOnChanges(changes) {}\n  _check(value, flag) {\n    if (flag == 'std_pf') {\n      this.std_pf = value;\n      this.getAmount(this.payrollgenform.get('take_home').value);\n    } else if (flag == 'no_esi') {\n      this.no_esi = value;\n      this.getAmount(this.payrollgenform.get('take_home').value);\n    } else if (flag == 'vpf') {\n      this.vpf = value;\n      this.getAmount(this.payrollgenform.get('take_home').value);\n    }\n  }\n  validation() {\n    const totall = this.payrollgenform.get('companycontribution');\n    let n = 0;\n    for (let z in totall.value) {\n      n += Number(this.payrollgenform.value.companycontribution[z].amount);\n    }\n    console.log('totalll', n);\n    this.totalCompany = n;\n    const totall2 = this.payrollgenform.get('employeecontribution');\n    let r = 0;\n    for (let z in totall2.value) {\n      r += Number(this.payrollgenform.value.employeecontribution[z].amount);\n    }\n    this.totalEmployee = r;\n  }\n  LevelClick(name) {\n    // this.getgradebasedemployeeinfo(name.id)\n    this.emp_grade_id = name.id;\n    this.gettemplatedata();\n    console.log('LEvelclick', name.id);\n    console.log('success');\n    this.payrollgenform.reset();\n    this.validation();\n  }\n  _CreateSegmentroup() {\n    return new FormGroup({\n      'segment_id': new FormControl(''),\n      'component_type': new FormControl(''),\n      'segment_name': new FormControl(''),\n      'segment_percentage': new FormControl(''),\n      'amount': new FormControl(''),\n      'amount_yearly': new FormControl(''),\n      'is_paycomponent': new FormControl(false),\n      'paycomponent_data': new FormArray([this._CreatePaycomponentgp()]),\n      'paycomponent_type': new FormControl('')\n    });\n  }\n  _CreatePaycomponentgp() {\n    return new FormGroup({\n      'paycomponent': new FormControl(''),\n      'paycomponent_name': new FormControl(''),\n      'paycomponent_percentage': new FormControl(''),\n      'pf': new FormControl(''),\n      'paycom': new FormControl([]),\n      'amount': new FormControl(0),\n      'amount_yearly': new FormControl(0),\n      'segment': new FormControl(''),\n      'company_contribution': new FormControl(false),\n      'type': new FormControl(''),\n      'segment_percentage': new FormControl(''),\n      'from_date': new FormControl(null),\n      'to_date': new FormControl(null)\n    });\n  }\n  _cc_contribution() {\n    return new FormGroup({\n      'id': new FormControl(''),\n      'paycomponent': new FormControl(''),\n      'paycomponent_name': new FormControl(''),\n      'paycomponent_percentage': new FormControl(''),\n      'paycomponent_type': new FormControl(1),\n      'company_contribution': new FormControl(true),\n      'deduction_data': new FormControl([]),\n      'amount': new FormControl(''),\n      'amount_yearly': new FormControl(''),\n      'max_amount': new FormControl(''),\n      'sal_amount': new FormControl('')\n    });\n  }\n  _pf_contribution() {\n    return new FormGroup({\n      'id': new FormControl(''),\n      'paycomponent_id': new FormControl(''),\n      'paycomponent_percentage': new FormControl(0.00),\n      'paycomponent_type': new FormControl(1),\n      'company_contribution': new FormControl(false),\n      'deduction_data': new FormControl([]),\n      'amount': new FormControl(''),\n      'amount_yearly': new FormControl(''),\n      'paycomponent_name': new FormControl(''),\n      'max_amount': new FormControl(''),\n      'sal_amount': new FormControl(''),\n      'is_customdeduct': new FormControl(false)\n    });\n  }\n  _deductions() {\n    return new FormGroup({\n      'id': new FormControl(''),\n      'paycomponent_id': new FormControl(''),\n      'paycomponent_percentage': new FormControl(0.00),\n      'paycomponent_type': new FormControl(1),\n      'company_contribution': new FormControl(false),\n      'deduction_data': new FormControl([]),\n      'amount': new FormControl(''),\n      'amount_yearly': new FormControl(''),\n      'paycomponent_name': new FormControl(''),\n      'max_amount': new FormControl(''),\n      'sal_amount': new FormControl(''),\n      'is_customdeduct': new FormControl(false),\n      'type': new FormControl(''),\n      'from_date': new FormControl(null),\n      'to_date': new FormControl(null)\n    });\n  }\n  segmentdata() {\n    if (this.finaldata?.id) {\n      this.payrollgenform.addControl(\"id\", new FormControl(this.finaldata?.id));\n    }\n    this.monthlyTakeHome = this.finaldata?.take_home;\n    this.payrollgenform.patchValue({\n      \"employee_id\": this.finaldata?.employee_id,\n      \"standard_ctc\": this.finaldata?.standard_ctc,\n      \"gross_pay\": this.finaldata?.gross_pay,\n      \"pf_type\": 1,\n      \"take_home\": this.finaldata?.take_home,\n      \"takehome_monthly\": this.finaldata?.take_home,\n      \"takehome_yearly\": parseFloat(this.finaldata?.take_home) * 12,\n      \"gross_pay_monthly\": this.finaldata?.gross_pay,\n      \"gross_pay_yearly\": parseFloat(this.finaldata?.gross_pay) * 12,\n      \"ctc_monthly\": this.finaldata?.standard_ctc,\n      \"ctc_yearly\": parseFloat(this.finaldata?.standard_ctc) * 12\n    });\n    this.payrollgenform.get('segment_data').clear();\n    console.log('final data', this.finaldata);\n    this.finaldata.segment_details.forEach(data => {\n      const segmentform = this._CreateSegmentroup();\n      console.log('SegmentData', data);\n      if (data?.paycomponent_type === 'Deductions') {\n        this.deductPatch = data?.paycomponent_data[0]?.amount;\n        if (data?.paycomponent_data[0]?.type == 1) {\n          this.deductPatchYr = this.deductPatch * 4;\n          this.deductPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 2) {\n          this.deductPatchYr = this.deductPatch * 2;\n          this.deductPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 3) {\n          this.deductPatchYr = this.deductPatch;\n          this.deductPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 4) {\n          this.deductPatchYr = this.deductPatch * 12;\n        }\n      }\n      if (data?.paycomponent_type == 'Monthly Bonus') {\n        this.bonusPatch = data?.paycomponent_data[0]?.amount;\n        if (data?.paycomponent_data[0]?.type == 1) {\n          this.bonusPatchYr = this.bonusPatch * 4;\n          this.bonusPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 2) {\n          this.bonusPatchYr = this.bonusPatch * 2;\n          this.bonusPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 3) {\n          this.bonusPatchYr = this.bonusPatch;\n          this.bonusPatch = 0;\n        } else if (data?.paycomponent_data[0]?.type == 4) {\n          this.bonusPatchYr = this.bonusPatch * 4;\n        }\n      }\n      if (data.paycomponent_data) {\n        segmentform.patchValue(data);\n        if (this.finaldata?.id && data.paycomponent_data) {\n          segmentform.addControl('segment_id', new FormControl(data?.segment_id));\n        }\n        segmentform.get('paycomponent_data').clear();\n      }\n      if (data.paycomponent_data) {\n        data.paycomponent_data.forEach(item => {\n          const paycomform = this._CreatePaycomponentgp();\n          paycomform.patchValue(item);\n          paycomform.get('segment_percentage').patchValue(data.segment_percentage);\n          if (this.finaldata?.id) {\n            paycomform.addControl('details_id', new FormControl(item?.details_id));\n          }\n          segmentform.get('paycomponent_data').push(paycomform);\n        });\n        this.payrollgenform.get('segment_data').push(segmentform);\n        console.log(\"PAYS DATA\", this.payrollgenform.get('segment_data'));\n      }\n      this.calculateDeduct();\n    });\n    this.payrollgenform.get('companycontribution').clear();\n    this.finaldata.company_contribution.forEach(ccdata => {\n      const ccc = this._cc_contribution();\n      if (ccdata?.details_id) {\n        ccc.addControl(\"details_id\", new FormControl(ccdata?.details_id));\n      }\n      ccc.patchValue({\n        'id': ccdata?.id,\n        'paycomponent': ccdata?.id,\n        'paycomponent_percentage': ccdata?.percentage,\n        'paycomponent_name': ccdata?.name,\n        'sal_amount': ccdata?.sal_amount,\n        'max_amount': ccdata?.max_amount\n      });\n      this.payrollgenform.get('companycontribution').push(ccc);\n    });\n    this.payrollgenform.get('employeecontribution').clear();\n    this.payrollgenform.get('deductions').clear();\n    this.finaldata.employee_contribution.forEach(ecdata => {\n      const ecc = this._pf_contribution();\n      const dcc = this._deductions();\n      console.log(\"EC DATA\", ecdata);\n      if (ecdata?.deduction_id) {\n        ecc.addControl(\"deduction_id\", new FormControl(ecdata?.deduction_id));\n        dcc.addControl(\"deduction_id\", new FormControl(ecdata?.deduction_id));\n      }\n      ecc.patchValue({\n        'id': ecdata?.id,\n        'paycomponent_id': ecdata?.id,\n        'paycomponent_percentage': ecdata?.percentage,\n        'paycomponent_name': ecdata?.name,\n        'max_amount': ecdata?.max_amount,\n        'sal_amount': ecdata?.sal_amount\n      });\n      if (ecdata?.type?.id) {\n        this.typeVal = ecdata?.type?.id;\n        switch (this.typeVal) {\n          case 1:\n            this.yrlyAmts = ecdata.deduction_amount * 4;\n            break;\n          case 2:\n            this.yrlyAmts = ecdata.deduction_amount * 2;\n            break;\n          case 3:\n            this.yrlyAmts = ecdata.deduction_amount * 1;\n            break;\n          case 4:\n            this.yrlyAmts = ecdata.deduction_amount * 12;\n            break;\n          default:\n            this.yrlyAmts = 0;\n            break;\n        }\n      }\n      dcc.patchValue({\n        'id': ecdata?.id,\n        'paycomponent_id': ecdata?.id,\n        'paycomponent_percentage': ecdata?.percentage,\n        'paycomponent_name': ecdata?.name,\n        'max_amount': ecdata?.max_amount,\n        'amount': ecdata?.deduction_amount,\n        'amount_yearly': this.yrlyAmts,\n        'type': ecdata?.type?.id\n      });\n      if (ecdata.name == 'PF' || ecdata.name == 'ESI') {\n        this.payrollgenform.get('employeecontribution').push(ecc);\n        console.log(this.payrollShareService);\n      } else {\n        this.deductPatch = ecdata.deduction_amount;\n        this.deductPatchYr = this.yrlyAmts;\n        this.calculateDeduct();\n        // this.deductPatch = ecdata.deduction_amount;\n        // this.deductPatchYr = this.yrlyAmts;\n        this.deductPatchrow = true;\n        this.showDedcutEntry = false;\n        console.log('This is the Deduction data', dcc);\n        // let deducts = this.transformData(ecdata);\n        if (this.deductPatch !== 0 || this.deductPatch !== null || this.deductPatch !== undefined) {\n          this.payrollgenform.get('deductions').push(dcc);\n        }\n      }\n    });\n    if (this.finaldata?.id) {\n      this.payrollgenform.addControl('id', new FormControl(this.finaldata?.id));\n      this._letcalculate(this.finaldata?.gross_pay);\n    }\n  }\n  getAmount(data) {\n    let dataFormArray = this.payrollgenform.get('segment_data').value;\n    this.finaldata;\n    this.pf_cal_prec = 0;\n    this.esi_cal_prec = 0;\n    this.pfsegment_prec = 0;\n    this.esisement_prec = 0;\n    let pf_array = [];\n    let esi_array = [];\n    let emp_esi;\n    let esi_ori = 0;\n    let _cal_esi = 0;\n    let pf_ori = 0;\n    let _cal_pf = 0;\n    for (let i in dataFormArray) {\n      console.log('*********');\n      this.esi_cal_prec = 0;\n      this.pf_cal_prec = 0;\n      for (let j in dataFormArray[i].paycomponent_data) {\n        // employee pf and esi\n        if (dataFormArray[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n          this.pf_cal_prec = this.pf_cal_prec + parseFloat(dataFormArray[i].paycomponent_data[j]?.paycomponent_percentage);\n          if (!pf_array?.includes(dataFormArray[i].segment_id)) {\n            pf_array.push(dataFormArray[i].segment_id);\n            this.pfsegment_prec = this.pfsegment_prec + parseFloat(dataFormArray[i].segment_percentage);\n          }\n        }\n        if (dataFormArray[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n          this.esi_cal_prec = this.esi_cal_prec + parseFloat(dataFormArray[i].paycomponent_data[j]?.paycomponent_percentage);\n          if (!esi_array?.includes(dataFormArray[i].segment_id)) {\n            esi_array.push(dataFormArray[i].segment_id);\n            this.esisement_prec = this.esisement_prec + parseFloat(dataFormArray[i].segment_percentage);\n          }\n        }\n      }\n      if (this.finalCC != 0) {\n        if (esi_array.includes(dataFormArray[i].segment_id)) {\n          esi_ori = parseFloat(dataFormArray[i].segment_percentage) / 100 * (this.esi_cal_prec / 100);\n          _cal_esi = _cal_esi + esi_ori;\n        }\n      } else {\n        _cal_esi = 0;\n      }\n      if (pf_array.includes(dataFormArray[i].segment_id)) {\n        pf_ori = parseFloat(dataFormArray[i].segment_percentage) / 100 * (this.pf_cal_prec / 100);\n        _cal_pf = _cal_pf + pf_ori;\n      }\n    }\n    console.log('pfsegment_prec:', this.pfsegment_prec, 'this.pf_cal_prec:-', this.pf_cal_prec);\n    console.log('esisegment_prec:', this.esisement_prec, 'esi_cal_prec:-', this.esi_cal_prec);\n    let prec = this.get_pf_esi_frommaster();\n    this.emppf = _cal_pf * (prec['e_pf'] / 100);\n    emp_esi = _cal_esi * (prec['e_esi'] / 100);\n    console.log(_cal_esi, _cal_pf);\n    let company_pf = _cal_pf * (prec['c_pf'] / 100);\n    let comesi = _cal_esi * (prec['c_esi'] / 100);\n    if (this.no_esi) {\n      emp_esi = 0;\n    }\n    this.gross_pay = Math.round(parseFloat(data) / (1 - this.emppf - emp_esi));\n    if (this.std_pf) {\n      this.gross_pay = Math.round(parseFloat(data) + prec['max_amout_epf'] + emp_esi);\n    }\n    let cc_final = company_pf + comesi;\n    let ec_final = this.emppf + emp_esi;\n    console.log(this.emppf);\n    this.payrollgenform.get('takehomeWBD').setValue(this.payrollgenform.get('take_home').value);\n    this.payrollgenform.get('gross_pay_monthly').setValue(this.gross_pay);\n    this.payrollgenform.get('gross_pay').setValue(this.gross_pay);\n    this.payrollgenform.get('gross_pay_yearly').setValue(Math.round(this.gross_pay * 12));\n    this.payrollgenform.get('takehome_monthly').setValue(parseFloat(data));\n    this.payrollgenform.get('takehome_yearly').setValue(parseFloat(data) * 12);\n    this.payrollgenform.get('takehome_monthlyWBD').setValue(this.payrollgenform.get('takehome_monthly').value);\n    this.payrollgenform.get('takehome_yearlyWBD').setValue(this.payrollgenform.get('takehome_yearly').value);\n    console.log(\"Gross Pays\", this.gross_pay);\n    this._letcalculate(this.gross_pay);\n  }\n  get_pf_esi_frommaster() {\n    let esi_c = 0,\n      esi_e = 0,\n      pf_c = 0,\n      pf_e = 0,\n      epf_amout = 0,\n      cpf_amount = 0;\n    for (let k = 0; k < this.payrollgenform.value.companycontribution.length; k++) {\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'ESI') {\n        esi_c = parseFloat(this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage);\n      }\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'PF') {\n        pf_c = parseFloat(this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage);\n        cpf_amount = parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount);\n      }\n    }\n    for (let k = 0; k < this.payrollgenform.value.employeecontribution.length; k++) {\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'ESI') {\n        esi_e = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage);\n      }\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'PF') {\n        pf_e = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage);\n        epf_amout = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount);\n      }\n    }\n    return {\n      \"c_esi\": esi_c,\n      \"c_pf\": pf_c,\n      \"e_esi\": esi_e,\n      \"e_pf\": pf_e,\n      'max_amout_epf': epf_amout,\n      'max_amount_cpf': cpf_amount\n    };\n  }\n  Formsubmission() {\n    console.log(\"Final Datas\", this.payrollgenform.value);\n    let segment_array = [];\n    let segment_datas = this.payrollgenform.value.segment_data;\n    let employeecontribution = this.payrollgenform.value.employeecontribution;\n    console.log(\"My Segment Datas\", segment_datas);\n    for (let k = 0; k < segment_datas.length; k++) {\n      for (let p = 0; p < segment_datas[k]?.paycomponent_data.length; p++) {\n        console.log(segment_datas[k]);\n        if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.from_date === null) {\n          delete this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'];\n        } else {\n          const from_date = this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'];\n          this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'] = this.datepipe.transform(from_date, 'yyyy-MM-dd');\n        }\n        if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.to_date === null) {\n          delete this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'];\n        } else {\n          const to_date = this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'];\n          this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'] = this.datepipe.transform(to_date, 'yyyy-MM-dd');\n        }\n        if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.segment != undefined) {\n          this.payrollgenform.value.segment_data[k].paycomponent_data[p]['segment'] = segment_datas[k].segment_id;\n        }\n        if (this.payrollgenform.value.segment_data[k].segment_name === 'Deductions') {\n          this.payrollgenform.value.segment_data[k].paycomponent_data[p]['is_customdeduct'] = true;\n        } else {\n          this.payrollgenform.value.segment_data[k].paycomponent_data[p]['is_customdeduct'] = false;\n        }\n        if (this.payrollgenform.value.segment_data[k].segment_name === 'Deductions') {\n          employeecontribution.push(this.payrollgenform.value.segment_data[k].paycomponent_data[p]);\n        } else {\n          segment_array.push(this.payrollgenform.value.segment_data[k].paycomponent_data[p]);\n        }\n      }\n    }\n    // if(this.payrollgenform.get('deductions') !== null)\n    // {\n    //   employeecontribution.push(this.payrollgenform.value.deductions[0]);\n    // }\n    if (this.payrollgenform.get('deductions') !== null) {\n      const newDeduction = this.payrollgenform.value.deductions[0];\n      if (newDeduction !== null && newDeduction !== undefined) {\n        delete newDeduction.deduction_id;\n        const existingIndex = employeecontribution.findIndex(item => item && item?.paycomponent_name === newDeduction?.paycomponent_name);\n        if (existingIndex !== -1) {\n          employeecontribution[existingIndex] = newDeduction;\n        } else {\n          employeecontribution.push(newDeduction);\n        }\n      }\n    }\n    console.log(\"Segments My Arrat\", segment_array);\n    let params = {\n      \"employee_id\": this.employee_data?.id,\n      \"standard_ctc\": this.payrollgenform.value.ctc_monthly,\n      \"gross_pay\": this.payrollgenform.value.gross_pay_monthly,\n      \"pf_type\": 1,\n      \"take_home\": this.payrollgenform.value.takehome_monthly,\n      'emp_grade': this.emp_grade_id,\n      'emp_template': this.selectedTemplateId,\n      \"is_tds\": \"False\",\n      \"company_contribution\": this.payrollgenform.value.companycontribution,\n      \"employee_contribution\": this.payrollgenform.value.employeecontribution,\n      \"segment_details\": segment_array.filter(Boolean)\n    };\n    if (this.finaldata?.id) {\n      params['id'] = this.finaldata?.id;\n    }\n    console.log(params);\n    const paycom_per = this._CreatePaycomponentgp();\n    const pay = paycom_per.get('paycomponent_percentage').value;\n    const mainform = this.payrollgenform.get('segment_data');\n    for (let i in mainform.value) {\n      console.log('mainframe', this.payrollgenform.value.segment_data[i].paycomponent_data);\n      console.log('mainframeAmount', this.payrollgenform.value.segment_data[i].segment_percentage);\n      this.amount = Number(this.payrollgenform.value.segment_data[i].segment_percentage);\n      let s = 0;\n      for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n        s += Number(this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage);\n      }\n      this.sum = Number(s / 100 * this.amount);\n      if (this.sum != this.amount && this.payrollgenform.value.segment_data[i].segment_name !== 'Deductions') {\n        this.toast.error('The' + this.payrollgenform.value.segment_data[i].segment_name + ' Block  Sum of precentage should equal to 100');\n        return false;\n      }\n    }\n    this.apiservice.paystructurecreation(params).subscribe(data => {\n      this.toaster = this.toast.success(data?.message);\n      this.router.navigate(['/payingemployee/empdetailsummary']);\n      this.router.navigate(['/payingemployee/empnav']);\n    });\n  }\n  getgradeinfo() {\n    this.apiservice.getGradeApi('', 1).subscribe(data => {\n      this.gradedata = data['data'];\n      console.log('gradeDataInfo', data);\n    });\n  }\n  getgradebasedemployeeinfo(grade_id) {\n    this.apiservice.getemployeegradeinfo(grade_id, this.employee_data?.id).subscribe(data => {\n      console.log(data);\n      this.finaldata = data;\n      this.segmentdata();\n    });\n  }\n  _letcalculate(gross_pay_monthly) {\n    gross_pay_monthly = this.payrollgenform.value.gross_pay_monthly;\n    const mainform = this.payrollgenform.get('segment_data');\n    let find_pf = 0;\n    let find_esi = 0;\n    console.log(\"Main form data\", mainform);\n    for (let i in mainform.value) {\n      if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Monthly Bonus') {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\n        // let yearly_amount = amout * 12\n        mainform.get([i, 'amount']).patchValue(amout);\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\n        if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1) {\n          this.yearly_amountss = amout * 4;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2) {\n          this.yearly_amountss = amout * 2;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3) {\n          this.yearly_amountss = amout;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4) {\n          this.yearly_amountss = amout * 12;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss);\n        }\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount;\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl));\n          // let yearly_amount = resultPiesTablares * 12\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amountss);\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares);\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss);\n          console.log(\"Bonus Values\", resultPiesTablares);\n          console.log(\"Bonus yearly\", this.yearly_amountss);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Deductions') {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\n        mainform.get([i, 'amount']).patchValue(amout);\n        if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1) {\n          let yearly_amount = amout * 4;\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2) {\n          let yearly_amount = amout * 2;\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3) {\n          let yearly_amount = amout;\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4) {\n          let yearly_amount = amout * 12;\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        }\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount;\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl));\n          let yearly_amount = resultPiesTablares * 12;\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount);\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares);\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n          console.log(\"Bonus Values\", resultPiesTablares);\n          console.log(\"Bonus yearly\", yearly_amount);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      } else {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.segment_percentage) * gross_pay_monthly / 100);\n        let yearly_amount = amout * 12;\n        mainform.get([i, 'amount']).patchValue(amout);\n        mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage;\n          let segment_percentage = this.payrollgenform.value.segment_data[i]?.segment_percentage;\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl) / 100 * parseFloat(segment_percentage) / 100 * gross_pay_monthly);\n          // let resultPiesTablares:any = Math.round((parseFloat(payComponentPercentageControl)/100 *parseFloat(segment_percentage)/100* this.gross_pay) );\n          let yearly_amount = resultPiesTablares * 12;\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      }\n    }\n    let pf_amt;\n    let cc_amount;\n    for (let k = 0; k < this.payrollgenform.value.companycontribution.length; k++) {\n      let prec_ = this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage;\n      let sal_amount = this.payrollgenform.value?.companycontribution[k]?.sal_amount;\n      this.payrollgenform.get('companycontribution').get([k, 'paycomponent_percentage']).patchValue(prec_);\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'ESI') {\n        console.log('finde', find_esi);\n        if (parseFloat(sal_amount) > find_esi) {\n          cc_amount = Math.round(find_esi * parseFloat(prec_) / 100);\n          let cc_amount1 = Math.round(find_esi * parseFloat(prec_) / 100 * 12);\n          // cc_pf=find_pf*13/100\n          this.payrollgenform.get('companycontribution').get([k, 'amount']).patchValue(cc_amount);\n          this.payrollgenform.get('companycontribution').get([k, 'amount_yearly']).patchValue(cc_amount1);\n          this.esiFinal = cc_amount;\n        } else {\n          this.payrollgenform.get('companycontribution').get([k, 'amount']).patchValue(0);\n          this.payrollgenform.get('companycontribution').get([k, 'amount_yearly']).patchValue(0);\n          cc_amount = 0;\n          this.esiFinal = cc_amount;\n        }\n      } else {\n        // cc_pf=find_pf*13/100\n        pf_amt = Math.round(find_pf * parseFloat(prec_) / 100);\n        if (this.vpf == true) {\n          this.payrollgenform.get('companycontribution').get([k, 'amount']).patchValue(pf_amt);\n          this.payrollgenform.get('companycontribution').get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\n          this.pfFinal = pf_amt;\n        } else {\n          if (pf_amt > parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount)) {\n            pf_amt = parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount);\n          }\n          this.payrollgenform.get('companycontribution').get([k, 'amount']).patchValue(pf_amt);\n          this.payrollgenform.get('companycontribution').get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\n          this.pfFinal = pf_amt;\n        }\n      }\n    }\n    ;\n    let ctc = Math.round(parseFloat(this.payrollgenform.value.gross_pay_monthly) + (parseFloat(pf_amt) + parseFloat(cc_amount)));\n    console.log(ctc, 'ctc');\n    // this.ctc_amout=ctc;\n    this.payrollgenform.get('ctc_monthly').setValue(ctc);\n    this.payrollgenform.get('ctc_yearly').setValue(Math.round(ctc * 12));\n    this.payrollgenform.get('standard_ctc').setValue(ctc);\n    let cc_total = 0;\n    cc_total = pf_amt + cc_amount;\n    this.payrollgenform.get('cmp_monthly').setValue(cc_total);\n    this.payrollgenform.get('cmp_yearly').setValue(cc_total * 12);\n    // employee contribution\n    for (let k = 0; k < this.payrollgenform.value.employeecontribution.length; k++) {\n      let eprec_ = this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage;\n      let sal_amount = this.payrollgenform.value?.employeecontribution[k]?.sal_amount;\n      this.payrollgenform.get('employeecontribution').get([k, 'paycomponent_percentage']).patchValue(eprec_);\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'ESI') {\n        if (parseFloat(sal_amount) > find_esi) {\n          cc_amount = Math.round(find_esi * parseFloat(eprec_) / 100);\n          let cc_amount1 = Math.round(find_esi * parseFloat(eprec_) / 100 * 12);\n          // cc_pf=find_pf*13/100\n          this.finalCC = cc_amount;\n          this.payrollgenform.get('employeecontribution').get([k, 'amount']).patchValue(cc_amount);\n          this.payrollgenform.get('employeecontribution').get([k, 'amount_yearly']).patchValue(cc_amount1);\n        } else {\n          this.payrollgenform.get('employeecontribution').get([k, 'amount']).patchValue(0);\n          this.payrollgenform.get('employeecontribution').get([k, 'amount_yearly']).patchValue(0);\n          cc_amount = 0;\n          this.finalCC = cc_amount;\n        }\n        // this.getAmount(this.payrollgenform.get('take_home').value)\n        console.log(\"Final CC\", this.finalCC);\n      } else {\n        // cc_pf=find_pf*13/100\n        if (this.vpf == true) {\n          pf_amt = Math.round(find_pf * parseFloat(eprec_) / 100);\n          this.payrollgenform.get('employeecontribution').get([k, 'amount']).patchValue(pf_amt);\n          this.payrollgenform.get('employeecontribution').get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\n        } else {\n          pf_amt = Math.round(find_pf * parseFloat(eprec_) / 100);\n          if (pf_amt > parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount)) {\n            pf_amt = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount);\n          }\n          this.payrollgenform.get('employeecontribution').get([k, 'amount']).patchValue(pf_amt);\n          this.payrollgenform.get('employeecontribution').get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\n        }\n      }\n    }\n    gross_pay_monthly = parseFloat(this.payrollgenform.value?.takehome_monthly) + pf_amt + cc_amount;\n    this.payrollgenform.get('gross_pay_monthly').setValue(gross_pay_monthly);\n    this.payrollgenform.get('gross_pay').setValue(gross_pay_monthly);\n    this.payrollgenform.get('gross_pay_yearly').setValue(Math.round(gross_pay_monthly * 12));\n    for (let i in mainform.value) {\n      if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Monthly Bonus') {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.amount));\n        // let yearly_amount = amout * 12\n        mainform.get([i, 'amount']).patchValue(amout);\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\n        if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1) {\n          this.yearly_amoun = amout * 4;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2) {\n          this.yearly_amoun = amout * 2;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3) {\n          this.yearly_amoun = amout;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4) {\n          this.yearly_amoun = amout * 12;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun);\n        }\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount;\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl));\n          // let yearly_amount = resultPiesTablares * 12\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amoun);\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares);\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun);\n          console.log(\"Bonus Values\", resultPiesTablares, this.yearly_amoun);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Deductions') {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\n        // let yearly_amount = amout * 12\n        mainform.get([i, 'amount']).patchValue(amout);\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\n        if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1) {\n          this.yearly_amounts = amout * 4;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2) {\n          this.yearly_amounts = amout * 2;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3) {\n          this.yearly_amounts = amout;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n        } else if (this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4) {\n          this.yearly_amounts = amout * 12;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n        } else {\n          this.yearly_amounts = 0;\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n        }\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount;\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl));\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amounts);\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares);\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      } else {\n        const mainform = this.payrollgenform.get('segment_data');\n        let amout = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.segment_percentage) * gross_pay_monthly / 100);\n        let yearly_amount = amout * 12;\n        mainform.get([i, 'amount']).patchValue(amout);\n        mainform.get([i, 'amount_yearly']).patchValue(yearly_amount);\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\n          const sub = mainform.get([i, 'paycomponent_data']);\n          console.log('-----');\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage;\n          let segment_percentage = this.payrollgenform.value.segment_data[i]?.segment_percentage;\n          let resultPiesTablares = Math.round(parseFloat(payComponentPercentageControl) / 100 * parseFloat(segment_percentage) / 100 * gross_pay_monthly);\n          let yearly_amount = resultPiesTablares * 12;\n          sub.get([j, 'amount']).patchValue(resultPiesTablares);\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount);\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount);\n          }\n        }\n      }\n    }\n    let ctcs = Math.round(parseFloat(this.payrollgenform.value.gross_pay_monthly) + parseFloat(this.pfFinal) + parseFloat(this.esiFinal));\n    console.log(ctc, 'ctcs');\n    this.payrollgenform.get('ctc_monthly').setValue(ctcs);\n    this.payrollgenform.get('ctc_yearly').setValue(Math.round(ctcs * 12));\n    this.payrollgenform.get('standard_ctc').setValue(ctcs);\n    this.validation();\n  }\n  Submit() {\n    this.router.navigate(['/payingemployee/empdetailsummary']);\n    this.router.navigate(['/payingemployee/empnav']);\n  }\n  deduction_type() {\n    this.apiservice.deductiontype().subscribe(data => {\n      this.deduction_type_data = data['data'];\n    });\n  }\n  calculateAmountYearly(index) {\n    if (this.showDedcutEntry == true) {\n      const segmentData = this.payrollgenform.get('segment_data').value[index];\n      const mainform = this.payrollgenform.get('segment_data');\n      if (segmentData.paycomponent_type === 'Monthly Bonus' || segmentData.paycomponent_type === 'Deductions') {\n        const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\n        const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\n        if (amountControl && amountYearlyControl) {\n          const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\n          switch (selectedDropdownValue) {\n            case 1:\n              amountYearlyControl.setValue(amountControl.value * 4);\n              this.yrlyAmt = amountControl.value * 4;\n              break;\n            case 2:\n              amountYearlyControl.setValue(amountControl.value * 2);\n              this.yrlyAmt = amountControl.value * 2;\n              break;\n            case 3:\n              amountYearlyControl.setValue(amountControl.value * 1);\n              this.yrlyAmt = amountControl.value * 1;\n              break;\n            case 4:\n              amountYearlyControl.setValue(amountControl.value * 12);\n              this.yrlyAmt = amountControl.value * 12;\n              break;\n            default:\n              amountYearlyControl.setValue(amountControl.value);\n              this.yrlyAmt = 0;\n              break;\n          }\n        }\n        let Val1 = this.payrollgenform.get('takehome_monthly').value;\n        let Val2 = this.payrollgenform.get('takehome_yearly').value;\n        this.bonusValue = parseInt(amountControl.value);\n        this.bonusValueY = this.yrlyAmt;\n        // let Sum1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value);\n        if (this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4) {\n          // this.deductValue == undefined?  0 : this.deductValue;\n          this.deductValue = this.deductValue === undefined ? 0 : this.deductValue;\n          this.Sumb1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value) - this.deductValue;\n          this.intialCTC = parseInt(this.payrollgenform.get('ctc_monthly').value) + parseInt(amountControl.value) - this.deductValue;\n        } else {\n          this.Sumb1 = parseInt(this.payrollgenform.get('takehome_monthlyWBD').value);\n        }\n        if (this.yrlyAmt !== undefined && this.deductPatch !== undefined) {\n          this.Sumy2 = this.payrollgenform.get('takehome_yearly').value + this.yrlyAmt - this.deductValueY;\n        } else if (this.yrlyAmt !== undefined) {\n          this.Sumy2 = this.payrollgenform.get('takehome_yearly').value + this.yrlyAmt;\n        } else if (this.deductPatch !== undefined) {\n          this.Sumy2 = this.payrollgenform.get('takehome_yearly').value - this.deductValueY;\n        } else {\n          this.Sumy2 = this.payrollgenform.get('takehome_yearly').value;\n        }\n        this.payrollgenform.valueChanges.subscribe(() => {\n          this.payrollgenform.get('takehomeWBD').setValue(this.Sumb1);\n          this.payrollgenform.get('ctc_monthly').setValue(this.intialCTC);\n          this.payrollgenform.get('standard_ctc').setValue(this.intialCTC);\n          this.payrollgenform.get('takehome_monthlyWBD').setValue(this.Sumb1);\n          this.payrollgenform.get('takehome_yearlyWBD').setValue(this.Sumy2);\n        });\n        mainform.get([index, 'amount']).patchValue(amountControl.value);\n        mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt);\n      }\n    } else {\n      const segmentData = this.payrollgenform.get('segment_data').value[index];\n      const mainform = this.payrollgenform.get('segment_data');\n      if (segmentData.paycomponent_type === 'Monthly Bonus' || segmentData.paycomponent_type === 'Deductions') {\n        const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\n        const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\n        if (amountControl && amountYearlyControl) {\n          const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\n          this.bonusTypes = selectedDropdownValue;\n          switch (selectedDropdownValue) {\n            case 1:\n              amountYearlyControl.setValue(amountControl.value * 4);\n              this.yrlyAmt = amountControl.value * 4;\n              break;\n            case 2:\n              amountYearlyControl.setValue(amountControl.value * 2);\n              this.yrlyAmt = amountControl.value * 2;\n              break;\n            case 3:\n              amountYearlyControl.setValue(amountControl.value * 1);\n              this.yrlyAmt = amountControl.value * 1;\n              break;\n            case 4:\n              amountYearlyControl.setValue(amountControl.value * 12);\n              this.yrlyAmt = amountControl.value * 12;\n              break;\n            default:\n              amountYearlyControl.setValue(amountControl.value);\n              this.yrlyAmt = 0;\n              break;\n          }\n        }\n        let Val1 = this.payrollgenform.get('takehome_monthly').value;\n        let Val2 = this.payrollgenform.get('takehome_yearly').value;\n        this.bonusValue = parseInt(amountControl.value);\n        this.bonusValueY = this.yrlyAmt;\n        // let Sum1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value);\n        let deductAmount = this.payrollgenform.get('deductions').value[0].amount;\n        let dedtype = this.payrollgenform.get('deductions').value[0].type;\n        switch (dedtype) {\n          case 1:\n            this.yrlyAmtd = deductAmount * 4;\n            break;\n          case 2:\n            this.yrlyAmtd = deductAmount * 2;\n            break;\n          case 3:\n            this.yrlyAmtd = deductAmount * 1;\n            break;\n          case 4:\n            this.yrlyAmtd = deductAmount * 12;\n            break;\n          default:\n            this.yrlyAmtd = 0;\n            break;\n        }\n        if (dedtype == 4) {\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue - deductAmount;\n        } else if (this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4) {\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue;\n        } else {\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value);\n        }\n        if (this.yrlyAmt !== undefined && this.yrlyAmtd !== undefined) {\n          this.newsum = parseInt(this.payrollgenform.get('takehome_yearly').value) + parseInt(this.yrlyAmt) - this.yrlyAmtd;\n        } else if (this.yrlyAmt !== undefined) {\n          this.newsum = parseInt(this.payrollgenform.get('takehome_yearly').value) + parseInt(this.yrlyAmt);\n        } else if (this.yrlyAmtd !== undefined) {\n          this.newsum = parseInt(this.payrollgenform.get('takehome_yearly').value) - this.yrlyAmtd;\n        } else {\n          this.newsum = parseInt(this.payrollgenform.get('takehome_yearly').value);\n        }\n        this.payrollgenform.valueChanges.subscribe(() => {\n          this.payrollgenform.get('takehomeWBD').setValue(this.totalMon);\n          this.payrollgenform.get('takehome_monthlyWBD').setValue(this.totalMon);\n          this.payrollgenform.get('takehome_yearlyWBD').setValue(this.newsum);\n        });\n        mainform.get([index, 'amount']).patchValue(amountControl);\n        mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt);\n      }\n    }\n  }\n  previewPay() {}\n  onBonusTypeChange(data, index) {\n    this.selectedBonusType = data.value;\n    this.clearBonusTypeValues(index);\n    this.resetAmount(index);\n  }\n  onBonusTypeChanges(data, index) {\n    this.selectedBonusTypes = data.value;\n    this.clearBonusTypeValue(index);\n    // this.calculateAmountYearly();\n  }\n  clearBonusTypeValues(index) {\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\n    const mainform = this.payrollgenform.get('segment_data');\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']).setValue(0);\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']).setValue(0);\n  }\n  clearBonusTypeValue(index) {\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\n    const mainform = this.payrollgenform.get('segment_data');\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']).setValue(0);\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']).setValue(0);\n  }\n  calculateAmountYearlys(index) {\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\n    const mainform = this.payrollgenform.get('segment_data');\n    if (segmentData.paycomponent_type.toLowerCase() === 'deductions') {\n      const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\n      const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\n      if (amountControl && amountYearlyControl) {\n        const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\n        switch (selectedDropdownValue) {\n          case 1:\n            amountYearlyControl.setValue(amountControl.value * 4);\n            this.yrlyAmt = amountControl.value * 4;\n            break;\n          case 2:\n            amountYearlyControl.setValue(amountControl.value * 2);\n            this.yrlyAmt = amountControl.value * 2;\n            break;\n          case 3:\n            amountYearlyControl.setValue(amountControl.value * 1);\n            this.yrlyAmt = amountControl.value * 1;\n            break;\n          case 4:\n            amountYearlyControl.setValue(amountControl.value * 12);\n            this.yrlyAmt = amountControl.value * 12;\n            break;\n          default:\n            amountYearlyControl.setValue(amountControl.value);\n            this.yrlyAmt = amountControl.value;\n            break;\n        }\n      }\n      let Val1 = this.payrollgenform.get('takehome_monthlyWBD').value;\n      let Val2 = this.payrollgenform.get('takehome_yearlyWBD').value;\n      this.deductValue = parseInt(amountControl.value);\n      this.deductValueY = this.yrlyAmt;\n      if (this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4) {\n        console.log(\"NET PAY\", parseInt(this.payrollgenform.get('takehome_monthlyWBD').value));\n        // this.bonusValue == undefined? 0 : this.bonusValue;\n        this.bonusValue = this.bonusValue === undefined ? 0 : this.bonusValue;\n        this.Sumd1 = parseInt(this.payrollgenform.get('takehome_monthly').value) - parseInt(amountControl.value) + this.bonusValue;\n      } else {\n        this.Sumd1 = parseInt(this.payrollgenform.get('takehome_monthlyWBD').value);\n      }\n      if (this.yrlyAmt !== undefined && this.bonusValueY !== undefined) {\n        this.sumdata = this.payrollgenform.get('takehome_yearly').value - this.yrlyAmt + this.bonusValueY;\n      } else if (this.yrlyAmt !== undefined) {\n        this.sumdata = this.payrollgenform.get('takehome_yearly').value - this.yrlyAmt;\n      } else if (this.bonusValueY !== undefined) {\n        this.sumdata = this.payrollgenform.get('takehome_yearly').value + this.bonusValueY;\n      } else {\n        this.sumdata = this.payrollgenform.get('takehome_yearly').value;\n      }\n      this.payrollgenform.valueChanges.subscribe(() => {\n        this.payrollgenform.get('takehomeWBD').setValue(this.Sumd1);\n        this.payrollgenform.get('takehome_monthlyWBD').setValue(this.Sumd1);\n        this.payrollgenform.get('takehome_yearlyWBD').setValue(this.sumdata);\n      });\n      mainform.get([index, 'amount']).patchValue(amountControl.value);\n      mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt);\n    }\n  }\n  resetAmount(index) {\n    let Val1 = this.payrollgenform.get('takehome_monthly').value;\n    let Val2 = this.payrollgenform.get('takehome_yearly').value;\n    this.payrollgenform.get('takehomeWBD').setValue(Val1);\n    this.payrollgenform.get('takehome_monthlyWBD').setValue(Val1);\n    this.payrollgenform.get('takehome_yearlyWBD').setValue(Val2);\n  }\n  calculateDeduct() {\n    let yrAmt = this.finaldata.take_home * 12;\n    if (this.typeVal === 4 && this.bonusPatch !== undefined && this.deductPatch !== undefined) {\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) + parseFloat(this.bonusPatch) - parseFloat(this.deductPatch);\n    } else if (this.bonusPatch !== undefined) {\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) + parseFloat(this.bonusPatch);\n    } else if (this.deductPatch !== undefined) {\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) - parseFloat(this.deductPatch);\n    } else {\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home);\n    }\n    if (this.bonusPatchYr !== undefined && this.deductPatchYr !== undefined) {\n      this.takeHomeYr = yrAmt + parseFloat(this.bonusPatchYr) - parseFloat(this.deductPatchYr);\n    } else if (this.deductPatchYr !== undefined) {\n      this.takeHomeYr = yrAmt - parseFloat(this.deductPatchYr);\n    } else if (this.bonusPatchYr !== undefined) {\n      this.takeHomeYr = yrAmt - parseFloat(this.bonusPatchYr);\n    } else {\n      this.takeHomeYr = yrAmt;\n    }\n    console.log(\"Take Home \", this.takeHomeWBDMon);\n    this.payrollgenform.patchValue({\n      \"takehomeWBD\": this.takeHomeWBDMon,\n      \"takehome_monthlyWBD\": this.takeHomeWBDMon,\n      \"takehome_yearlyWBD\": this.takeHomeYr\n    });\n  }\n  calculateAmountYearVal() {\n    console.log(\"Deduct VALUES PAT\", this.payrollgenform.get('deductions').value);\n    this.amountD = this.payrollgenform.get('deductions').value[0]?.amount;\n    this.typeD = this.payrollgenform.get('deductions').value[0]?.type;\n    this.amountYearlyControls = this.payrollgenform.get('deductions').value[0]?.amount_yearly;\n    switch (this.typeD) {\n      case 1:\n        this.yrlyAmtD = this.amountD * 4;\n        this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\n        break;\n      case 2:\n        this.yrlyAmtD = this.amountD * 2;\n        this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\n        break;\n      case 3:\n        this.yrlyAmtD = this.amountD * 1;\n        this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\n        break;\n      case 4:\n        this.yrlyAmtD = this.amountD * 12;\n        // this.amountYearlyControls.setValue(this.yrlyAmtD);\n        this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\n        break;\n      default:\n        this.yrlyAmtD = this.amountD;\n        this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\n        break;\n    }\n    if (this.typeD == 4) {\n      this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) - this.amountD + this.bonusPatch;\n    }\n    // else if(this.bonusTypes == 4)\n    // {\n    //   this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue\n    // }\n    else {\n      this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusPatch;\n    }\n    let Sum2 = parseInt(this.payrollgenform.get('takehome_yearly').value) - this.yrlyAmtD + parseInt(this.bonusPatchYr);\n    this.payrollgenform.valueChanges.subscribe(() => {\n      this.payrollgenform.get('takehomeWBD').setValue(this.totalMons);\n      this.payrollgenform.get('takehome_monthlyWBD').setValue(this.totalMons);\n      this.payrollgenform.get('takehome_yearlyWBD').setValue(Sum2);\n    });\n  }\n  onBonusTypeChangeD(event, data) {\n    this.payrollgenform.get('deductions').get([0, 'amount']).patchValue(0);\n    this.payrollgenform.get('deductions').get([0, 'amount_yearly']).patchValue(0);\n    this.calculateAmountYearVal();\n  }\n  gettemplatedata() {\n    let gradeId = this.emp_grade_id;\n    let page = 1;\n    this.apiservice.gettemplates(gradeId, page).subscribe(res => {\n      this.templatedrop = res['data'];\n    });\n  }\n  TemplateClick(value) {\n    this.selectedTemplateId = value.id;\n    // this.getgradebasedemployeeinfo(value.id);\n    this.apiservice.getemployeegradeinfodetails(this.emp_grade_id, this.employee_data?.id, value.id).subscribe(data => {\n      console.log(data);\n      this.finaldata = data;\n      this.segmentdata();\n      this.validation();\n      this.enableRevise = false;\n    });\n  }\n  onSelectionChange() {\n    if (this.selectedOption == 1) {\n      this.calcAmount = this.revisePay.get('revPercent').value * this.monthlyTakeHome / 100;\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\n      this.showPercent = true;\n      this.showRupee = false;\n      this.revisePay.get('revPercent').setValue(0);\n      this.calcAmount = 0;\n      this.yrcalcAmount = 0;\n    } else {\n      this.calcAmount = this.revisePay.get('revPercent').value;\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\n      this.showPercent = false;\n      this.showRupee = true;\n      this.revisePay.get('revPercent').setValue(0);\n      this.calcAmount = 0;\n      this.yrcalcAmount = 0;\n    }\n  }\n  calculateVal() {\n    if (this.selectedOption == 1) {\n      this.calcAmount = this.revisePay.get('revPercent').value * this.monthlyTakeHome / 100 + Number(this.monthlyTakeHome);\n      this.yrcalcAmount = this.calcAmount * 12;\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\n    } else {\n      this.calcAmount = this.revisePay.get('revPercent').value;\n      this.yrcalcAmount = this.calcAmount * 12;\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\n    }\n  }\n  monyear = new FormControl(moment());\n  chosenYearHandler(normalizedYear) {\n    const ctrlValue = this.monyear.value;\n    ctrlValue.year(normalizedYear.year());\n    this.monyear.setValue(ctrlValue);\n  }\n  chosenMonthHandler(normalizedMonth, datepicker) {\n    const ctrlValue = this.monyear.value;\n    ctrlValue.month(normalizedMonth.month());\n    this.monyear.setValue(ctrlValue);\n    datepicker.close();\n    this.revisePay.patchValue({\n      monthyear: this.monyear.value\n    });\n  }\n  reviseProcess() {\n    this.payrollgenform.get('take_home').setValue(this.calcAmount);\n    let newAmount = this.calcAmount;\n    this.getAmount(this.calcAmount);\n    this.showpreference = true;\n  }\n  static ɵfac = function EmppayrollthbComponent_Factory(t) {\n    return new (t || EmppayrollthbComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PayingempShareService), i0.ɵɵdirectiveInject(i4.PayingempService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i6.ToastrService), i0.ɵɵdirectiveInject(i7.DatePipe));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmppayrollthbComponent,\n    selectors: [[\"app-emppayrollthb\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 280,\n    vars: 84,\n    consts: [[1, \"container-fluid\"], [1, \"col-12\", \"mt-5\", \"row\"], [1, \"col-6\", \"name\"], [1, \"violet\"], [1, \"col-2\", \"mt-3\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [2, \"font-weight\", \"bold\"], [\"ngInit\", \"checked=true\", 1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"col-12\", \"mt-3\", \"row\", \"pl-0\"], [1, \"col-4\"], [1, \"example-form\", \"col-12\"], [1, \"example-full-width\", \"col-12\"], [\"type\", \"text\", \"placeholder\", \"\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", \"focusout\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"template_id\", \"placeholder\", \"Template\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-2\"], [\"data-bs-target\", \"#revisionModal\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-primary\", \"text-center\", 2, \"margin-left\", \"10px\", 3, \"disabled\"], [3, \"formGroup\"], [1, \"row\", \"col-12\", \"border\", \"d-flex\", \"align-items-center\", \"bg-light\", \"text-dark\", \"height\"], [1, \"col-3\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"skyblue\", \"mt-3\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\", \"Prepend\"], [\"type\", \"number\", \"formControlName\", \"take_home\", 1, \"form-control\", \"perwidth\", \"col-4\", 3, \"input\"], [\"appearance\", \"outline\", 1, \"custom-mat-form-field\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"takehome_monthly\", 1, \"alignValue\", 3, \"readonly\"], [\"matInput\", \"\", \"formControlName\", \"takehome_yearly\", 1, \"alignValue\", 3, \"readonly\"], [\"type\", \"number\", \"formControlName\", \"takehomeWBD\", 1, \"form-control\", \"perwidth\", \"col-4\", \"custom-mat-form-field\", 3, \"readonly\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"takehome_monthlyWBD\", 1, \"alignValue\", 3, \"readonly\"], [\"matInput\", \"\", \"formControlName\", \"takehome_yearlyWBD\", 1, \"alignValue\", 3, \"readonly\"], [\"type\", \"number\", \"formControlName\", \"standard_ctc\", 1, \"form-control\", \"perwidth\", \"col-4\", 3, \"readonly\", \"input\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"ctc_monthly\", 1, \"alignValue\", 3, \"readonly\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"ctc_yearly\", 1, \"alignValue\", 3, \"readonly\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"skyblue\"], [1, \"col-3\", 2, \"cursor\", \"pointer\"], [\"type\", \"number\", \"formControlName\", \"gross_pay\", 1, \"form-control\", \"perwidth\", \"col-4\", 3, \"readonly\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"gross_pay_monthly\", 1, \"alignValue\", 3, \"readonly\"], [\"matInput\", \"\", \"formControlName\", \"gross_pay_yearly\", 1, \"alignValue\", 3, \"readonly\"], [\"formArrayName\", \"segment_data\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"skyblue\", \"mt-5\"], [1, \"col-3\", \"Segment\", \"mt-1\", 3, \"click\"], [\"formArrayName\", \"companycontribution\", \"class\", \" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\", 4, \"ngIf\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"skyblue\", \"mt-5\", \"mb-3\"], [\"formArrayName\", \"employeecontribution\", \"class\", \" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\", 4, \"ngIf\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"skyblue\", \"mb-5\"], [\"type\", \"submit\", \"data-bs-target\", \"#modalPay\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-outline-primary\", \"text-center\", 2, \"border-radius\", \"40px\", \"margin-left\", \"10px\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\", \"text-center\", 2, \"border-radius\", \"40px\", \"margin-left\", \"10px\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", \"text-center\", 2, \"border-radius\", \"40px\", \"margin-left\", \"10px\", 3, \"click\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myLargeModalLabel\", \"id\", \"modalPay\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", \"bd-example-modal-lg\"], [1, \"modal-dialog\", \"modal-lg\"], [1, \"modal-content\", 2, \"width\", \"127%\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"page\"], [\"id\", \"tablesection\", 1, \"mt-5\"], [\"id\", \"previewTable\", 2, \"width\", \"90%\", \"font-family\", \"Calibri\", \"margin-left\", \"2%\"], [\"colspan\", \"3\", \"id\", \"ths\", 1, \"bg-info\", \"text-white\", 2, \"font-size\", \"large\", \"text-align\", \"center\", \"font-weight\", \"bold\"], [\"id\", \"ths\", 2, \"font-weight\", \"bold\"], [4, \"ngFor\", \"ngForOf\"], [2, \"background-color\", \"#17a2b8\", \"color\", \"white\"], [\"colspan\", \"3\"], [\"id\", \"tds\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"myLargeModalLabel\", \"id\", \"revisionModal\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\", \"bd-example-modal-lg\"], [1, \"modal-dialog\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", 2, \"font-family\", \"'Inter'\"], [1, \"row\"], [1, \"col-md-6\"], [\"aria-label\", \"Select an option\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"1\", 1, \"fonts\"], [2, \"font-family\", \"'Inter'\"], [\"value\", \"2\", 1, \"fonts\"], [\"matInput\", \"\", \"formControlName\", \"revPercent\", 3, \"input\"], [1, \"row\", 2, \"margin-left\", \"22%\", \"font-size\", \"medium\"], [2, \"color\", \"red\", \"margin-left\", \"4%\", \"font-size\", \"large\"], [2, \"color\", \"red\", \"margin-left\", \"6%\", \"font-size\", \"large\"], [1, \"col-md-8\"], [1, \"col-md-2\"], [1, \"btn\", \"btn-primary\", \"text-center\", 3, \"click\"], [\"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-info\", \"text-center\"], [3, \"value\", \"focusout\"], [3, \"value\", \"click\"], [3, \"formGroupName\"], [1, \"Segment\", 3, \"click\"], [\"class\", \"input-group\", 4, \"ngIf\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount\", 1, \"alignValue\", 3, \"readonly\"], [\"matInput\", \"\", \"formControlName\", \"amount_yearly\", 1, \"alignValue\", 3, \"readonly\"], [\"formArrayName\", \"paycomponent_data\", \"class\", \"Segment_value ml-1 border bg-light  pt-5 pb-5 pl-2 pr-2 mt-2 mb-2 \", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"segment_percentage\", 1, \"form-control\", \"perwidthBack\", \"col-3\", 3, \"input\"], [1, \"input-group-append\"], [1, \"input-group-text\", \"Append\"], [\"formArrayName\", \"paycomponent_data\", 1, \"Segment_value\", \"ml-1\", \"border\", \"bg-light\", \"pt-5\", \"pb-5\", \"pl-2\", \"pr-2\", \"mt-2\", \"mb-2\"], [\"class\", \"row col-12 d-flex align-items-center  ml-1 \", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"col-12\"], [1, \"col-3\", \"text-danger\", \"text-center\", 2, \"margin-left\", \"-80px\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", \"ml-1\", 3, \"formGroupName\"], [\"class\", \"col-3\", 4, \"ngIf\"], [\"appearance\", \"outline\", 2, \"width\", \"130px\"], [\"formControlName\", \"type\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"matInput\", \"\", \"placeholder\", \"Start Date\", \"formControlName\", \"from_date\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"startDatePicker\", \"\"], [\"matInput\", \"\", \"placeholder\", \"End Date\", \"formControlName\", \"to_date\", 3, \"matDatepicker\"], [\"endDatePicker\", \"\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount\", 1, \"alignValue\", 3, \"focusout\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount_yearly\", 1, \"alignValue\", 3, \"readonly\"], [\"type\", \"number\", \"formControlName\", \"paycomponent_percentage\", \"min\", \"0\", \"max\", \"100\", 1, \"form-control\", \"perwidthBack\", \"col-3\", 3, \"input\"], [\"formArrayName\", \"deductions\", \"class\", \" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\", 4, \"ngIf\"], [\"formArrayName\", \"deductions\", 1, \"border\", \"bg-light\", \"Segment_value\", \"pt-5\", \"pb-5\", \"pl-5\", \"pr-2\", \"mt-2\", \"mb-2\", \"ml-1\"], [1, \"skyblue\", \"bg-light\"], [\"class\", \"row col-12 d-flex align-items-center \", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"col-12\", \"d-flex\", \"align-items-center\", 3, \"formGroupName\"], [\"matInput\", \"\", \"formControlName\", \"amount_yearly\", \"readonly\", \"\", 1, \"alignValue\"], [\"formArrayName\", \"companycontribution\", 1, \"border\", \"bg-light\", \"Segment_value\", \"pt-5\", \"pb-5\", \"pl-5\", \"pr-2\", \"mt-2\", \"mb-2\", \"ml-1\"], [\"class\", \"row col-12 d-flex align-items-center\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-3\", \"text-danger\", \"text-center\", 2, \"margin-left\", \"35px\"], [1, \"col-3\", \"text-danger\", \"text-right\", 2, \"margin-left\", \"-100px\"], [1, \"Employeespan\", \"row\", \"col-5\"], [1, \"col-7\", 2, \"text-align\", \"left\", \"display\", \"flex\", \"align-items\", \"center\"], [1, \"col-4\", \"perc\", 2, \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"center\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount\", \"readonly\", \"true\", 1, \"alignValue\"], [\"matInput\", \"\", \"formControlName\", \"amount_yearly\", \"readonly\", \"true\", 1, \"alignValue\"], [\"formArrayName\", \"employeecontribution\", 1, \"border\", \"bg-light\", \"Segment_value\", \"pt-5\", \"pb-5\", \"pl-5\", \"pr-2\", \"mt-2\", \"mb-2\", \"ml-1\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount\", \"readonly\", \"\", 1, \"alignValue\"], [2, \"font-size\", \"larger\", \"font-weight\", \"600\", \"margin-top\", \"3%\", \"margin-left\", \"3%\"], [1, \"col-sm-6\"], [2, \"margin-top\", \"4%\", \"margin-left\", \"17%\"], [1, \"col-sm-4\"], [\"appearance\", \"outline\", 2, \"margin-top\", \"2%\", \"margin-left\", \"-53%\"], [\"matInput\", \"\", \"placeholder\", \"Revised Date\", \"formControlName\", \"revisedate\", 3, \"matDatepicker\"], [1, \"row\", 2, \"margin-top\", \"4%\"], [2, \"margin-left\", \"16%\"], [\"dateFormat2\", \"\", 1, \"smallinput\", 2, \"width\", \"43%\", \"margin-left\", \"-34%\"], [\"matInput\", \"\", \"placeholder\", \"Month and Year\", \"formControlName\", \"monthyear\", 3, \"matDatepicker\", \"formControl\"], [\"startView\", \"multi-year\", \"panelClass\", \"example-month-picker\", 3, \"yearSelected\", \"monthSelected\"], [\"dp\", \"\"], [\"id\", \"tds\", 2, \"background-color\", \"#17a2b8\", \"color\", \"white\"]],\n    template: function EmppayrollthbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"span\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" 's Pay Structure \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"mat-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_8_listener($event) {\n          return ctx.vpf = $event;\n        })(\"change\", function EmppayrollthbComponent_Template_mat_checkbox_change_8_listener() {\n          return ctx._check(ctx.vpf, \"vpf\");\n        });\n        i0.ɵɵelementStart(9, \"span\", 6);\n        i0.ɵɵtext(10, \"VPF\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 4)(12, \"mat-checkbox\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_12_listener($event) {\n          return ctx.std_pf = $event;\n        })(\"change\", function EmppayrollthbComponent_Template_mat_checkbox_change_12_listener() {\n          return ctx._check(ctx.std_pf, \"std_pf\");\n        });\n        i0.ɵɵelementStart(13, \"span\", 6);\n        i0.ɵɵtext(14, \"Std.PF\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"mat-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_16_listener($event) {\n          return ctx.no_esi = $event;\n        })(\"change\", function EmppayrollthbComponent_Template_mat_checkbox_change_16_listener() {\n          return ctx._check(ctx.no_esi, \"no_esi\");\n        });\n        i0.ɵɵelementStart(17, \"span\", 6);\n        i0.ɵɵtext(18, \"NO ESI\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(19, \"div\", 8)(20, \"div\", 9)(21, \"form\", 10)(22, \"mat-form-field\", 11)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Employee Grade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 12);\n        i0.ɵɵelementStart(26, \"mat-autocomplete\", null, 13);\n        i0.ɵɵtemplate(28, EmppayrollthbComponent_mat_option_28_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"form\", 10)(31, \"mat-form-field\", 11)(32, \"mat-label\");\n        i0.ɵɵtext(33, \"Template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-select\", 15);\n        i0.ɵɵtemplate(35, EmppayrollthbComponent_mat_option_35_Template, 2, 2, \"mat-option\", 16);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(36, \"div\", 17);\n        i0.ɵɵelementStart(37, \"div\", 17)(38, \"button\", 18);\n        i0.ɵɵtext(39, \"Salary Revise\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(40, \"div\", 0)(41, \"div\", 0)(42, \"div\", 0)(43, \"form\", 19)(44, \"div\", 20)(45, \"div\", 21);\n        i0.ɵɵtext(46, \"SALARY COMPONENTS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 21);\n        i0.ɵɵtext(48, \" CALCULATION\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 21);\n        i0.ɵɵtext(50, \"MONTHLY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 21);\n        i0.ɵɵtext(52, \" YEARLY\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"div\", 22)(54, \"div\", 21);\n        i0.ɵɵtext(55, \"Take Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 21)(57, \"div\", 23)(58, \"div\", 24)(59, \"span\", 25);\n        i0.ɵɵtext(60, \"\\u20B9\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"input\", 26);\n        i0.ɵɵlistener(\"input\", function EmppayrollthbComponent_Template_input_input_61_listener() {\n          return ctx.getAmount(ctx.payrollgenform.value.take_home);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(62, \"div\", 21)(63, \"mat-form-field\", 27);\n        i0.ɵɵelement(64, \"input\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(65, \"div\", 21)(66, \"mat-form-field\", 27);\n        i0.ɵɵelement(67, \"input\", 29);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(68, \"div\", 22)(69, \"div\", 21);\n        i0.ɵɵtext(70, \"Take Home with Bonus & Statutory Deductions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"div\", 21)(72, \"div\", 23)(73, \"div\", 24)(74, \"span\", 25);\n        i0.ɵɵtext(75, \"\\u20B9\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(76, \"input\", 30);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(77, \"div\", 21)(78, \"mat-form-field\", 27);\n        i0.ɵɵelement(79, \"input\", 31);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(80, \"div\", 21)(81, \"mat-form-field\", 27);\n        i0.ɵɵelement(82, \"input\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(83, \"div\", 22)(84, \"div\", 21);\n        i0.ɵɵtext(85, \"CTC\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"div\", 21)(87, \"div\", 23)(88, \"div\", 24)(89, \"span\", 25);\n        i0.ɵɵtext(90, \"\\u20B9\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(91, \"input\", 33);\n        i0.ɵɵlistener(\"input\", function EmppayrollthbComponent_Template_input_input_91_listener() {\n          return ctx.getAmount(ctx.payrollgenform.value.takehome);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(92, \"div\", 21)(93, \"mat-form-field\", 27);\n        i0.ɵɵelement(94, \"input\", 34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(95, \"div\", 21)(96, \"mat-form-field\", 35);\n        i0.ɵɵelement(97, \"input\", 36);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(98, \"div\", 37)(99, \"div\", 38);\n        i0.ɵɵtext(100, \"Gross pay\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"div\", 21)(102, \"div\", 23)(103, \"div\", 24)(104, \"span\", 25);\n        i0.ɵɵtext(105, \"\\u20B9\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(106, \"input\", 39);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(107, \"div\", 21)(108, \"mat-form-field\", 35);\n        i0.ɵɵelement(109, \"input\", 40);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(110, \"div\", 21)(111, \"mat-form-field\", 35);\n        i0.ɵɵelement(112, \"input\", 41);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(113, \"div\", 42);\n        i0.ɵɵtemplate(114, EmppayrollthbComponent_div_114_Template, 14, 6, \"div\", 43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(115, EmppayrollthbComponent_ng_container_115_Template, 5, 1, \"ng-container\", 44);\n        i0.ɵɵelementStart(116, \"div\", 45)(117, \"div\", 46);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_div_click_117_listener() {\n          return ctx.showhidecc(ctx.payrollgenform.get(\"companycontribution\").value);\n        });\n        i0.ɵɵtext(118, \"Company Contribution\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(119, EmppayrollthbComponent_div_119_Template, 10, 3, \"div\", 47);\n        i0.ɵɵelementStart(120, \"div\", 48)(121, \"div\", 46);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_div_click_121_listener() {\n          return ctx.showhideec(ctx.payrollgenform.get(\"companycontribution\").value);\n        });\n        i0.ɵɵtext(122, \"Employee Contribution\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(123, EmppayrollthbComponent_div_123_Template, 10, 3, \"div\", 49);\n        i0.ɵɵtemplate(124, EmppayrollthbComponent_div_124_Template, 28, 7, \"div\", 44);\n        i0.ɵɵelementStart(125, \"div\", 50)(126, \"button\", 51);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_button_click_126_listener() {\n          return ctx.previewPay();\n        });\n        i0.ɵɵtext(127, \"Preview\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(128, \"button\", 52);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_button_click_128_listener() {\n          return ctx.Formsubmission();\n        });\n        i0.ɵɵtext(129, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(130, \"button\", 53);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_button_click_130_listener() {\n          return ctx.Submit();\n        });\n        i0.ɵɵtext(131, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(132, \"div\", 54)(133, \"div\", 55)(134, \"div\", 56)(135, \"div\", 57)(136, \"h2\", 58);\n        i0.ɵɵtext(137, \"Preview Pay Structure \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(138, \"button\", 59)(139, \"span\", 60);\n        i0.ɵɵtext(140, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(141, \"div\", 61)(142, \"mat-card\")(143, \"html\")(144, \"body\")(145, \"div\", 62)(146, \"main\")(147, \"section\");\n        i0.ɵɵelement(148, \"br\");\n        i0.ɵɵelementStart(149, \"div\", 63)(150, \"table\", 64)(151, \"tr\")(152, \"th\", 65);\n        i0.ɵɵtext(153, \" Pay Structure\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(154, \"tr\")(155, \"th\", 66);\n        i0.ɵɵtext(156, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"th\", 66);\n        i0.ɵɵtext(158, \"Gross Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(159, \"th\", 66);\n        i0.ɵɵtext(160, \"Gross Amount\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(161, \"tr\")(162, \"th\", 66);\n        i0.ɵɵtext(163, \"Earnings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(164, \"th\", 66);\n        i0.ɵɵtext(165, \"MONTHLY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(166, \"th\", 66);\n        i0.ɵɵtext(167, \"YEARLY\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(168, \"tr\")(169, \"th\", 66);\n        i0.ɵɵtext(170, \"GROSS PAY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\", 66);\n        i0.ɵɵtext(172);\n        i0.ɵɵpipe(173, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(174, \"th\", 66);\n        i0.ɵɵtext(175);\n        i0.ɵɵpipe(176, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(177, EmppayrollthbComponent_ng_container_177_Template, 11, 10, \"ng-container\", 67);\n        i0.ɵɵelementStart(178, \"tr\", 68)(179, \"td\", 69);\n        i0.ɵɵtext(180, \" Company Contribution \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(181, EmppayrollthbComponent_tr_181_Template, 9, 9, \"tr\", 67);\n        i0.ɵɵelementStart(182, \"tr\", 68);\n        i0.ɵɵelement(183, \"td\", 70);\n        i0.ɵɵelementStart(184, \"td\", 70);\n        i0.ɵɵtext(185);\n        i0.ɵɵpipe(186, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(187, \"td\", 70);\n        i0.ɵɵtext(188);\n        i0.ɵɵpipe(189, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(190, \"tr\", 68)(191, \"td\", 69);\n        i0.ɵɵtext(192, \" Employee Contribution \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(193, EmppayrollthbComponent_tr_193_Template, 9, 9, \"tr\", 67);\n        i0.ɵɵelementStart(194, \"tr\", 68);\n        i0.ɵɵelement(195, \"td\", 70);\n        i0.ɵɵelementStart(196, \"td\", 70);\n        i0.ɵɵtext(197);\n        i0.ɵɵpipe(198, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(199, \"td\", 70);\n        i0.ɵɵtext(200);\n        i0.ɵɵpipe(201, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(202, \"tr\")(203, \"th\", 66);\n        i0.ɵɵtext(204, \"TAKE HOME\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(205, \"th\", 66);\n        i0.ɵɵtext(206);\n        i0.ɵɵpipe(207, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(208, \"th\", 66);\n        i0.ɵɵtext(209);\n        i0.ɵɵpipe(210, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(211, \"tr\")(212, \"th\", 66);\n        i0.ɵɵtext(213, \"TAKE HOME WITH BONUS & DEDUCTIONS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(214, \"th\", 66);\n        i0.ɵɵtext(215);\n        i0.ɵɵpipe(216, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(217, \"th\", 66);\n        i0.ɵɵtext(218);\n        i0.ɵɵpipe(219, \"currency\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(220, \"tr\")(221, \"th\", 66);\n        i0.ɵɵtext(222, \"CTC\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(223, \"th\", 66);\n        i0.ɵɵtext(224);\n        i0.ɵɵpipe(225, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(226, \"th\", 66);\n        i0.ɵɵtext(227);\n        i0.ɵɵpipe(228, \"currency\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(229, \"br\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(230, \"div\", 71)(231, \"button\", 72);\n        i0.ɵɵtext(232, \"Close\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(233, \"div\", 73)(234, \"div\", 74)(235, \"div\", 56)(236, \"div\", 57)(237, \"h2\", 75);\n        i0.ɵɵtext(238, \"Select the Salary Revision Type \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(239, \"button\", 59)(240, \"span\", 60);\n        i0.ɵɵtext(241, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(242, \"div\", 61)(243, \"div\", 76)(244, \"div\", 77)(245, \"mat-radio-group\", 78);\n        i0.ɵɵlistener(\"ngModelChange\", function EmppayrollthbComponent_Template_mat_radio_group_ngModelChange_245_listener($event) {\n          return ctx.selectedOption = $event;\n        })(\"change\", function EmppayrollthbComponent_Template_mat_radio_group_change_245_listener() {\n          return ctx.onSelectionChange();\n        });\n        i0.ɵɵelementStart(246, \"mat-radio-button\", 79)(247, \"span\", 80);\n        i0.ɵɵtext(248, \" Revise CTC by Percentage\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(249, \"mat-radio-button\", 81)(250, \"span\", 80);\n        i0.ɵɵtext(251, \" Enter the new Monthly Take Home \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(252, \"div\", 77)(253, \"form\", 19)(254, \"div\")(255, \"mat-form-field\")(256, \"input\", 82);\n        i0.ɵɵlistener(\"input\", function EmppayrollthbComponent_Template_input_input_256_listener() {\n          return ctx.calculateVal();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(257, EmppayrollthbComponent_span_257_Template, 3, 0, \"span\", 44);\n        i0.ɵɵtemplate(258, EmppayrollthbComponent_span_258_Template, 3, 0, \"span\", 44);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(259, \"div\", 83);\n        i0.ɵɵtext(260, \" Revised Monthly Take Home : \");\n        i0.ɵɵelementStart(261, \"span\", 84)(262, \"span\");\n        i0.ɵɵtext(263, \"\\u20B9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(264);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(265, \"div\", 83);\n        i0.ɵɵtext(266, \" Revised Yearly Take Home : \");\n        i0.ɵɵelementStart(267, \"span\", 85)(268, \"span\");\n        i0.ɵɵtext(269, \"\\u20B9\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(270);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(271, \"hr\");\n        i0.ɵɵelementStart(272, \"div\", 76);\n        i0.ɵɵelement(273, \"div\", 86);\n        i0.ɵɵelementStart(274, \"div\", 87)(275, \"button\", 88);\n        i0.ɵɵlistener(\"click\", function EmppayrollthbComponent_Template_button_click_275_listener() {\n          return ctx.reviseProcess();\n        });\n        i0.ɵɵtext(276, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(277, \"div\", 87)(278, \"button\", 89);\n        i0.ɵɵtext(279, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(27);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.employee_data == null ? null : ctx.employee_data.full_name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.vpf);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.std_pf);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.no_esi);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gradedata);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templatedrop);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.enableRevise);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.payrollgenform);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"readonly\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payrollgenform.get(\"segment_data\")[\"controls\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.deductPatchrow);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.is_company);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.is_pf);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showpreference);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.payrollgenform.get(\"take_home\").valid);\n        i0.ɵɵadvance(44);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(173, 48, ctx.payrollgenform.get(\"gross_pay_monthly\").value, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(176, 51, ctx.payrollgenform.get(\"gross_pay_yearly\").value, \"INR\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payrollgenform.get(\"segment_data\")[\"controls\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payrollgenform.get(\"companycontribution\")[\"controls\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(186, 54, ctx.totalCompany, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(189, 57, ctx.totalCompanyYearly, \"INR\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.payrollgenform.get(\"employeecontribution\")[\"controls\"]);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(198, 60, ctx.totalEmployee, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(201, 63, ctx.totalEmployeeYearly, \"INR\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(207, 66, ctx.payrollgenform.get(\"takehome_monthly\").value, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(210, 69, ctx.payrollgenform.get(\"takehome_yearly\").value, \"INR\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(216, 72, ctx.payrollgenform.get(\"takehome_monthlyWBD\").value, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(219, 75, ctx.payrollgenform.get(\"takehome_yearlyWBD\").value, \"INR\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(225, 78, ctx.payrollgenform.get(\"ctc_monthly\").value, \"INR\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(228, 81, ctx.payrollgenform.get(\"ctc_yearly\").value, \"INR\"));\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.revisePay);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPercent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showRupee);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.calcAmount);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.yrcalcAmount);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MinValidator, i2.MaxValidator, i2.FormControlDirective, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName, i2.NgModel, i2.NgForm, i8.MatCard, i9.MatInput, i10.MatFormField, i10.MatLabel, i10.MatSuffix, i11.MatSelect, i12.MatOption, i13.MatAutocomplete, i13.MatAutocompleteTrigger, i14.MatCheckbox, i15.MatRadioGroup, i15.MatRadioButton, i16.MatDatepicker, i16.MatDatepickerInput, i16.MatDatepickerToggle, i7.CurrencyPipe],\n    styles: [\".name[_ngcontent-%COMP%] {\\n  font-size: 30px;\\n}\\n\\n.body[_ngcontent-%COMP%] {\\n  background-color: white;\\n}\\n\\n.skyblue[_ngcontent-%COMP%] {\\n  background-color: white;\\n}\\n\\n.perwidth[_ngcontent-%COMP%] {\\n  width: 30%;\\n  border-right-color: rgb(77, 77, 77);\\n  border-top-color: rgb(77, 77, 77);\\n  border-bottom-color: rgb(77, 77, 77);\\n  outline: none;\\n  padding-right: 2px;\\n  background-color: white;\\n}\\n\\n.perwidthBack[_ngcontent-%COMP%] {\\n  width: 30%;\\n  border-left-color: rgb(77, 77, 77);\\n  border-top-color: rgb(77, 77, 77);\\n  border-bottom-color: rgb(77, 77, 77);\\n  outline: none;\\n  padding-right: 0;\\n  background-color: white;\\n}\\n\\n.Prepend[_ngcontent-%COMP%] {\\n  border-left-color: rgb(77, 77, 77);\\n  border-top-color: rgb(77, 77, 77);\\n  border-bottom-color: rgb(77, 77, 77);\\n}\\n\\n.Append[_ngcontent-%COMP%] {\\n  border-right-color: rgb(77, 77, 77);\\n  border-top-color: rgb(77, 77, 77);\\n  border-bottom-color: rgb(77, 77, 77);\\n}\\n\\n.alignValue[_ngcontent-%COMP%] {\\n  text-align: right;\\n}\\n\\n.height[_ngcontent-%COMP%] {\\n  height: 50px;\\n}\\n\\n.Segment[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n\\n.Segment_value[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n}\\n\\n  .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: red;\\n}\\n\\n.violet[_ngcontent-%COMP%] {\\n  color: blueviolet;\\n}\\n\\n.Employeespan[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n  border-radius: 4px;\\n  height: 40px;\\n  background-color: white;\\n  display: flex;\\n  justify-content: space-between;\\n  padding: 0;\\n}\\n\\n.perc[_ngcontent-%COMP%] {\\n  border-left-color: #e9ecef;\\n  background-color: #e9ecef;\\n  border-top-right-radius: 4px;\\n  border-bottom-right-radius: 4px;\\n}\\n\\n#previewTable[_ngcontent-%COMP%], #ths[_ngcontent-%COMP%], #tds[_ngcontent-%COMP%] {\\n  border: 2px solid black;\\n  border-collapse: collapse;\\n}\\n\\n@media print {\\n  body[_ngcontent-%COMP%] {\\n    margin: 0;\\n  }\\n  .page[_ngcontent-%COMP%] {\\n    margin: 0;\\n    box-shadow: none;\\n  }\\n  header[_ngcontent-%COMP%] {\\n    text-align: center;\\n    padding-bottom: 20px;\\n    border-bottom: 1px solid #ccc;\\n  }\\n  main[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n}\\n.smallinput[_ngcontent-%COMP%] {\\n  width: 120px;\\n}\\n\\n.spacingForm[_ngcontent-%COMP%] {\\n  margin-left: 30px;\\n}\\n\\n.custom-background[_ngcontent-%COMP%]   .mat-form-field-outline[_ngcontent-%COMP%] {\\n  background: #C7C8CC;\\n}\\n\\n  .custom-mat-form-field .mat-form-field-outline {\\n  background: #EEEDEB;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGF5aW5nZW1wbG95ZWUvZW1wcGF5cm9sbHRoYi9lbXBwYXlyb2xsdGhiLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZUFBQTtBQUFKOztBQUVBO0VBQ0ksdUJBQUE7QUFDSjs7QUFDQTtFQUNJLHVCQUFBO0FBRUo7O0FBQUE7RUFDSSxVQUFBO0VBQ0EsbUNBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7QUFHSjs7QUFEQTtFQUNJLFVBQUE7RUFDQSxrQ0FBQTtFQUNBLGlDQUFBO0VBQ0Esb0NBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtBQUlKOztBQUZBO0VBQ0ksa0NBQUE7RUFDQSxpQ0FBQTtFQUNBLG9DQUFBO0FBS0o7O0FBRkE7RUFDSSxtQ0FBQTtFQUNBLGlDQUFBO0VBQ0Esb0NBQUE7QUFLSjs7QUFGQTtFQUNJLGlCQUFBO0FBS0o7O0FBSEE7RUFDSSxZQUFBO0FBTUo7O0FBQUE7RUFDSSxpQkFBQTtFQUNBLGVBQUE7QUFHSjs7QUFEQTtFQUNJLG1CQUFBO0FBSUo7O0FBR0E7RUFDSSxVQUFBO0FBQUo7O0FBRUU7RUFDRSxpQkFBQTtBQUNKOztBQU1BO0VBQ0ksdUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUVBLFVBQUE7QUFKSjs7QUFNQTtFQUNJLDBCQUFBO0VBQ0EseUJBQUE7RUFDQSw0QkFBQTtFQUNBLCtCQUFBO0FBSEo7O0FBTUE7OztFQUdFLHVCQUFBO0VBQ0EseUJBQUE7QUFIRjs7QUFNQTtFQUNJO0lBQ0UsU0FBQTtFQUhKO0VBT0U7SUFDRSxTQUFBO0lBQ0EsZ0JBQUE7RUFMSjtFQVFFO0lBQ0Usa0JBQUE7SUFDQSxvQkFBQTtJQUNBLDZCQUFBO0VBTko7RUFTRTtJQUNFLGdCQUFBO0VBUEo7QUFDRjtBQXNCRTtFQUNFLFlBQUE7QUFwQko7O0FBeUJFO0VBQ0UsaUJBQUE7QUF0Qko7O0FBMEJFO0VBQ0UsbUJBQUE7QUF2Qko7O0FBMEJBO0VBQ0UsbUJBQUE7QUF2QkYiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLm5hbWV7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbn1cclxuLmJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG4uc2t5Ymx1ZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7XHJcbn1cclxuLnBlcndpZHRoe1xyXG4gICAgd2lkdGg6MzAlO1xyXG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZ2IoNzcsIDc3LCA3Nyk7XHJcbiAgICBib3JkZXItdG9wLWNvbG9yOiByZ2IoNzcsIDc3LCA3Nyk7XHJcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2IoNzcsIDc3LCA3Nyk7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgcGFkZGluZy1yaWdodDoycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG4ucGVyd2lkdGhCYWNre1xyXG4gICAgd2lkdGg6MzAlO1xyXG4gICAgYm9yZGVyLWxlZnQtY29sb3I6IHJnYig3NywgNzcsIDc3KTtcclxuICAgIGJvcmRlci10b3AtY29sb3I6IHJnYig3NywgNzcsIDc3KTtcclxuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJnYig3NywgNzcsIDc3KTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuLlByZXBlbmR7XHJcbiAgICBib3JkZXItbGVmdC1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICAgYm9yZGVyLXRvcC1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICAgXHJcbn1cclxuLkFwcGVuZHtcclxuICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICAgYm9yZGVyLXRvcC1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmdiKDc3LCA3NywgNzcpO1xyXG4gICBcclxufVxyXG4uYWxpZ25WYWx1ZXtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcbi5oZWlnaHR7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbi8vIC5tdC01e1xyXG4vLyAgICAgbWFyZ2luLXRvcDogMHJlbSAhaW1wb3J0YW50O1xyXG4vLyB9XHJcbi5TZWdtZW50e1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLlNlZ21lbnRfdmFsdWV7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcbi8vICp7XHJcbi8vICAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4vLyAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuLy8gfVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICB9XHJcbiAgLnZpb2xldHtcclxuICAgIGNvbG9yOmJsdWV2aW9sZXQ7XHJcbiAgfVxyXG4vLyAuZm9ybS1jb250cm9se1xyXG4vLyAgICAgdHJhbnNpdGlvbjogbm9uZTtcclxuLy8gICAgIGJhY2tncm91bmQtY2xpcDogbm9uZTtcclxuLy8gICAgIG91dGxpbmU6IG5vbmU7XHJcbi8vIH1cclxuLkVtcGxveWVlc3BhbntcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAvLyBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG4ucGVyY3tcclxuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjZTllY2VmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWNlZjtcclxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4O1xyXG59XHJcblxyXG4jcHJldmlld1RhYmxlLFxyXG4jdGhzLFxyXG4jdGRzIHtcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG5AbWVkaWEgcHJpbnQge1xyXG4gICAgYm9keSB7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgXHJcbiAgICB9XHJcbiAgXHJcbiAgICAucGFnZSB7XHJcbiAgICAgIG1hcmdpbjogMDtcclxuICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIH1cclxuICBcclxuICAgIGhlYWRlciB7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgbWFpbiB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIC8vICoge1xyXG4gIC8vICAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIiwgc2Fucy1zZXJpZjtcclxuICAvLyB9XHJcbiAgLy8gLmZvbnRzXHJcbiAgLy8ge1xyXG4gIC8vICAgZm9udC1mYW1pbHk6IFwiSW50ZXJcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50O1xyXG4gIC8vIH1cclxuICAvLyBtYXQtcmFkaW8tZ3JvdXAgbWF0LXJhZGlvLWJ1dHRvbi5mb250cyB7XHJcbiAgLy8gICBmb250LWZhbWlseTogXCJJbnRlclwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XHJcbiAgLy8gfVxyXG4gIC5zbWFsbGlucHV0e1xyXG4gICAgd2lkdGg6IDEyMHB4O1xyXG4gICBcclxuICB9XHJcblxyXG4gIFxyXG4gIC5zcGFjaW5nRm9ybSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDsgXHJcblxyXG4gIH1cclxuXHJcbiAgLmN1c3RvbS1iYWNrZ3JvdW5kIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcclxuICAgIGJhY2tncm91bmQ6ICNDN0M4Q0M7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLW1hdC1mb3JtLWZpZWxkIC5tYXQtZm9ybS1maWVsZC1vdXRsaW5lIHtcclxuICBiYWNrZ3JvdW5kOiAjRUVFREVCO1xyXG59XHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport const DATE_FORMAT_2 = {\n  parse: {\n    dateInput: 'MM/YYYY'\n  },\n  display: {\n    dateInput: 'MMM YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport class FullCustomDateFormat2 {\n  static ɵfac = function FullCustomDateFormat2_Factory(t) {\n    return new (t || FullCustomDateFormat2)();\n  };\n  static ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: FullCustomDateFormat2,\n    selectors: [[\"\", \"dateFormat2\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    }, {\n      provide: MAT_DATE_FORMATS,\n      useValue: DATE_FORMAT_2\n    }])]\n  });\n}","map":{"version":3,"names":["FormArray","FormControl","FormGroup","Validators","switchMap","DateAdapter","MAT_DATE_FORMATS","MAT_DATE_LOCALE","MAT_MOMENT_DATE_ADAPTER_OPTIONS","MomentDateAdapter","moment","i0","ɵɵelementStart","ɵɵlistener","EmppayrollthbComponent_mat_option_28_Template_mat_option_focusout_0_listener","restoredCtx","ɵɵrestoreView","_r15","option_r13","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","LevelClick","ɵɵtext","ɵɵelementEnd","ɵɵproperty","name","ɵɵadvance","ɵɵtextInterpolate1","EmppayrollthbComponent_mat_option_35_Template_mat_option_click_0_listener","_r18","option_r16","ctx_r17","TemplateClick","id","EmppayrollthbComponent_div_114_div_6_Template_input_input_1_listener","_r24","ctx_r23","_letcalculate","payrollgenform","value","gross_pay","type_r37","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","_r38","_r39","EmppayrollthbComponent_div_114_div_13_div_2_div_3_Template_mat_select_selectionChange_5_listener","$event","_r42","i_r20","index","ctx_r40","onBonusTypeChange","ɵɵtemplate","EmppayrollthbComponent_div_114_div_13_div_2_div_3_mat_option_6_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_3_ng_container_7_Template","ctx_r28","deduction_type_data","selectedBonusType","EmppayrollthbComponent_div_114_div_13_div_2_div_4_Template_input_focusout_2_listener","_r45","ctx_r43","calculateAmountYearly","type_r51","_r52","_r53","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_Template_mat_select_selectionChange_5_listener","_r56","ctx_r54","onBonusTypeChanges","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_mat_option_6_Template","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_ng_container_7_Template","ctx_r46","selectedBonusTypes","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_2_Template_input_focusout_2_listener","_r59","ctx_r57","calculateAmountYearlys","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_1_Template","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_2_Template","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_div_3_Template","ctx_r31","get","paycomponent_type","toLowerCase","EmppayrollthbComponent_div_114_div_13_div_2_div_7_Template_input_input_2_listener","_r62","ctx_r61","EmppayrollthbComponent_div_114_div_13_div_2_div_3_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_4_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_5_Template","EmppayrollthbComponent_div_114_div_13_div_2_ng_container_6_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_7_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_8_Template","EmppayrollthbComponent_div_114_div_13_div_2_div_9_Template","j_r27","ctx_r25","paycomponent_data","paycomponent_name","showDedcutEntry","EmppayrollthbComponent_div_114_div_13_div_2_Template","list_r19","ɵɵtextInterpolate","ctx_r22","paycomponentvalue","EmppayrollthbComponent_div_114_Template_b_click_3_listener","_r66","ctx_r65","showpaycom","EmppayrollthbComponent_div_114_div_6_Template","EmppayrollthbComponent_div_114_div_13_Template","ctx_r3","segment_name","is_paycomponent","type_r73","EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template_mat_select_selectionChange_8_listener","_r76","z_r70","ctx_r74","onBonusTypeChangeD","EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_mat_option_9_Template","EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template_input_focusout_12_listener","ctx_r77","calculateAmountYearVal","ctx_r71","EmppayrollthbComponent_ng_container_115_div_4_div_2_ng_container_1_Template","ctx_r68","EmppayrollthbComponent_ng_container_115_div_4_div_2_Template","ctx_r67","EmppayrollthbComponent_ng_container_115_Template_div_click_2_listener","_r80","ctx_r79","showhideecs","EmppayrollthbComponent_ng_container_115_div_4_Template","ctx_r4","is_pfs","c_r83","ctx_r81","paycomponent_percentage","EmppayrollthbComponent_div_119_div_2_Template","ctx_r5","totalCompany","totalCompanyYearly","c_r86","ctx_r84","EmppayrollthbComponent_div_123_div_2_Template","ctx_r6","totalEmployee","totalEmployeeYearly","EmppayrollthbComponent_div_124_Template_mat_datepicker_yearSelected_26_listener","_r90","ctx_r89","chosenYearHandler","EmppayrollthbComponent_div_124_Template_mat_datepicker_monthSelected_26_listener","_r88","ɵɵreference","ctx_r91","chosenMonthHandler","ctx_r7","revisePay","_r87","monyear","mark_r95","ɵɵpipeBind2","amount","amount_yearly","EmppayrollthbComponent_ng_container_177_tr_10_Template","list_r92","d_r97","d_r99","EmppayrollthbComponent","http","fb","payrollShareService","apiservice","router","toast","datepipe","myControl","seg_id","emp_paysrtuctureform","emp_esi","emppf","empesi","is_company","pf_cal_prec","pfsegment_prec","esisement_prec","esi_cal_prec","employee_data","gradedata","finaldata","list","emp_id","is_pf","ctc_amout","pfcalamount","esicalamount","no_esi","std_pf","vpf","sum","toaster","is_esi","paycomponentflagmaster","finalCC","pfFinal","esiFinal","PercentageValue","indexes","datas","emp_grade_id","yrlyAmt","deductPatch","bonusPatch","deductPatchYr","bonusPatchYr","yearly_amounts","yearly_amountss","yearly_amoun","Sumd1","Sumb1","bonusValue","bonusValueY","deductValue","deductValueY","yrlyAmts","deductPatchrow","typeVal","takeHomeWBDMon","yrlyAmtd","totalMon","amountD","typeD","totalMons","bonusTypes","yrlyAmtD","amountYearlyControls","templatedrop","takeHomeYr","selectedTemplateId","Sumy2","newsum","sumdata","selectedOption","enableRevise","monthlyTakeHome","calcAmount","showPercent","showRupee","yrcalcAmount","showpreference","intialCTC","constructor","emp_info","empView_id","group","employee_id","employee_name","pf","esi","take_home","required","takehome_monthly","cmp_percentage","cmp_monthly","cmp_yearly","emp_percentage","emp_monthly","emp_yearly","takehome_yearly","gross_pay_monthly","gross_pay_yearly","ctc_monthly","ctc_yearly","standard_ctc","companycontribution","_cc_contribution","employeecontribution","_pf_contribution","deductions","_deductions","segment_data","_CreateSegmentroup","takehomeWBD","takehome_monthlyWBD","takehome_yearlyWBD","totall","n","z","Number","console","log","totall2","s","getgradeinfo","deduction_type","data","patchValue","showhidecc","showhideec","ngOnInit","valueChanges","pipe","getGradeApi","subscribe","grade","setValue","validation","revPercent","revValue","monthyear","revisedate","ngOnChanges","changes","_check","flag","getAmount","r","gettemplatedata","reset","_CreatePaycomponentgp","segmentdata","addControl","parseFloat","clear","segment_details","forEach","segmentform","type","segment_id","item","paycomform","segment_percentage","details_id","push","calculateDeduct","company_contribution","ccdata","ccc","percentage","sal_amount","max_amount","employee_contribution","ecdata","ecc","dcc","deduction_id","deduction_amount","undefined","dataFormArray","pf_array","esi_array","esi_ori","_cal_esi","pf_ori","_cal_pf","i","j","paycom","includes","prec","get_pf_esi_frommaster","company_pf","comesi","Math","round","cc_final","ec_final","esi_c","esi_e","pf_c","pf_e","epf_amout","cpf_amount","k","length","Formsubmission","segment_array","segment_datas","p","from_date","transform","to_date","segment","newDeduction","existingIndex","findIndex","params","filter","Boolean","paycom_per","pay","mainform","error","paystructurecreation","success","message","navigate","getgradebasedemployeeinfo","grade_id","getemployeegradeinfo","find_pf","find_esi","amout","sub","payComponentPercentageControl","resultPiesTablares","yearly_amount","pf_amt","cc_amount","prec_","cc_amount1","ctc","cc_total","eprec_","ctcs","Submit","deductiontype","segmentData","amountControl","amountYearlyControl","selectedDropdownValue","Val1","Val2","parseInt","deductAmount","dedtype","previewPay","clearBonusTypeValues","resetAmount","clearBonusTypeValue","yrAmt","Sum2","event","gradeId","page","gettemplates","res","getemployeegradeinfodetails","onSelectionChange","calculateVal","normalizedYear","ctrlValue","year","normalizedMonth","datepicker","month","close","reviseProcess","newAmount","ɵɵdirectiveInject","i1","HttpClient","i2","FormBuilder","i3","PayingempShareService","i4","PayingempService","i5","Router","i6","ToastrService","i7","DatePipe","selectors","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","EmppayrollthbComponent_Template","rf","ctx","EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_8_listener","EmppayrollthbComponent_Template_mat_checkbox_change_8_listener","EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_12_listener","EmppayrollthbComponent_Template_mat_checkbox_change_12_listener","EmppayrollthbComponent_Template_mat_checkbox_ngModelChange_16_listener","EmppayrollthbComponent_Template_mat_checkbox_change_16_listener","EmppayrollthbComponent_mat_option_28_Template","EmppayrollthbComponent_mat_option_35_Template","EmppayrollthbComponent_Template_input_input_61_listener","EmppayrollthbComponent_Template_input_input_91_listener","takehome","EmppayrollthbComponent_div_114_Template","EmppayrollthbComponent_ng_container_115_Template","EmppayrollthbComponent_Template_div_click_117_listener","EmppayrollthbComponent_div_119_Template","EmppayrollthbComponent_Template_div_click_121_listener","EmppayrollthbComponent_div_123_Template","EmppayrollthbComponent_div_124_Template","EmppayrollthbComponent_Template_button_click_126_listener","EmppayrollthbComponent_Template_button_click_128_listener","EmppayrollthbComponent_Template_button_click_130_listener","EmppayrollthbComponent_ng_container_177_Template","EmppayrollthbComponent_tr_181_Template","EmppayrollthbComponent_tr_193_Template","EmppayrollthbComponent_Template_mat_radio_group_ngModelChange_245_listener","EmppayrollthbComponent_Template_mat_radio_group_change_245_listener","EmppayrollthbComponent_Template_input_input_256_listener","EmppayrollthbComponent_span_257_Template","EmppayrollthbComponent_span_258_Template","EmppayrollthbComponent_Template_button_click_275_listener","full_name","_r0","valid","DATE_FORMAT_2","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","FullCustomDateFormat2","ɵɵProvidersFeature","provide","useClass","deps","useValue"],"sources":["D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\payingemployee\\emppayrollthb\\emppayrollthb.component.ts","D:\\MyWORKSPACE\\Angular16\\wisefin-ui\\wisefin-ui\\src\\app\\payingemployee\\emppayrollthb\\emppayrollthb.component.html"],"sourcesContent":["import { Component, Directive, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { PayingempService } from '../payingemp.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { PayingempShareService } from '../payingemp-share.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BooleanLiteral } from 'typescript';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport moment, { Moment } from 'moment';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n@Component({\r\n  selector: 'app-emppayrollthb',\r\n  templateUrl: './emppayrollthb.component.html',\r\n  styleUrls: ['./emppayrollthb.component.scss']\r\n})\r\nexport class EmppayrollthbComponent implements OnInit, OnChanges {\r\n  myControl: FormControl = new FormControl();\r\n  seg_id = false;\r\n  payrollgenform: FormGroup;\r\n  emp_paysrtuctureform: any;\r\n  gross_pay = 0;\r\n  emp_esi: number;\r\n  emppf: number;\r\n  empesi: number;\r\n  is_company = false;\r\n  pf_cal_prec: number;\r\n  pfsegment_prec: number;\r\n  esisement_prec: number;\r\n  esi_cal_prec: number;\r\n  is_paycomponent = false;\r\n  paycomponent_data = [];\r\n  employee_data: any;\r\n  gradedata: any;\r\n  finaldata: any;\r\n  list = []\r\n  emp_id: any;\r\n  is_pf: any;\r\n  ctc_amout = 0;\r\n  pfcalamount: number;\r\n  esicalamount: number;\r\n  no_esi = false\r\n  std_pf = false\r\n  vpf = false\r\n  sum: number\r\n  amount: number\r\n  toaster: any\r\n  is_esi = true\r\n  totalCompany: number\r\n  totalEmployee: number\r\n  paycomponentvalue = []\r\n  totalCompanyYearly: number;\r\n  totalEmployeeYearly: number;\r\n  deduction_type_data: any;\r\n  paycomponentflagmaster: any;\r\n  finalCC: any;\r\n  pfFinal: any;\r\n  esiFinal: any;\r\n  PercentageValue = []\r\n  indexes = [];\r\n  datas: any\r\n  emp_grade_id: any;\r\n  selectedBonusType: any;\r\n  selectedBonusTypes: any;\r\n  yrlyAmt: any;\r\n  deductPatch: any;\r\n  bonusPatch: any;\r\n  deductPatchYr: any;\r\n  bonusPatchYr: any;\r\n  yearly_amounts: number;\r\n  yearly_amountss: number;\r\n  yearly_amoun: number;\r\n  Sumd1: number;\r\n  Sumb1: number;\r\n  bonusValue: number;\r\n  bonusValueY: any;\r\n  deductValue: number;\r\n  deductValueY: any;\r\n  is_pfs: boolean;\r\n  yrlyAmts: number;\r\n  showDedcutEntry : boolean = true;\r\n  deductPatchrow: boolean = false;\r\n  typeVal: any;\r\n  takeHomeWBDMon: number;\r\n  yrlyAmtd: number;\r\n  totalMon: number;\r\n  amountD: any;\r\n  typeD: any;\r\n  totalMons: number;\r\n  bonusTypes: any;\r\n  yrlyAmtD: number;\r\n  amountYearlyControls: any;\r\n  templatedrop: any;\r\n  takeHomeYr: number;\r\n  selectedTemplateId: any;\r\n  Sumy2: number;\r\n  newsum: number;\r\n  sumdata: any;\r\n  revisePay : FormGroup;\r\n  selectedOption : any ;\r\n  enableRevise: boolean = true;\r\n  monthlyTakeHome: any;\r\n  calcAmount: number;\r\n  showPercent: boolean = false;\r\n  showRupee: boolean = false;\r\n  yrcalcAmount: number;\r\n  showpreference: boolean = false;\r\n  intialCTC: number;\r\n  constructor(private http: HttpClient, private fb: FormBuilder, private payrollShareService: PayingempShareService, private apiservice: PayingempService, private router: Router, private toast: ToastrService, \r\n    private datepipe: DatePipe,) {\r\n    let emp_info = this.payrollShareService.empView_id.value\r\n    this.employee_data = emp_info;\r\n    this.list = emp_info\r\n    this.emp_id = emp_info?.id;\r\n    this.payrollgenform = this.fb.group({\r\n      employee_id: [emp_info?.id],\r\n      employee_name: [emp_info.employee_name],\r\n      pf: [''],\r\n      esi: [''],\r\n      take_home: new FormControl(0, [Validators.required]),\r\n      takehome_monthly: [''],\r\n      cmp_percentage: [0],\r\n      cmp_monthly: [0],\r\n      cmp_yearly: [0],\r\n      emp_percentage: [0],\r\n      emp_monthly: [0],\r\n      emp_yearly: [0],\r\n      takehome_yearly: [''],\r\n      gross_pay_monthly: [''],\r\n      gross_pay_yearly: [''],\r\n      gross_pay: [0],\r\n      ctc_monthly: [''],\r\n      ctc_yearly: [''],\r\n      standard_ctc: [''],\r\n      companycontribution: new FormArray([this._cc_contribution()]),\r\n      employeecontribution: new FormArray([this._pf_contribution()]),\r\n      deductions : new FormArray([this._deductions()]),\r\n      is_pf: [false],\r\n      segment_data: new FormArray([this._CreateSegmentroup(),\r\n      ]),\r\n      takehomeWBD: new FormControl(0, [Validators.required]),\r\n      takehome_monthlyWBD: [''],\r\n      takehome_yearlyWBD: [''],\r\n    })\r\n    const totall = this.payrollgenform.get('companycontribution') as FormArray\r\n    let n = 0\r\n    for (let z in totall.value) {\r\n      n += Number(this.payrollgenform.value.companycontribution[z].amount)\r\n    }\r\n    console.log('totalll', n)\r\n    this.totalCompany = n\r\n    const totall2 = this.payrollgenform.get('employeecontribution') as FormArray\r\n    let s = 0\r\n    for (let z in totall2.value) {\r\n      s += Number(this.payrollgenform.value.employeecontribution[z].amount)\r\n    }\r\n    console.log('totalll', s)\r\n    this.totalEmployee = s\r\n\r\n    this.getgradeinfo();\r\n    this.deduction_type();\r\n\r\n  }\r\n  showpaycom(data, index) {\r\n    this.paycomponent_data = data[index].paycomponent_data;\r\n    this.seg_id = data[index].segment_name;\r\n    if (this.payrollgenform.value.segment_data[index].is_paycomponent) {\r\n      (this.payrollgenform.get('segment_data') as FormArray).get([index, 'is_paycomponent']).patchValue(false);\r\n    }\r\n    else {\r\n      (this.payrollgenform.get('segment_data') as FormArray).get([index, 'is_paycomponent']).patchValue(true)\r\n    }\r\n  }\r\n  showhidecc(data) {\r\n    if (this.is_company) {\r\n      this.is_company = false\r\n    }\r\n    else {\r\n      this.is_company = true;\r\n    }\r\n  }\r\n\r\n  showhideec(data) {\r\n    if (this.is_pf) {\r\n      this.is_pf = false;\r\n    }\r\n    else {\r\n      this.is_pf = true;\r\n    }\r\n  }\r\n  showhideecs(data) \r\n  {\r\n    this.is_pfs = !this.is_pfs;\r\n  }\r\n  ngOnInit(): void {\r\n    this.myControl.valueChanges.pipe(switchMap(value => this.apiservice.getGradeApi(value, 1))).subscribe(data => {\r\n      this.gradedata = data['data'];\r\n    })\r\n    if (this.employee_data?.grade) {\r\n      this.myControl.setValue(this.employee_data.grade.name)\r\n      this.LevelClick(this.employee_data.grade)\r\n      // this.getgradebasedemployeeinfo(this.employee_data.grade.id)\r\n      console.log('ONitID', this.employee_data.grade.id)\r\n      this.validation()\r\n    }\r\n    console.log('ONit', this.employee_data)\r\n    console.log('GradeData', this.gradedata)\r\n    console.log('takehome', this.payrollgenform.get('take_home').value)\r\n    // this.gettemplatedata();\r\n\r\n    this.revisePay = this.fb.group({\r\n        revPercent : '',\r\n        revValue : '',\r\n        monthyear:'',\r\n        revisedate:'',\r\n      })\r\n  }\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n     }\r\n  _check(value, flag) {\r\n    if (flag == 'std_pf') {\r\n      this.std_pf = (value);    \r\n        this.getAmount(this.payrollgenform.get('take_home').value);      \r\n    }\r\n    else if (flag == 'no_esi') {\r\n      this.no_esi = (value);\r\n          this.getAmount(this.payrollgenform.get('take_home').value);\r\n    }\r\n    else if (flag == 'vpf') {\r\n      this.vpf = value;\r\n        this.getAmount(this.payrollgenform.get('take_home').value);      \r\n    }\r\n  }\r\n  validation() {\r\n    const totall = this.payrollgenform.get('companycontribution') as FormArray\r\n    let n = 0\r\n    for (let z in totall.value) {\r\n      n += Number(this.payrollgenform.value.companycontribution[z].amount)\r\n    }\r\n    console.log('totalll', n)\r\n    this.totalCompany = n\r\n\r\n    const totall2 = this.payrollgenform.get('employeecontribution') as FormArray\r\n    let r = 0\r\n    for (let z in totall2.value) {\r\n      r += Number(this.payrollgenform.value.employeecontribution[z].amount)\r\n    }\r\n    this.totalEmployee = r\r\n  }\r\n  LevelClick(name) {\r\n    // this.getgradebasedemployeeinfo(name.id)\r\n    this.emp_grade_id=name.id\r\n    this.gettemplatedata();\r\n    console.log('LEvelclick', name.id);\r\n    console.log('success')\r\n    this.payrollgenform.reset();\r\n    this.validation();\r\n\r\n  }\r\n  _CreateSegmentroup(): FormGroup {\r\n    return new FormGroup({\r\n      'segment_id': new FormControl(''),\r\n      'component_type': new FormControl(''),\r\n      'segment_name': new FormControl(''),\r\n      'segment_percentage': new FormControl(''),\r\n      'amount': new FormControl(''),\r\n      'amount_yearly': new FormControl(''),\r\n      'is_paycomponent': new FormControl(false),\r\n        'paycomponent_data': new FormArray([this._CreatePaycomponentgp()]),\r\n      'paycomponent_type': new FormControl(''),\r\n    })\r\n  }\r\n  private _CreatePaycomponentgp(): any {\r\n    return new FormGroup({\r\n      'paycomponent': new FormControl(''),\r\n      'paycomponent_name': new FormControl(''),\r\n      'paycomponent_percentage': new FormControl(''),\r\n      'pf': new FormControl(''),\r\n      'paycom': new FormControl([]),\r\n      'amount': new FormControl(0),\r\n      'amount_yearly': new FormControl(0),\r\n      'segment': new FormControl(''),\r\n      'company_contribution': new FormControl(false),\r\n      'type': new FormControl(''),\r\n      'segment_percentage': new FormControl(''),\r\n      'from_date': new FormControl(null),\r\n       'to_date': new FormControl(null)\r\n    })\r\n  }\r\n  private _cc_contribution(): any {\r\n    return new FormGroup({\r\n      'id': new FormControl(''),\r\n      'paycomponent': new FormControl(''),\r\n      'paycomponent_name': new FormControl(''),\r\n      'paycomponent_percentage': new FormControl(''),\r\n      'paycomponent_type': new FormControl(1),\r\n      'company_contribution': new FormControl(true),\r\n      'deduction_data': new FormControl([]),\r\n      'amount': new FormControl(''),\r\n      'amount_yearly': new FormControl(''),\r\n      'max_amount': new FormControl(''),\r\n      'sal_amount': new FormControl(''),\r\n    })\r\n  }\r\n  private _pf_contribution(): any {\r\n    return new FormGroup({\r\n      'id': new FormControl(''),\r\n      'paycomponent_id': new FormControl(''),\r\n      'paycomponent_percentage': new FormControl(0.00),\r\n      'paycomponent_type': new FormControl(1),\r\n      'company_contribution': new FormControl(false),\r\n      'deduction_data': new FormControl([]),\r\n      'amount': new FormControl(''),\r\n      'amount_yearly': new FormControl(''),\r\n      'paycomponent_name': new FormControl(''),\r\n      'max_amount': new FormControl(''),\r\n      'sal_amount': new FormControl(''),\r\n      'is_customdeduct' : new FormControl(false)\r\n    })\r\n  }\r\n  private _deductions(): any {\r\n    return new FormGroup({\r\n      'id': new FormControl(''),\r\n      'paycomponent_id': new FormControl(''),\r\n      'paycomponent_percentage': new FormControl(0.00),\r\n      'paycomponent_type': new FormControl(1),\r\n      'company_contribution': new FormControl(false),\r\n      'deduction_data': new FormControl([]),\r\n      'amount': new FormControl(''),\r\n      'amount_yearly': new FormControl(''),\r\n      'paycomponent_name': new FormControl(''),\r\n      'max_amount': new FormControl(''),\r\n      'sal_amount': new FormControl(''),\r\n      'is_customdeduct' : new FormControl(false),\r\n      'type': new FormControl(''), \r\n      'from_date': new FormControl(null),\r\n      'to_date': new FormControl(null)\r\n      \r\n    })\r\n  }\r\n  segmentdata() {\r\n    if (this.finaldata?.id) {\r\n      this.payrollgenform.addControl(\"id\", new FormControl(this.finaldata?.id))\r\n    }\r\n    this.monthlyTakeHome = this.finaldata?.take_home\r\n    this.payrollgenform.patchValue({\r\n      \"employee_id\": this.finaldata?.employee_id,\r\n      \"standard_ctc\": this.finaldata?.standard_ctc,\r\n      \"gross_pay\": this.finaldata?.gross_pay,\r\n      \"pf_type\": 1,\r\n      \"take_home\": this.finaldata?.take_home,\r\n      \"takehome_monthly\": this.finaldata?.take_home,\r\n      \"takehome_yearly\": (parseFloat(this.finaldata?.take_home) * 12),\r\n      \"gross_pay_monthly\": this.finaldata?.gross_pay,\r\n      \"gross_pay_yearly\": (parseFloat(this.finaldata?.gross_pay) * 12),\r\n      \"ctc_monthly\": this.finaldata?.standard_ctc,\r\n      \"ctc_yearly\": (parseFloat(this.finaldata?.standard_ctc) * 12),\r\n    });\r\n    (this.payrollgenform.get('segment_data') as FormArray).clear();\r\n    console.log('final data', this.finaldata)\r\n    this.finaldata.segment_details.forEach((data) => {\r\n      const segmentform = this._CreateSegmentroup();\r\n      console.log('SegmentData', data)\r\n      if(data?.paycomponent_type === 'Deductions')\r\n      {\r\n        this.deductPatch = data?.paycomponent_data[0]?.amount;\r\n        if(data?.paycomponent_data[0]?.type == 1)\r\n        {\r\n        this.deductPatchYr = this.deductPatch * 4;\r\n        this.deductPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 2)\r\n        {\r\n        this.deductPatchYr = this.deductPatch * 2;\r\n        this.deductPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 3)\r\n        {\r\n        this.deductPatchYr = this.deductPatch ;\r\n        this.deductPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 4)\r\n        {\r\n        this.deductPatchYr = this.deductPatch * 12;\r\n        }\r\n      }\r\n      if(data?.paycomponent_type == 'Monthly Bonus')\r\n      {\r\n        this.bonusPatch = data?.paycomponent_data[0]?.amount;\r\n        if(data?.paycomponent_data[0]?.type == 1)\r\n        {\r\n        this.bonusPatchYr = this.bonusPatch * 4;\r\n        this.bonusPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 2)\r\n        {\r\n        this.bonusPatchYr = this.bonusPatch * 2;\r\n        this.bonusPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 3)\r\n        {\r\n        this.bonusPatchYr = this.bonusPatch ;\r\n        this.bonusPatch = 0;\r\n        }\r\n        else if(data?.paycomponent_data[0]?.type == 4)\r\n        {\r\n        this.bonusPatchYr = this.bonusPatch * 4;\r\n        }\r\n      }     \r\n      if(data.paycomponent_data)\r\n      {\r\n      segmentform.patchValue(data);\r\n      if (this.finaldata?.id && data.paycomponent_data) {\r\n        segmentform.addControl('segment_id', new FormControl(data?.segment_id))\r\n      }\r\n      (segmentform.get('paycomponent_data') as FormArray).clear();\r\n    }  \r\n      if(data.paycomponent_data)\r\n      {\r\n      data.paycomponent_data.forEach((item) => {\r\n        const paycomform = this._CreatePaycomponentgp();\r\n        paycomform.patchValue(item);\r\n        paycomform.get('segment_percentage').patchValue(data.segment_percentage);\r\n        if (this.finaldata?.id) {\r\n          paycomform.addControl('details_id', new FormControl(item?.details_id))\r\n        }\r\n        (segmentform.get('paycomponent_data') as FormArray).push(paycomform);\r\n      });    \r\n      (this.payrollgenform.get('segment_data') as FormArray).push(segmentform);\r\n      console.log(\"PAYS DATA\", this.payrollgenform.get('segment_data') as FormArray)\r\n    }\r\n    this.calculateDeduct();\r\n    });\r\n    (this.payrollgenform.get('companycontribution') as FormArray).clear();\r\n    this.finaldata.company_contribution.forEach((ccdata) => {\r\n      const ccc = this._cc_contribution();\r\n      if (ccdata?.details_id) {\r\n        ccc.addControl(\"details_id\", new FormControl(ccdata?.details_id))\r\n      }\r\n      ccc.patchValue({\r\n        'id': ccdata?.id,\r\n        'paycomponent': ccdata?.id,\r\n        'paycomponent_percentage': ccdata?.percentage,\r\n        'paycomponent_name': ccdata?.name,\r\n        'sal_amount': ccdata?.sal_amount,\r\n        'max_amount': ccdata?.max_amount\r\n      });\r\n      (this.payrollgenform.get('companycontribution') as FormArray).push(ccc);\r\n    });\r\n    (this.payrollgenform.get('employeecontribution') as FormArray).clear();\r\n    (this.payrollgenform.get('deductions') as FormArray).clear();\r\n    this.finaldata.employee_contribution.forEach((ecdata) => {\r\n      const ecc = this._pf_contribution();\r\n      const dcc = this._deductions();\r\n      console.log(\"EC DATA\", ecdata)\r\n      if (ecdata?.deduction_id) {\r\n        ecc.addControl(\"deduction_id\", new FormControl(ecdata?.deduction_id))\r\n        dcc.addControl(\"deduction_id\", new FormControl(ecdata?.deduction_id))\r\n\r\n      }\r\n  \r\n      ecc.patchValue({\r\n        'id': ecdata?.id,\r\n        'paycomponent_id': ecdata?.id,\r\n        'paycomponent_percentage': ecdata?.percentage,\r\n        'paycomponent_name': ecdata?.name,\r\n        'max_amount': ecdata?.max_amount,\r\n        'sal_amount': ecdata?.sal_amount,\r\n      });\r\n      if(ecdata?.type?.id)\r\n      {\r\n\r\n        this.typeVal = ecdata?.type?.id;\r\n        switch (this.typeVal) {\r\n          case 1:          \r\n            this.yrlyAmts =  ecdata.deduction_amount * 4;\r\n            break;\r\n          case 2:\r\n            this.yrlyAmts =  ecdata.deduction_amount * 2;\r\n            break;\r\n          case 3:\r\n            this.yrlyAmts =  ecdata.deduction_amount * 1;\r\n            break;\r\n          case 4:\r\n            this.yrlyAmts =  ecdata.deduction_amount * 12;\r\n            break;\r\n\r\n          default:\r\n            this.yrlyAmts =  0;\r\n            break;\r\n\r\n        }\r\n    \r\n\r\n      }\r\n      dcc.patchValue({\r\n        'id': ecdata?.id,\r\n        'paycomponent_id': ecdata?.id,\r\n        'paycomponent_percentage': ecdata?.percentage,\r\n        'paycomponent_name': ecdata?.name,\r\n        'max_amount': ecdata?.max_amount,\r\n        'amount': ecdata?.deduction_amount,\r\n        'amount_yearly' : this.yrlyAmts,\r\n        'type': ecdata?.type?.id\r\n      });\r\n      if(ecdata.name == 'PF' || ecdata.name == 'ESI')\r\n      {\r\n      (this.payrollgenform.get('employeecontribution') as FormArray).push(ecc);\r\n      console.log(this.payrollShareService)\r\n      }\r\n      else\r\n      {\r\n        this.deductPatch = ecdata.deduction_amount;\r\n        this.deductPatchYr = this.yrlyAmts;\r\n        this.calculateDeduct();\r\n        // this.deductPatch = ecdata.deduction_amount;\r\n        // this.deductPatchYr = this.yrlyAmts;\r\n        this.deductPatchrow = true;\r\n        this.showDedcutEntry = false;\r\n        console.log('This is the Deduction data', dcc);\r\n        // let deducts = this.transformData(ecdata);\r\n        if(this.deductPatch !== 0 || this.deductPatch !== null || this.deductPatch !== undefined)\r\n        {\r\n        (this.payrollgenform.get('deductions') as FormArray).push(dcc);\r\n        }\r\n      }\r\n    });\r\n    if (this.finaldata?.id) {\r\n      this.payrollgenform.addControl('id', new FormControl(this.finaldata?.id));\r\n      this._letcalculate(this.finaldata?.gross_pay)\r\n    }\r\n  \r\n  }\r\n  getAmount(data) {\r\n    let dataFormArray = this.payrollgenform.get('segment_data').value\r\n    this.finaldata\r\n    this.pf_cal_prec = 0;\r\n    this.esi_cal_prec = 0;\r\n    this.pfsegment_prec = 0;\r\n    this.esisement_prec = 0;\r\n\r\n    let pf_array = [];\r\n    let esi_array = [];\r\n    let emp_esi: any;\r\n    let esi_ori = 0;\r\n    let _cal_esi = 0;\r\n    let pf_ori = 0;\r\n    let _cal_pf = 0;\r\n    for (let i in dataFormArray) {\r\n      console.log('*********')\r\n      this.esi_cal_prec = 0;\r\n      this.pf_cal_prec = 0;\r\n\r\n      for (let j in dataFormArray[i].paycomponent_data) {\r\n        // employee pf and esi\r\n        if (dataFormArray[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n          this.pf_cal_prec = this.pf_cal_prec + parseFloat(dataFormArray[i].paycomponent_data[j]?.paycomponent_percentage);\r\n\r\n          if (!pf_array?.includes(dataFormArray[i].segment_id)) {\r\n            pf_array.push(dataFormArray[i].segment_id)\r\n            this.pfsegment_prec = this.pfsegment_prec + parseFloat(dataFormArray[i].segment_percentage)\r\n          }\r\n        }\r\n        if (dataFormArray[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n          this.esi_cal_prec = this.esi_cal_prec + parseFloat(dataFormArray[i].paycomponent_data[j]?.paycomponent_percentage)\r\n          if (!esi_array?.includes(dataFormArray[i].segment_id)) {\r\n            esi_array.push(dataFormArray[i].segment_id)\r\n            this.esisement_prec = this.esisement_prec + parseFloat(dataFormArray[i].segment_percentage)\r\n          }\r\n        }\r\n      }\r\n      if (this.finalCC != 0) {\r\n        if (esi_array.includes(dataFormArray[i].segment_id)) {\r\n          esi_ori = (parseFloat(dataFormArray[i].segment_percentage) / 100) * (this.esi_cal_prec / 100)\r\n          _cal_esi = _cal_esi + esi_ori;\r\n        }\r\n      }\r\n      else {\r\n        _cal_esi = 0;\r\n      }\r\n      if (pf_array.includes(dataFormArray[i].segment_id)) {\r\n        pf_ori = (parseFloat(dataFormArray[i].segment_percentage) / 100) * (this.pf_cal_prec / 100)\r\n        _cal_pf = _cal_pf + pf_ori;\r\n      }\r\n    }\r\n    console.log('pfsegment_prec:', this.pfsegment_prec, 'this.pf_cal_prec:-', this.pf_cal_prec)\r\n    console.log('esisegment_prec:', this.esisement_prec, 'esi_cal_prec:-', this.esi_cal_prec)\r\n    let prec = this.get_pf_esi_frommaster();\r\n    this.emppf = _cal_pf * (prec['e_pf'] / 100);\r\n    emp_esi = _cal_esi * (prec['e_esi'] / 100);\r\n    console.log(_cal_esi, _cal_pf)\r\n    let company_pf = _cal_pf * (prec['c_pf'] / 100)\r\n    let comesi = _cal_esi * (prec['c_esi'] / 100)\r\n    if (this.no_esi) {\r\n      emp_esi = 0;\r\n    }\r\n    this.gross_pay = Math.round(parseFloat(data) / (1 - this.emppf - emp_esi))\r\n    if (this.std_pf) {\r\n      this.gross_pay = Math.round(parseFloat(data) + prec['max_amout_epf'] + emp_esi);\r\n    }\r\n    let cc_final = company_pf + comesi;\r\n    let ec_final = this.emppf + emp_esi;\r\n    console.log(this.emppf)\r\n    this.payrollgenform.get('takehomeWBD').setValue(this.payrollgenform.get('take_home').value)\r\n    this.payrollgenform.get('gross_pay_monthly').setValue(this.gross_pay)\r\n    this.payrollgenform.get('gross_pay').setValue(this.gross_pay)\r\n    this.payrollgenform.get('gross_pay_yearly').setValue(Math.round(this.gross_pay * 12))\r\n    this.payrollgenform.get('takehome_monthly').setValue(parseFloat(data))\r\n    this.payrollgenform.get('takehome_yearly').setValue(parseFloat(data) * 12)\r\n    this.payrollgenform.get('takehome_monthlyWBD').setValue( this.payrollgenform.get('takehome_monthly').value)\r\n    this.payrollgenform.get('takehome_yearlyWBD').setValue( this.payrollgenform.get('takehome_yearly').value)\r\n    console.log(\"Gross Pays\", this.gross_pay)\r\n    this._letcalculate(this.gross_pay)\r\n  }\r\n  get_pf_esi_frommaster() {\r\n    let esi_c = 0, esi_e = 0, pf_c = 0, pf_e = 0, epf_amout = 0, cpf_amount = 0;\r\n    for (let k = 0; k < this.payrollgenform.value.companycontribution.length; k++) {\r\n\r\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'ESI') {\r\n        esi_c = parseFloat(this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage)\r\n      }\r\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'PF') {\r\n        pf_c = parseFloat(this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage)\r\n        cpf_amount = parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount)\r\n      }\r\n\r\n    }\r\n    for (let k = 0; k < this.payrollgenform.value.employeecontribution.length; k++) {\r\n\r\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'ESI') {\r\n        esi_e = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage)\r\n\r\n      }\r\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'PF') {\r\n        pf_e = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage)\r\n        epf_amout = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount)\r\n      }\r\n    }\r\n\r\n    return { \"c_esi\": esi_c, \"c_pf\": pf_c, \"e_esi\": esi_e, \"e_pf\": pf_e, 'max_amout_epf': epf_amout, 'max_amount_cpf': cpf_amount }\r\n\r\n  }\r\n\r\n  Formsubmission() {\r\n    console.log(\"Final Datas\", this.payrollgenform.value)\r\n    let segment_array = [];\r\n    let segment_datas = this.payrollgenform.value.segment_data;\r\n    let employeecontribution = this.payrollgenform.value.employeecontribution\r\nconsole.log(\"My Segment Datas\", segment_datas)\r\nfor (let k = 0; k < segment_datas.length; k++) {\r\n  for (let p = 0; p < segment_datas[k]?.paycomponent_data.length; p++) {\r\n    console.log(segment_datas[k])\r\n    if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.from_date === null) {\r\n      delete this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'];\r\n    } else {\r\n\r\n      const from_date = this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'];\r\n      this.payrollgenform.value.segment_data[k].paycomponent_data[p]['from_date'] = this.datepipe.transform(from_date, 'yyyy-MM-dd');\r\n    }\r\n\r\n    if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.to_date === null) {\r\n      delete this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'];\r\n    } else {\r\n      const to_date = this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'];\r\n      this.payrollgenform.value.segment_data[k].paycomponent_data[p]['to_date'] = this.datepipe.transform(to_date, 'yyyy-MM-dd');\r\n    }\r\n    if (this.payrollgenform.value.segment_data[k].paycomponent_data[p]?.segment != undefined) {\r\n      this.payrollgenform.value.segment_data[k].paycomponent_data[p]['segment'] = segment_datas[k].segment_id;\r\n    }\r\n    if (this.payrollgenform.value.segment_data[k].segment_name === 'Deductions') {\r\n      this.payrollgenform.value.segment_data[k].paycomponent_data[p]['is_customdeduct'] = true;\r\n    } else {\r\n      this.payrollgenform.value.segment_data[k].paycomponent_data[p]['is_customdeduct'] = false;\r\n    }\r\n    if(this.payrollgenform.value.segment_data[k].segment_name === 'Deductions')\r\n    {\r\n      employeecontribution.push(this.payrollgenform.value.segment_data[k].paycomponent_data[p])\r\n    }\r\n    else\r\n    {\r\n      segment_array.push(this.payrollgenform.value.segment_data[k].paycomponent_data[p])\r\n    }\r\n\r\n   \r\n  }\r\n}\r\n// if(this.payrollgenform.get('deductions') !== null)\r\n// {\r\n//   employeecontribution.push(this.payrollgenform.value.deductions[0]);\r\n// }\r\nif (this.payrollgenform.get('deductions') !== null) {\r\n  const newDeduction = this.payrollgenform.value.deductions[0];\r\n  if (newDeduction !== null && newDeduction !== undefined) {  \r\n    delete newDeduction.deduction_id;\r\n    const existingIndex = employeecontribution.findIndex(\r\n      (item) => item && item?.paycomponent_name === newDeduction?.paycomponent_name\r\n    );\r\n\r\n    if (existingIndex !== -1) {\r\n      employeecontribution[existingIndex] = newDeduction;\r\n    } else {\r\n      employeecontribution.push(newDeduction);\r\n    }\r\n  }\r\n}\r\n\r\n    console.log(\"Segments My Arrat\",segment_array)\r\n    let params = {\r\n      \"employee_id\": this.employee_data?.id,\r\n      \"standard_ctc\": this.payrollgenform.value.ctc_monthly,\r\n      \"gross_pay\": this.payrollgenform.value.gross_pay_monthly,\r\n      \"pf_type\": 1,\r\n      \"take_home\": this.payrollgenform.value.takehome_monthly,\r\n      'emp_grade':this.emp_grade_id,\r\n      'emp_template': this.selectedTemplateId,\r\n      \"is_tds\": \"False\",\r\n       \"company_contribution\": this.payrollgenform.value.companycontribution,\r\n      \"employee_contribution\": this.payrollgenform.value.employeecontribution,\r\n      \"segment_details\": segment_array.filter(Boolean),\r\n    }\r\n\r\n    if (this.finaldata?.id) {\r\n      params['id'] = this.finaldata?.id;\r\n    }\r\n    console.log(params)\r\n    const paycom_per = this._CreatePaycomponentgp()\r\n    const pay = (paycom_per.get('paycomponent_percentage') as FormControl).value\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n    for (let i in mainform.value) {\r\n      console.log('mainframe', this.payrollgenform.value.segment_data[i].paycomponent_data)\r\n      console.log('mainframeAmount', this.payrollgenform.value.segment_data[i].segment_percentage)\r\n      this.amount = Number(this.payrollgenform.value.segment_data[i].segment_percentage)\r\n      let s = 0\r\n      for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n        s += Number(this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage)\r\n      }\r\n      this.sum = Number((s / 100) * this.amount)\r\n      if (this.sum != this.amount && this.payrollgenform.value.segment_data[i].segment_name !== 'Deductions' ) {\r\n\r\n        this.toast.error('The' + this.payrollgenform.value.segment_data[i].segment_name + ' Block  Sum of precentage should equal to 100')\r\n        return false\r\n      }\r\n\r\n    }\r\n    this.apiservice.paystructurecreation(params).subscribe(data => {\r\n      this.toaster = this.toast.success(data?.message)\r\n      this.router.navigate(['/payingemployee/empdetailsummary'])\r\n      this.router.navigate(['/payingemployee/empnav'])\r\n    })\r\n  }\r\n  getgradeinfo() {\r\n    this.apiservice.getGradeApi('', 1).subscribe(data => {\r\n      this.gradedata = data['data'];\r\n      console.log('gradeDataInfo', data)\r\n    });\r\n\r\n  }\r\n\r\n  getgradebasedemployeeinfo(grade_id) {\r\n    this.apiservice.getemployeegradeinfo(grade_id, this.employee_data?.id).subscribe(data => {\r\n      console.log(data)\r\n      this.finaldata = data;\r\n      this.segmentdata();\r\n    });\r\n\r\n\r\n\r\n\r\n  }\r\n  _letcalculate(gross_pay_monthly) {\r\n    gross_pay_monthly = this.payrollgenform.value.gross_pay_monthly;\r\n\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n    let find_pf = 0\r\n    let find_esi = 0;\r\n    console.log(\"Main form data\", mainform)\r\n\r\n    for (let i in mainform.value) {\r\n      if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Monthly Bonus')\r\n      {\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\r\n        // let yearly_amount = amout * 12\r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n        if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1)\r\n        {\r\n           this.yearly_amountss = amout * 4;\r\n        mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amountss)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2)\r\n        {\r\n          this.yearly_amountss= amout * 2;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amountss)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3)\r\n        {\r\n          this.yearly_amountss = amout ;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amountss)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4)\r\n        {\r\n          this.yearly_amountss= amout * 12;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amountss)\r\n        }\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount\r\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl)));\r\n          // let yearly_amount = resultPiesTablares * 12\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amountss)\r\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares)\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amountss)\r\n          console.log(\"Bonus Values\",resultPiesTablares )\r\n          console.log(\"Bonus yearly\", this.yearly_amountss)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n          }\r\n        }\r\n      } \r\n      else if (this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Deductions')\r\n      {\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\r\n     \r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1)\r\n        {\r\n          let yearly_amount = amout * 4;\r\n        mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2)\r\n        {\r\n          let yearly_amount = amout * 2;\r\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3)\r\n        {\r\n          let yearly_amount = amout ;\r\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4)\r\n        {\r\n          let yearly_amount = amout * 12;\r\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n        }\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount\r\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl)));\r\n          let yearly_amount = resultPiesTablares * 12\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount)\r\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares)\r\n          mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n          console.log(\"Bonus Values\",resultPiesTablares )\r\n          console.log(\"Bonus yearly\", yearly_amount)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n          }\r\n        }\r\n      } \r\n      else\r\n       {\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round((parseFloat(this.payrollgenform.value.segment_data[i]?.segment_percentage) * gross_pay_monthly) / 100);\r\n        let yearly_amount = amout * 12\r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage\r\n          let segment_percentage = this.payrollgenform.value.segment_data[i]?.segment_percentage\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl) / 100 * parseFloat(segment_percentage) / 100 * gross_pay_monthly));\r\n          // let resultPiesTablares:any = Math.round((parseFloat(payComponentPercentageControl)/100 *parseFloat(segment_percentage)/100* this.gross_pay) );\r\n\r\n          let yearly_amount = resultPiesTablares * 12\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n          }\r\n        }\r\n      }\r\n  \r\n\r\n    }\r\n    let pf_amt: any\r\n    let cc_amount: any;\r\n\r\n    for (let k = 0; k < this.payrollgenform.value.companycontribution.length; k++) {\r\n\r\n      let prec_ = this.payrollgenform.value?.companycontribution[k]?.paycomponent_percentage;\r\n      let sal_amount = this.payrollgenform.value?.companycontribution[k]?.sal_amount;\r\n      (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'paycomponent_percentage']).patchValue(prec_);\r\n      if (this.payrollgenform.value?.companycontribution[k]?.paycomponent_name == 'ESI') {\r\n        console.log('finde', find_esi)\r\n        if (parseFloat(sal_amount) > find_esi) {\r\n          cc_amount = Math.round(find_esi * parseFloat(prec_) / 100);\r\n          let cc_amount1 = Math.round((find_esi * parseFloat(prec_) / 100) * 12);\r\n          // cc_pf=find_pf*13/100\r\n          (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount']).patchValue(cc_amount);\r\n          (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount_yearly']).patchValue(cc_amount1);\r\n          this.esiFinal = cc_amount;\r\n        }\r\n        else {\r\n          (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount']).patchValue(0);\r\n          (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount_yearly']).patchValue(0);\r\n          cc_amount = 0;\r\n          this.esiFinal = cc_amount;\r\n        }\r\n      }\r\n\r\n      else {\r\n        // cc_pf=find_pf*13/100\r\n        pf_amt = Math.round(find_pf * parseFloat(prec_) / 100);\r\n        if(this.vpf == true)\r\n        {\r\n          (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount']).patchValue(pf_amt);\r\n        (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\r\n        this.pfFinal = pf_amt\r\n        }\r\n        else\r\n        {\r\n        if (pf_amt > parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount)) {\r\n          pf_amt = parseFloat(this.payrollgenform.value?.companycontribution[k]?.max_amount)\r\n        }\r\n        (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount']).patchValue(pf_amt);\r\n        (this.payrollgenform.get('companycontribution') as FormArray).get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\r\n        this.pfFinal = pf_amt\r\n      }\r\n    }\r\n\r\n\r\n\r\n    }\r\n    ;\r\n\r\n    let ctc = Math.round(parseFloat(this.payrollgenform.value.gross_pay_monthly) + (parseFloat(pf_amt) + parseFloat(cc_amount)));\r\n    console.log(ctc, 'ctc')\r\n    // this.ctc_amout=ctc;\r\n    this.payrollgenform.get('ctc_monthly').setValue(ctc)\r\n    this.payrollgenform.get('ctc_yearly').setValue(Math.round(ctc * 12))\r\n    this.payrollgenform.get('standard_ctc').setValue(ctc)\r\n\r\n    let cc_total = 0;\r\n    cc_total = pf_amt + cc_amount;\r\n    this.payrollgenform.get('cmp_monthly').setValue(cc_total);\r\n    this.payrollgenform.get('cmp_yearly').setValue(cc_total * 12);\r\n\r\n\r\n    // employee contribution\r\n\r\n    for (let k = 0; k < this.payrollgenform.value.employeecontribution.length; k++) {\r\n\r\n      let eprec_ = this.payrollgenform.value?.employeecontribution[k]?.paycomponent_percentage;\r\n      let sal_amount = this.payrollgenform.value?.employeecontribution[k]?.sal_amount;\r\n      (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'paycomponent_percentage']).patchValue(eprec_);\r\n      if (this.payrollgenform.value?.employeecontribution[k]?.paycomponent_name == 'ESI') {\r\n        if (parseFloat(sal_amount) > find_esi) {\r\n          cc_amount = Math.round(find_esi * parseFloat(eprec_) / 100);\r\n          let cc_amount1 = Math.round((find_esi * parseFloat(eprec_) / 100) * 12);\r\n          // cc_pf=find_pf*13/100\r\n          this.finalCC = cc_amount;\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount']).patchValue(cc_amount);\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount_yearly']).patchValue(cc_amount1);\r\n        }\r\n        else {\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount']).patchValue(0);\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount_yearly']).patchValue(0);\r\n          cc_amount = 0;\r\n          this.finalCC = cc_amount;\r\n        }\r\n        // this.getAmount(this.payrollgenform.get('take_home').value)\r\n        console.log(\"Final CC\", this.finalCC)\r\n      }\r\n\r\n      else {\r\n        // cc_pf=find_pf*13/100\r\n        if(this.vpf == true)\r\n        {\r\n          pf_amt = Math.round(find_pf * parseFloat(eprec_) / 100);\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount']).patchValue(pf_amt);\r\n          (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\r\n        }\r\n        else\r\n        {\r\n        pf_amt = Math.round(find_pf * parseFloat(eprec_) / 100);\r\n        if (pf_amt > parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount)) {\r\n          pf_amt = parseFloat(this.payrollgenform.value?.employeecontribution[k]?.max_amount)\r\n        }\r\n        (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount']).patchValue(pf_amt);\r\n        (this.payrollgenform.get('employeecontribution') as FormArray).get([k, 'amount_yearly']).patchValue(Math.round(parseFloat(pf_amt) * 12));\r\n      }\r\n      }\r\n    }\r\n    gross_pay_monthly = parseFloat(this.payrollgenform.value?.takehome_monthly) + pf_amt + cc_amount;\r\n    this.payrollgenform.get('gross_pay_monthly').setValue(gross_pay_monthly)\r\n    this.payrollgenform.get('gross_pay').setValue(gross_pay_monthly)\r\n    this.payrollgenform.get('gross_pay_yearly').setValue(Math.round(gross_pay_monthly * 12))\r\n    for (let i in mainform.value) {\r\n      if(this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Monthly Bonus')\r\n      {\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.amount));\r\n        // let yearly_amount = amout * 12\r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n        if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1)\r\n        {\r\n           this.yearly_amoun = amout * 4;\r\n        mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amoun)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2)\r\n        {\r\n          this.yearly_amoun= amout * 2;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amoun)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3)\r\n        {\r\n          this.yearly_amoun = amout ;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amoun)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4)\r\n        {\r\n          this.yearly_amoun= amout * 12;\r\n          mainform.get([i, 'amount_yearly']).patchValue( this.yearly_amoun)\r\n        }\r\n\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount\r\n          //  let segment_percentage=this.payrollgenform.value.segment_data[i]?.segment_percentage\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl)));\r\n          // let yearly_amount = resultPiesTablares * 12\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amoun)\r\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares)\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amoun)\r\n          console.log(\"Bonus Values\",resultPiesTablares , this.yearly_amoun)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n      else if(this.payrollgenform.value.segment_data[i]?.paycomponent_type === 'Deductions')\r\n      {\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round(parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.amount));\r\n        // let yearly_amount = amout * 12\r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        // mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n        if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 1)\r\n        {\r\n           this.yearly_amounts = amout * 4;\r\n        mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 2)\r\n        {\r\n          this.yearly_amounts = amout * 2;\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 3)\r\n        {\r\n          this.yearly_amounts = amout ;\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n        }\r\n        else if(this.payrollgenform.value.segment_data[i]?.paycomponent_data[0]?.type == 4)\r\n        {\r\n          this.yearly_amounts = amout * 12;\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n        }\r\n        else\r\n        {\r\n          this.yearly_amounts = 0;\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n        }\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].amount\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl)));\r\n\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n          mainform.get([i, 'amount']).patchValue(resultPiesTablares)\r\n          mainform.get([i, 'amount_yearly']).patchValue(this.yearly_amounts)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n          }\r\n        }\r\n      }\r\n     else{\r\n        const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n        let amout: any = Math.round((parseFloat(this.payrollgenform.value.segment_data[i]?.segment_percentage) * gross_pay_monthly) / 100);\r\n        let yearly_amount = amout * 12\r\n        mainform.get([i, 'amount']).patchValue(amout)\r\n        mainform.get([i, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n\r\n        for (let j in this.payrollgenform.value.segment_data[i].paycomponent_data) {\r\n          const sub = mainform.get([i, 'paycomponent_data'])\r\n          console.log('-----')\r\n\r\n          const payComponentPercentageControl = this.payrollgenform.value.segment_data[i].paycomponent_data[j].paycomponent_percentage\r\n          let segment_percentage = this.payrollgenform.value.segment_data[i]?.segment_percentage\r\n          let resultPiesTablares: any = Math.round((parseFloat(payComponentPercentageControl) / 100 * parseFloat(segment_percentage) / 100 * gross_pay_monthly));\r\n          let yearly_amount = resultPiesTablares * 12\r\n\r\n          sub.get([j, 'amount']).patchValue(resultPiesTablares)\r\n          sub.get([j, 'amount_yearly']).patchValue(yearly_amount)\r\n\r\n\r\n\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('PF')) {\r\n            find_pf = find_pf + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n\r\n          }\r\n          if (this.payrollgenform.value.segment_data[i].paycomponent_data[j]?.paycom?.includes('ESI')) {\r\n            find_esi = find_esi + parseFloat(this.payrollgenform.value.segment_data[i]?.paycomponent_data[j]?.amount)\r\n\r\n          }\r\n        }\r\n      }\r\n  }\r\n    let ctcs = Math.round(parseFloat(this.payrollgenform.value.gross_pay_monthly) + (parseFloat(this.pfFinal)) + (parseFloat(this.esiFinal)));\r\n    console.log(ctc, 'ctcs')\r\n    this.payrollgenform.get('ctc_monthly').setValue(ctcs)\r\n    this.payrollgenform.get('ctc_yearly').setValue(Math.round(ctcs * 12))\r\n    this.payrollgenform.get('standard_ctc').setValue(ctcs)\r\n    this.validation()\r\n    \r\n\r\n\r\n  }\r\n  Submit() {\r\n    this.router.navigate(['/payingemployee/empdetailsummary'])\r\n    this.router.navigate(['/payingemployee/empnav'])\r\n  }\r\n\r\n\r\n  deduction_type() {\r\n    this.apiservice.deductiontype().subscribe(data => {\r\n      this.deduction_type_data = data['data'];\r\n\r\n    });\r\n  }\r\n  calculateAmountYearly(index: number): void {\r\n  if(this.showDedcutEntry == true) {\r\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n    if (segmentData.paycomponent_type === 'Monthly Bonus' || segmentData.paycomponent_type === 'Deductions') {\r\n      const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\r\n      const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\r\n\r\n      if (amountControl && amountYearlyControl) {\r\n        const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\r\n        switch (selectedDropdownValue) {\r\n          case 1:\r\n            amountYearlyControl.setValue(amountControl.value * 4);\r\n            this.yrlyAmt =  amountControl.value * 4;\r\n            break;\r\n          case 2:\r\n            amountYearlyControl.setValue(amountControl.value * 2);\r\n            this.yrlyAmt =  amountControl.value * 2;\r\n            break;\r\n          case 3:\r\n            amountYearlyControl.setValue(amountControl.value * 1);\r\n            this.yrlyAmt =  amountControl.value * 1;\r\n            break;\r\n          case 4:\r\n            amountYearlyControl.setValue(amountControl.value * 12);\r\n            this.yrlyAmt =  amountControl.value * 12;\r\n            break;\r\n\r\n          default:\r\n            amountYearlyControl.setValue(amountControl.value);\r\n            this.yrlyAmt =  0;\r\n            break;\r\n\r\n        }\r\n      }\r\n      let Val1 = this.payrollgenform.get('takehome_monthly').value;\r\n      let Val2 = this.payrollgenform.get('takehome_yearly').value;\r\n\r\n      this.bonusValue = parseInt(amountControl.value);\r\n      this.bonusValueY = this.yrlyAmt;\r\n      // let Sum1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value);\r\n      if(this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4)\r\n      {\r\n        // this.deductValue == undefined?  0 : this.deductValue;\r\n        this.deductValue = (this.deductValue === undefined) ? 0 : this.deductValue;\r\n\r\n        this.Sumb1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value) - this.deductValue;\r\n        this.intialCTC = parseInt(this.payrollgenform.get('ctc_monthly').value) + parseInt(amountControl.value) - this.deductValue \r\n      } \r\n      else\r\n      {\r\n      this.Sumb1 =  parseInt(this.payrollgenform.get('takehome_monthlyWBD').value);\r\n      }\r\n      if(this.yrlyAmt !== undefined && this.deductPatch !== undefined )\r\n      {\r\n      this.Sumy2 = this.payrollgenform.get('takehome_yearly').value + this.yrlyAmt  - this.deductValueY;\r\n      }\r\n      else if(this.yrlyAmt !== undefined)\r\n      {\r\n        this.Sumy2= this.payrollgenform.get('takehome_yearly').value + this.yrlyAmt  \r\n      }\r\n      else if(this.deductPatch!== undefined)\r\n      {\r\n        this.Sumy2= this.payrollgenform.get('takehome_yearly').value - this.deductValueY;\r\n      }\r\n      else\r\n      {\r\n        this.Sumy2= this.payrollgenform.get('takehome_yearly').value;\r\n      }\r\n\r\n      this.payrollgenform.valueChanges.subscribe(() => {\r\n        this.payrollgenform.get('takehomeWBD').setValue(this.Sumb1)\r\n        this.payrollgenform.get('ctc_monthly').setValue(this.intialCTC)\r\n        this.payrollgenform.get('standard_ctc').setValue(this.intialCTC)\r\n        this.payrollgenform.get('takehome_monthlyWBD').setValue(this.Sumb1)\r\n        this.payrollgenform.get('takehome_yearlyWBD').setValue(this.Sumy2)\r\n      });\r\n    \r\n      mainform.get([index, 'amount']).patchValue(amountControl.value)\r\n      mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt)\r\n      \r\n    }\r\n  }\r\n    else\r\n    {\r\n      const segmentData = this.payrollgenform.get('segment_data').value[index];\r\n      const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n      if (segmentData.paycomponent_type === 'Monthly Bonus' || segmentData.paycomponent_type === 'Deductions') {\r\n        const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\r\n        const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\r\n  \r\n        if (amountControl && amountYearlyControl) {\r\n          const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\r\n          this.bonusTypes = selectedDropdownValue;\r\n          switch (selectedDropdownValue) {\r\n            case 1:\r\n              amountYearlyControl.setValue(amountControl.value * 4);\r\n              this.yrlyAmt =  amountControl.value * 4;\r\n              break;\r\n            case 2:\r\n              amountYearlyControl.setValue(amountControl.value * 2);\r\n              this.yrlyAmt =  amountControl.value * 2;\r\n              break;\r\n            case 3:\r\n              amountYearlyControl.setValue(amountControl.value * 1);\r\n              this.yrlyAmt =  amountControl.value * 1;\r\n              break;\r\n            case 4:\r\n              amountYearlyControl.setValue(amountControl.value * 12);\r\n              this.yrlyAmt =  amountControl.value * 12;\r\n              break;\r\n  \r\n            default:\r\n              amountYearlyControl.setValue(amountControl.value);\r\n              this.yrlyAmt =  0;\r\n              break;\r\n  \r\n          }\r\n        }\r\n        let Val1 = this.payrollgenform.get('takehome_monthly').value;\r\n        let Val2 = this.payrollgenform.get('takehome_yearly').value;\r\n  \r\n        this.bonusValue = parseInt(amountControl.value);\r\n        this.bonusValueY = this.yrlyAmt;\r\n       \r\n        // let Sum1 = parseInt(this.payrollgenform.get('takehome_monthly').value) + parseInt(amountControl.value);\r\n        let deductAmount = this.payrollgenform.get('deductions').value[0].amount;\r\n        let dedtype = this.payrollgenform.get('deductions').value[0].type;\r\n        switch (dedtype) {\r\n          case 1:\r\n           \r\n            this.yrlyAmtd = deductAmount * 4;\r\n            break;\r\n          case 2:\r\n           \r\n            this.yrlyAmtd =  deductAmount* 2;\r\n            break;\r\n          case 3:\r\n          \r\n            this.yrlyAmtd =  deductAmount * 1;\r\n            break;\r\n          case 4:\r\n            this.yrlyAmtd =  deductAmount * 12;\r\n            break;\r\n\r\n          default:\r\n          \r\n            this.yrlyAmtd =  0;\r\n            break;\r\n\r\n        }\r\n\r\n        if(dedtype == 4)\r\n        {\r\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue - deductAmount\r\n        }\r\n        else if(this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4)\r\n        {\r\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue\r\n        }\r\n        else\r\n        {\r\n          this.totalMon = parseInt(this.payrollgenform.get('takehome_monthly').value) \r\n        }\r\n        if(this.yrlyAmt !== undefined && this.yrlyAmtd !== undefined)\r\n        {\r\n         this.newsum = parseInt(this.payrollgenform.get('takehome_yearly').value) + parseInt(this.yrlyAmt)  - this.yrlyAmtd ;\r\n        }\r\n        else if(this.yrlyAmt!== undefined)\r\n        {\r\n          this.newsum= parseInt(this.payrollgenform.get('takehome_yearly').value) + parseInt(this.yrlyAmt)\r\n        }\r\n        else if(this.yrlyAmtd!== undefined)\r\n        {\r\n          this.newsum= parseInt(this.payrollgenform.get('takehome_yearly').value) - this.yrlyAmtd;\r\n        }\r\n        else\r\n        {\r\n          this.newsum= parseInt(this.payrollgenform.get('takehome_yearly').value);\r\n        }\r\n        this.payrollgenform.valueChanges.subscribe(() => {\r\n          this.payrollgenform.get('takehomeWBD').setValue(this.totalMon)\r\n          this.payrollgenform.get('takehome_monthlyWBD').setValue(this.totalMon)\r\n          this.payrollgenform.get('takehome_yearlyWBD').setValue(this.newsum)\r\n        });\r\n      \r\n        mainform.get([index, 'amount']).patchValue(amountControl)\r\n        mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt)\r\n    }\r\n  }\r\n}\r\n  \r\n    \r\n\r\n\r\n    \r\n  previewPay() {\r\n\r\n  }\r\n  onBonusTypeChange(data, index)\r\n  {\r\n    this.selectedBonusType = data.value;\r\n    this.clearBonusTypeValues(index);\r\n    this.resetAmount(index);\r\n\r\n  }\r\n  onBonusTypeChanges(data, index)\r\n  {\r\n    this.selectedBonusTypes = data.value;\r\n    this.clearBonusTypeValue(index);\r\n    // this.calculateAmountYearly();\r\n  }\r\n\r\n  clearBonusTypeValues(index: number) {\r\n\r\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n\r\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']).setValue(0);\r\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']).setValue(0);\r\n\r\n   \r\n    \r\n  }\r\n  clearBonusTypeValue(index: number) {\r\n\r\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n\r\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']).setValue(0);\r\n    this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']).setValue(0);\r\n\r\n   \r\n    \r\n  }\r\n\r\n  calculateAmountYearlys(index: number): void {\r\n    const segmentData = this.payrollgenform.get('segment_data').value[index];\r\n    const mainform = this.payrollgenform.get('segment_data') as FormArray;\r\n    if ((segmentData.paycomponent_type).toLowerCase() === 'deductions') {\r\n      const amountControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount']);\r\n      const amountYearlyControl = this.payrollgenform.get('segment_data').get([index, 'paycomponent_data', 0, 'amount_yearly']);\r\n\r\n      if (amountControl && amountYearlyControl) {\r\n        const selectedDropdownValue = this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type;\r\n        switch (selectedDropdownValue) {\r\n          case 1:\r\n            amountYearlyControl.setValue(amountControl.value * 4);\r\n            this.yrlyAmt =  amountControl.value * 4;\r\n            break;\r\n          case 2:\r\n            amountYearlyControl.setValue(amountControl.value * 2);\r\n            this.yrlyAmt =  amountControl.value * 2;\r\n            break;\r\n          case 3:\r\n            amountYearlyControl.setValue(amountControl.value * 1);\r\n            this.yrlyAmt =  amountControl.value * 1;\r\n            break;\r\n          case 4:\r\n            amountYearlyControl.setValue(amountControl.value * 12);\r\n            this.yrlyAmt =  amountControl.value * 12;\r\n            break;\r\n\r\n          default:\r\n            amountYearlyControl.setValue(amountControl.value);\r\n            this.yrlyAmt =  amountControl.value;\r\n            break;\r\n\r\n        }\r\n      }\r\n      let Val1 = this.payrollgenform.get('takehome_monthlyWBD').value;\r\n      let Val2 = this.payrollgenform.get('takehome_yearlyWBD').value;\r\n      this.deductValue = parseInt(amountControl.value);\r\n      this.deductValueY = this.yrlyAmt;\r\n      if(this.payrollgenform.get('segment_data').value[index].paycomponent_data[0].type == 4)\r\n      {\r\n        console.log(\"NET PAY\", parseInt(this.payrollgenform.get('takehome_monthlyWBD').value));\r\n        // this.bonusValue == undefined? 0 : this.bonusValue;\r\n        this.bonusValue = (this.bonusValue === undefined) ? 0 : this.bonusValue;\r\n\r\n        this.Sumd1 = parseInt(this.payrollgenform.get('takehome_monthly').value) - parseInt(amountControl.value) + this.bonusValue ;\r\n      }\r\n      else\r\n      {\r\n      this.Sumd1 =  parseInt(this.payrollgenform.get('takehome_monthlyWBD').value);\r\n      }\r\n      if(this.yrlyAmt !== undefined && this.bonusValueY !== undefined)\r\n      {\r\n      this.sumdata = this.payrollgenform.get('takehome_yearly').value - this.yrlyAmt + this.bonusValueY;\r\n      }\r\n      else if(this.yrlyAmt !== undefined)\r\n      {\r\n        this.sumdata= this.payrollgenform.get('takehome_yearly').value - this.yrlyAmt;\r\n      }\r\n      else if(this.bonusValueY!== undefined)\r\n      {\r\n        this.sumdata= this.payrollgenform.get('takehome_yearly').value + this.bonusValueY;\r\n      }\r\n      else\r\n      {\r\n        this.sumdata= this.payrollgenform.get('takehome_yearly').value;\r\n      }\r\n\r\n      this.payrollgenform.valueChanges.subscribe(() => {\r\n        this.payrollgenform.get('takehomeWBD').setValue(this.Sumd1)\r\n        this.payrollgenform.get('takehome_monthlyWBD').setValue(this.Sumd1)\r\n        this.payrollgenform.get('takehome_yearlyWBD').setValue(this.sumdata)\r\n      });    \r\n      mainform.get([index, 'amount']).patchValue(amountControl.value)\r\n      mainform.get([index, 'amount_yearly']).patchValue(this.yrlyAmt);      \r\n    }\r\n\r\n\r\n    \r\n  }\r\n\r\n  resetAmount(index)\r\n  {\r\n    let Val1 = this.payrollgenform.get('takehome_monthly').value;\r\n    let Val2 = this.payrollgenform.get('takehome_yearly').value;    \r\n      this.payrollgenform.get('takehomeWBD').setValue(Val1);\r\n      this.payrollgenform.get('takehome_monthlyWBD').setValue(Val1);\r\n      this.payrollgenform.get('takehome_yearlyWBD').setValue(Val2); \r\n  }\r\n  calculateDeduct()\r\n  {\r\n    let yrAmt = this.finaldata.take_home * 12;\r\n    if(this.typeVal === 4 && this.bonusPatch !== undefined && this.deductPatch !== undefined)\r\n    {\r\n    this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) + parseFloat(this.bonusPatch) - parseFloat(this.deductPatch);\r\n    }\r\n    else if(this.bonusPatch !== undefined)\r\n    {\r\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) + parseFloat(this.bonusPatch) ;\r\n    }\r\n    else if(this.deductPatch !== undefined)\r\n    {\r\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home) - parseFloat(this.deductPatch) ;\r\n    }\r\n    else\r\n    {\r\n      this.takeHomeWBDMon = parseFloat(this.finaldata?.take_home)\r\n    }\r\n    if(this.bonusPatchYr !== undefined && this.deductPatchYr !== undefined )\r\n    {\r\n    this.takeHomeYr =  (yrAmt) + parseFloat(this.bonusPatchYr) - parseFloat(this.deductPatchYr)\r\n    }\r\n    else if(this.deductPatchYr !== undefined)\r\n    {\r\n      this.takeHomeYr =  (yrAmt) - parseFloat(this.deductPatchYr)\r\n    }\r\n    else if(this.bonusPatchYr !== undefined)\r\n    {\r\n      this.takeHomeYr =  (yrAmt) - parseFloat(this.bonusPatchYr)\r\n    }\r\n    else\r\n    {\r\n      this.takeHomeYr =  (yrAmt);\r\n    }\r\n    \r\n    console.log(\"Take Home \",  this.takeHomeWBDMon)\r\n    this.payrollgenform.patchValue({\r\n      \"takehomeWBD\":  this.takeHomeWBDMon,\r\n      \"takehome_monthlyWBD\":  this.takeHomeWBDMon,\r\n      \"takehome_yearlyWBD\" : this.takeHomeYr\r\n    })\r\n  }\r\n  calculateAmountYearVal()\r\n  {\r\n    console.log(\"Deduct VALUES PAT\", this.payrollgenform.get('deductions').value)\r\n    this.amountD = this.payrollgenform.get('deductions').value[0]?.amount;\r\n    this.typeD = this.payrollgenform.get('deductions').value[0]?.type;\r\n    this.amountYearlyControls = this.payrollgenform.get('deductions').value[0]?.amount_yearly;\r\n    switch ( this.typeD) {\r\n      case 1:\r\n        this.yrlyAmtD =  this.amountD  * 4;\r\n        (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\r\n        break;\r\n      case 2:\r\n        this.yrlyAmtD =  this.amountD  * 2;\r\n        (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\r\n        break;\r\n      case 3:\r\n        this.yrlyAmtD =  this.amountD  * 1;\r\n        (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\r\n        break;\r\n      case 4:\r\n        this.yrlyAmtD =  this.amountD  * 12;\r\n        // this.amountYearlyControls.setValue(this.yrlyAmtD);\r\n        (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\r\n        break;\r\n\r\n      default:\r\n        this.yrlyAmtD =  this.amountD ;\r\n        (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(this.yrlyAmtD);\r\n        break;\r\n\r\n    }\r\n    if(this.typeD == 4)\r\n        {\r\n          this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) - this.amountD + this.bonusPatch;\r\n        }\r\n        // else if(this.bonusTypes == 4)\r\n        // {\r\n        //   this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusValue\r\n        // }\r\n        else\r\n        {\r\n          this.totalMons = parseInt(this.payrollgenform.get('takehome_monthly').value) + this.bonusPatch;\r\n        }\r\n        let Sum2 = parseInt(this.payrollgenform.get('takehome_yearly').value)  - this.yrlyAmtD+ parseInt(this.bonusPatchYr) ;\r\n        this.payrollgenform.valueChanges.subscribe(() => {\r\n          this.payrollgenform.get('takehomeWBD').setValue(this.totalMons)\r\n          this.payrollgenform.get('takehome_monthlyWBD').setValue(this.totalMons)\r\n          this.payrollgenform.get('takehome_yearlyWBD').setValue(Sum2)\r\n        });\r\n  }\r\n  onBonusTypeChangeD(event, data)\r\n  {\r\n    (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount']).patchValue(0);\r\n    (this.payrollgenform.get('deductions') as FormArray).get([0, 'amount_yearly']).patchValue(0);\r\n    this.calculateAmountYearVal();\r\n  }\r\n\r\n  gettemplatedata()\r\n  {\r\n    let gradeId = this.emp_grade_id;\r\n    let page = 1;\r\n    this.apiservice.gettemplates(gradeId, page).subscribe(res=>{\r\n      this.templatedrop = res['data']\r\n\r\n    })\r\n\r\n \r\n \r\n  }\r\n\r\n  TemplateClick(value)\r\n  {\r\n    this.selectedTemplateId = value.id;\r\n    // this.getgradebasedemployeeinfo(value.id);\r\n    this.apiservice.getemployeegradeinfodetails(this.emp_grade_id, this.employee_data?.id, value.id).subscribe(data => {\r\n      console.log(data)\r\n      this.finaldata = data;\r\n   \r\n      this.segmentdata();\r\n      this.validation();\r\n      this.enableRevise = false;\r\n      \r\n    });\r\n  }\r\n\r\n  onSelectionChange()\r\n  {\r\n    if(this.selectedOption == 1)\r\n    {\r\n      this.calcAmount = this.revisePay.get('revPercent').value * this.monthlyTakeHome /100;\r\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\r\n      this.showPercent = true;\r\n      this.showRupee = false;\r\n      this.revisePay.get('revPercent').setValue(0);\r\n      this.calcAmount = 0;\r\n      this.yrcalcAmount = 0;\r\n\r\n    }\r\n    else\r\n    {\r\n      this.calcAmount = this.revisePay.get('revPercent').value ;\r\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\r\n      this.showPercent = false;\r\n      this.showRupee = true;\r\n      this.revisePay.get('revPercent').setValue(0);\r\n      this.calcAmount = 0;\r\n      this.yrcalcAmount = 0;\r\n\r\n    }\r\n  }\r\n  calculateVal()\r\n  {\r\n    if(this.selectedOption == 1)\r\n    {\r\n      this.calcAmount = (this.revisePay.get('revPercent').value * this.monthlyTakeHome /100) + Number(this.monthlyTakeHome);\r\n      this.yrcalcAmount  = this.calcAmount * 12;\r\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\r\n     \r\n    }\r\n    else\r\n    {\r\n      this.calcAmount = this.revisePay.get('revPercent').value ;\r\n      this.yrcalcAmount  = this.calcAmount * 12;\r\n      console.log(\"REVISED AMOUNT\" + this.calcAmount);\r\n      \r\n    }\r\n  }\r\n\r\n  monyear = new FormControl(moment())\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.monyear.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.monyear.setValue(ctrlValue);\r\n\r\n\r\n  }\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\r\n    const ctrlValue = this.monyear.value;\r\n    ctrlValue.month(normalizedMonth.month());\r\n    this.monyear.setValue(ctrlValue);\r\n    datepicker.close();\r\n    this.revisePay.patchValue({\r\n      monthyear: this.monyear.value\r\n    })\r\n\r\n  }\r\n\r\n  reviseProcess()\r\n  {\r\n    this.payrollgenform.get('take_home').setValue(this.calcAmount);\r\n    let newAmount = this.calcAmount;\r\n    this.getAmount(this.calcAmount);\r\n    this.showpreference = true;\r\n   }\r\n  \r\n  }\r\n\r\n  export const DATE_FORMAT_2 = {\r\n    parse: {\r\n      dateInput: 'MM/YYYY',\r\n    },\r\n    display: {\r\n      dateInput: 'MMM YYYY',\r\n      monthYearLabel: 'MMM YYYY',\r\n      dateA11yLabel: 'LL',\r\n      monthYearA11yLabel: 'MMMM YYYY',\r\n    },\r\n  };\r\n\r\n\r\n  \r\n  @Directive({\r\n    selector: '[dateFormat2]',\r\n    providers: [\r\n      {\r\n        provide: DateAdapter,\r\n        useClass: MomentDateAdapter,\r\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\r\n      },\r\n      { provide: MAT_DATE_FORMATS, useValue: DATE_FORMAT_2 },\r\n    ],\r\n  })\r\n  export class FullCustomDateFormat2 { }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"col-12  mt-5 row\">\r\n      <div class=\"col-6 name\">\r\n        <span class=\"violet\">{{employee_data?.full_name}}</span>\r\n        's Pay Structure\r\n      </div>\r\n      <!-- <form class=\"example-form\"> -->\r\n      <div class=\"col-2 mt-3\">\r\n        <!-- <section class=\"example-section\"> -->\r\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"vpf\" (change)=\"_check(vpf,'vpf')\"><span\r\n            style=\"font-weight:bold\">VPF</span>\r\n        </mat-checkbox>\r\n        <!-- </section> -->\r\n        <!-- </mat-form-field> -->\r\n      </div>\r\n      <div class=\"col-2 mt-3\">\r\n        <!-- <section class=\"example-section\"> -->\r\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"std_pf\" (change)=\"_check(std_pf,'std_pf')\"\r\n          ngInit=\"checked=true\"><span style=\"font-weight:bold\">Std.PF</span></mat-checkbox>\r\n        <!-- </section> -->\r\n        <!-- </mat-form-field> -->\r\n      </div>\r\n      <div class=\"col-2 mt-3\">\r\n        <!-- <h4>Basic mat-select</h4> -->\r\n        <!-- <mat-form-field appearance=\"outline\" class=\"col-12\"> -->\r\n        <!-- <section class=\"example-section\"> -->\r\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"no_esi\" (change)=\"_check(no_esi,'no_esi')\"><span\r\n            style=\"font-weight:bold\">NO ESI</span></mat-checkbox>\r\n        <!-- </section> -->\r\n        <!-- </mat-form-field> -->\r\n      </div>\r\n      <!-- </form> -->\r\n    </div>\r\n    <!-- <div class=\"col-12 mt-3 row pl-0\">\r\n      <div class=\"col-12  \">\r\n        <form class=\"example-form\">\r\n        <mat-form-field class=\"example-full-width col-12\">\r\n          <mat-label>Employee Grade</mat-label>\r\n          <input type=\"text\" placeholder=\"\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n            [matAutocomplete]=\"auto\">\r\n          <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option *ngFor=\"let option of gradedata \" [value]=\"option.name\" (focusout)=\"LevelClick(option)\">\r\n              {{ option.name }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </mat-form-field>\r\n        </form>\r\n      </div>\r\n\r\n    </div> -->\r\n  </div>\r\n  <!-- <div class=\"col-2 mt-3\">\r\n    <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\"><span style=\"font-weight:bold\">PF</span></mat-checkbox>\r\n\r\n    </section> -->\r\n\r\n  <!-- </mat-form-field> -->\r\n  <!-- </div> -->\r\n  <!-- <div class=\"col-2 mt-3\" > -->\r\n  <!-- <h4>Basic mat-select</h4> -->\r\n  <!-- <mat-form-field appearance=\"outline\" class=\"col-12\"> -->\r\n  <!-- <section class=\"example-section\">\r\n      <mat-checkbox class=\"example-margin\" ><span style=\"font-weight:bold\">ESI</span></mat-checkbox>\r\n\r\n    </section> -->\r\n  <!-- </mat-form-field> -->\r\n  <!-- </div> -->\r\n</div>\r\n<div class=\"col-12 mt-3 row pl-0\">\r\n  <div class=\"col-4  \">\r\n    <form class=\"example-form col-12\">\r\n      <mat-form-field class=\"example-full-width col-12\">\r\n        <mat-label>Employee Grade</mat-label>\r\n        <input type=\"text\" placeholder=\"\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n          [matAutocomplete]=\"auto\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let option of gradedata \" [value]=\"option.name\" (focusout)=\"LevelClick(option)\">\r\n            {{ option.name }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-4  \">\r\n    <form class=\"example-form col-12\">\r\n      <mat-form-field class=\"example-full-width col-12\">\r\n        <mat-label>Template</mat-label>\r\n        <!-- <input type=\"text\" placeholder=\"\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\r\n            [matAutocomplete]=\"auto\">\r\n          <mat-autocomplete #auto=\"matAutocomplete\">\r\n            <mat-option *ngFor=\"let option of gradedata \" [value]=\"option.name\" (focusout)=\"LevelClick(option)\">\r\n              {{ option.name }}\r\n            </mat-option>\r\n          </mat-autocomplete> -->\r\n        <mat-select matInput formControlName=\"template_id\" placeholder=\"Template\">\r\n          <mat-option *ngFor=\"let option of templatedrop\" [value]=\"option.id\" (click)=\"TemplateClick(option)\">\r\n            {{ option.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div class=\"col-2  \">\r\n\r\n  </div>\r\n  <div class=\"col-2\">\r\n    <button class=\"btn btn-primary text-center\" style=\"margin-left: 10px;\" data-bs-target=\"#revisionModal\"\r\n      data-bs-toggle=\"modal\" [disabled]=\"enableRevise\">Salary Revise</button>\r\n  </div>\r\n\r\n</div>\r\n<!-- </div> -->\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"container-fluid\">\r\n      <form [formGroup]=\"payrollgenform\">\r\n        <div class=\"row col-12 border d-flex align-items-center bg-light text-dark height\">\r\n          <div class=\"col-3\">SALARY COMPONENTS</div>\r\n          <div class=\"col-3\">\r\n            CALCULATION</div>\r\n          <div class=\"col-3\">MONTHLY</div>\r\n          <div class=\"col-3\">\r\n            YEARLY</div>\r\n        </div>\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mt-3\">\r\n          <div class=\"col-3\">Take Home</div>\r\n          <div class=\"col-3\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text Prepend\">₹</span>\r\n              </div>\r\n              <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\"> -->\r\n\r\n              <input type=\"number\" class=\"form-control perwidth col-4\" formControlName=\"take_home\"\r\n                (input)=\"getAmount(payrollgenform.value.take_home)\" >\r\n              <!-- (keydown)=\"validationPaycomponent\" -->\r\n\r\n              <!-- </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"custom-mat-form-field\">\r\n              <input type=\"number\" matInput formControlName=\"takehome_monthly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\" class=\"custom-mat-form-field\">\r\n              <input matInput formControlName=\"takehome_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n            <!-- <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\">\r\n            </mat-form-field>\r\n          </div> -->\r\n          </div>\r\n        </div>\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mt-3\">\r\n          <div class=\"col-3\">Take Home with Bonus & Statutory Deductions</div>\r\n          <div class=\"col-3\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text Prepend\">₹</span>\r\n              </div>\r\n\r\n\r\n              <input type=\"number\" class=\"form-control perwidth col-4  custom-mat-form-field\" formControlName=\"takehomeWBD\" [readonly]=\"true\">\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n\r\n            <mat-form-field appearance=\"outline\"  class=\"custom-mat-form-field\">\r\n              <input type=\"number\" matInput formControlName=\"takehome_monthlyWBD\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\" class=\"custom-mat-form-field\">\r\n              <input matInput formControlName=\"takehome_yearlyWBD\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mt-3\">\r\n          <div class=\"col-3\">CTC</div>\r\n          <div class=\"col-3\">\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text Prepend\">₹</span>\r\n              </div>\r\n              <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\"> -->\r\n\r\n              <input type=\"number\" class=\"form-control perwidth col-4\" formControlName=\"standard_ctc\"\r\n                (input)=\"getAmount(payrollgenform.value.takehome)\" [readonly]=\"true\">\r\n\r\n              <!-- </mat-form-field> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"col-3\">\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"custom-mat-form-field\">\r\n              <input type=\"number\" matInput formControlName=\"ctc_monthly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input matInput formControlName=\"ctc_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n            <!-- <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input type=\"number\" matInput formControlName=\"ctc_monthly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input matInput formControlName=\"ctc_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n             <div class=\"col-3\">\r\n    <mat-form-field appearance=\"outline\">\r\n      <input type=\"number\" matInput formControlName=\"takehome_monthly\" class=\"alignValue\">\r\n    </mat-form-field>\r\n  </div> -->\r\n          </div>\r\n        </div>\r\n        <!-- t -->\r\n\r\n\r\n\r\n\r\n        <div class=\"row col-12 d-flex align-items-center skyblue\">\r\n          <div class=\"col-3\" style=\"cursor: pointer;\">Gross pay</div>\r\n          <div class=\"col-3\">\r\n            <!-- {{gross_pay}} -->\r\n            <div class=\"input-group\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text Prepend\">₹</span>\r\n              </div>\r\n              <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\"> -->\r\n\r\n              <input type=\"number\" class=\"form-control perwidth col-4\" formControlName=\"gross_pay\" [readonly]=\"true\">\r\n\r\n              <!-- </mat-form-field> -->\r\n            </div>\r\n            <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\">\r\n        <input type=\"number\" matInput formControlName=\"gross_pay\" [readonly]=\"true\" >\r\n    </mat-form-field> -->\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input type=\"number\" matInput formControlName=\"gross_pay_monthly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n          <div class=\"col-3\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <input matInput formControlName=\"gross_pay_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div formArrayName='segment_data'>\r\n          <!--segment array  -->\r\n          <div *ngFor=\"let list of payrollgenform.get('segment_data')['controls']; let i = index \" [formGroupName]=\"i\">\r\n            <div class=\"row col-12 d-flex align-items-center skyblue\">\r\n              <div class=\"col-3\">\r\n                <b (click)=\"showpaycom(payrollgenform.get('segment_data').value ,i)\"\r\n                  class=\"Segment\">{{payrollgenform.get('segment_data').value[i].segment_name}}</b>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <div class=\"input-group\"\r\n                  *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type !== 'Monthly Bonus' &&  (payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() !== 'deductions'\">\r\n                  <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\"> -->\r\n                  <input type=\"number\" class=\"form-control perwidthBack col-3\" formControlName=\"segment_percentage\"\r\n                    (input)=\"_letcalculate(payrollgenform.value.gross_pay)\">\r\n                  <!-- </mat-form-field> -->\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text Append\">%</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\" [readonly]=\"true\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input matInput formControlName=\"amount_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <!-- paycomponent based on segment -->\r\n            <div *ngIf=\"payrollgenform.get('segment_data').value[i].is_paycomponent \" formArrayName='paycomponent_data'\r\n              class=\"Segment_value ml-1 border bg-light  pt-5 pb-5 pl-2 pr-2 mt-2 mb-2 \">\r\n              <!-- pink #EFA8E4 -->\r\n              <!-- lightBlue=61aaf8bc -->\r\n              <!-- light=background-color:#eeeeef -->\r\n              <div>\r\n                <div *ngFor=\"let mark of list.get('paycomponent_data')['controls']; let j = index\" [formGroupName]=\"j\"\r\n                  class=\"row col-12 d-flex align-items-center  ml-1 \">\r\n                  <!-- blue=4999ef -->\r\n                  <div class=\"col-3\">\r\n                    {{payrollgenform.get('segment_data').value[i].paycomponent_data[j].paycomponent_name}}\r\n                  </div>\r\n\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type === 'Monthly Bonus'\">\r\n\r\n                    <ng-container>\r\n                      <mat-form-field appearance=\"outline\" style=\"width: 130px;\">\r\n                        <mat-label>Bonus Type</mat-label>\r\n                        <mat-select formControlName=\"type\" (selectionChange)=\"onBonusTypeChange($event, i)\">\r\n                          <mat-option *ngFor=\"let type of deduction_type_data\" [value]=\"type.id\">\r\n                            {{type.name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"selectedBonusType === 5 \">\r\n                      <!-- Display two datepickers for custom selection -->\r\n                      <mat-form-field appearance=\"outline\">\r\n                        <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\r\n                          formControlName=\"from_date\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #startDatePicker></mat-datepicker>\r\n                      </mat-form-field>\r\n\r\n                      <mat-form-field appearance=\"outline\">\r\n                        <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\r\n                          formControlName=\"to_date\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #endDatePicker></mat-datepicker>\r\n                      </mat-form-field>\r\n                    </ng-container>\r\n                  </div>\r\n\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type === 'Monthly Bonus'\">\r\n\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\"\r\n                        (focusout)=\"calculateAmountYearly(i)\">\r\n                    </mat-form-field>\r\n\r\n                  </div>\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type === 'Monthly Bonus'\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input type=\"number\" matInput formControlName=\"amount_yearly\" class=\"alignValue\"\r\n                        [readonly]=\"true\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <ng-container *ngIf=\"showDedcutEntry\">\r\n                    <div class=\"col-3\"\r\n                      *ngIf=\"(payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() === 'deductions'\">\r\n\r\n                      <ng-container>\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 130px;\">\r\n                          <mat-label>Bonus Type</mat-label>\r\n                          <mat-select formControlName=\"type\" (selectionChange)=\"onBonusTypeChanges($event, i)\">\r\n                            <mat-option *ngFor=\"let type of deduction_type_data\" [value]=\"type.id\">\r\n                              {{type.name}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </ng-container>\r\n                      <ng-container *ngIf=\"selectedBonusTypes === 5 \">\r\n\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Start Date\"\r\n                            formControlName=\"from_date\">\r\n                          <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                          <mat-datepicker #startDatePicker></mat-datepicker>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"outline\">\r\n                          <input matInput [matDatepicker]=\"endDatePicker\" placeholder=\"End Date\"\r\n                            formControlName=\"to_date\">\r\n                          <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                          <mat-datepicker #endDatePicker></mat-datepicker>\r\n                        </mat-form-field>\r\n                      </ng-container>\r\n                    </div>\r\n\r\n                    <div class=\"col-3\"\r\n                      *ngIf=\"(payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() === 'deductions'\">\r\n\r\n                      <mat-form-field appearance=\"outline\">\r\n                        <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\"\r\n                          (focusout)=\"calculateAmountYearlys(i)\">\r\n                      </mat-form-field>\r\n\r\n                    </div>\r\n                    <div class=\"col-3\"\r\n                      *ngIf=\"(payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() === 'deductions'\">\r\n                      <mat-form-field appearance=\"outline\">\r\n                        <input type=\"number\" matInput formControlName=\"amount_yearly\" class=\"alignValue\"\r\n                          [readonly]=\"true\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </ng-container>\r\n\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type !== 'Monthly Bonus' && (payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() !== 'deductions'\">\r\n                    <div class=\"input-group\">\r\n                      <!-- <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text Prepend\" >₹</span>\r\n                  </div> -->\r\n                      <!-- <mat-form-field  class=\"perwidth\" style=\"border-color:black\"> -->\r\n                      <input type=\"number\" class=\"form-control perwidthBack col-3\"\r\n                        formControlName=\"paycomponent_percentage\"\r\n                        (input)=\"_letcalculate(payrollgenform.value.gross_pay)\" min=\"0\" max=\"100\">\r\n                      <!-- (input)=\"validationPaycomponent()\" -->\r\n                      <!-- formControlName=\"paycomponent_percentage\" (input)=\"_letcalculate(payrollgenform.value.gross_pay)\"  > -->\r\n                      <!-- </mat-form-field> -->\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text Append\">%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type !== 'Monthly Bonus' && (payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() !== 'deductions'\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\" [readonly]=\"true\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-3\"\r\n                    *ngIf=\"payrollgenform.get('segment_data').value[i].paycomponent_type !== 'Monthly Bonus' && (payrollgenform.get('segment_data').value[i].paycomponent_type)?.toLowerCase() !== 'deductions'\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input matInput formControlName=\"amount_yearly\" class=\"alignValue\" [readonly]=\"true\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row col-12\">\r\n                  <div class=\"col-3\"></div>\r\n                  <div class=\"col-3 text-danger text-center\" style=\"margin-left:-80px\">{{paycomponentvalue[i]}}</div>\r\n                  <div class=\"col-3 \"></div>\r\n                  <div class=\"col-3\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Custom Deductions-->\r\n        <ng-container *ngIf=\"deductPatchrow\">\r\n          <div class=\"row col-12 d-flex align-items-center skyblue mt-5 mb-3\">\r\n            <div class=\"col-3 Segment mt-1\" (click)=\"showhideecs(payrollgenform.get('companycontribution').value)\">\r\n              Deductions</div>\r\n\r\n          </div>\r\n\r\n\r\n          <div *ngIf=\"is_pfs\" formArrayName='deductions'\r\n            class=\" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\">\r\n\r\n            <div class=\"skyblue bg-light\">\r\n              <!-- <code>{{payrollgenform.get('companycontribution').value[0]?.paycomponent_name}}</code> -->\r\n\r\n              <div *ngFor=\"let d of payrollgenform.get('deductions')['controls']; let z = index\"\r\n                class=\"row col-12 d-flex align-items-center \" [formGroupName]=\"z\">\r\n                <ng-container *ngIf=\"payrollgenform.get('deductions').value[z]?.paycomponent_name !== ''\">\r\n                  <!-- <div  > -->\r\n                  <div class=\"col-3\">{{payrollgenform.get('deductions').value[z]?.paycomponent_name}}</div>\r\n                  <div class=\"col-3\">\r\n                    <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\">\r\n          <input type=\"number\" matInput formControlName=\"paycomponent_percentage\"> -->\r\n                    <!-- </mat-form-field>  -->\r\n                    <!-- <div class=\"Employeespan row col-5\"> -->\r\n                    <ng-container>\r\n                      <mat-form-field appearance=\"outline\" style=\"width: 130px;\">\r\n                        <mat-label>Bonus Type</mat-label>\r\n                        <mat-select formControlName=\"type\" (selectionChange)=\"onBonusTypeChangeD($event, z)\">\r\n                          <mat-option *ngFor=\"let type of deduction_type_data\" [value]=\"type.id\">\r\n                            {{type.name}}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </ng-container>\r\n                    <!-- <div class=\"col-7 \" style=\"text-align:left;display:flex;align-items:center\">\r\n          {{payrollgenform.get('deductions').value[z]?.paycomponent_percentage}} </div>\r\n        <div class=\"col-4 perc\" style=\"display:flex;align-items:center;justify-content:center\">%</div> -->\r\n\r\n                    <!-- </div> -->\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\"\r\n                        (focusout)=\"calculateAmountYearVal()\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                      <input matInput formControlName=\"amount_yearly\" class=\"alignValue\" readonly>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <!-- <div class=\"row col-12\">\r\n    <div class=\"col-3\"></div>\r\n    <div class=\"col-3\"></div>\r\n    <div class=\"col-3 text-danger text-center\" style=\"margin-left:35px\">{{totalEmployee}}</div>\r\n    <div class=\"col-3 text-danger text-right\" style=\"margin-left:-100px\">{{totalEmployeeYearly}}</div>\r\n  </div> -->\r\n            </div>\r\n\r\n            <!-- </div> -->\r\n          </div>\r\n\r\n        </ng-container>\r\n\r\n\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mt-5\">\r\n          <div class=\"col-3 Segment mt-1\" (click)=\"showhidecc(payrollgenform.get('companycontribution').value)\">Company\r\n            Contribution</div>\r\n\r\n        </div>\r\n        <div *ngIf=\"is_company\" formArrayName='companycontribution'\r\n          class=\" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\">\r\n\r\n\r\n          <!-- <code>{{payrollgenform.get('companycontribution').value[0]?.paycomponent_name}}</code> -->\r\n          <div class=\" skyblue bg-light\">\r\n            <div *ngFor=\"let d of payrollgenform.get('companycontribution')['controls']; let c = index\"\r\n              [formGroupName]=\"c\" class=\"row col-12 d-flex align-items-center\">\r\n              <!-- <div class=\"\"> -->\r\n              <!-- <div  > -->\r\n              <div class=\"col-3 \">\r\n\r\n                <span>{{payrollgenform.get('companycontribution').value[c]?.paycomponent_name}}</span>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\">\r\n                  <input type=\"number\" matInput formControlName=\"paycomponent_percentage\"> -->\r\n                <!-- </mat-form-field>  -->\r\n                <div class=\"Employeespan row col-5\">\r\n                  <div class=\"col-7 \" style=\"text-align:left;display:flex;align-items:center\">\r\n                    {{payrollgenform.get('companycontribution').value[c]?.paycomponent_percentage}}</div>\r\n                  <div class=\"col-4 perc\" style=\"display:flex;align-items:center;justify-content:center\">%</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\" readonly=\"true\">\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input matInput formControlName=\"amount_yearly\" class=\"alignValue\" readonly=\"true\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n\r\n            </div>\r\n            <div class=\"row col-12\">\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"col-3 text-danger text-center\" style=\"margin-left:35px\">{{totalCompany}}</div>\r\n              <div class=\"col-3 text-danger text-right\" style=\"margin-left:-100px\">{{totalCompanyYearly}}</div>\r\n            </div>\r\n            <!-- </div> -->\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mt-5 mb-3\">\r\n          <div class=\"col-3 Segment mt-1\" (click)=\"showhideec(payrollgenform.get('companycontribution').value)\">Employee\r\n            Contribution</div>\r\n\r\n        </div>\r\n        <div *ngIf=\"is_pf\" formArrayName='employeecontribution'\r\n          class=\" border bg-light Segment_value pt-5 pb-5 pl-5 pr-2 mt-2 mb-2 ml-1\">\r\n\r\n          <div class=\"skyblue bg-light\">\r\n            <!-- <code>{{payrollgenform.get('companycontribution').value[0]?.paycomponent_name}}</code> -->\r\n            <div *ngFor=\"let d of payrollgenform.get('employeecontribution')['controls']; let c = index\"\r\n              class=\"row col-12 d-flex align-items-center \" [formGroupName]=\"c\">\r\n\r\n              <!-- <div  > -->\r\n              <div class=\"col-3\">{{payrollgenform.get('employeecontribution').value[c]?.paycomponent_name}}</div>\r\n              <div class=\"col-3\">\r\n                <!-- <mat-form-field appearance=\"outline\" class=\"perwidth\">\r\n                  <input type=\"number\" matInput formControlName=\"paycomponent_percentage\"> -->\r\n                <!-- </mat-form-field>  -->\r\n                <div class=\"Employeespan row col-5\">\r\n                  <div class=\"col-7 \" style=\"text-align:left;display:flex;align-items:center\">\r\n                    {{payrollgenform.get('employeecontribution').value[c]?.paycomponent_percentage}} </div>\r\n                  <div class=\"col-4 perc\" style=\"display:flex;align-items:center;justify-content:center\">%</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input type=\"number\" matInput formControlName=\"amount\" class=\"alignValue\" readonly>\r\n                </mat-form-field>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <mat-form-field appearance=\"outline\">\r\n                  <input matInput formControlName=\"amount_yearly\" class=\"alignValue\" readonly>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"row col-12\">\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"col-3\"></div>\r\n              <div class=\"col-3 text-danger text-center\" style=\"margin-left:35px\">{{totalEmployee}}</div>\r\n              <div class=\"col-3 text-danger text-right\" style=\"margin-left:-100px\">{{totalEmployeeYearly}}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- </div> -->\r\n        </div>\r\n\r\n        <div *ngIf=\"showpreference\">\r\n               <div class=\"row\">\r\n          <p style=\"font-size: larger;\r\n          font-weight: 600;\r\n          margin-top: 3%;\r\n          margin-left: 3%;\">Payout Preferences</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6\">\r\n            <p style=\"    margin-top: 4%;\r\n            margin-left: 17%;\">Revised Salary Effective From </p>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <form [formGroup]=\"revisePay\">\r\n              <mat-form-field appearance=\"outline\" style=\"    margin-top: 2%;\r\n              margin-left: -53%;\">\r\n                <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Revised Date\"\r\n                  formControlName=\"revisedate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n         \r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 4%;\">\r\n            <div class=\"col-sm-6\">\r\n              <p style=\"    margin-left: 16%;\">Payout Month : </p>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <form [formGroup]=\"revisePay\">\r\n                <mat-form-field dateFormat2 class=\"smallinput\" style=\"width: 43%;\r\n                margin-left: -34%;\">\r\n                  <mat-label> Month </mat-label>\r\n                  <input matInput [matDatepicker]=\"dp\" [formControl]=\"monyear\" placeholder=\"Month and Year\"\r\n                    formControlName=\"monthyear\" />\r\n                  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event)\"\r\n                    (monthSelected)=\"chosenMonthHandler($event, dp)\" panelClass=\"example-month-picker\">\r\n                  </mat-datepicker>\r\n                </mat-form-field>\r\n              </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row col-12 d-flex align-items-center skyblue mb-5\">\r\n          <button type=\"submit\" class=\"btn btn-outline-primary text-center\"\r\n            style=\"border-radius: 40px;margin-left: 10px;\" (click)=\"previewPay()\" data-bs-target=\"#modalPay\"\r\n            data-bs-toggle=\"modal\">Preview</button>\r\n          <button type=\"submit\" class=\"btn btn-outline-success text-center\"\r\n            style=\"border-radius: 40px;margin-left: 10px;\" (click)=\"Formsubmission()\"\r\n            [disabled]=\"!payrollgenform.get('take_home').valid\">Submit</button>\r\n          <button type=\"button\" class=\"btn btn-outline-primary text-center\"\r\n            style=\"border-radius: 40px;margin-left: 10px;\" (click)=\"Submit()\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal fade bd-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n  id=\"modalPay\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\" style=\"width:127%\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\">Preview Pay Structure </h2>\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n\r\n        <mat-card>\r\n          <html>\r\n\r\n          <body>\r\n\r\n\r\n            <div class=\"page\">\r\n              <main>\r\n                <section>\r\n                  <br>\r\n\r\n                  <div id=\"tablesection\" class=\"mt-5\">\r\n                    <table style=\"width: 90%;font-family: Calibri;margin-left: 2%;\" id=\"previewTable\">\r\n                      <tr>\r\n                        <th colspan=\"3\" id=\"ths\" class=\"bg-info text-white\"\r\n                          style=\"font-size: large;text-align: center;font-weight: bold;\">\r\n                          Pay Structure</th>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <!-- <th id=\"ths\" >S. No</th> -->\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">Description</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">Gross Amount</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">Gross Amount</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">Earnings</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">MONTHLY</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">YEARLY</th>\r\n                      </tr>\r\n\r\n\r\n                      <tr>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">GROSS PAY</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('gross_pay_monthly').value |\r\n                          currency:'INR'}}</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('gross_pay_yearly').value |\r\n                          currency:'INR'}}</th>\r\n\r\n                      </tr>\r\n\r\n                      <!-- <tr *ngFor=\"let list of payrollgenform.get('segment_data')['controls']; let i = index\" >                                                 \r\n                                                    <td>\r\n                                                      <b>{{ list.value.segment_name }}</b>\r\n                                                    </td>                                               \r\n                                                    <td >\r\n                                                      {{ list.value.amount }}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                      {{ list.value.amount_yearly }}\r\n                                                    </td>                                         \r\n                                                    <tr *ngFor=\"let mark of list.get('paycomponent_data')['controls']; let j = index\">\r\n                                                      <td>\r\n                                                        {{ mark.value.paycomponent_name }}\r\n                                                      </td>\r\n                                                      <td>\r\n                                                        {{ mark.value.amount }}\r\n                                                      </td>\r\n                                                      <td>\r\n                                                        {{ mark.value.amount_yearly }}\r\n                                                      </td>                                                \r\n                                                    </tr>\r\n                 \r\n                                                </tr> -->\r\n\r\n                      <ng-container *ngFor=\"let list of payrollgenform.get('segment_data')['controls']; let i = index\">\r\n                        <td id=\"tds\" style=\"background-color: #17a2b8 ;color:white;\">\r\n                          <b>{{ list.value.segment_name }}</b>\r\n                        </td>\r\n                        <td id=\"tds\" style=\"background-color: #17a2b8 ;color:white;\"> {{list.value.amount |\r\n                          currency:'INR'}}</td>\r\n                        <td id=\"tds\" style=\"background-color: #17a2b8 ;color:white;\">{{list.value.amount_yearly |\r\n                          currency:'INR'}}</td>\r\n\r\n                        <tr *ngFor=\"let mark of list.get('paycomponent_data')['controls']; let j = index\">\r\n\r\n                          <td id=\"tds\">{{ mark.value.paycomponent_name }}</td>\r\n                          <td id=\"tds\">{{ mark.value.amount | currency:'INR'}}</td>\r\n                          <td id=\"tds\">{{ mark.value.amount_yearly | currency:'INR' }}</td>\r\n                        </tr>\r\n\r\n                      </ng-container>\r\n\r\n                      <tr style=\"background-color: #17a2b8 ;color:white;\">\r\n                        <td colspan=\"3\">\r\n                          Company Contribution\r\n                        </td>\r\n                        <!-- <td></td>\r\n                                                  <td></td> -->\r\n                      </tr>\r\n                      <tr *ngFor=\"let d of payrollgenform.get('companycontribution')['controls']; let c = index\">\r\n                        <td id=\"tds\">{{d.value.paycomponent_name}}</td>\r\n                        <td id=\"tds\">{{d.value.amount | currency:'INR'}}</td>\r\n                        <td id=\"tds\">{{d.value.amount_yearly | currency:'INR'}}</td>\r\n                      </tr>\r\n                      <tr style=\"background-color: #17a2b8 ;color:white;\">\r\n                        <td id=\"tds\"></td>\r\n                        <td id=\"tds\">{{totalCompany | currency:'INR'}}</td>\r\n                        <td id=\"tds\">{{totalCompanyYearly | currency:'INR'}}</td>\r\n\r\n                      </tr>\r\n\r\n                      <tr style=\"background-color: #17a2b8 ;color:white;\">\r\n                        <td colspan=\"3\">\r\n                          Employee Contribution\r\n                        </td>\r\n                        <!-- <td></td>\r\n                                                  <td></td> -->\r\n                      </tr>\r\n                      <tr *ngFor=\"let d of payrollgenform.get('employeecontribution')['controls'] ; let c = index\">\r\n                        <td id=\"tds\">{{d.value.paycomponent_name}}</td>\r\n                        <td id=\"tds\">{{d.value.amount | currency:'INR'}}</td>\r\n                        <td id=\"tds\">{{d.value.amount_yearly | currency:'INR'}}</td>\r\n                      </tr>\r\n                      <tr style=\"background-color: #17a2b8 ;color:white;\">\r\n                        <td id=\"tds\"></td>\r\n                        <td id=\"tds\">{{totalEmployee | currency:'INR'}}</td>\r\n                        <td id=\"tds\">{{totalEmployeeYearly | currency:'INR'}}</td>\r\n\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">TAKE HOME</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('takehome_monthly').value |\r\n                          currency:'INR'}}</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('takehome_yearly').value |\r\n                          currency:'INR'}}</th>\r\n\r\n                      </tr>\r\n                      <tr>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">TAKE HOME WITH BONUS & DEDUCTIONS</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('takehome_monthlyWBD').value |\r\n                          currency:'INR'}}</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('takehome_yearlyWBD').value |\r\n                          currency:'INR'}}</th>\r\n\r\n                      </tr>\r\n                      <tr>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">CTC</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('ctc_monthly').value |\r\n                          currency:'INR'}}</th>\r\n                        <th id=\"ths\" style=\"font-weight: bold;\">{{this.payrollgenform.get('ctc_yearly').value |\r\n                          currency:'INR'}}</th>\r\n\r\n                      </tr>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </table>\r\n                  </div>\r\n\r\n\r\n\r\n\r\n                  <br>\r\n\r\n\r\n                </section>\r\n\r\n              </main>\r\n            </div>\r\n          </body>\r\n\r\n          </html>\r\n        </mat-card>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade bd-example-modal-lg\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\"\r\n  id=\"revisionModal\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\" style=\"width:127%\">\r\n      <div class=\"modal-header\">\r\n        <h2 class=\"modal-title\" id=\"exampleModalLabel\" style=\"font-family: 'Inter';\">Select the Salary Revision Type\r\n        </h2>\r\n\r\n        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"selectedOption\" (change)=\"onSelectionChange()\">\r\n              <mat-radio-button value=\"1\" class=\"fonts\"><span style=\"font-family: 'Inter';\"> Revise CTC by\r\n                  Percentage</span></mat-radio-button>\r\n              <mat-radio-button value=\"2\" class=\"fonts\"><span style=\"font-family: 'Inter';\"> Enter the new Monthly Take\r\n                  Home </span> </mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <form [formGroup]=\"revisePay\">\r\n\r\n              <div>\r\n                <mat-form-field>\r\n                  <input matInput  formControlName=\"revPercent\"  (input)=\"calculateVal()\" >\r\n                </mat-form-field>\r\n                <span *ngIf=\"showPercent\">\r\n                  <span > % </span>\r\n                </span>\r\n                <span *ngIf=\"showRupee\">\r\n                  <span> ₹ </span>\r\n                </span>\r\n              </div>\r\n\r\n  \r\n         \r\n          </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-left: 22%;font-size: medium;\">\r\n          Revised Monthly Take Home : <span style=\"color: red;    margin-left: 4%;\r\n          font-size: large;\"><span>₹</span>{{this.calcAmount}}</span>\r\n        </div>\r\n        <div class=\"row\" style=\" margin-left: 22%;   font-size: medium;\">\r\n          Revised Yearly Take Home :  <span style=\"color: red;    margin-left: 6%;\r\n          font-size: large;\"><span>₹</span>{{this.yrcalcAmount}}</span>\r\n        </div>\r\n        <hr>\r\n\r\n        <!-- <div class=\"row\">\r\n          <p style=\"font-size: larger;\r\n          font-weight: 600;\r\n          margin-top: 3%;\r\n          margin-left: 3%;\">Payout Preferences</p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6\">\r\n            <p>Revised Salary Effective From </p>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <form [formGroup]=\"revisePay\">\r\n              <mat-form-field appearance=\"outline\" style=\"margin-top: -8%;\">\r\n                <input matInput [matDatepicker]=\"startDatePicker\" placeholder=\"Revised Date\"\r\n                  formControlName=\"revisedate\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n         \r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\" style=\"margin-top: 4%;\">\r\n            <div class=\"col-sm-6\">\r\n              <p>Payout Month : </p>\r\n            </div>\r\n            <div class=\"col-sm-6\">\r\n              <form [formGroup]=\"revisePay\">\r\n                <mat-form-field dateFormat2 class=\"smallinput\" style=\"margin-top: -2%;width: 85%;\">\r\n                  <mat-label> Month </mat-label>\r\n                  <input matInput [matDatepicker]=\"dp\" [formControl]=\"monyear\" placeholder=\"Month and Year\"\r\n                    formControlName=\"monthyear\" />\r\n                  <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n                  <mat-datepicker #dp startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event)\"\r\n                    (monthSelected)=\"chosenMonthHandler($event, dp)\" panelClass=\"example-month-picker\">\r\n                  </mat-datepicker>\r\n                </mat-form-field>\r\n              </form>\r\n            </div>\r\n        </div> -->\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\"></div>\r\n          <div class=\"col-md-2\">\r\n            <button class=\"btn btn-primary text-center\" (click)=\"reviseProcess()\" >Submit</button>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <button class=\"btn btn-info text-center\" data-bs-dismiss=\"modal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n    \r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n</div>"],"mappings":"AACA,SAASA,SAAS,EAAeC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAE3F,SAASC,SAAS,QAAQ,gBAAgB;AAO1C,SAASC,WAAW,EAAEC,gBAAgB,EAAEC,eAAe,QAAQ,wBAAwB;AACvF,SAASC,+BAA+B,EAAEC,iBAAiB,QAAQ,kCAAkC;AACrG,OAAOC,MAAkB,MAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;ICkE7BC,EAAA,CAAAC,cAAA,qBAAoG;IAAhCD,EAAA,CAAAE,UAAA,sBAAAC,6EAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,IAAA;MAAA,MAAAC,UAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,OAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAW,WAAA,CAAAF,OAAA,CAAAG,UAAA,CAAAL,UAAA,CAAkB;IAAA,EAAC;IACjGP,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAa;;;;IAFiCd,EAAA,CAAAe,UAAA,UAAAR,UAAA,CAAAS,IAAA,CAAqB;IACjEhB,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAX,UAAA,CAAAS,IAAA,MACF;;;;;;IAiBAhB,EAAA,CAAAC,cAAA,qBAAoG;IAAhCD,EAAA,CAAAE,UAAA,mBAAAiB,0EAAA;MAAA,MAAAf,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAe,IAAA;MAAA,MAAAC,UAAA,GAAAjB,WAAA,CAAAI,SAAA;MAAA,MAAAc,OAAA,GAAAtB,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAW,OAAA,CAAAC,aAAA,CAAAF,UAAA,CAAqB;IAAA,EAAC;IACjGrB,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAa;;;;IAFmCd,EAAA,CAAAe,UAAA,UAAAM,UAAA,CAAAG,EAAA,CAAmB;IACjExB,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAG,UAAA,CAAAL,IAAA,MACF;;;;;;IA4KMhB,EAAA,CAAAC,cAAA,cACgM;IAG5LD,EAAA,CAAAE,UAAA,mBAAAuB,qEAAA;MAAAzB,EAAA,CAAAK,aAAA,CAAAqB,IAAA;MAAA,MAAAC,OAAA,GAAA3B,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAgB,OAAA,CAAAC,aAAA,CAAAD,OAAA,CAAAE,cAAA,CAAAC,KAAA,CAAAC,SAAA,CAA6C;IAAA,EAAC;IADzD/B,EAAA,CAAAc,YAAA,EAC0D;IAE1Dd,EAAA,CAAAC,cAAA,cAAgC;IACQD,EAAA,CAAAa,MAAA,QAAC;IAAAb,EAAA,CAAAc,YAAA,EAAO;;;;;IAoCxCd,EAAA,CAAAC,cAAA,sBAAuE;IACrED,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAa;;;;IAFwCd,EAAA,CAAAe,UAAA,UAAAiB,QAAA,CAAAR,EAAA,CAAiB;IACpExB,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAc,QAAA,CAAAhB,IAAA,MACF;;;;;IAINhB,EAAA,CAAAiC,uBAAA,GAA+C;IAE7CjC,EAAA,CAAAC,cAAA,yBAAqC;IACnCD,EAAA,CAAAkC,SAAA,iBAC8B;IAGhClC,EAAA,CAAAc,YAAA,EAAiB;IAEjBd,EAAA,CAAAC,cAAA,yBAAqC;IACnCD,EAAA,CAAAkC,SAAA,iBAC4B;IAG9BlC,EAAA,CAAAc,YAAA,EAAiB;IACnBd,EAAA,CAAAmC,qBAAA,EAAe;;;;;IAZKnC,EAAA,CAAAiB,SAAA,GAAiC;IAAjCjB,EAAA,CAAAe,UAAA,kBAAAqB,IAAA,CAAiC;IAEhBpC,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAAe,UAAA,QAAAqB,IAAA,CAAuB;IAKxCpC,EAAA,CAAAiB,SAAA,GAA+B;IAA/BjB,EAAA,CAAAe,UAAA,kBAAAsB,IAAA,CAA+B;IAEdrC,EAAA,CAAAiB,SAAA,GAAqB;IAArBjB,EAAA,CAAAe,UAAA,QAAAsB,IAAA,CAAqB;;;;;;IAzB5DrC,EAAA,CAAAC,cAAA,cAC4F;IAE1FD,EAAA,CAAAiC,uBAAA,GAAc;IACZjC,EAAA,CAAAC,cAAA,0BAA2D;IAC9CD,EAAA,CAAAa,MAAA,iBAAU;IAAAb,EAAA,CAAAc,YAAA,EAAY;IACjCd,EAAA,CAAAC,cAAA,sBAAoF;IAAjDD,EAAA,CAAAE,UAAA,6BAAAoC,iGAAAC,MAAA;MAAAvC,EAAA,CAAAK,aAAA,CAAAmC,IAAA;MAAA,MAAAC,KAAA,GAAAzC,EAAA,CAAAU,aAAA,IAAAgC,KAAA;MAAA,MAAAC,OAAA,GAAA3C,EAAA,CAAAU,aAAA;MAAA,OAAmBV,EAAA,CAAAW,WAAA,CAAAgC,OAAA,CAAAC,iBAAA,CAAAL,MAAA,EAAAE,KAAA,CAA4B;IAAA,EAAC;IACjFzC,EAAA,CAAA6C,UAAA,IAAAC,uEAAA,0BAEa;IACf9C,EAAA,CAAAc,YAAA,EAAa;IAEjBd,EAAA,CAAAmC,qBAAA,EAAe;IACfnC,EAAA,CAAA6C,UAAA,IAAAE,yEAAA,4BAee;IACjB/C,EAAA,CAAAc,YAAA,EAAM;;;;IAtB+Bd,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAAe,UAAA,YAAAiC,OAAA,CAAAC,mBAAA,CAAsB;IAM1CjD,EAAA,CAAAiB,SAAA,GAA6B;IAA7BjB,EAAA,CAAAe,UAAA,SAAAiC,OAAA,CAAAE,iBAAA,OAA6B;;;;;;IAkB9ClD,EAAA,CAAAC,cAAA,cAC4F;IAItFD,EAAA,CAAAE,UAAA,sBAAAiD,qFAAA;MAAAnD,EAAA,CAAAK,aAAA,CAAA+C,IAAA;MAAA,MAAAX,KAAA,GAAAzC,EAAA,CAAAU,aAAA,IAAAgC,KAAA;MAAA,MAAAW,OAAA,GAAArD,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAW,WAAA,CAAA0C,OAAA,CAAAC,qBAAA,CAAAb,KAAA,CAAwB;IAAA,EAAC;IADvCzC,EAAA,CAAAc,YAAA,EACwC;;;;;IAI5Cd,EAAA,CAAAC,cAAA,cAC4F;IAExFD,EAAA,CAAAkC,SAAA,iBACoB;IACtBlC,EAAA,CAAAc,YAAA,EAAiB;;;IADbd,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;;;;;IAWbf,EAAA,CAAAC,cAAA,sBAAuE;IACrED,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAa;;;;IAFwCd,EAAA,CAAAe,UAAA,UAAAwC,QAAA,CAAA/B,EAAA,CAAiB;IACpExB,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAqC,QAAA,CAAAvC,IAAA,MACF;;;;;IAINhB,EAAA,CAAAiC,uBAAA,GAAgD;IAE9CjC,EAAA,CAAAC,cAAA,yBAAqC;IACnCD,EAAA,CAAAkC,SAAA,iBAC8B;IAGhClC,EAAA,CAAAc,YAAA,EAAiB;IAEjBd,EAAA,CAAAC,cAAA,yBAAqC;IACnCD,EAAA,CAAAkC,SAAA,iBAC4B;IAG9BlC,EAAA,CAAAc,YAAA,EAAiB;IACnBd,EAAA,CAAAmC,qBAAA,EAAe;;;;;IAZKnC,EAAA,CAAAiB,SAAA,GAAiC;IAAjCjB,EAAA,CAAAe,UAAA,kBAAAyC,IAAA,CAAiC;IAEhBxD,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAAe,UAAA,QAAAyC,IAAA,CAAuB;IAKxCxD,EAAA,CAAAiB,SAAA,GAA+B;IAA/BjB,EAAA,CAAAe,UAAA,kBAAA0C,IAAA,CAA+B;IAEdzD,EAAA,CAAAiB,SAAA,GAAqB;IAArBjB,EAAA,CAAAe,UAAA,QAAA0C,IAAA,CAAqB;;;;;;IAzB5DzD,EAAA,CAAAC,cAAA,cAC0G;IAExGD,EAAA,CAAAiC,uBAAA,GAAc;IACZjC,EAAA,CAAAC,cAAA,0BAA2D;IAC9CD,EAAA,CAAAa,MAAA,iBAAU;IAAAb,EAAA,CAAAc,YAAA,EAAY;IACjCd,EAAA,CAAAC,cAAA,sBAAqF;IAAlDD,EAAA,CAAAE,UAAA,6BAAAwD,gHAAAnB,MAAA;MAAAvC,EAAA,CAAAK,aAAA,CAAAsD,IAAA;MAAA,MAAAlB,KAAA,GAAAzC,EAAA,CAAAU,aAAA,IAAAgC,KAAA;MAAA,MAAAkB,OAAA,GAAA5D,EAAA,CAAAU,aAAA;MAAA,OAAmBV,EAAA,CAAAW,WAAA,CAAAiD,OAAA,CAAAC,kBAAA,CAAAtB,MAAA,EAAAE,KAAA,CAA6B;IAAA,EAAC;IAClFzC,EAAA,CAAA6C,UAAA,IAAAiB,sFAAA,0BAEa;IACf9D,EAAA,CAAAc,YAAA,EAAa;IAEjBd,EAAA,CAAAmC,qBAAA,EAAe;IACfnC,EAAA,CAAA6C,UAAA,IAAAkB,wFAAA,4BAee;IACjB/D,EAAA,CAAAc,YAAA,EAAM;;;;IAtB+Bd,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAAe,UAAA,YAAAiD,OAAA,CAAAf,mBAAA,CAAsB;IAM1CjD,EAAA,CAAAiB,SAAA,GAA8B;IAA9BjB,EAAA,CAAAe,UAAA,SAAAiD,OAAA,CAAAC,kBAAA,OAA8B;;;;;;IAkB/CjE,EAAA,CAAAC,cAAA,cAC0G;IAIpGD,EAAA,CAAAE,UAAA,sBAAAgE,oGAAA;MAAAlE,EAAA,CAAAK,aAAA,CAAA8D,IAAA;MAAA,MAAA1B,KAAA,GAAAzC,EAAA,CAAAU,aAAA,IAAAgC,KAAA;MAAA,MAAA0B,OAAA,GAAApE,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAW,WAAA,CAAAyD,OAAA,CAAAC,sBAAA,CAAA5B,KAAA,CAAyB;IAAA,EAAC;IADxCzC,EAAA,CAAAc,YAAA,EACyC;;;;;IAI7Cd,EAAA,CAAAC,cAAA,cAC0G;IAEtGD,EAAA,CAAAkC,SAAA,iBACoB;IACtBlC,EAAA,CAAAc,YAAA,EAAiB;;;IADbd,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;;;;;IA7CzBf,EAAA,CAAAiC,uBAAA,GAAsC;IACpCjC,EAAA,CAAA6C,UAAA,IAAAyB,yEAAA,mBA6BM;IAENtE,EAAA,CAAA6C,UAAA,IAAA0B,yEAAA,mBAQM;IACNvE,EAAA,CAAA6C,UAAA,IAAA2B,yEAAA,mBAMM;IACRxE,EAAA,CAAAmC,qBAAA,EAAe;;;;;IA9CVnC,EAAA,CAAAiB,SAAA,GAAqG;IAArGjB,EAAA,CAAAe,UAAA,UAAA0D,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAF,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAAqG;IA+BrG5E,EAAA,CAAAiB,SAAA,GAAqG;IAArGjB,EAAA,CAAAe,UAAA,UAAA0D,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAF,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAAqG;IASrG5E,EAAA,CAAAiB,SAAA,GAAqG;IAArGjB,EAAA,CAAAe,UAAA,UAAA0D,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAF,OAAA,CAAA5C,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAAqG;;;;;;IAQ1G5E,EAAA,CAAAC,cAAA,cAC+L;IAQzLD,EAAA,CAAAE,UAAA,mBAAA2E,kFAAA;MAAA7E,EAAA,CAAAK,aAAA,CAAAyE,IAAA;MAAA,MAAAC,OAAA,GAAA/E,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAoE,OAAA,CAAAnD,aAAA,CAAAmD,OAAA,CAAAlD,cAAA,CAAAC,KAAA,CAAAC,SAAA,CAA6C;IAAA,EAAC;IAFzD/B,EAAA,CAAAc,YAAA,EAE4E;IAI5Ed,EAAA,CAAAC,cAAA,cAAgC;IACQD,EAAA,CAAAa,MAAA,QAAC;IAAAb,EAAA,CAAAc,YAAA,EAAO;;;;;IAIpDd,EAAA,CAAAC,cAAA,cAC+L;IAE3LD,EAAA,CAAAkC,SAAA,gBAA4F;IAC9FlC,EAAA,CAAAc,YAAA,EAAiB;;;IAD2Dd,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;;;;;IAG/Ff,EAAA,CAAAC,cAAA,cAC+L;IAE3LD,EAAA,CAAAkC,SAAA,gBAAqF;IACvFlC,EAAA,CAAAc,YAAA,EAAiB;;;IADoDd,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;;;;;IAnI1Ff,EAAA,CAAAC,cAAA,eACsD;IAGlDD,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAENd,EAAA,CAAA6C,UAAA,IAAAmC,0DAAA,mBA6BM;IAENhF,EAAA,CAAA6C,UAAA,IAAAoC,0DAAA,mBAQM;IACNjF,EAAA,CAAA6C,UAAA,IAAAqC,0DAAA,mBAMM;IACNlF,EAAA,CAAA6C,UAAA,IAAAsC,mEAAA,2BAgDe;IAEfnF,EAAA,CAAA6C,UAAA,IAAAuC,0DAAA,mBAiBM;IACNpF,EAAA,CAAA6C,UAAA,IAAAwC,0DAAA,mBAKM;IACNrF,EAAA,CAAA6C,UAAA,IAAAyC,0DAAA,mBAKM;IACRtF,EAAA,CAAAc,YAAA,EAAM;;;;;;IAtI6Ed,EAAA,CAAAe,UAAA,kBAAAwE,KAAA,CAAmB;IAIlGvF,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAsE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAgD,iBAAA,CAAAF,KAAA,EAAAG,iBAAA,MACF;IAGG1F,EAAA,CAAAiB,SAAA,GAAuF;IAAvFjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,qBAAuF;IA+BvF3E,EAAA,CAAAiB,SAAA,GAAuF;IAAvFjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,qBAAuF;IASvF3E,EAAA,CAAAiB,SAAA,GAAuF;IAAvFjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,qBAAuF;IAM3E3E,EAAA,CAAAiB,SAAA,GAAqB;IAArBjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAAG,eAAA,CAAqB;IAmDjC3F,EAAA,CAAAiB,SAAA,GAA0L;IAA1LjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,yBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAA0L;IAkB1L5E,EAAA,CAAAiB,SAAA,GAA0L;IAA1LjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,yBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAA0L;IAM1L5E,EAAA,CAAAiB,SAAA,GAA0L;IAA1LjB,EAAA,CAAAe,UAAA,SAAAyE,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,yBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAAa,OAAA,CAAA3D,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAA0L;;;;;IAvInM5E,EAAA,CAAAC,cAAA,eAC6E;IAKzED,EAAA,CAAA6C,UAAA,IAAA+C,oDAAA,oBAsIM;IACN5F,EAAA,CAAAC,cAAA,eAAwB;IACtBD,EAAA,CAAAkC,SAAA,cAAyB;IACzBlC,EAAA,CAAAC,cAAA,eAAqE;IAAAD,EAAA,CAAAa,MAAA,GAAwB;IAAAb,EAAA,CAAAc,YAAA,EAAM;IACnGd,EAAA,CAAAkC,SAAA,cAA0B;IAE5BlC,EAAA,CAAAc,YAAA,EAAM;;;;;;;IA5IgBd,EAAA,CAAAiB,SAAA,GAA8C;IAA9CjB,EAAA,CAAAe,UAAA,YAAA8E,QAAA,CAAAnB,GAAA,kCAA8C;IAyIG1E,EAAA,CAAAiB,SAAA,GAAwB;IAAxBjB,EAAA,CAAA8F,iBAAA,CAAAC,OAAA,CAAAC,iBAAA,CAAAvD,KAAA,EAAwB;;;;;;IA7KrGzC,EAAA,CAAAC,cAAA,cAA6G;IAGpGD,EAAA,CAAAE,UAAA,mBAAA+F,2DAAA;MAAA,MAAA7F,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAA6F,IAAA;MAAA,MAAAzD,KAAA,GAAArC,WAAA,CAAAsC,KAAA;MAAA,MAAAyD,OAAA,GAAAnG,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAwF,OAAA,CAAAC,UAAA,CAAWD,OAAA,CAAAtE,cAAA,CAAA6C,GAAA,CAAmB,cAAc,CAAC,CAAA5C,KAAA,EAAAW,KAAA,CAAU;IAAA,EAAC;IAClDzC,EAAA,CAAAa,MAAA,GAA4D;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAEpFd,EAAA,CAAAC,cAAA,cAAmB;IACjBD,EAAA,CAAA6C,UAAA,IAAAwD,6CAAA,kBASM;IACRrG,EAAA,CAAAc,YAAA,EAAM;IACNd,EAAA,CAAAC,cAAA,cAAmB;IAEfD,EAAA,CAAAkC,SAAA,gBAA4F;IAC9FlC,EAAA,CAAAc,YAAA,EAAiB;IAEnBd,EAAA,CAAAC,cAAA,eAAmB;IAEfD,EAAA,CAAAkC,SAAA,iBAAqF;IACvFlC,EAAA,CAAAc,YAAA,EAAiB;IAIrBd,EAAA,CAAA6C,UAAA,KAAAyD,8CAAA,kBAoJM;IACRtG,EAAA,CAAAc,YAAA,EAAM;;;;;IAnLmFd,EAAA,CAAAe,UAAA,kBAAA0B,KAAA,CAAmB;IAIpFzC,EAAA,CAAAiB,SAAA,GAA4D;IAA5DjB,EAAA,CAAA8F,iBAAA,CAAAS,MAAA,CAAA1E,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAA+D,YAAA,CAA4D;IAI3ExG,EAAA,CAAAiB,SAAA,GAA2L;IAA3LjB,EAAA,CAAAe,UAAA,SAAAwF,MAAA,CAAA1E,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,yBAAA4B,MAAA,CAAA1E,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,kBAAA4B,MAAA,CAAA1E,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAkC,iBAAA,CAAAC,WAAA,qBAA2L;IAYlH5E,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;IAKxBf,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;IAKpFf,EAAA,CAAAiB,SAAA,GAAiE;IAAjEjB,EAAA,CAAAe,UAAA,SAAAwF,MAAA,CAAA1E,cAAA,CAAA6C,GAAA,iBAAA5C,KAAA,CAAAW,KAAA,EAAAgE,eAAA,CAAiE;;;;;IAoLzDzG,EAAA,CAAAC,cAAA,sBAAuE;IACrED,EAAA,CAAAa,MAAA,GACF;IAAAb,EAAA,CAAAc,YAAA,EAAa;;;;IAFwCd,EAAA,CAAAe,UAAA,UAAA2F,QAAA,CAAAlF,EAAA,CAAiB;IACpExB,EAAA,CAAAiB,SAAA,GACF;IADEjB,EAAA,CAAAkB,kBAAA,MAAAwF,QAAA,CAAA1F,IAAA,MACF;;;;;;IAdVhB,EAAA,CAAAiC,uBAAA,GAA0F;IAExFjC,EAAA,CAAAC,cAAA,cAAmB;IAAAD,EAAA,CAAAa,MAAA,GAAgE;IAAAb,EAAA,CAAAc,YAAA,EAAM;IACzFd,EAAA,CAAAC,cAAA,cAAmB;IAKjBD,EAAA,CAAAiC,uBAAA,GAAc;IACZjC,EAAA,CAAAC,cAAA,0BAA2D;IAC9CD,EAAA,CAAAa,MAAA,iBAAU;IAAAb,EAAA,CAAAc,YAAA,EAAY;IACjCd,EAAA,CAAAC,cAAA,sBAAqF;IAAlDD,EAAA,CAAAE,UAAA,6BAAAyG,kHAAApE,MAAA;MAAAvC,EAAA,CAAAK,aAAA,CAAAuG,IAAA;MAAA,MAAAC,KAAA,GAAA7G,EAAA,CAAAU,aAAA,GAAAgC,KAAA;MAAA,MAAAoE,OAAA,GAAA9G,EAAA,CAAAU,aAAA;MAAA,OAAmBV,EAAA,CAAAW,WAAA,CAAAmG,OAAA,CAAAC,kBAAA,CAAAxE,MAAA,EAAAsE,KAAA,CAA6B;IAAA,EAAC;IAClF7G,EAAA,CAAA6C,UAAA,IAAAmE,wFAAA,0BAEa;IACfhH,EAAA,CAAAc,YAAA,EAAa;IAEjBd,EAAA,CAAAmC,qBAAA,EAAe;IAMjBnC,EAAA,CAAAc,YAAA,EAAM;IACNd,EAAA,CAAAC,cAAA,eAAmB;IAGbD,EAAA,CAAAE,UAAA,sBAAA+G,uGAAA;MAAAjH,EAAA,CAAAK,aAAA,CAAAuG,IAAA;MAAA,MAAAM,OAAA,GAAAlH,EAAA,CAAAU,aAAA;MAAA,OAAYV,EAAA,CAAAW,WAAA,CAAAuG,OAAA,CAAAC,sBAAA,EAAwB;IAAA,EAAC;IADvCnH,EAAA,CAAAc,YAAA,EACwC;IAG5Cd,EAAA,CAAAC,cAAA,eAAmB;IAEfD,EAAA,CAAAkC,SAAA,kBAA4E;IAC9ElC,EAAA,CAAAc,YAAA,EAAiB;IAErBd,EAAA,CAAAmC,qBAAA,EAAe;;;;;IAjCMnC,EAAA,CAAAiB,SAAA,GAAgE;IAAhEjB,EAAA,CAAA8F,iBAAA,CAAAsB,OAAA,CAAAvF,cAAA,CAAA6C,GAAA,eAAA5C,KAAA,CAAA+E,KAAA,mBAAAO,OAAA,CAAAvF,cAAA,CAAA6C,GAAA,eAAA5C,KAAA,CAAA+E,KAAA,EAAAnB,iBAAA,CAAgE;IAU9C1F,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAAe,UAAA,YAAAqG,OAAA,CAAAnE,mBAAA,CAAsB;;;;;IAd/DjD,EAAA,CAAAC,cAAA,eACoE;IAClED,EAAA,CAAA6C,UAAA,IAAAwE,2EAAA,4BAmCe;IACjBrH,EAAA,CAAAc,YAAA,EAAM;;;;;IArC0Cd,EAAA,CAAAe,UAAA,kBAAA8F,KAAA,CAAmB;IAClD7G,EAAA,CAAAiB,SAAA,GAAyE;IAAzEjB,EAAA,CAAAe,UAAA,UAAAuG,OAAA,CAAAzF,cAAA,CAAA6C,GAAA,eAAA5C,KAAA,CAAA+E,KAAA,mBAAAS,OAAA,CAAAzF,cAAA,CAAA6C,GAAA,eAAA5C,KAAA,CAAA+E,KAAA,EAAAnB,iBAAA,SAAyE;;;;;IAR9F1F,EAAA,CAAAC,cAAA,eAC4E;IAKxED,EAAA,CAAA6C,UAAA,IAAA0E,4DAAA,mBAsCM;IAQRvH,EAAA,CAAAc,YAAA,EAAM;;;;IA9Ced,EAAA,CAAAiB,SAAA,GAAiD;IAAjDjB,EAAA,CAAAe,UAAA,YAAAyG,OAAA,CAAA3F,cAAA,CAAA6C,GAAA,2BAAiD;;;;;;IAd1E1E,EAAA,CAAAiC,uBAAA,GAAqC;IACnCjC,EAAA,CAAAC,cAAA,cAAoE;IAClCD,EAAA,CAAAE,UAAA,mBAAAuH,sEAAA;MAAAzH,EAAA,CAAAK,aAAA,CAAAqH,IAAA;MAAA,MAAAC,OAAA,GAAA3H,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAgH,OAAA,CAAAC,WAAA,CAAYD,OAAA,CAAA9F,cAAA,CAAA6C,GAAA,CAAmB,qBAAqB,CAAC,CAAA5C,KAAA,CAAO;IAAA,EAAC;IACpG9B,EAAA,CAAAa,MAAA,kBAAU;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAKpBd,EAAA,CAAA6C,UAAA,IAAAgF,sDAAA,mBAuDM;IAER7H,EAAA,CAAAmC,qBAAA,EAAe;;;;IAzDPnC,EAAA,CAAAiB,SAAA,GAAY;IAAZjB,EAAA,CAAAe,UAAA,SAAA+G,MAAA,CAAAC,MAAA,CAAY;;;;;IAuEhB/H,EAAA,CAAAC,cAAA,eACmE;IAKzDD,EAAA,CAAAa,MAAA,GAAyE;IAAAb,EAAA,CAAAc,YAAA,EAAO;IAExFd,EAAA,CAAAC,cAAA,cAAmB;IAMbD,EAAA,CAAAa,MAAA,GAA+E;IAAAb,EAAA,CAAAc,YAAA,EAAM;IACvFd,EAAA,CAAAC,cAAA,eAAuF;IAAAD,EAAA,CAAAa,MAAA,QAAC;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAGlGd,EAAA,CAAAC,cAAA,eAAmB;IAEfD,EAAA,CAAAkC,SAAA,kBAA0F;IAC5FlC,EAAA,CAAAc,YAAA,EAAiB;IAEnBd,EAAA,CAAAC,cAAA,eAAmB;IAEfD,EAAA,CAAAkC,SAAA,kBAAmF;IACrFlC,EAAA,CAAAc,YAAA,EAAiB;;;;;IAzBnBd,EAAA,CAAAe,UAAA,kBAAAiH,KAAA,CAAmB;IAKXhI,EAAA,CAAAiB,SAAA,GAAyE;IAAzEjB,EAAA,CAAA8F,iBAAA,CAAAmC,OAAA,CAAApG,cAAA,CAAA6C,GAAA,wBAAA5C,KAAA,CAAAkG,KAAA,mBAAAC,OAAA,CAAApG,cAAA,CAAA6C,GAAA,wBAAA5C,KAAA,CAAAkG,KAAA,EAAAtC,iBAAA,CAAyE;IAQ3E1F,EAAA,CAAAiB,SAAA,GAA+E;IAA/EjB,EAAA,CAAAkB,kBAAA,MAAA+G,OAAA,CAAApG,cAAA,CAAA6C,GAAA,wBAAA5C,KAAA,CAAAkG,KAAA,mBAAAC,OAAA,CAAApG,cAAA,CAAA6C,GAAA,wBAAA5C,KAAA,CAAAkG,KAAA,EAAAE,uBAAA,KAA+E;;;;;IApB3FlI,EAAA,CAAAC,cAAA,eAC4E;IAKxED,EAAA,CAAA6C,UAAA,IAAAsF,6CAAA,oBA8BM;IACNnI,EAAA,CAAAC,cAAA,eAAwB;IACtBD,EAAA,CAAAkC,SAAA,cAAyB;IAEzBlC,EAAA,CAAAC,cAAA,eAAoE;IAAAD,EAAA,CAAAa,MAAA,GAAgB;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAC1Fd,EAAA,CAAAC,cAAA,eAAqE;IAAAD,EAAA,CAAAa,MAAA,GAAsB;IAAAb,EAAA,CAAAc,YAAA,EAAM;;;;IAnChFd,EAAA,CAAAiB,SAAA,GAA0D;IAA1DjB,EAAA,CAAAe,UAAA,YAAAqH,MAAA,CAAAvG,cAAA,CAAA6C,GAAA,oCAA0D;IAkCP1E,EAAA,CAAAiB,SAAA,GAAgB;IAAhBjB,EAAA,CAAA8F,iBAAA,CAAAsC,MAAA,CAAAC,YAAA,CAAgB;IACfrI,EAAA,CAAAiB,SAAA,GAAsB;IAAtBjB,EAAA,CAAA8F,iBAAA,CAAAsC,MAAA,CAAAE,kBAAA,CAAsB;;;;;IAiB7FtI,EAAA,CAAAC,cAAA,eACoE;IAG/CD,EAAA,CAAAa,MAAA,GAA0E;IAAAb,EAAA,CAAAc,YAAA,EAAM;IACnGd,EAAA,CAAAC,cAAA,cAAmB;IAMbD,EAAA,CAAAa,MAAA,GAAiF;IAAAb,EAAA,CAAAc,YAAA,EAAM;IACzFd,EAAA,CAAAC,cAAA,eAAuF;IAAAD,EAAA,CAAAa,MAAA,QAAC;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAGlGd,EAAA,CAAAC,cAAA,cAAmB;IAEfD,EAAA,CAAAkC,SAAA,kBAAmF;IACrFlC,EAAA,CAAAc,YAAA,EAAiB;IAEnBd,EAAA,CAAAC,cAAA,eAAmB;IAEfD,EAAA,CAAAkC,SAAA,kBAA4E;IAC9ElC,EAAA,CAAAc,YAAA,EAAiB;;;;;IAtB2Bd,EAAA,CAAAe,UAAA,kBAAAwH,KAAA,CAAmB;IAG9CvI,EAAA,CAAAiB,SAAA,GAA0E;IAA1EjB,EAAA,CAAA8F,iBAAA,CAAA0C,OAAA,CAAA3G,cAAA,CAAA6C,GAAA,yBAAA5C,KAAA,CAAAyG,KAAA,mBAAAC,OAAA,CAAA3G,cAAA,CAAA6C,GAAA,yBAAA5C,KAAA,CAAAyG,KAAA,EAAA7C,iBAAA,CAA0E;IAOvF1F,EAAA,CAAAiB,SAAA,GAAiF;IAAjFjB,EAAA,CAAAkB,kBAAA,MAAAsH,OAAA,CAAA3G,cAAA,CAAA6C,GAAA,yBAAA5C,KAAA,CAAAyG,KAAA,mBAAAC,OAAA,CAAA3G,cAAA,CAAA6C,GAAA,yBAAA5C,KAAA,CAAAyG,KAAA,EAAAL,uBAAA,MAAiF;;;;;IAhB7FlI,EAAA,CAAAC,cAAA,eAC4E;IAIxED,EAAA,CAAA6C,UAAA,IAAA4F,6CAAA,oBAyBM;IACNzI,EAAA,CAAAC,cAAA,eAAwB;IACtBD,EAAA,CAAAkC,SAAA,cAAyB;IAEzBlC,EAAA,CAAAC,cAAA,eAAoE;IAAAD,EAAA,CAAAa,MAAA,GAAiB;IAAAb,EAAA,CAAAc,YAAA,EAAM;IAC3Fd,EAAA,CAAAC,cAAA,eAAqE;IAAAD,EAAA,CAAAa,MAAA,GAAuB;IAAAb,EAAA,CAAAc,YAAA,EAAM;;;;IA9BjFd,EAAA,CAAAiB,SAAA,GAA2D;IAA3DjB,EAAA,CAAAe,UAAA,YAAA2H,MAAA,CAAA7G,cAAA,CAAA6C,GAAA,qCAA2D;IA6BR1E,EAAA,CAAAiB,SAAA,GAAiB;IAAjBjB,EAAA,CAAA8F,iBAAA,CAAA4C,MAAA,CAAAC,aAAA,CAAiB;IAChB3I,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAA8F,iBAAA,CAAA4C,MAAA,CAAAE,mBAAA,CAAuB;;;;;;IAOlG5I,EAAA,CAAAC,cAAA,UAA4B;IAKRD,EAAA,CAAAa,MAAA,yBAAkB;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAE1Cd,EAAA,CAAAC,cAAA,cAAiB;IAGMD,EAAA,CAAAa,MAAA,qCAA8B;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAEvDd,EAAA,CAAAC,cAAA,eAAsB;IAIhBD,EAAA,CAAAkC,SAAA,kBAC+B;IAGjClC,EAAA,CAAAc,YAAA,EAAiB;IAMvBd,EAAA,CAAAC,cAAA,gBAAyC;IAEFD,EAAA,CAAAa,MAAA,uBAAe;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAEtDd,EAAA,CAAAC,cAAA,gBAAsB;IAIJD,EAAA,CAAAa,MAAA,eAAM;IAAAb,EAAA,CAAAc,YAAA,EAAY;IAC9Bd,EAAA,CAAAkC,SAAA,kBACgC;IAEhClC,EAAA,CAAAC,cAAA,gCACqF;IAD1CD,EAAA,CAAAE,UAAA,0BAAA2I,gFAAAtG,MAAA;MAAAvC,EAAA,CAAAK,aAAA,CAAAyI,IAAA;MAAA,MAAAC,OAAA,GAAA/I,EAAA,CAAAU,aAAA;MAAA,OAAgBV,EAAA,CAAAW,WAAA,CAAAoI,OAAA,CAAAC,iBAAA,CAAAzG,MAAA,CAAyB;IAAA,EAAC,2BAAA0G,iFAAA1G,MAAA;MAAAvC,EAAA,CAAAK,aAAA,CAAAyI,IAAA;MAAA,MAAAI,IAAA,GAAAlJ,EAAA,CAAAmJ,WAAA;MAAA,MAAAC,OAAA,GAAApJ,EAAA,CAAAU,aAAA;MAAA,OAClEV,EAAA,CAAAW,WAAA,CAAAyI,OAAA,CAAAC,kBAAA,CAAA9G,MAAA,EAAA2G,IAAA,CAA8B;IAAA,EADoC;IAErFlJ,EAAA,CAAAc,YAAA,EAAiB;;;;;;IA3BjBd,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAAe,UAAA,cAAAuI,MAAA,CAAAC,SAAA,CAAuB;IAGTvJ,EAAA,CAAAiB,SAAA,GAAiC;IAAjCjB,EAAA,CAAAe,UAAA,kBAAAyI,IAAA,CAAiC;IAEhBxJ,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAAe,UAAA,QAAAyI,IAAA,CAAuB;IAapDxJ,EAAA,CAAAiB,SAAA,GAAuB;IAAvBjB,EAAA,CAAAe,UAAA,cAAAuI,MAAA,CAAAC,SAAA,CAAuB;IAITvJ,EAAA,CAAAiB,SAAA,GAAoB;IAApBjB,EAAA,CAAAe,UAAA,kBAAAmI,IAAA,CAAoB,gBAAAI,MAAA,CAAAG,OAAA;IAEHzJ,EAAA,CAAAiB,SAAA,GAAU;IAAVjB,EAAA,CAAAe,UAAA,QAAAmI,IAAA,CAAU;;;;;IAmHrClJ,EAAA,CAAAC,cAAA,SAAkF;IAEnED,EAAA,CAAAa,MAAA,GAAkC;IAAAb,EAAA,CAAAc,YAAA,EAAK;IACpDd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAAuC;;IAAAb,EAAA,CAAAc,YAAA,EAAK;IACzDd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAA+C;;IAAAb,EAAA,CAAAc,YAAA,EAAK;;;;IAFpDd,EAAA,CAAAiB,SAAA,GAAkC;IAAlCjB,EAAA,CAAA8F,iBAAA,CAAA4D,QAAA,CAAA5H,KAAA,CAAA4D,iBAAA,CAAkC;IAClC1F,EAAA,CAAAiB,SAAA,GAAuC;IAAvCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAD,QAAA,CAAA5H,KAAA,CAAA8H,MAAA,SAAuC;IACvC5J,EAAA,CAAAiB,SAAA,GAA+C;IAA/CjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAD,QAAA,CAAA5H,KAAA,CAAA+H,aAAA,SAA+C;;;;;IAbhE7J,EAAA,CAAAiC,uBAAA,GAAiG;IAC/FjC,EAAA,CAAAC,cAAA,cAA6D;IACxDD,EAAA,CAAAa,MAAA,GAA6B;IAAAb,EAAA,CAAAc,YAAA,EAAI;IAEtCd,EAAA,CAAAC,cAAA,cAA6D;IAACD,EAAA,CAAAa,MAAA,GAC5C;;IAAAb,EAAA,CAAAc,YAAA,EAAK;IACvBd,EAAA,CAAAC,cAAA,cAA6D;IAAAD,EAAA,CAAAa,MAAA,GAC3C;;IAAAb,EAAA,CAAAc,YAAA,EAAK;IAEvBd,EAAA,CAAA6C,UAAA,KAAAiH,sDAAA,iBAKK;IAEP9J,EAAA,CAAAmC,qBAAA,EAAe;;;;IAdRnC,EAAA,CAAAiB,SAAA,GAA6B;IAA7BjB,EAAA,CAAA8F,iBAAA,CAAAiE,QAAA,CAAAjI,KAAA,CAAA0E,YAAA,CAA6B;IAE4BxG,EAAA,CAAAiB,SAAA,GAC5C;IAD4CjB,EAAA,CAAAkB,kBAAA,MAAAlB,EAAA,CAAA2J,WAAA,OAAAI,QAAA,CAAAjI,KAAA,CAAA8H,MAAA,aAC5C;IAC2C5J,EAAA,CAAAiB,SAAA,GAC3C;IAD2CjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAI,QAAA,CAAAjI,KAAA,CAAA+H,aAAA,SAC3C;IAEG7J,EAAA,CAAAiB,SAAA,GAA8C;IAA9CjB,EAAA,CAAAe,UAAA,YAAAgJ,QAAA,CAAArF,GAAA,kCAA8C;;;;;IAgBrE1E,EAAA,CAAAC,cAAA,SAA2F;IAC5ED,EAAA,CAAAa,MAAA,GAA6B;IAAAb,EAAA,CAAAc,YAAA,EAAK;IAC/Cd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAAmC;;IAAAb,EAAA,CAAAc,YAAA,EAAK;IACrDd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAA0C;;IAAAb,EAAA,CAAAc,YAAA,EAAK;;;;IAF/Cd,EAAA,CAAAiB,SAAA,GAA6B;IAA7BjB,EAAA,CAAA8F,iBAAA,CAAAkE,KAAA,CAAAlI,KAAA,CAAA4D,iBAAA,CAA6B;IAC7B1F,EAAA,CAAAiB,SAAA,GAAmC;IAAnCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAK,KAAA,CAAAlI,KAAA,CAAA8H,MAAA,SAAmC;IACnC5J,EAAA,CAAAiB,SAAA,GAA0C;IAA1CjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAK,KAAA,CAAAlI,KAAA,CAAA+H,aAAA,SAA0C;;;;;IAgBzD7J,EAAA,CAAAC,cAAA,SAA6F;IAC9ED,EAAA,CAAAa,MAAA,GAA6B;IAAAb,EAAA,CAAAc,YAAA,EAAK;IAC/Cd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAAmC;;IAAAb,EAAA,CAAAc,YAAA,EAAK;IACrDd,EAAA,CAAAC,cAAA,aAAa;IAAAD,EAAA,CAAAa,MAAA,GAA0C;;IAAAb,EAAA,CAAAc,YAAA,EAAK;;;;IAF/Cd,EAAA,CAAAiB,SAAA,GAA6B;IAA7BjB,EAAA,CAAA8F,iBAAA,CAAAmE,KAAA,CAAAnI,KAAA,CAAA4D,iBAAA,CAA6B;IAC7B1F,EAAA,CAAAiB,SAAA,GAAmC;IAAnCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAM,KAAA,CAAAnI,KAAA,CAAA8H,MAAA,SAAmC;IACnC5J,EAAA,CAAAiB,SAAA,GAA0C;IAA1CjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,OAAAM,KAAA,CAAAnI,KAAA,CAAA+H,aAAA,SAA0C;;;;;IA8F/D7J,EAAA,CAAAC,cAAA,WAA0B;IAChBD,EAAA,CAAAa,MAAA,UAAE;IAAAb,EAAA,CAAAc,YAAA,EAAO;;;;;IAEnBd,EAAA,CAAAC,cAAA,WAAwB;IACfD,EAAA,CAAAa,MAAA,eAAE;IAAAb,EAAA,CAAAc,YAAA,EAAO;;;ADn3BlC,OAAM,MAAOoJ,sBAAsB;EA4FbC,IAAA;EAA0BC,EAAA;EAAyBC,mBAAA;EAAoDC,UAAA;EAAsCC,MAAA;EAAwBC,KAAA;EAC/KC,QAAA;EA5FVC,SAAS,GAAgB,IAAIpL,WAAW,EAAE;EAC1CqL,MAAM,GAAG,KAAK;EACd9I,cAAc;EACd+I,oBAAoB;EACpB7I,SAAS,GAAG,CAAC;EACb8I,OAAO;EACPC,KAAK;EACLC,MAAM;EACNC,UAAU,GAAG,KAAK;EAClBC,WAAW;EACXC,cAAc;EACdC,cAAc;EACdC,YAAY;EACZ3E,eAAe,GAAG,KAAK;EACvBhB,iBAAiB,GAAG,EAAE;EACtB4F,aAAa;EACbC,SAAS;EACTC,SAAS;EACTC,IAAI,GAAG,EAAE;EACTC,MAAM;EACNC,KAAK;EACLC,SAAS,GAAG,CAAC;EACbC,WAAW;EACXC,YAAY;EACZC,MAAM,GAAG,KAAK;EACdC,MAAM,GAAG,KAAK;EACdC,GAAG,GAAG,KAAK;EACXC,GAAG;EACHrC,MAAM;EACNsC,OAAO;EACPC,MAAM,GAAG,IAAI;EACb9D,YAAY;EACZM,aAAa;EACb3C,iBAAiB,GAAG,EAAE;EACtBsC,kBAAkB;EAClBM,mBAAmB;EACnB3F,mBAAmB;EACnBmJ,sBAAsB;EACtBC,OAAO;EACPC,OAAO;EACPC,QAAQ;EACRC,eAAe,GAAG,EAAE;EACpBC,OAAO,GAAG,EAAE;EACZC,KAAK;EACLC,YAAY;EACZzJ,iBAAiB;EACjBe,kBAAkB;EAClB2I,OAAO;EACPC,WAAW;EACXC,UAAU;EACVC,aAAa;EACbC,YAAY;EACZC,cAAc;EACdC,eAAe;EACfC,YAAY;EACZC,KAAK;EACLC,KAAK;EACLC,UAAU;EACVC,WAAW;EACXC,WAAW;EACXC,YAAY;EACZ1F,MAAM;EACN2F,QAAQ;EACR/H,eAAe,GAAa,IAAI;EAChCgI,cAAc,GAAY,KAAK;EAC/BC,OAAO;EACPC,cAAc;EACdC,QAAQ;EACRC,QAAQ;EACRC,OAAO;EACPC,KAAK;EACLC,SAAS;EACTC,UAAU;EACVC,QAAQ;EACRC,oBAAoB;EACpBC,YAAY;EACZC,UAAU;EACVC,kBAAkB;EAClBC,KAAK;EACLC,MAAM;EACNC,OAAO;EACPpF,SAAS;EACTqF,cAAc;EACdC,YAAY,GAAY,IAAI;EAC5BC,eAAe;EACfC,UAAU;EACVC,WAAW,GAAY,KAAK;EAC5BC,SAAS,GAAY,KAAK;EAC1BC,YAAY;EACZC,cAAc,GAAY,KAAK;EAC/BC,SAAS;EACTC,YAAoBlF,IAAgB,EAAUC,EAAe,EAAUC,mBAA0C,EAAUC,UAA4B,EAAUC,MAAc,EAAUC,KAAoB,EACnMC,QAAkB;IADR,KAAAN,IAAI,GAAJA,IAAI;IAAsB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAAiC,KAAAC,UAAU,GAAVA,UAAU;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IACpL,KAAAC,QAAQ,GAARA,QAAQ;IAChB,IAAI6E,QAAQ,GAAG,IAAI,CAACjF,mBAAmB,CAACkF,UAAU,CAACzN,KAAK;IACxD,IAAI,CAACuJ,aAAa,GAAGiE,QAAQ;IAC7B,IAAI,CAAC9D,IAAI,GAAG8D,QAAQ;IACpB,IAAI,CAAC7D,MAAM,GAAG6D,QAAQ,EAAE9N,EAAE;IAC1B,IAAI,CAACK,cAAc,GAAG,IAAI,CAACuI,EAAE,CAACoF,KAAK,CAAC;MAClCC,WAAW,EAAE,CAACH,QAAQ,EAAE9N,EAAE,CAAC;MAC3BkO,aAAa,EAAE,CAACJ,QAAQ,CAACI,aAAa,CAAC;MACvCC,EAAE,EAAE,CAAC,EAAE,CAAC;MACRC,GAAG,EAAE,CAAC,EAAE,CAAC;MACTC,SAAS,EAAE,IAAIvQ,WAAW,CAAC,CAAC,EAAE,CAACE,UAAU,CAACsQ,QAAQ,CAAC,CAAC;MACpDC,gBAAgB,EAAE,CAAC,EAAE,CAAC;MACtBC,cAAc,EAAE,CAAC,CAAC,CAAC;MACnBC,WAAW,EAAE,CAAC,CAAC,CAAC;MAChBC,UAAU,EAAE,CAAC,CAAC,CAAC;MACfC,cAAc,EAAE,CAAC,CAAC,CAAC;MACnBC,WAAW,EAAE,CAAC,CAAC,CAAC;MAChBC,UAAU,EAAE,CAAC,CAAC,CAAC;MACfC,eAAe,EAAE,CAAC,EAAE,CAAC;MACrBC,iBAAiB,EAAE,CAAC,EAAE,CAAC;MACvBC,gBAAgB,EAAE,CAAC,EAAE,CAAC;MACtBzO,SAAS,EAAE,CAAC,CAAC,CAAC;MACd0O,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,YAAY,EAAE,CAAC,EAAE,CAAC;MAClBC,mBAAmB,EAAE,IAAIvR,SAAS,CAAC,CAAC,IAAI,CAACwR,gBAAgB,EAAE,CAAC,CAAC;MAC7DC,oBAAoB,EAAE,IAAIzR,SAAS,CAAC,CAAC,IAAI,CAAC0R,gBAAgB,EAAE,CAAC,CAAC;MAC9DC,UAAU,EAAG,IAAI3R,SAAS,CAAC,CAAC,IAAI,CAAC4R,WAAW,EAAE,CAAC,CAAC;MAChDvF,KAAK,EAAE,CAAC,KAAK,CAAC;MACdwF,YAAY,EAAE,IAAI7R,SAAS,CAAC,CAAC,IAAI,CAAC8R,kBAAkB,EAAE,CACrD,CAAC;MACFC,WAAW,EAAE,IAAI9R,WAAW,CAAC,CAAC,EAAE,CAACE,UAAU,CAACsQ,QAAQ,CAAC,CAAC;MACtDuB,mBAAmB,EAAE,CAAC,EAAE,CAAC;MACzBC,kBAAkB,EAAE,CAAC,EAAE;KACxB,CAAC;IACF,MAAMC,MAAM,GAAG,IAAI,CAAC1P,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAc;IAC1E,IAAI8M,CAAC,GAAG,CAAC;IACT,KAAK,IAAIC,CAAC,IAAIF,MAAM,CAACzP,KAAK,EAAE;MAC1B0P,CAAC,IAAIE,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAAC8O,mBAAmB,CAACa,CAAC,CAAC,CAAC7H,MAAM,CAAC;;IAEtE+H,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,CAAC,CAAC;IACzB,IAAI,CAACnJ,YAAY,GAAGmJ,CAAC;IACrB,MAAMK,OAAO,GAAG,IAAI,CAAChQ,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAc;IAC5E,IAAIoN,CAAC,GAAG,CAAC;IACT,KAAK,IAAIL,CAAC,IAAII,OAAO,CAAC/P,KAAK,EAAE;MAC3BgQ,CAAC,IAAIJ,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAACgP,oBAAoB,CAACW,CAAC,CAAC,CAAC7H,MAAM,CAAC;;IAEvE+H,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEE,CAAC,CAAC;IACzB,IAAI,CAACnJ,aAAa,GAAGmJ,CAAC;IAEtB,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,cAAc,EAAE;EAEvB;EACA5L,UAAUA,CAAC6L,IAAI,EAAEvP,KAAK;IACpB,IAAI,CAAC+C,iBAAiB,GAAGwM,IAAI,CAACvP,KAAK,CAAC,CAAC+C,iBAAiB;IACtD,IAAI,CAACkF,MAAM,GAAGsH,IAAI,CAACvP,KAAK,CAAC,CAAC8D,YAAY;IACtC,IAAI,IAAI,CAAC3E,cAAc,CAACC,KAAK,CAACoP,YAAY,CAACxO,KAAK,CAAC,CAAC+D,eAAe,EAAE;MAChE,IAAI,CAAC5E,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAe,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAACwP,UAAU,CAAC,KAAK,CAAC;KACzG,MACI;MACF,IAAI,CAACrQ,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAe,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,iBAAiB,CAAC,CAAC,CAACwP,UAAU,CAAC,IAAI,CAAC;;EAE3G;EACAC,UAAUA,CAACF,IAAI;IACb,IAAI,IAAI,CAACjH,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,GAAG,KAAK;KACxB,MACI;MACH,IAAI,CAACA,UAAU,GAAG,IAAI;;EAE1B;EAEAoH,UAAUA,CAACH,IAAI;IACb,IAAI,IAAI,CAACvG,KAAK,EAAE;MACd,IAAI,CAACA,KAAK,GAAG,KAAK;KACnB,MACI;MACH,IAAI,CAACA,KAAK,GAAG,IAAI;;EAErB;EACA9D,WAAWA,CAACqK,IAAI;IAEd,IAAI,CAAClK,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;EAC5B;EACAsK,QAAQA,CAAA;IACN,IAAI,CAAC3H,SAAS,CAAC4H,YAAY,CAACC,IAAI,CAAC9S,SAAS,CAACqC,KAAK,IAAI,IAAI,CAACwI,UAAU,CAACkI,WAAW,CAAC1Q,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC2Q,SAAS,CAACR,IAAI,IAAG;MAC3G,IAAI,CAAC3G,SAAS,GAAG2G,IAAI,CAAC,MAAM,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,IAAI,CAAC5G,aAAa,EAAEqH,KAAK,EAAE;MAC7B,IAAI,CAAChI,SAAS,CAACiI,QAAQ,CAAC,IAAI,CAACtH,aAAa,CAACqH,KAAK,CAAC1R,IAAI,CAAC;MACtD,IAAI,CAACJ,UAAU,CAAC,IAAI,CAACyK,aAAa,CAACqH,KAAK,CAAC;MACzC;MACAf,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAACvG,aAAa,CAACqH,KAAK,CAAClR,EAAE,CAAC;MAClD,IAAI,CAACoR,UAAU,EAAE;;IAEnBjB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACvG,aAAa,CAAC;IACvCsG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACtG,SAAS,CAAC;IACxCqG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC/P,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAAC5C,KAAK,CAAC;IACnE;IAEA,IAAI,CAACyH,SAAS,GAAG,IAAI,CAACa,EAAE,CAACoF,KAAK,CAAC;MAC3BqD,UAAU,EAAG,EAAE;MACfC,QAAQ,EAAG,EAAE;MACbC,SAAS,EAAC,EAAE;MACZC,UAAU,EAAC;KACZ,CAAC;EACN;EACAC,WAAWA,CAACC,OAAsB,GAC/B;EACHC,MAAMA,CAACrR,KAAK,EAAEsR,IAAI;IAChB,IAAIA,IAAI,IAAI,QAAQ,EAAE;MACpB,IAAI,CAACrH,MAAM,GAAIjK,KAAM;MACnB,IAAI,CAACuR,SAAS,CAAC,IAAI,CAACxR,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAAC5C,KAAK,CAAC;KAC7D,MACI,IAAIsR,IAAI,IAAI,QAAQ,EAAE;MACzB,IAAI,CAACtH,MAAM,GAAIhK,KAAM;MACjB,IAAI,CAACuR,SAAS,CAAC,IAAI,CAACxR,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAAC5C,KAAK,CAAC;KAC/D,MACI,IAAIsR,IAAI,IAAI,KAAK,EAAE;MACtB,IAAI,CAACpH,GAAG,GAAGlK,KAAK;MACd,IAAI,CAACuR,SAAS,CAAC,IAAI,CAACxR,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAAC5C,KAAK,CAAC;;EAEhE;EACA8Q,UAAUA,CAAA;IACR,MAAMrB,MAAM,GAAG,IAAI,CAAC1P,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAc;IAC1E,IAAI8M,CAAC,GAAG,CAAC;IACT,KAAK,IAAIC,CAAC,IAAIF,MAAM,CAACzP,KAAK,EAAE;MAC1B0P,CAAC,IAAIE,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAAC8O,mBAAmB,CAACa,CAAC,CAAC,CAAC7H,MAAM,CAAC;;IAEtE+H,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,CAAC,CAAC;IACzB,IAAI,CAACnJ,YAAY,GAAGmJ,CAAC;IAErB,MAAMK,OAAO,GAAG,IAAI,CAAChQ,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAc;IAC5E,IAAI4O,CAAC,GAAG,CAAC;IACT,KAAK,IAAI7B,CAAC,IAAII,OAAO,CAAC/P,KAAK,EAAE;MAC3BwR,CAAC,IAAI5B,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAACgP,oBAAoB,CAACW,CAAC,CAAC,CAAC7H,MAAM,CAAC;;IAEvE,IAAI,CAACjB,aAAa,GAAG2K,CAAC;EACxB;EACA1S,UAAUA,CAACI,IAAI;IACb;IACA,IAAI,CAAC2L,YAAY,GAAC3L,IAAI,CAACQ,EAAE;IACzB,IAAI,CAAC+R,eAAe,EAAE;IACtB5B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE5Q,IAAI,CAACQ,EAAE,CAAC;IAClCmQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAI,CAAC/P,cAAc,CAAC2R,KAAK,EAAE;IAC3B,IAAI,CAACZ,UAAU,EAAE;EAEnB;EACAzB,kBAAkBA,CAAA;IAChB,OAAO,IAAI5R,SAAS,CAAC;MACnB,YAAY,EAAE,IAAID,WAAW,CAAC,EAAE,CAAC;MACjC,gBAAgB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACrC,cAAc,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACnC,oBAAoB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACzC,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,eAAe,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACpC,iBAAiB,EAAE,IAAIA,WAAW,CAAC,KAAK,CAAC;MACvC,mBAAmB,EAAE,IAAID,SAAS,CAAC,CAAC,IAAI,CAACoU,qBAAqB,EAAE,CAAC,CAAC;MACpE,mBAAmB,EAAE,IAAInU,WAAW,CAAC,EAAE;KACxC,CAAC;EACJ;EACQmU,qBAAqBA,CAAA;IAC3B,OAAO,IAAIlU,SAAS,CAAC;MACnB,cAAc,EAAE,IAAID,WAAW,CAAC,EAAE,CAAC;MACnC,mBAAmB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACxC,yBAAyB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC9C,IAAI,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACzB,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,QAAQ,EAAE,IAAIA,WAAW,CAAC,CAAC,CAAC;MAC5B,eAAe,EAAE,IAAIA,WAAW,CAAC,CAAC,CAAC;MACnC,SAAS,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC9B,sBAAsB,EAAE,IAAIA,WAAW,CAAC,KAAK,CAAC;MAC9C,MAAM,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC3B,oBAAoB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACzC,WAAW,EAAE,IAAIA,WAAW,CAAC,IAAI,CAAC;MACjC,SAAS,EAAE,IAAIA,WAAW,CAAC,IAAI;KACjC,CAAC;EACJ;EACQuR,gBAAgBA,CAAA;IACtB,OAAO,IAAItR,SAAS,CAAC;MACnB,IAAI,EAAE,IAAID,WAAW,CAAC,EAAE,CAAC;MACzB,cAAc,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACnC,mBAAmB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACxC,yBAAyB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC9C,mBAAmB,EAAE,IAAIA,WAAW,CAAC,CAAC,CAAC;MACvC,sBAAsB,EAAE,IAAIA,WAAW,CAAC,IAAI,CAAC;MAC7C,gBAAgB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACrC,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,eAAe,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACpC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE;KACjC,CAAC;EACJ;EACQyR,gBAAgBA,CAAA;IACtB,OAAO,IAAIxR,SAAS,CAAC;MACnB,IAAI,EAAE,IAAID,WAAW,CAAC,EAAE,CAAC;MACzB,iBAAiB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACtC,yBAAyB,EAAE,IAAIA,WAAW,CAAC,IAAI,CAAC;MAChD,mBAAmB,EAAE,IAAIA,WAAW,CAAC,CAAC,CAAC;MACvC,sBAAsB,EAAE,IAAIA,WAAW,CAAC,KAAK,CAAC;MAC9C,gBAAgB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACrC,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,eAAe,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACpC,mBAAmB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACxC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,iBAAiB,EAAG,IAAIA,WAAW,CAAC,KAAK;KAC1C,CAAC;EACJ;EACQ2R,WAAWA,CAAA;IACjB,OAAO,IAAI1R,SAAS,CAAC;MACnB,IAAI,EAAE,IAAID,WAAW,CAAC,EAAE,CAAC;MACzB,iBAAiB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACtC,yBAAyB,EAAE,IAAIA,WAAW,CAAC,IAAI,CAAC;MAChD,mBAAmB,EAAE,IAAIA,WAAW,CAAC,CAAC,CAAC;MACvC,sBAAsB,EAAE,IAAIA,WAAW,CAAC,KAAK,CAAC;MAC9C,gBAAgB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACrC,QAAQ,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC7B,eAAe,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACpC,mBAAmB,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACxC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,YAAY,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MACjC,iBAAiB,EAAG,IAAIA,WAAW,CAAC,KAAK,CAAC;MAC1C,MAAM,EAAE,IAAIA,WAAW,CAAC,EAAE,CAAC;MAC3B,WAAW,EAAE,IAAIA,WAAW,CAAC,IAAI,CAAC;MAClC,SAAS,EAAE,IAAIA,WAAW,CAAC,IAAI;KAEhC,CAAC;EACJ;EACAoU,WAAWA,CAAA;IACT,IAAI,IAAI,CAACnI,SAAS,EAAE/J,EAAE,EAAE;MACtB,IAAI,CAACK,cAAc,CAAC8R,UAAU,CAAC,IAAI,EAAE,IAAIrU,WAAW,CAAC,IAAI,CAACiM,SAAS,EAAE/J,EAAE,CAAC,CAAC;;IAE3E,IAAI,CAACsN,eAAe,GAAG,IAAI,CAACvD,SAAS,EAAEsE,SAAS;IAChD,IAAI,CAAChO,cAAc,CAACqQ,UAAU,CAAC;MAC7B,aAAa,EAAE,IAAI,CAAC3G,SAAS,EAAEkE,WAAW;MAC1C,cAAc,EAAE,IAAI,CAAClE,SAAS,EAAEoF,YAAY;MAC5C,WAAW,EAAE,IAAI,CAACpF,SAAS,EAAExJ,SAAS;MACtC,SAAS,EAAE,CAAC;MACZ,WAAW,EAAE,IAAI,CAACwJ,SAAS,EAAEsE,SAAS;MACtC,kBAAkB,EAAE,IAAI,CAACtE,SAAS,EAAEsE,SAAS;MAC7C,iBAAiB,EAAG+D,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEsE,SAAS,CAAC,GAAG,EAAG;MAC/D,mBAAmB,EAAE,IAAI,CAACtE,SAAS,EAAExJ,SAAS;MAC9C,kBAAkB,EAAG6R,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAExJ,SAAS,CAAC,GAAG,EAAG;MAChE,aAAa,EAAE,IAAI,CAACwJ,SAAS,EAAEoF,YAAY;MAC3C,YAAY,EAAGiD,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEoF,YAAY,CAAC,GAAG;KAC3D,CAAC;IACD,IAAI,CAAC9O,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAe,CAACmP,KAAK,EAAE;IAC9DlC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACrG,SAAS,CAAC;IACzC,IAAI,CAACA,SAAS,CAACuI,eAAe,CAACC,OAAO,CAAE9B,IAAI,IAAI;MAC9C,MAAM+B,WAAW,GAAG,IAAI,CAAC7C,kBAAkB,EAAE;MAC7CQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,IAAI,CAAC;MAChC,IAAGA,IAAI,EAAEtN,iBAAiB,KAAK,YAAY,EAC3C;QACE,IAAI,CAACkI,WAAW,GAAGoF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEmE,MAAM;QACrD,IAAGqI,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EACxC;UACA,IAAI,CAAClH,aAAa,GAAG,IAAI,CAACF,WAAW,GAAG,CAAC;UACzC,IAAI,CAACA,WAAW,GAAG,CAAC;SACnB,MACI,IAAGoF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAAClH,aAAa,GAAG,IAAI,CAACF,WAAW,GAAG,CAAC;UACzC,IAAI,CAACA,WAAW,GAAG,CAAC;SACnB,MACI,IAAGoF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAAClH,aAAa,GAAG,IAAI,CAACF,WAAW;UACrC,IAAI,CAACA,WAAW,GAAG,CAAC;SACnB,MACI,IAAGoF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAAClH,aAAa,GAAG,IAAI,CAACF,WAAW,GAAG,EAAE;;;MAG5C,IAAGoF,IAAI,EAAEtN,iBAAiB,IAAI,eAAe,EAC7C;QACE,IAAI,CAACmI,UAAU,GAAGmF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEmE,MAAM;QACpD,IAAGqI,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EACxC;UACA,IAAI,CAACjH,YAAY,GAAG,IAAI,CAACF,UAAU,GAAG,CAAC;UACvC,IAAI,CAACA,UAAU,GAAG,CAAC;SAClB,MACI,IAAGmF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAACjH,YAAY,GAAG,IAAI,CAACF,UAAU,GAAG,CAAC;UACvC,IAAI,CAACA,UAAU,GAAG,CAAC;SAClB,MACI,IAAGmF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAACjH,YAAY,GAAG,IAAI,CAACF,UAAU;UACnC,IAAI,CAACA,UAAU,GAAG,CAAC;SAClB,MACI,IAAGmF,IAAI,EAAExM,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7C;UACA,IAAI,CAACjH,YAAY,GAAG,IAAI,CAACF,UAAU,GAAG,CAAC;;;MAGzC,IAAGmF,IAAI,CAACxM,iBAAiB,EACzB;QACAuO,WAAW,CAAC9B,UAAU,CAACD,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC1G,SAAS,EAAE/J,EAAE,IAAIyQ,IAAI,CAACxM,iBAAiB,EAAE;UAChDuO,WAAW,CAACL,UAAU,CAAC,YAAY,EAAE,IAAIrU,WAAW,CAAC2S,IAAI,EAAEiC,UAAU,CAAC,CAAC;;QAExEF,WAAW,CAACtP,GAAG,CAAC,mBAAmB,CAAe,CAACmP,KAAK,EAAE;;MAE3D,IAAG5B,IAAI,CAACxM,iBAAiB,EACzB;QACAwM,IAAI,CAACxM,iBAAiB,CAACsO,OAAO,CAAEI,IAAI,IAAI;UACtC,MAAMC,UAAU,GAAG,IAAI,CAACX,qBAAqB,EAAE;UAC/CW,UAAU,CAAClC,UAAU,CAACiC,IAAI,CAAC;UAC3BC,UAAU,CAAC1P,GAAG,CAAC,oBAAoB,CAAC,CAACwN,UAAU,CAACD,IAAI,CAACoC,kBAAkB,CAAC;UACxE,IAAI,IAAI,CAAC9I,SAAS,EAAE/J,EAAE,EAAE;YACtB4S,UAAU,CAACT,UAAU,CAAC,YAAY,EAAE,IAAIrU,WAAW,CAAC6U,IAAI,EAAEG,UAAU,CAAC,CAAC;;UAEvEN,WAAW,CAACtP,GAAG,CAAC,mBAAmB,CAAe,CAAC6P,IAAI,CAACH,UAAU,CAAC;QACtE,CAAC,CAAC;QACD,IAAI,CAACvS,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAe,CAAC6P,IAAI,CAACP,WAAW,CAAC;QACxErC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC/P,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc,CAAC;;MAEhF,IAAI,CAAC8P,eAAe,EAAE;IACtB,CAAC,CAAC;IACD,IAAI,CAAC3S,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACmP,KAAK,EAAE;IACrE,IAAI,CAACtI,SAAS,CAACkJ,oBAAoB,CAACV,OAAO,CAAEW,MAAM,IAAI;MACrD,MAAMC,GAAG,GAAG,IAAI,CAAC9D,gBAAgB,EAAE;MACnC,IAAI6D,MAAM,EAAEJ,UAAU,EAAE;QACtBK,GAAG,CAAChB,UAAU,CAAC,YAAY,EAAE,IAAIrU,WAAW,CAACoV,MAAM,EAAEJ,UAAU,CAAC,CAAC;;MAEnEK,GAAG,CAACzC,UAAU,CAAC;QACb,IAAI,EAAEwC,MAAM,EAAElT,EAAE;QAChB,cAAc,EAAEkT,MAAM,EAAElT,EAAE;QAC1B,yBAAyB,EAAEkT,MAAM,EAAEE,UAAU;QAC7C,mBAAmB,EAAEF,MAAM,EAAE1T,IAAI;QACjC,YAAY,EAAE0T,MAAM,EAAEG,UAAU;QAChC,YAAY,EAAEH,MAAM,EAAEI;OACvB,CAAC;MACD,IAAI,CAACjT,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAAC6P,IAAI,CAACI,GAAG,CAAC;IACzE,CAAC,CAAC;IACD,IAAI,CAAC9S,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACmP,KAAK,EAAE;IACrE,IAAI,CAAChS,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACmP,KAAK,EAAE;IAC5D,IAAI,CAACtI,SAAS,CAACwJ,qBAAqB,CAAChB,OAAO,CAAEiB,MAAM,IAAI;MACtD,MAAMC,GAAG,GAAG,IAAI,CAAClE,gBAAgB,EAAE;MACnC,MAAMmE,GAAG,GAAG,IAAI,CAACjE,WAAW,EAAE;MAC9BU,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoD,MAAM,CAAC;MAC9B,IAAIA,MAAM,EAAEG,YAAY,EAAE;QACxBF,GAAG,CAACtB,UAAU,CAAC,cAAc,EAAE,IAAIrU,WAAW,CAAC0V,MAAM,EAAEG,YAAY,CAAC,CAAC;QACrED,GAAG,CAACvB,UAAU,CAAC,cAAc,EAAE,IAAIrU,WAAW,CAAC0V,MAAM,EAAEG,YAAY,CAAC,CAAC;;MAIvEF,GAAG,CAAC/C,UAAU,CAAC;QACb,IAAI,EAAE8C,MAAM,EAAExT,EAAE;QAChB,iBAAiB,EAAEwT,MAAM,EAAExT,EAAE;QAC7B,yBAAyB,EAAEwT,MAAM,EAAEJ,UAAU;QAC7C,mBAAmB,EAAEI,MAAM,EAAEhU,IAAI;QACjC,YAAY,EAAEgU,MAAM,EAAEF,UAAU;QAChC,YAAY,EAAEE,MAAM,EAAEH;OACvB,CAAC;MACF,IAAGG,MAAM,EAAEf,IAAI,EAAEzS,EAAE,EACnB;QAEE,IAAI,CAACoM,OAAO,GAAGoH,MAAM,EAAEf,IAAI,EAAEzS,EAAE;QAC/B,QAAQ,IAAI,CAACoM,OAAO;UAClB,KAAK,CAAC;YACJ,IAAI,CAACF,QAAQ,GAAIsH,MAAM,CAACI,gBAAgB,GAAG,CAAC;YAC5C;UACF,KAAK,CAAC;YACJ,IAAI,CAAC1H,QAAQ,GAAIsH,MAAM,CAACI,gBAAgB,GAAG,CAAC;YAC5C;UACF,KAAK,CAAC;YACJ,IAAI,CAAC1H,QAAQ,GAAIsH,MAAM,CAACI,gBAAgB,GAAG,CAAC;YAC5C;UACF,KAAK,CAAC;YACJ,IAAI,CAAC1H,QAAQ,GAAIsH,MAAM,CAACI,gBAAgB,GAAG,EAAE;YAC7C;UAEF;YACE,IAAI,CAAC1H,QAAQ,GAAI,CAAC;YAClB;;;MAMNwH,GAAG,CAAChD,UAAU,CAAC;QACb,IAAI,EAAE8C,MAAM,EAAExT,EAAE;QAChB,iBAAiB,EAAEwT,MAAM,EAAExT,EAAE;QAC7B,yBAAyB,EAAEwT,MAAM,EAAEJ,UAAU;QAC7C,mBAAmB,EAAEI,MAAM,EAAEhU,IAAI;QACjC,YAAY,EAAEgU,MAAM,EAAEF,UAAU;QAChC,QAAQ,EAAEE,MAAM,EAAEI,gBAAgB;QAClC,eAAe,EAAG,IAAI,CAAC1H,QAAQ;QAC/B,MAAM,EAAEsH,MAAM,EAAEf,IAAI,EAAEzS;OACvB,CAAC;MACF,IAAGwT,MAAM,CAAChU,IAAI,IAAI,IAAI,IAAIgU,MAAM,CAAChU,IAAI,IAAI,KAAK,EAC9C;QACC,IAAI,CAACa,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAAC6P,IAAI,CAACU,GAAG,CAAC;QACxEtD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvH,mBAAmB,CAAC;OACpC,MAED;QACE,IAAI,CAACwC,WAAW,GAAGmI,MAAM,CAACI,gBAAgB;QAC1C,IAAI,CAACrI,aAAa,GAAG,IAAI,CAACW,QAAQ;QAClC,IAAI,CAAC8G,eAAe,EAAE;QACtB;QACA;QACA,IAAI,CAAC7G,cAAc,GAAG,IAAI;QAC1B,IAAI,CAAChI,eAAe,GAAG,KAAK;QAC5BgM,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEsD,GAAG,CAAC;QAC9C;QACA,IAAG,IAAI,CAACrI,WAAW,KAAK,CAAC,IAAI,IAAI,CAACA,WAAW,KAAK,IAAI,IAAI,IAAI,CAACA,WAAW,KAAKwI,SAAS,EACxF;UACC,IAAI,CAACxT,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAAC6P,IAAI,CAACW,GAAG,CAAC;;;IAGlE,CAAC,CAAC;IACF,IAAI,IAAI,CAAC3J,SAAS,EAAE/J,EAAE,EAAE;MACtB,IAAI,CAACK,cAAc,CAAC8R,UAAU,CAAC,IAAI,EAAE,IAAIrU,WAAW,CAAC,IAAI,CAACiM,SAAS,EAAE/J,EAAE,CAAC,CAAC;MACzE,IAAI,CAACI,aAAa,CAAC,IAAI,CAAC2J,SAAS,EAAExJ,SAAS,CAAC;;EAGjD;EACAsR,SAASA,CAACpB,IAAI;IACZ,IAAIqD,aAAa,GAAG,IAAI,CAACzT,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK;IACjE,IAAI,CAACyJ,SAAS;IACd,IAAI,CAACN,WAAW,GAAG,CAAC;IACpB,IAAI,CAACG,YAAY,GAAG,CAAC;IACrB,IAAI,CAACF,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,cAAc,GAAG,CAAC;IAEvB,IAAIoK,QAAQ,GAAG,EAAE;IACjB,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAI3K,OAAY;IAChB,IAAI4K,OAAO,GAAG,CAAC;IACf,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIC,OAAO,GAAG,CAAC;IACf,KAAK,IAAIC,CAAC,IAAIP,aAAa,EAAE;MAC3B3D,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB,IAAI,CAACxG,YAAY,GAAG,CAAC;MACrB,IAAI,CAACH,WAAW,GAAG,CAAC;MAEpB,KAAK,IAAI6K,CAAC,IAAIR,aAAa,CAACO,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;QAChD;QACA,IAAI6P,aAAa,CAACO,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;UACjE,IAAI,CAAC/K,WAAW,GAAG,IAAI,CAACA,WAAW,GAAG2I,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAE5N,uBAAuB,CAAC;UAEhH,IAAI,CAACqN,QAAQ,EAAES,QAAQ,CAACV,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC,EAAE;YACpDqB,QAAQ,CAAChB,IAAI,CAACe,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC;YAC1C,IAAI,CAAChJ,cAAc,GAAG,IAAI,CAACA,cAAc,GAAG0I,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACxB,kBAAkB,CAAC;;;QAG/F,IAAIiB,aAAa,CAACO,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;UAClE,IAAI,CAAC5K,YAAY,GAAG,IAAI,CAACA,YAAY,GAAGwI,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAE5N,uBAAuB,CAAC;UAClH,IAAI,CAACsN,SAAS,EAAEQ,QAAQ,CAACV,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC,EAAE;YACrDsB,SAAS,CAACjB,IAAI,CAACe,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC;YAC3C,IAAI,CAAC/I,cAAc,GAAG,IAAI,CAACA,cAAc,GAAGyI,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACxB,kBAAkB,CAAC;;;;MAIjG,IAAI,IAAI,CAAChI,OAAO,IAAI,CAAC,EAAE;QACrB,IAAImJ,SAAS,CAACQ,QAAQ,CAACV,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC,EAAE;UACnDuB,OAAO,GAAI7B,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACxB,kBAAkB,CAAC,GAAG,GAAG,IAAK,IAAI,CAACjJ,YAAY,GAAG,GAAG,CAAC;UAC7FsK,QAAQ,GAAGA,QAAQ,GAAGD,OAAO;;OAEhC,MACI;QACHC,QAAQ,GAAG,CAAC;;MAEd,IAAIH,QAAQ,CAACS,QAAQ,CAACV,aAAa,CAACO,CAAC,CAAC,CAAC3B,UAAU,CAAC,EAAE;QAClDyB,MAAM,GAAI/B,UAAU,CAAC0B,aAAa,CAACO,CAAC,CAAC,CAACxB,kBAAkB,CAAC,GAAG,GAAG,IAAK,IAAI,CAACpJ,WAAW,GAAG,GAAG,CAAC;QAC3F2K,OAAO,GAAGA,OAAO,GAAGD,MAAM;;;IAG9BhE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC1G,cAAc,EAAE,oBAAoB,EAAE,IAAI,CAACD,WAAW,CAAC;IAC3F0G,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACzG,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAACC,YAAY,CAAC;IACzF,IAAI6K,IAAI,GAAG,IAAI,CAACC,qBAAqB,EAAE;IACvC,IAAI,CAACpL,KAAK,GAAG8K,OAAO,IAAIK,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;IAC3CpL,OAAO,GAAG6K,QAAQ,IAAIO,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;IAC1CtE,OAAO,CAACC,GAAG,CAAC8D,QAAQ,EAAEE,OAAO,CAAC;IAC9B,IAAIO,UAAU,GAAGP,OAAO,IAAIK,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;IAC/C,IAAIG,MAAM,GAAGV,QAAQ,IAAIO,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;IAC7C,IAAI,IAAI,CAACnK,MAAM,EAAE;MACfjB,OAAO,GAAG,CAAC;;IAEb,IAAI,CAAC9I,SAAS,GAAGsU,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAACnH,KAAK,GAAGD,OAAO,CAAC,CAAC;IAC1E,IAAI,IAAI,CAACkB,MAAM,EAAE;MACf,IAAI,CAAChK,SAAS,GAAGsU,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC3B,IAAI,CAAC,GAAGgE,IAAI,CAAC,eAAe,CAAC,GAAGpL,OAAO,CAAC;;IAEjF,IAAI0L,QAAQ,GAAGJ,UAAU,GAAGC,MAAM;IAClC,IAAII,QAAQ,GAAG,IAAI,CAAC1L,KAAK,GAAGD,OAAO;IACnC8G,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC9G,KAAK,CAAC;IACvB,IAAI,CAACjJ,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC9Q,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAAC5C,KAAK,CAAC;IAC3F,IAAI,CAACD,cAAc,CAAC6C,GAAG,CAAC,mBAAmB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC5Q,SAAS,CAAC;IACrE,IAAI,CAACF,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC5Q,SAAS,CAAC;IAC7D,IAAI,CAACF,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAACiO,QAAQ,CAAC0D,IAAI,CAACC,KAAK,CAAC,IAAI,CAACvU,SAAS,GAAG,EAAE,CAAC,CAAC;IACrF,IAAI,CAACF,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAACiO,QAAQ,CAACiB,UAAU,CAAC3B,IAAI,CAAC,CAAC;IACtE,IAAI,CAACpQ,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAACiO,QAAQ,CAACiB,UAAU,CAAC3B,IAAI,CAAC,GAAG,EAAE,CAAC;IAC1E,IAAI,CAACpQ,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAAE,IAAI,CAAC9Q,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC;IAC3G,IAAI,CAACD,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAAE,IAAI,CAAC9Q,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC;IACzG6P,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC7P,SAAS,CAAC;IACzC,IAAI,CAACH,aAAa,CAAC,IAAI,CAACG,SAAS,CAAC;EACpC;EACAmU,qBAAqBA,CAAA;IACnB,IAAIO,KAAK,GAAG,CAAC;MAAEC,KAAK,GAAG,CAAC;MAAEC,IAAI,GAAG,CAAC;MAAEC,IAAI,GAAG,CAAC;MAAEC,SAAS,GAAG,CAAC;MAAEC,UAAU,GAAG,CAAC;IAC3E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClV,cAAc,CAACC,KAAK,CAAC8O,mBAAmB,CAACoG,MAAM,EAAED,CAAC,EAAE,EAAE;MAE7E,IAAI,IAAI,CAAClV,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,KAAK,EAAE;QACjF+Q,KAAK,GAAG7C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAE7O,uBAAuB,CAAC;;MAEhG,IAAI,IAAI,CAACrG,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,IAAI,EAAE;QAChFiR,IAAI,GAAG/C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAE7O,uBAAuB,CAAC;QAC7F4O,UAAU,GAAGlD,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAEjC,UAAU,CAAC;;;IAI1F,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClV,cAAc,CAACC,KAAK,CAACgP,oBAAoB,CAACkG,MAAM,EAAED,CAAC,EAAE,EAAE;MAE9E,IAAI,IAAI,CAAClV,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,KAAK,EAAE;QAClFgR,KAAK,GAAG9C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAE7O,uBAAuB,CAAC;;MAGjG,IAAI,IAAI,CAACrG,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,IAAI,EAAE;QACjFkR,IAAI,GAAGhD,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAE7O,uBAAuB,CAAC;QAC9F2O,SAAS,GAAGjD,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAEjC,UAAU,CAAC;;;IAI1F,OAAO;MAAE,OAAO,EAAE2B,KAAK;MAAE,MAAM,EAAEE,IAAI;MAAE,OAAO,EAAED,KAAK;MAAE,MAAM,EAAEE,IAAI;MAAE,eAAe,EAAEC,SAAS;MAAE,gBAAgB,EAAEC;IAAU,CAAE;EAEjI;EAEAG,cAAcA,CAAA;IACZtF,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC/P,cAAc,CAACC,KAAK,CAAC;IACrD,IAAIoV,aAAa,GAAG,EAAE;IACtB,IAAIC,aAAa,GAAG,IAAI,CAACtV,cAAc,CAACC,KAAK,CAACoP,YAAY;IAC1D,IAAIJ,oBAAoB,GAAG,IAAI,CAACjP,cAAc,CAACC,KAAK,CAACgP,oBAAoB;IAC7Ea,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEuF,aAAa,CAAC;IAC9C,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,aAAa,CAACH,MAAM,EAAED,CAAC,EAAE,EAAE;MAC7C,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACJ,CAAC,CAAC,EAAEtR,iBAAiB,CAACuR,MAAM,EAAEI,CAAC,EAAE,EAAE;QACnEzF,OAAO,CAACC,GAAG,CAACuF,aAAa,CAACJ,CAAC,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAClV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,EAAEC,SAAS,KAAK,IAAI,EAAE;UACtF,OAAO,IAAI,CAACxV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,WAAW,CAAC;SACnF,MAAM;UAEL,MAAMC,SAAS,GAAG,IAAI,CAACxV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,WAAW,CAAC;UAC7F,IAAI,CAACvV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC3M,QAAQ,CAAC6M,SAAS,CAACD,SAAS,EAAE,YAAY,CAAC;;QAGhI,IAAI,IAAI,CAACxV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,EAAEG,OAAO,KAAK,IAAI,EAAE;UACpF,OAAO,IAAI,CAAC1V,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,SAAS,CAAC;SACjF,MAAM;UACL,MAAMG,OAAO,GAAG,IAAI,CAAC1V,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,SAAS,CAAC;UACzF,IAAI,CAACvV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC3M,QAAQ,CAAC6M,SAAS,CAACC,OAAO,EAAE,YAAY,CAAC;;QAE5H,IAAI,IAAI,CAAC1V,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,EAAEI,OAAO,IAAInC,SAAS,EAAE;UACxF,IAAI,CAACxT,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,SAAS,CAAC,GAAGD,aAAa,CAACJ,CAAC,CAAC,CAAC7C,UAAU;;QAEzG,IAAI,IAAI,CAACrS,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACvQ,YAAY,KAAK,YAAY,EAAE;UAC3E,IAAI,CAAC3E,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI;SACzF,MAAM;UACL,IAAI,CAACvV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,KAAK;;QAE3F,IAAG,IAAI,CAACvV,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACvQ,YAAY,KAAK,YAAY,EAC1E;UACEsK,oBAAoB,CAACyD,IAAI,CAAC,IAAI,CAAC1S,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC;SAC1F,MAED;UACEF,aAAa,CAAC3C,IAAI,CAAC,IAAI,CAAC1S,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC6F,CAAC,CAAC,CAACtR,iBAAiB,CAAC2R,CAAC,CAAC,CAAC;;;;IAMxF;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACvV,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;MAClD,MAAM+S,YAAY,GAAG,IAAI,CAAC5V,cAAc,CAACC,KAAK,CAACkP,UAAU,CAAC,CAAC,CAAC;MAC5D,IAAIyG,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAKpC,SAAS,EAAE;QACvD,OAAOoC,YAAY,CAACtC,YAAY;QAChC,MAAMuC,aAAa,GAAG5G,oBAAoB,CAAC6G,SAAS,CACjDxD,IAAI,IAAKA,IAAI,IAAIA,IAAI,EAAEzO,iBAAiB,KAAK+R,YAAY,EAAE/R,iBAAiB,CAC9E;QAED,IAAIgS,aAAa,KAAK,CAAC,CAAC,EAAE;UACxB5G,oBAAoB,CAAC4G,aAAa,CAAC,GAAGD,YAAY;SACnD,MAAM;UACL3G,oBAAoB,CAACyD,IAAI,CAACkD,YAAY,CAAC;;;;IAKzC9F,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACsF,aAAa,CAAC;IAC9C,IAAIU,MAAM,GAAG;MACX,aAAa,EAAE,IAAI,CAACvM,aAAa,EAAE7J,EAAE;MACrC,cAAc,EAAE,IAAI,CAACK,cAAc,CAACC,KAAK,CAAC2O,WAAW;MACrD,WAAW,EAAE,IAAI,CAAC5O,cAAc,CAACC,KAAK,CAACyO,iBAAiB;MACxD,SAAS,EAAE,CAAC;MACZ,WAAW,EAAE,IAAI,CAAC1O,cAAc,CAACC,KAAK,CAACiO,gBAAgB;MACvD,WAAW,EAAC,IAAI,CAACpD,YAAY;MAC7B,cAAc,EAAE,IAAI,CAAC6B,kBAAkB;MACvC,QAAQ,EAAE,OAAO;MAChB,sBAAsB,EAAE,IAAI,CAAC3M,cAAc,CAACC,KAAK,CAAC8O,mBAAmB;MACtE,uBAAuB,EAAE,IAAI,CAAC/O,cAAc,CAACC,KAAK,CAACgP,oBAAoB;MACvE,iBAAiB,EAAEoG,aAAa,CAACW,MAAM,CAACC,OAAO;KAChD;IAED,IAAI,IAAI,CAACvM,SAAS,EAAE/J,EAAE,EAAE;MACtBoW,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAACrM,SAAS,EAAE/J,EAAE;;IAEnCmQ,OAAO,CAACC,GAAG,CAACgG,MAAM,CAAC;IACnB,MAAMG,UAAU,GAAG,IAAI,CAACtE,qBAAqB,EAAE;IAC/C,MAAMuE,GAAG,GAAID,UAAU,CAACrT,GAAG,CAAC,yBAAyB,CAAiB,CAAC5C,KAAK;IAC5E,MAAMmW,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;IACrE,KAAK,IAAImR,CAAC,IAAIoC,QAAQ,CAACnW,KAAK,EAAE;MAC5B6P,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC/P,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAAC;MACrFkM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC/P,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACxB,kBAAkB,CAAC;MAC5F,IAAI,CAACzK,MAAM,GAAG8H,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACxB,kBAAkB,CAAC;MAClF,IAAIvC,CAAC,GAAG,CAAC;MACT,KAAK,IAAIgE,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;QACzEqM,CAAC,IAAIJ,MAAM,CAAC,IAAI,CAAC7P,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAC5N,uBAAuB,CAAC;;MAErG,IAAI,CAAC+D,GAAG,GAAGyF,MAAM,CAAEI,CAAC,GAAG,GAAG,GAAI,IAAI,CAAClI,MAAM,CAAC;MAC1C,IAAI,IAAI,CAACqC,GAAG,IAAI,IAAI,CAACrC,MAAM,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACrP,YAAY,KAAK,YAAY,EAAG;QAEvG,IAAI,CAACgE,KAAK,CAAC0N,KAAK,CAAC,KAAK,GAAG,IAAI,CAACrW,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACrP,YAAY,GAAG,+CAA+C,CAAC;QAClI,OAAO,KAAK;;;IAIhB,IAAI,CAAC8D,UAAU,CAAC6N,oBAAoB,CAACP,MAAM,CAAC,CAACnF,SAAS,CAACR,IAAI,IAAG;MAC5D,IAAI,CAAC/F,OAAO,GAAG,IAAI,CAAC1B,KAAK,CAAC4N,OAAO,CAACnG,IAAI,EAAEoG,OAAO,CAAC;MAChD,IAAI,CAAC9N,MAAM,CAAC+N,QAAQ,CAAC,CAAC,kCAAkC,CAAC,CAAC;MAC1D,IAAI,CAAC/N,MAAM,CAAC+N,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;IAClD,CAAC,CAAC;EACJ;EACAvG,YAAYA,CAAA;IACV,IAAI,CAACzH,UAAU,CAACkI,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAACC,SAAS,CAACR,IAAI,IAAG;MAClD,IAAI,CAAC3G,SAAS,GAAG2G,IAAI,CAAC,MAAM,CAAC;MAC7BN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEK,IAAI,CAAC;IACpC,CAAC,CAAC;EAEJ;EAEAsG,yBAAyBA,CAACC,QAAQ;IAChC,IAAI,CAAClO,UAAU,CAACmO,oBAAoB,CAACD,QAAQ,EAAE,IAAI,CAACnN,aAAa,EAAE7J,EAAE,CAAC,CAACiR,SAAS,CAACR,IAAI,IAAG;MACtFN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjB,IAAI,CAAC1G,SAAS,GAAG0G,IAAI;MACrB,IAAI,CAACyB,WAAW,EAAE;IACpB,CAAC,CAAC;EAKJ;EACA9R,aAAaA,CAAC2O,iBAAiB;IAC7BA,iBAAiB,GAAG,IAAI,CAAC1O,cAAc,CAACC,KAAK,CAACyO,iBAAiB;IAE/D,MAAM0H,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;IACrE,IAAIgU,OAAO,GAAG,CAAC;IACf,IAAIC,QAAQ,GAAG,CAAC;IAChBhH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEqG,QAAQ,CAAC;IAEvC,KAAK,IAAIpC,CAAC,IAAIoC,QAAQ,CAACnW,KAAK,EAAE;MAC5B,IAAI,IAAI,CAACD,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAElR,iBAAiB,KAAK,eAAe,EACpF;QACE,MAAMsT,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEmE,MAAM,CAAC,CAAC;QAChH;QACAqO,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7C;QAEA,IAAG,IAAI,CAAC/W,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7E;UACG,IAAI,CAAC/G,eAAe,GAAG0L,KAAK,GAAG,CAAC;UACnCX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAChF,eAAe,CAAC;SACnE,MACI,IAAG,IAAI,CAACrL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC/G,eAAe,GAAE0L,KAAK,GAAG,CAAC;UAC/BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAChF,eAAe,CAAC;SACrE,MACI,IAAG,IAAI,CAACrL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC/G,eAAe,GAAG0L,KAAK;UAC5BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAChF,eAAe,CAAC;SACrE,MACI,IAAG,IAAI,CAACrL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC/G,eAAe,GAAE0L,KAAK,GAAG,EAAE;UAChCX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAChF,eAAe,CAAC;;QAGtE,KAAK,IAAI4I,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAClM,MAAM;UAC3G;UACA,IAAImP,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAE,CAAC;UACrF;UAEAD,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC,IAAI,CAAChF,eAAe,CAAC;UAC9D+K,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC6G,kBAAkB,CAAC;UAC1Dd,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAAChF,eAAe,CAAC;UACnEyE,OAAO,CAACC,GAAG,CAAC,cAAc,EAACmH,kBAAkB,CAAE;UAC/CpH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC1E,eAAe,CAAC;UAIjD,IAAI,IAAI,CAACrL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAKzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;OAK9G,MACI,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAElR,iBAAiB,KAAK,YAAY,EACtF;QACE,MAAMsT,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEmE,MAAM,CAAC,CAAC;QAEhHqO,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7C,IAAG,IAAI,CAAC/W,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7E;UACE,IAAI+E,aAAa,GAAGJ,KAAK,GAAG,CAAC;UAC/BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;SAC3D,MACI,IAAG,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI+E,aAAa,GAAGJ,KAAK,GAAG,CAAC;UAC7BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;SAC7D,MACI,IAAG,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI+E,aAAa,GAAGJ,KAAK;UACzBX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;SAC7D,MACI,IAAG,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI+E,aAAa,GAAGJ,KAAK,GAAG,EAAE;UAC9BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;;QAG9D,KAAK,IAAIlD,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAClM,MAAM;UAC3G;UACA,IAAImP,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAE,CAAC;UACrF,IAAIE,aAAa,GAAGD,kBAAkB,GAAG,EAAE;UAE3CF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC8G,aAAa,CAAC;UACvDf,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC6G,kBAAkB,CAAC;UAC1Dd,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;UAC5DrH,OAAO,CAACC,GAAG,CAAC,cAAc,EAACmH,kBAAkB,CAAE;UAC/CpH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEoH,aAAa,CAAC;UAI1C,IAAI,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAKzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;OAK9G,MAEA;QACC,MAAMqO,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAExB,kBAAkB,CAAC,GAAG9D,iBAAiB,GAAI,GAAG,CAAC;QAClI,IAAIyI,aAAa,GAAGJ,KAAK,GAAG,EAAE;QAC9BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7CX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;QAG5D,KAAK,IAAIlD,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAC5N,uBAAuB;UAC5H,IAAImM,kBAAkB,GAAG,IAAI,CAACxS,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAExB,kBAAkB;UACtF,IAAI0E,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAC,GAAG,GAAG,GAAGlF,UAAU,CAACS,kBAAkB,CAAC,GAAG,GAAG,GAAG9D,iBAAkB,CAAC;UACtJ;UAEA,IAAIyI,aAAa,GAAGD,kBAAkB,GAAG,EAAE;UAE3CF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC8G,aAAa,CAAC;UAIvD,IAAI,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAKzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;;;IAQjH,IAAIqP,MAAW;IACf,IAAIC,SAAc;IAElB,KAAK,IAAInC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClV,cAAc,CAACC,KAAK,CAAC8O,mBAAmB,CAACoG,MAAM,EAAED,CAAC,EAAE,EAAE;MAE7E,IAAIoC,KAAK,GAAG,IAAI,CAACtX,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAE7O,uBAAuB;MACtF,IAAI2M,UAAU,GAAG,IAAI,CAAChT,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAElC,UAAU;MAC7E,IAAI,CAAChT,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,yBAAyB,CAAC,CAAC,CAAC7E,UAAU,CAACiH,KAAK,CAAC;MACnH,IAAI,IAAI,CAACtX,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,KAAK,EAAE;QACjFiM,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE+G,QAAQ,CAAC;QAC9B,IAAI/E,UAAU,CAACiB,UAAU,CAAC,GAAG8D,QAAQ,EAAE;UACrCO,SAAS,GAAG7C,IAAI,CAACC,KAAK,CAACqC,QAAQ,GAAG/E,UAAU,CAACuF,KAAK,CAAC,GAAG,GAAG,CAAC;UAC1D,IAAIC,UAAU,GAAG/C,IAAI,CAACC,KAAK,CAAEqC,QAAQ,GAAG/E,UAAU,CAACuF,KAAK,CAAC,GAAG,GAAG,GAAI,EAAE,CAAC;UACtE;UACC,IAAI,CAACtX,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAACgH,SAAS,CAAC;UACrG,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACkH,UAAU,CAAC;UAC9G,IAAI,CAAC7M,QAAQ,GAAG2M,SAAS;SAC1B,MACI;UACF,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC,CAAC,CAAC;UAC7F,IAAI,CAACrQ,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAAC,CAAC,CAAC;UACrGgH,SAAS,GAAG,CAAC;UACb,IAAI,CAAC3M,QAAQ,GAAG2M,SAAS;;OAE5B,MAEI;QACH;QACAD,MAAM,GAAG5C,IAAI,CAACC,KAAK,CAACoC,OAAO,GAAG9E,UAAU,CAACuF,KAAK,CAAC,GAAG,GAAG,CAAC;QACtD,IAAG,IAAI,CAACnN,GAAG,IAAI,IAAI,EACnB;UACG,IAAI,CAACnK,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC+G,MAAM,CAAC;UACpG,IAAI,CAACpX,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACmE,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAACqF,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;UACvI,IAAI,CAAC3M,OAAO,GAAG2M,MAAM;SACpB,MAED;UACA,IAAIA,MAAM,GAAGrF,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAEjC,UAAU,CAAC,EAAE;YACtFmE,MAAM,GAAGrF,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAE8O,mBAAmB,CAACmG,CAAC,CAAC,EAAEjC,UAAU,CAAC;;UAEnF,IAAI,CAACjT,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC+G,MAAM,CAAC;UAClG,IAAI,CAACpX,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACmE,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAACqF,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;UACvI,IAAI,CAAC3M,OAAO,GAAG2M,MAAM;;;;IAOzB;IAEA,IAAII,GAAG,GAAGhD,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACyO,iBAAiB,CAAC,IAAIqD,UAAU,CAACqF,MAAM,CAAC,GAAGrF,UAAU,CAACsF,SAAS,CAAC,CAAC,CAAC;IAC5HvH,OAAO,CAACC,GAAG,CAACyH,GAAG,EAAE,KAAK,CAAC;IACvB;IACA,IAAI,CAACxX,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC0G,GAAG,CAAC;IACpD,IAAI,CAACxX,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAACiO,QAAQ,CAAC0D,IAAI,CAACC,KAAK,CAAC+C,GAAG,GAAG,EAAE,CAAC,CAAC;IACpE,IAAI,CAACxX,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACiO,QAAQ,CAAC0G,GAAG,CAAC;IAErD,IAAIC,QAAQ,GAAG,CAAC;IAChBA,QAAQ,GAAGL,MAAM,GAAGC,SAAS;IAC7B,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC2G,QAAQ,CAAC;IACzD,IAAI,CAACzX,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAACiO,QAAQ,CAAC2G,QAAQ,GAAG,EAAE,CAAC;IAG7D;IAEA,KAAK,IAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAClV,cAAc,CAACC,KAAK,CAACgP,oBAAoB,CAACkG,MAAM,EAAED,CAAC,EAAE,EAAE;MAE9E,IAAIwC,MAAM,GAAG,IAAI,CAAC1X,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAE7O,uBAAuB;MACxF,IAAI2M,UAAU,GAAG,IAAI,CAAChT,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAElC,UAAU;MAC9E,IAAI,CAAChT,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,yBAAyB,CAAC,CAAC,CAAC7E,UAAU,CAACqH,MAAM,CAAC;MACrH,IAAI,IAAI,CAAC1X,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAErR,iBAAiB,IAAI,KAAK,EAAE;QAClF,IAAIkO,UAAU,CAACiB,UAAU,CAAC,GAAG8D,QAAQ,EAAE;UACrCO,SAAS,GAAG7C,IAAI,CAACC,KAAK,CAACqC,QAAQ,GAAG/E,UAAU,CAAC2F,MAAM,CAAC,GAAG,GAAG,CAAC;UAC3D,IAAIH,UAAU,GAAG/C,IAAI,CAACC,KAAK,CAAEqC,QAAQ,GAAG/E,UAAU,CAAC2F,MAAM,CAAC,GAAG,GAAG,GAAI,EAAE,CAAC;UACvE;UACA,IAAI,CAAClN,OAAO,GAAG6M,SAAS;UACvB,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAACgH,SAAS,CAAC;UACtG,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACkH,UAAU,CAAC;SAChH,MACI;UACF,IAAI,CAACvX,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC,CAAC,CAAC;UAC9F,IAAI,CAACrQ,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAAC,CAAC,CAAC;UACtGgH,SAAS,GAAG,CAAC;UACb,IAAI,CAAC7M,OAAO,GAAG6M,SAAS;;QAE1B;QACAvH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACvF,OAAO,CAAC;OACtC,MAEI;QACH;QACA,IAAG,IAAI,CAACL,GAAG,IAAI,IAAI,EACnB;UACEiN,MAAM,GAAG5C,IAAI,CAACC,KAAK,CAACoC,OAAO,GAAG9E,UAAU,CAAC2F,MAAM,CAAC,GAAG,GAAG,CAAC;UACtD,IAAI,CAAC1X,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC+G,MAAM,CAAC;UACnG,IAAI,CAACpX,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACmE,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAACqF,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;SACzI,MAED;UACAA,MAAM,GAAG5C,IAAI,CAACC,KAAK,CAACoC,OAAO,GAAG9E,UAAU,CAAC2F,MAAM,CAAC,GAAG,GAAG,CAAC;UACvD,IAAIN,MAAM,GAAGrF,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAEjC,UAAU,CAAC,EAAE;YACvFmE,MAAM,GAAGrF,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEgP,oBAAoB,CAACiG,CAAC,CAAC,EAAEjC,UAAU,CAAC;;UAEpF,IAAI,CAACjT,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC7E,UAAU,CAAC+G,MAAM,CAAC;UACnG,IAAI,CAACpX,cAAc,CAAC6C,GAAG,CAAC,sBAAsB,CAAe,CAACA,GAAG,CAAC,CAACqS,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC7E,UAAU,CAACmE,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAACqF,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;;;;IAI5I1I,iBAAiB,GAAGqD,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,EAAEiO,gBAAgB,CAAC,GAAGkJ,MAAM,GAAGC,SAAS;IAChG,IAAI,CAACrX,cAAc,CAAC6C,GAAG,CAAC,mBAAmB,CAAC,CAACiO,QAAQ,CAACpC,iBAAiB,CAAC;IACxE,IAAI,CAAC1O,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAACiO,QAAQ,CAACpC,iBAAiB,CAAC;IAChE,IAAI,CAAC1O,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAACiO,QAAQ,CAAC0D,IAAI,CAACC,KAAK,CAAC/F,iBAAiB,GAAG,EAAE,CAAC,CAAC;IACxF,KAAK,IAAIsF,CAAC,IAAIoC,QAAQ,CAACnW,KAAK,EAAE;MAC5B,IAAG,IAAI,CAACD,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAElR,iBAAiB,KAAK,eAAe,EACnF;QACE,MAAMsT,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEjM,MAAM,CAAC,CAAC;QAC1F;QACAqO,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7C;QAEA,IAAG,IAAI,CAAC/W,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7E;UACG,IAAI,CAAC9G,YAAY,GAAGyL,KAAK,GAAG,CAAC;UAChCX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAC/E,YAAY,CAAC;SAChE,MACI,IAAG,IAAI,CAACtL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC9G,YAAY,GAAEyL,KAAK,GAAG,CAAC;UAC5BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAC/E,YAAY,CAAC;SAClE,MACI,IAAG,IAAI,CAACtL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC9G,YAAY,GAAGyL,KAAK;UACzBX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAC/E,YAAY,CAAC;SAClE,MACI,IAAG,IAAI,CAACtL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAC9G,YAAY,GAAEyL,KAAK,GAAG,EAAE;UAC7BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAE,IAAI,CAAC/E,YAAY,CAAC;;QAInE,KAAK,IAAI2I,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAClM,MAAM;UAC3G;UACA,IAAImP,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAE,CAAC;UACrF;UAEAD,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC,IAAI,CAAC/E,YAAY,CAAC;UAC3D8K,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC6G,kBAAkB,CAAC;UAC1Dd,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAAC/E,YAAY,CAAC;UAChEwE,OAAO,CAACC,GAAG,CAAC,cAAc,EAACmH,kBAAkB,EAAG,IAAI,CAAC5L,YAAY,CAAC;UAIlE,IAAI,IAAI,CAACtL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAIzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;OAK9G,MACI,IAAG,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAElR,iBAAiB,KAAK,YAAY,EACrF;QACE,MAAMsT,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEmE,MAAM,CAAC,CAAC;QAChH;QACAqO,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7C;QACA,IAAG,IAAI,CAAC/W,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAC7E;UACG,IAAI,CAAChH,cAAc,GAAG2L,KAAK,GAAG,CAAC;UAClCX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;SACjE,MACI,IAAG,IAAI,CAACpL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAChH,cAAc,GAAG2L,KAAK,GAAG,CAAC;UAC/BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;SACnE,MACI,IAAG,IAAI,CAACpL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAChH,cAAc,GAAG2L,KAAK;UAC3BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;SACnE,MACI,IAAG,IAAI,CAACpL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAAC,CAAC,CAAC,EAAEwO,IAAI,IAAI,CAAC,EAClF;UACE,IAAI,CAAChH,cAAc,GAAG2L,KAAK,GAAG,EAAE;UAChCX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;SACnE,MAED;UACE,IAAI,CAACA,cAAc,GAAG,CAAC;UACvBgL,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;;QAGpE,KAAK,IAAI6I,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAClM,MAAM;UAC3G,IAAImP,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAE,CAAC;UAGrFD,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;UAC7DgL,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC6G,kBAAkB,CAAC;UAC1Dd,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC,IAAI,CAACjF,cAAc,CAAC;UAIlE,IAAI,IAAI,CAACpL,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAIzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;OAI9G,MACE;QACD,MAAMqO,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;QACrE,IAAIkU,KAAK,GAAQvC,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAExB,kBAAkB,CAAC,GAAG9D,iBAAiB,GAAI,GAAG,CAAC;QAClI,IAAIyI,aAAa,GAAGJ,KAAK,GAAG,EAAE;QAC9BX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC3D,UAAU,CAAC0G,KAAK,CAAC;QAC7CX,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC3D,UAAU,CAAC8G,aAAa,CAAC;QAG5D,KAAK,IAAIlD,CAAC,IAAI,IAAI,CAACjU,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,EAAE;UACzE,MAAMoT,GAAG,GAAGZ,QAAQ,CAACvT,GAAG,CAAC,CAACmR,CAAC,EAAE,mBAAmB,CAAC,CAAC;UAClDlE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;UAEpB,MAAMkH,6BAA6B,GAAG,IAAI,CAACjX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,CAAC5N,uBAAuB;UAC5H,IAAImM,kBAAkB,GAAG,IAAI,CAACxS,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAExB,kBAAkB;UACtF,IAAI0E,kBAAkB,GAAQ1C,IAAI,CAACC,KAAK,CAAE1C,UAAU,CAACkF,6BAA6B,CAAC,GAAG,GAAG,GAAGlF,UAAU,CAACS,kBAAkB,CAAC,GAAG,GAAG,GAAG9D,iBAAkB,CAAC;UACtJ,IAAIyI,aAAa,GAAGD,kBAAkB,GAAG,EAAE;UAE3CF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC5D,UAAU,CAAC6G,kBAAkB,CAAC;UACrDF,GAAG,CAACnU,GAAG,CAAC,CAACoR,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC5D,UAAU,CAAC8G,aAAa,CAAC;UAIvD,IAAI,IAAI,CAACnX,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,IAAI,CAAC,EAAE;YAC1F0C,OAAO,GAAGA,OAAO,GAAG9E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;UAIzG,IAAI,IAAI,CAAC/H,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,CAACpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAEC,MAAM,EAAEC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC3F2C,QAAQ,GAAGA,QAAQ,GAAG/E,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACoP,YAAY,CAAC2E,CAAC,CAAC,EAAEpQ,iBAAiB,CAACqQ,CAAC,CAAC,EAAElM,MAAM,CAAC;;;;;IAMjH,IAAI4P,IAAI,GAAGnD,IAAI,CAACC,KAAK,CAAC1C,UAAU,CAAC,IAAI,CAAC/R,cAAc,CAACC,KAAK,CAACyO,iBAAiB,CAAC,GAAIqD,UAAU,CAAC,IAAI,CAACtH,OAAO,CAAE,GAAIsH,UAAU,CAAC,IAAI,CAACrH,QAAQ,CAAE,CAAC;IACzIoF,OAAO,CAACC,GAAG,CAACyH,GAAG,EAAE,MAAM,CAAC;IACxB,IAAI,CAACxX,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC6G,IAAI,CAAC;IACrD,IAAI,CAAC3X,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAACiO,QAAQ,CAAC0D,IAAI,CAACC,KAAK,CAACkD,IAAI,GAAG,EAAE,CAAC,CAAC;IACrE,IAAI,CAAC3X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACiO,QAAQ,CAAC6G,IAAI,CAAC;IACtD,IAAI,CAAC5G,UAAU,EAAE;EAInB;EACA6G,MAAMA,CAAA;IACJ,IAAI,CAAClP,MAAM,CAAC+N,QAAQ,CAAC,CAAC,kCAAkC,CAAC,CAAC;IAC1D,IAAI,CAAC/N,MAAM,CAAC+N,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC;EAClD;EAGAtG,cAAcA,CAAA;IACZ,IAAI,CAAC1H,UAAU,CAACoP,aAAa,EAAE,CAACjH,SAAS,CAACR,IAAI,IAAG;MAC/C,IAAI,CAAChP,mBAAmB,GAAGgP,IAAI,CAAC,MAAM,CAAC;IAEzC,CAAC,CAAC;EACJ;EACA3O,qBAAqBA,CAACZ,KAAa;IACnC,IAAG,IAAI,CAACiD,eAAe,IAAI,IAAI,EAAE;MAC/B,MAAMgU,WAAW,GAAG,IAAI,CAAC9X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC;MACxE,MAAMuV,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;MACrE,IAAIiV,WAAW,CAAChV,iBAAiB,KAAK,eAAe,IAAIgV,WAAW,CAAChV,iBAAiB,KAAK,YAAY,EAAE;QACvG,MAAMiV,aAAa,GAAG,IAAI,CAAC/X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC5G,MAAMmX,mBAAmB,GAAG,IAAI,CAAChY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;QAEzH,IAAIkX,aAAa,IAAIC,mBAAmB,EAAE;UACxC,MAAMC,qBAAqB,GAAG,IAAI,CAACjY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI;UAC5G,QAAQ6F,qBAAqB;YAC3B,KAAK,CAAC;cACJD,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,EAAE,CAAC;cACtD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,EAAE;cACxC;YAEF;cACE+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,CAAC;cACjD,IAAI,CAAC8K,OAAO,GAAI,CAAC;cACjB;;;QAIN,IAAImN,IAAI,GAAG,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK;QAC5D,IAAIkY,IAAI,GAAG,IAAI,CAACnY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK;QAE3D,IAAI,CAACwL,UAAU,GAAG2M,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC;QAC/C,IAAI,CAACyL,WAAW,GAAG,IAAI,CAACX,OAAO;QAC/B;QACA,IAAG,IAAI,CAAC/K,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI,IAAI,CAAC,EACtF;UACE;UACA,IAAI,CAACzG,WAAW,GAAI,IAAI,CAACA,WAAW,KAAK6H,SAAS,GAAI,CAAC,GAAG,IAAI,CAAC7H,WAAW;UAE1E,IAAI,CAACH,KAAK,GAAG4M,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAGmY,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC,GAAG,IAAI,CAAC0L,WAAW;UAC3H,IAAI,CAAC4B,SAAS,GAAG6K,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAAC5C,KAAK,CAAC,GAAGmY,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC,GAAG,IAAI,CAAC0L,WAAW;SAC3H,MAED;UACA,IAAI,CAACH,KAAK,GAAI4M,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAAC5C,KAAK,CAAC;;QAE5E,IAAG,IAAI,CAAC8K,OAAO,KAAKyI,SAAS,IAAI,IAAI,CAACxI,WAAW,KAAKwI,SAAS,EAC/D;UACA,IAAI,CAAC5G,KAAK,GAAG,IAAI,CAAC5M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAAC8K,OAAO,GAAI,IAAI,CAACa,YAAY;SAChG,MACI,IAAG,IAAI,CAACb,OAAO,KAAKyI,SAAS,EAClC;UACE,IAAI,CAAC5G,KAAK,GAAE,IAAI,CAAC5M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAAC8K,OAAO;SAC5E,MACI,IAAG,IAAI,CAACC,WAAW,KAAIwI,SAAS,EACrC;UACE,IAAI,CAAC5G,KAAK,GAAE,IAAI,CAAC5M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAAC2L,YAAY;SACjF,MAED;UACE,IAAI,CAACgB,KAAK,GAAE,IAAI,CAAC5M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK;;QAG9D,IAAI,CAACD,cAAc,CAACyQ,YAAY,CAACG,SAAS,CAAC,MAAK;UAC9C,IAAI,CAAC5Q,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACtF,KAAK,CAAC;UAC3D,IAAI,CAACxL,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACvD,SAAS,CAAC;UAC/D,IAAI,CAACvN,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACvD,SAAS,CAAC;UAChE,IAAI,CAACvN,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACtF,KAAK,CAAC;UACnE,IAAI,CAACxL,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAClE,KAAK,CAAC;QACpE,CAAC,CAAC;QAEFwJ,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAACwP,UAAU,CAAC0H,aAAa,CAAC9X,KAAK,CAAC;QAC/DmW,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,eAAe,CAAC,CAAC,CAACwP,UAAU,CAAC,IAAI,CAACtF,OAAO,CAAC;;KAGlE,MAEC;MACE,MAAM+M,WAAW,GAAG,IAAI,CAAC9X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC;MACxE,MAAMuV,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;MACrE,IAAIiV,WAAW,CAAChV,iBAAiB,KAAK,eAAe,IAAIgV,WAAW,CAAChV,iBAAiB,KAAK,YAAY,EAAE;QACvG,MAAMiV,aAAa,GAAG,IAAI,CAAC/X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC5G,MAAMmX,mBAAmB,GAAG,IAAI,CAAChY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;QAEzH,IAAIkX,aAAa,IAAIC,mBAAmB,EAAE;UACxC,MAAMC,qBAAqB,GAAG,IAAI,CAACjY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI;UAC5G,IAAI,CAAC9F,UAAU,GAAG2L,qBAAqB;UACvC,QAAQA,qBAAqB;YAC3B,KAAK,CAAC;cACJD,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;cACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;cACvC;YACF,KAAK,CAAC;cACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,EAAE,CAAC;cACtD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,EAAE;cACxC;YAEF;cACE+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,CAAC;cACjD,IAAI,CAAC8K,OAAO,GAAI,CAAC;cACjB;;;QAIN,IAAImN,IAAI,GAAG,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK;QAC5D,IAAIkY,IAAI,GAAG,IAAI,CAACnY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK;QAE3D,IAAI,CAACwL,UAAU,GAAG2M,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC;QAC/C,IAAI,CAACyL,WAAW,GAAG,IAAI,CAACX,OAAO;QAE/B;QACA,IAAIsN,YAAY,GAAG,IAAI,CAACrY,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC,CAAC,CAAC,CAAC8H,MAAM;QACxE,IAAIuQ,OAAO,GAAG,IAAI,CAACtY,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC,CAAC,CAAC,CAACmS,IAAI;QACjE,QAAQkG,OAAO;UACb,KAAK,CAAC;YAEJ,IAAI,CAACrM,QAAQ,GAAGoM,YAAY,GAAG,CAAC;YAChC;UACF,KAAK,CAAC;YAEJ,IAAI,CAACpM,QAAQ,GAAIoM,YAAY,GAAE,CAAC;YAChC;UACF,KAAK,CAAC;YAEJ,IAAI,CAACpM,QAAQ,GAAIoM,YAAY,GAAG,CAAC;YACjC;UACF,KAAK,CAAC;YACJ,IAAI,CAACpM,QAAQ,GAAIoM,YAAY,GAAG,EAAE;YAClC;UAEF;YAEE,IAAI,CAACpM,QAAQ,GAAI,CAAC;YAClB;;QAIJ,IAAGqM,OAAO,IAAI,CAAC,EACf;UACE,IAAI,CAACpM,QAAQ,GAAGkM,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAG,IAAI,CAACwL,UAAU,GAAG4M,YAAY;SAC7G,MACI,IAAG,IAAI,CAACrY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI,IAAI,CAAC,EAC3F;UACE,IAAI,CAAClG,QAAQ,GAAGkM,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAG,IAAI,CAACwL,UAAU;SAC9F,MAED;UACE,IAAI,CAACS,QAAQ,GAAGkM,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC;;QAE7E,IAAG,IAAI,CAAC8K,OAAO,KAAKyI,SAAS,IAAI,IAAI,CAACvH,QAAQ,KAAKuH,SAAS,EAC5D;UACC,IAAI,CAAC3G,MAAM,GAAGuL,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC,GAAGmY,QAAQ,CAAC,IAAI,CAACrN,OAAO,CAAC,GAAI,IAAI,CAACkB,QAAQ;SAClH,MACI,IAAG,IAAI,CAAClB,OAAO,KAAIyI,SAAS,EACjC;UACE,IAAI,CAAC3G,MAAM,GAAEuL,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC,GAAGmY,QAAQ,CAAC,IAAI,CAACrN,OAAO,CAAC;SACjG,MACI,IAAG,IAAI,CAACkB,QAAQ,KAAIuH,SAAS,EAClC;UACE,IAAI,CAAC3G,MAAM,GAAEuL,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC,GAAG,IAAI,CAACgM,QAAQ;SACxF,MAED;UACE,IAAI,CAACY,MAAM,GAAEuL,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC;;QAEzE,IAAI,CAACD,cAAc,CAACyQ,YAAY,CAACG,SAAS,CAAC,MAAK;UAC9C,IAAI,CAAC5Q,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC5E,QAAQ,CAAC;UAC9D,IAAI,CAAClM,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC5E,QAAQ,CAAC;UACtE,IAAI,CAAClM,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACjE,MAAM,CAAC;QACrE,CAAC,CAAC;QAEFuJ,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAACwP,UAAU,CAAC0H,aAAa,CAAC;QACzD3B,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,eAAe,CAAC,CAAC,CAACwP,UAAU,CAAC,IAAI,CAACtF,OAAO,CAAC;;;EAGvE;EAMEwN,UAAUA,CAAA,GAEV;EACAxX,iBAAiBA,CAACqP,IAAI,EAAEvP,KAAK;IAE3B,IAAI,CAACQ,iBAAiB,GAAG+O,IAAI,CAACnQ,KAAK;IACnC,IAAI,CAACuY,oBAAoB,CAAC3X,KAAK,CAAC;IAChC,IAAI,CAAC4X,WAAW,CAAC5X,KAAK,CAAC;EAEzB;EACAmB,kBAAkBA,CAACoO,IAAI,EAAEvP,KAAK;IAE5B,IAAI,CAACuB,kBAAkB,GAAGgO,IAAI,CAACnQ,KAAK;IACpC,IAAI,CAACyY,mBAAmB,CAAC7X,KAAK,CAAC;IAC/B;EACF;EAEA2X,oBAAoBA,CAAC3X,KAAa;IAEhC,MAAMiX,WAAW,GAAG,IAAI,CAAC9X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC;IACxE,MAAMuV,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;IAErE,IAAI,CAAC7C,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAACiQ,QAAQ,CAAC,CAAC,CAAC;IAClG,IAAI,CAAC9Q,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,CAACiQ,QAAQ,CAAC,CAAC,CAAC;EAI3G;EACA4H,mBAAmBA,CAAC7X,KAAa;IAE/B,MAAMiX,WAAW,GAAG,IAAI,CAAC9X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC;IACxE,MAAMuV,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;IAErE,IAAI,CAAC7C,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAACiQ,QAAQ,CAAC,CAAC,CAAC;IAClG,IAAI,CAAC9Q,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC,CAACiQ,QAAQ,CAAC,CAAC,CAAC;EAI3G;EAEAtO,sBAAsBA,CAAC3B,KAAa;IAClC,MAAMiX,WAAW,GAAG,IAAI,CAAC9X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC;IACxE,MAAMuV,QAAQ,GAAG,IAAI,CAACpW,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAc;IACrE,IAAKiV,WAAW,CAAChV,iBAAiB,CAAEC,WAAW,EAAE,KAAK,YAAY,EAAE;MAClE,MAAMgV,aAAa,GAAG,IAAI,CAAC/X,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;MAC5G,MAAMmX,mBAAmB,GAAG,IAAI,CAAChY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAACA,GAAG,CAAC,CAAChC,KAAK,EAAE,mBAAmB,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;MAEzH,IAAIkX,aAAa,IAAIC,mBAAmB,EAAE;QACxC,MAAMC,qBAAqB,GAAG,IAAI,CAACjY,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI;QAC5G,QAAQ6F,qBAAqB;UAC3B,KAAK,CAAC;YACJD,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;YACvC;UACF,KAAK,CAAC;YACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;YACvC;UACF,KAAK,CAAC;YACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,CAAC,CAAC;YACrD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,CAAC;YACvC;UACF,KAAK,CAAC;YACJ+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,GAAG,EAAE,CAAC;YACtD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK,GAAG,EAAE;YACxC;UAEF;YACE+X,mBAAmB,CAAClH,QAAQ,CAACiH,aAAa,CAAC9X,KAAK,CAAC;YACjD,IAAI,CAAC8K,OAAO,GAAIgN,aAAa,CAAC9X,KAAK;YACnC;;;MAIN,IAAIiY,IAAI,GAAG,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAAC5C,KAAK;MAC/D,IAAIkY,IAAI,GAAG,IAAI,CAACnY,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAAC5C,KAAK;MAC9D,IAAI,CAAC0L,WAAW,GAAGyM,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC;MAChD,IAAI,CAAC2L,YAAY,GAAG,IAAI,CAACb,OAAO;MAChC,IAAG,IAAI,CAAC/K,cAAc,CAAC6C,GAAG,CAAC,cAAc,CAAC,CAAC5C,KAAK,CAACY,KAAK,CAAC,CAAC+C,iBAAiB,CAAC,CAAC,CAAC,CAACwO,IAAI,IAAI,CAAC,EACtF;QACEtC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqI,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAAC5C,KAAK,CAAC,CAAC;QACtF;QACA,IAAI,CAACwL,UAAU,GAAI,IAAI,CAACA,UAAU,KAAK+H,SAAS,GAAI,CAAC,GAAG,IAAI,CAAC/H,UAAU;QAEvE,IAAI,CAACF,KAAK,GAAG6M,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAGmY,QAAQ,CAACL,aAAa,CAAC9X,KAAK,CAAC,GAAG,IAAI,CAACwL,UAAU;OAC3H,MAED;QACA,IAAI,CAACF,KAAK,GAAI6M,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAAC5C,KAAK,CAAC;;MAE5E,IAAG,IAAI,CAAC8K,OAAO,KAAKyI,SAAS,IAAI,IAAI,CAAC9H,WAAW,KAAK8H,SAAS,EAC/D;QACA,IAAI,CAAC1G,OAAO,GAAG,IAAI,CAAC9M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAAC8K,OAAO,GAAG,IAAI,CAACW,WAAW;OAChG,MACI,IAAG,IAAI,CAACX,OAAO,KAAKyI,SAAS,EAClC;QACE,IAAI,CAAC1G,OAAO,GAAE,IAAI,CAAC9M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAAC8K,OAAO;OAC9E,MACI,IAAG,IAAI,CAACW,WAAW,KAAI8H,SAAS,EACrC;QACE,IAAI,CAAC1G,OAAO,GAAE,IAAI,CAAC9M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAACyL,WAAW;OAClF,MAED;QACE,IAAI,CAACoB,OAAO,GAAE,IAAI,CAAC9M,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK;;MAGhE,IAAI,CAACD,cAAc,CAACyQ,YAAY,CAACG,SAAS,CAAC,MAAK;QAC9C,IAAI,CAAC5Q,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACvF,KAAK,CAAC;QAC3D,IAAI,CAACvL,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACvF,KAAK,CAAC;QACnE,IAAI,CAACvL,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAChE,OAAO,CAAC;MACtE,CAAC,CAAC;MACFsJ,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAACwP,UAAU,CAAC0H,aAAa,CAAC9X,KAAK,CAAC;MAC/DmW,QAAQ,CAACvT,GAAG,CAAC,CAAChC,KAAK,EAAE,eAAe,CAAC,CAAC,CAACwP,UAAU,CAAC,IAAI,CAACtF,OAAO,CAAC;;EAKnE;EAEA0N,WAAWA,CAAC5X,KAAK;IAEf,IAAIqX,IAAI,GAAG,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK;IAC5D,IAAIkY,IAAI,GAAG,IAAI,CAACnY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK;IACzD,IAAI,CAACD,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAACoH,IAAI,CAAC;IACrD,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAACoH,IAAI,CAAC;IAC7D,IAAI,CAAClY,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAACqH,IAAI,CAAC;EAChE;EACAxF,eAAeA,CAAA;IAEb,IAAIgG,KAAK,GAAG,IAAI,CAACjP,SAAS,CAACsE,SAAS,GAAG,EAAE;IACzC,IAAG,IAAI,CAACjC,OAAO,KAAK,CAAC,IAAI,IAAI,CAACd,UAAU,KAAKuI,SAAS,IAAI,IAAI,CAACxI,WAAW,KAAKwI,SAAS,EACxF;MACA,IAAI,CAACxH,cAAc,GAAG+F,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEsE,SAAS,CAAC,GAAG+D,UAAU,CAAC,IAAI,CAAC9G,UAAU,CAAC,GAAG8G,UAAU,CAAC,IAAI,CAAC/G,WAAW,CAAC;KACvH,MACI,IAAG,IAAI,CAACC,UAAU,KAAKuI,SAAS,EACrC;MACE,IAAI,CAACxH,cAAc,GAAG+F,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEsE,SAAS,CAAC,GAAG+D,UAAU,CAAC,IAAI,CAAC9G,UAAU,CAAC;KAC1F,MACI,IAAG,IAAI,CAACD,WAAW,KAAKwI,SAAS,EACtC;MACE,IAAI,CAACxH,cAAc,GAAG+F,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEsE,SAAS,CAAC,GAAG+D,UAAU,CAAC,IAAI,CAAC/G,WAAW,CAAC;KAC3F,MAED;MACE,IAAI,CAACgB,cAAc,GAAG+F,UAAU,CAAC,IAAI,CAACrI,SAAS,EAAEsE,SAAS,CAAC;;IAE7D,IAAG,IAAI,CAAC7C,YAAY,KAAKqI,SAAS,IAAI,IAAI,CAACtI,aAAa,KAAKsI,SAAS,EACtE;MACA,IAAI,CAAC9G,UAAU,GAAKiM,KAAK,GAAI5G,UAAU,CAAC,IAAI,CAAC5G,YAAY,CAAC,GAAG4G,UAAU,CAAC,IAAI,CAAC7G,aAAa,CAAC;KAC1F,MACI,IAAG,IAAI,CAACA,aAAa,KAAKsI,SAAS,EACxC;MACE,IAAI,CAAC9G,UAAU,GAAKiM,KAAK,GAAI5G,UAAU,CAAC,IAAI,CAAC7G,aAAa,CAAC;KAC5D,MACI,IAAG,IAAI,CAACC,YAAY,KAAKqI,SAAS,EACvC;MACE,IAAI,CAAC9G,UAAU,GAAKiM,KAAK,GAAI5G,UAAU,CAAC,IAAI,CAAC5G,YAAY,CAAC;KAC3D,MAED;MACE,IAAI,CAACuB,UAAU,GAAKiM,KAAM;;IAG5B7I,OAAO,CAACC,GAAG,CAAC,YAAY,EAAG,IAAI,CAAC/D,cAAc,CAAC;IAC/C,IAAI,CAAChM,cAAc,CAACqQ,UAAU,CAAC;MAC7B,aAAa,EAAG,IAAI,CAACrE,cAAc;MACnC,qBAAqB,EAAG,IAAI,CAACA,cAAc;MAC3C,oBAAoB,EAAG,IAAI,CAACU;KAC7B,CAAC;EACJ;EACApH,sBAAsBA,CAAA;IAEpBwK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC/P,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC;IAC7E,IAAI,CAACkM,OAAO,GAAG,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC,CAAC,CAAC,EAAE8H,MAAM;IACrE,IAAI,CAACqE,KAAK,GAAG,IAAI,CAACpM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC,CAAC,CAAC,EAAEmS,IAAI;IACjE,IAAI,CAAC5F,oBAAoB,GAAG,IAAI,CAACxM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,CAAC,CAAC,CAAC,EAAE+H,aAAa;IACzF,QAAS,IAAI,CAACoE,KAAK;MACjB,KAAK,CAAC;QACJ,IAAI,CAACG,QAAQ,GAAI,IAAI,CAACJ,OAAO,GAAI,CAAC;QACjC,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QACxG;MACF,KAAK,CAAC;QACJ,IAAI,CAACA,QAAQ,GAAI,IAAI,CAACJ,OAAO,GAAI,CAAC;QACjC,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QACxG;MACF,KAAK,CAAC;QACJ,IAAI,CAACA,QAAQ,GAAI,IAAI,CAACJ,OAAO,GAAI,CAAC;QACjC,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QACxG;MACF,KAAK,CAAC;QACJ,IAAI,CAACA,QAAQ,GAAI,IAAI,CAACJ,OAAO,GAAI,EAAE;QACnC;QACC,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QACxG;MAEF;QACE,IAAI,CAACA,QAAQ,GAAI,IAAI,CAACJ,OAAO;QAC5B,IAAI,CAACnM,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,IAAI,CAAC9D,QAAQ,CAAC;QACxG;;IAGJ,IAAG,IAAI,CAACH,KAAK,IAAI,CAAC,EACd;MACE,IAAI,CAACC,SAAS,GAAG+L,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAG,IAAI,CAACkM,OAAO,GAAG,IAAI,CAAClB,UAAU;;IAE/G;IACA;IACA;IACA;IAAA,KAEA;MACE,IAAI,CAACoB,SAAS,GAAG+L,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,kBAAkB,CAAC,CAAC5C,KAAK,CAAC,GAAG,IAAI,CAACgL,UAAU;;IAEhG,IAAI2N,IAAI,GAAGR,QAAQ,CAAC,IAAI,CAACpY,cAAc,CAAC6C,GAAG,CAAC,iBAAiB,CAAC,CAAC5C,KAAK,CAAC,GAAI,IAAI,CAACsM,QAAQ,GAAE6L,QAAQ,CAAC,IAAI,CAACjN,YAAY,CAAC;IACnH,IAAI,CAACnL,cAAc,CAACyQ,YAAY,CAACG,SAAS,CAAC,MAAK;MAC9C,IAAI,CAAC5Q,cAAc,CAAC6C,GAAG,CAAC,aAAa,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACzE,SAAS,CAAC;MAC/D,IAAI,CAACrM,cAAc,CAAC6C,GAAG,CAAC,qBAAqB,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAACzE,SAAS,CAAC;MACvE,IAAI,CAACrM,cAAc,CAAC6C,GAAG,CAAC,oBAAoB,CAAC,CAACiO,QAAQ,CAAC8H,IAAI,CAAC;IAC9D,CAAC,CAAC;EACR;EACA1T,kBAAkBA,CAAC2T,KAAK,EAAEzI,IAAI;IAE3B,IAAI,CAACpQ,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAACwN,UAAU,CAAC,CAAC,CAAC;IACpF,IAAI,CAACrQ,cAAc,CAAC6C,GAAG,CAAC,YAAY,CAAe,CAACA,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAACwN,UAAU,CAAC,CAAC,CAAC;IAC5F,IAAI,CAAC/K,sBAAsB,EAAE;EAC/B;EAEAoM,eAAeA,CAAA;IAEb,IAAIoH,OAAO,GAAG,IAAI,CAAChO,YAAY;IAC/B,IAAIiO,IAAI,GAAG,CAAC;IACZ,IAAI,CAACtQ,UAAU,CAACuQ,YAAY,CAACF,OAAO,EAAEC,IAAI,CAAC,CAACnI,SAAS,CAACqI,GAAG,IAAE;MACzD,IAAI,CAACxM,YAAY,GAAGwM,GAAG,CAAC,MAAM,CAAC;IAEjC,CAAC,CAAC;EAIJ;EAEAvZ,aAAaA,CAACO,KAAK;IAEjB,IAAI,CAAC0M,kBAAkB,GAAG1M,KAAK,CAACN,EAAE;IAClC;IACA,IAAI,CAAC8I,UAAU,CAACyQ,2BAA2B,CAAC,IAAI,CAACpO,YAAY,EAAE,IAAI,CAACtB,aAAa,EAAE7J,EAAE,EAAEM,KAAK,CAACN,EAAE,CAAC,CAACiR,SAAS,CAACR,IAAI,IAAG;MAChHN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjB,IAAI,CAAC1G,SAAS,GAAG0G,IAAI;MAErB,IAAI,CAACyB,WAAW,EAAE;MAClB,IAAI,CAACd,UAAU,EAAE;MACjB,IAAI,CAAC/D,YAAY,GAAG,KAAK;IAE3B,CAAC,CAAC;EACJ;EAEAmM,iBAAiBA,CAAA;IAEf,IAAG,IAAI,CAACpM,cAAc,IAAI,CAAC,EAC3B;MACE,IAAI,CAACG,UAAU,GAAG,IAAI,CAACxF,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAACgN,eAAe,GAAE,GAAG;MACpF6C,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC7C,UAAU,CAAC;MAC/C,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,SAAS,GAAG,KAAK;MACtB,IAAI,CAAC1F,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAACiO,QAAQ,CAAC,CAAC,CAAC;MAC5C,IAAI,CAAC5D,UAAU,GAAG,CAAC;MACnB,IAAI,CAACG,YAAY,GAAG,CAAC;KAEtB,MAED;MACE,IAAI,CAACH,UAAU,GAAG,IAAI,CAACxF,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK;MACxD6P,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC7C,UAAU,CAAC;MAC/C,IAAI,CAACC,WAAW,GAAG,KAAK;MACxB,IAAI,CAACC,SAAS,GAAG,IAAI;MACrB,IAAI,CAAC1F,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAACiO,QAAQ,CAAC,CAAC,CAAC;MAC5C,IAAI,CAAC5D,UAAU,GAAG,CAAC;MACnB,IAAI,CAACG,YAAY,GAAG,CAAC;;EAGzB;EACA+L,YAAYA,CAAA;IAEV,IAAG,IAAI,CAACrM,cAAc,IAAI,CAAC,EAC3B;MACE,IAAI,CAACG,UAAU,GAAI,IAAI,CAACxF,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK,GAAG,IAAI,CAACgN,eAAe,GAAE,GAAG,GAAI4C,MAAM,CAAC,IAAI,CAAC5C,eAAe,CAAC;MACrH,IAAI,CAACI,YAAY,GAAI,IAAI,CAACH,UAAU,GAAG,EAAE;MACzC4C,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC7C,UAAU,CAAC;KAEhD,MAED;MACE,IAAI,CAACA,UAAU,GAAG,IAAI,CAACxF,SAAS,CAAC7E,GAAG,CAAC,YAAY,CAAC,CAAC5C,KAAK;MACxD,IAAI,CAACoN,YAAY,GAAI,IAAI,CAACH,UAAU,GAAG,EAAE;MACzC4C,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC7C,UAAU,CAAC;;EAGnD;EAEAtF,OAAO,GAAG,IAAInK,WAAW,CAACS,MAAM,EAAE,CAAC;EACnCiJ,iBAAiBA,CAACkS,cAAsB;IACtC,MAAMC,SAAS,GAAG,IAAI,CAAC1R,OAAO,CAAC3H,KAAK;IACpCqZ,SAAS,CAACC,IAAI,CAACF,cAAc,CAACE,IAAI,EAAE,CAAC;IACrC,IAAI,CAAC3R,OAAO,CAACkJ,QAAQ,CAACwI,SAAS,CAAC;EAGlC;EACA9R,kBAAkBA,CAACgS,eAAuB,EAAEC,UAAiC;IAC3E,MAAMH,SAAS,GAAG,IAAI,CAAC1R,OAAO,CAAC3H,KAAK;IACpCqZ,SAAS,CAACI,KAAK,CAACF,eAAe,CAACE,KAAK,EAAE,CAAC;IACxC,IAAI,CAAC9R,OAAO,CAACkJ,QAAQ,CAACwI,SAAS,CAAC;IAChCG,UAAU,CAACE,KAAK,EAAE;IAClB,IAAI,CAACjS,SAAS,CAAC2I,UAAU,CAAC;MACxBa,SAAS,EAAE,IAAI,CAACtJ,OAAO,CAAC3H;KACzB,CAAC;EAEJ;EAEA2Z,aAAaA,CAAA;IAEX,IAAI,CAAC5Z,cAAc,CAAC6C,GAAG,CAAC,WAAW,CAAC,CAACiO,QAAQ,CAAC,IAAI,CAAC5D,UAAU,CAAC;IAC9D,IAAI2M,SAAS,GAAG,IAAI,CAAC3M,UAAU;IAC/B,IAAI,CAACsE,SAAS,CAAC,IAAI,CAACtE,UAAU,CAAC;IAC/B,IAAI,CAACI,cAAc,GAAG,IAAI;EAC3B;;qBAhsDUjF,sBAAsB,EAAAlK,EAAA,CAAA2b,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAA7b,EAAA,CAAA2b,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA/b,EAAA,CAAA2b,iBAAA,CAAAK,EAAA,CAAAC,qBAAA,GAAAjc,EAAA,CAAA2b,iBAAA,CAAAO,EAAA,CAAAC,gBAAA,GAAAnc,EAAA,CAAA2b,iBAAA,CAAAS,EAAA,CAAAC,MAAA,GAAArc,EAAA,CAAA2b,iBAAA,CAAAW,EAAA,CAAAC,aAAA,GAAAvc,EAAA,CAAA2b,iBAAA,CAAAa,EAAA,CAAAC,QAAA;EAAA;;UAAtBvS,sBAAsB;IAAAwS,SAAA;IAAAC,QAAA,GAAA3c,EAAA,CAAA4c,oBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnBnCld,EAAA,CAAAC,cAAA,UAAK;QAIwBD,EAAA,CAAAa,MAAA,GAA4B;QAAAb,EAAA,CAAAc,YAAA,EAAO;QACxDd,EAAA,CAAAa,MAAA,yBACF;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAENd,EAAA,CAAAC,cAAA,aAAwB;QAEeD,EAAA,CAAAE,UAAA,2BAAAkd,sEAAA7a,MAAA;UAAA,OAAA4a,GAAA,CAAAnR,GAAA,GAAAzJ,MAAA;QAAA,EAAiB,oBAAA8a,+DAAA;UAAA,OAAWF,GAAA,CAAAhK,MAAA,CAAAgK,GAAA,CAAAnR,GAAA,EAAW,KAAK,CAAC;QAAA,EAA5B;QAA8BhM,EAAA,CAAAC,cAAA,cACvD;QAAAD,EAAA,CAAAa,MAAA,WAAG;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAKzCd,EAAA,CAAAC,cAAA,cAAwB;QAEeD,EAAA,CAAAE,UAAA,2BAAAod,uEAAA/a,MAAA;UAAA,OAAA4a,GAAA,CAAApR,MAAA,GAAAxJ,MAAA;QAAA,EAAoB,oBAAAgb,gEAAA;UAAA,OAAWJ,GAAA,CAAAhK,MAAA,CAAAgK,GAAA,CAAApR,MAAA,EAAc,QAAQ,CAAC;QAAA,EAAlC;QACjC/L,EAAA,CAAAC,cAAA,eAA+B;QAAAD,EAAA,CAAAa,MAAA,cAAM;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAItEd,EAAA,CAAAC,cAAA,cAAwB;QAIeD,EAAA,CAAAE,UAAA,2BAAAsd,uEAAAjb,MAAA;UAAA,OAAA4a,GAAA,CAAArR,MAAA,GAAAvJ,MAAA;QAAA,EAAoB,oBAAAkb,gEAAA;UAAA,OAAWN,GAAA,CAAAhK,MAAA,CAAAgK,GAAA,CAAArR,MAAA,EAAc,QAAQ,CAAC;QAAA,EAAlC;QAAoC9L,EAAA,CAAAC,cAAA,eAChE;QAAAD,EAAA,CAAAa,MAAA,cAAM;QAAAb,EAAA,CAAAc,YAAA,EAAO;QA0ClDd,EAAA,CAAAC,cAAA,cAAkC;QAIfD,EAAA,CAAAa,MAAA,sBAAc;QAAAb,EAAA,CAAAc,YAAA,EAAY;QACrCd,EAAA,CAAAkC,SAAA,iBAC2B;QAC3BlC,EAAA,CAAAC,cAAA,kCAA0C;QACxCD,EAAA,CAAA6C,UAAA,KAAA6a,6CAAA,yBAEa;QACf1d,EAAA,CAAAc,YAAA,EAAmB;QAIzBd,EAAA,CAAAC,cAAA,cAAqB;QAGJD,EAAA,CAAAa,MAAA,gBAAQ;QAAAb,EAAA,CAAAc,YAAA,EAAY;QAQ/Bd,EAAA,CAAAC,cAAA,sBAA0E;QACxED,EAAA,CAAA6C,UAAA,KAAA8a,6CAAA,yBAEa;QACf3d,EAAA,CAAAc,YAAA,EAAa;QAInBd,EAAA,CAAAkC,SAAA,eAEM;QACNlC,EAAA,CAAAC,cAAA,eAAmB;QAEkCD,EAAA,CAAAa,MAAA,qBAAa;QAAAb,EAAA,CAAAc,YAAA,EAAS;QAM7Ed,EAAA,CAAAC,cAAA,cAA6B;QAKAD,EAAA,CAAAa,MAAA,yBAAiB;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAC1Cd,EAAA,CAAAC,cAAA,eAAmB;QACjBD,EAAA,CAAAa,MAAA,oBAAW;QAAAb,EAAA,CAAAc,YAAA,EAAM;QACnBd,EAAA,CAAAC,cAAA,eAAmB;QAAAD,EAAA,CAAAa,MAAA,eAAO;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAChCd,EAAA,CAAAC,cAAA,eAAmB;QACjBD,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAEhBd,EAAA,CAAAC,cAAA,eAA+D;QAC1CD,EAAA,CAAAa,MAAA,iBAAS;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAClCd,EAAA,CAAAC,cAAA,eAAmB;QAG0BD,EAAA,CAAAa,MAAA,cAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAIjDd,EAAA,CAAAC,cAAA,iBACuD;QAArDD,EAAA,CAAAE,UAAA,mBAAA0d,wDAAA;UAAA,OAAST,GAAA,CAAA9J,SAAA,CAAA8J,GAAA,CAAAtb,cAAA,CAAAC,KAAA,CAAA+N,SAAA,CAAyC;QAAA,EAAC;QADrD7P,EAAA,CAAAc,YAAA,EACuD;QAM3Dd,EAAA,CAAAC,cAAA,eAAmB;QAGfD,EAAA,CAAAkC,SAAA,iBAAsG;QACxGlC,EAAA,CAAAc,YAAA,EAAiB;QAEnBd,EAAA,CAAAC,cAAA,eAAmB;QAEfD,EAAA,CAAAkC,SAAA,iBAAuF;QACzFlC,EAAA,CAAAc,YAAA,EAAiB;QAQrBd,EAAA,CAAAC,cAAA,eAA+D;QAC1CD,EAAA,CAAAa,MAAA,mDAA2C;QAAAb,EAAA,CAAAc,YAAA,EAAM;QACpEd,EAAA,CAAAC,cAAA,eAAmB;QAG0BD,EAAA,CAAAa,MAAA,cAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAIjDd,EAAA,CAAAkC,SAAA,iBAAgI;QAElIlC,EAAA,CAAAc,YAAA,EAAM;QAERd,EAAA,CAAAC,cAAA,eAAmB;QAGfD,EAAA,CAAAkC,SAAA,iBAAyG;QAC3GlC,EAAA,CAAAc,YAAA,EAAiB;QAEnBd,EAAA,CAAAC,cAAA,eAAmB;QAEfD,EAAA,CAAAkC,SAAA,iBAA0F;QAC5FlC,EAAA,CAAAc,YAAA,EAAiB;QAKrBd,EAAA,CAAAC,cAAA,eAA+D;QAC1CD,EAAA,CAAAa,MAAA,WAAG;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAC5Bd,EAAA,CAAAC,cAAA,eAAmB;QAG0BD,EAAA,CAAAa,MAAA,cAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAIjDd,EAAA,CAAAC,cAAA,iBACuE;QAArED,EAAA,CAAAE,UAAA,mBAAA2d,wDAAA;UAAA,OAASV,GAAA,CAAA9J,SAAA,CAAA8J,GAAA,CAAAtb,cAAA,CAAAC,KAAA,CAAAgc,QAAA,CAAwC;QAAA,EAAC;QADpD9d,EAAA,CAAAc,YAAA,EACuE;QAK3Ed,EAAA,CAAAC,cAAA,eAAmB;QAGfD,EAAA,CAAAkC,SAAA,iBAAiG;QACnGlC,EAAA,CAAAc,YAAA,EAAiB;QAEnBd,EAAA,CAAAC,cAAA,eAAmB;QAEfD,EAAA,CAAAkC,SAAA,iBAAkF;QACpFlC,EAAA,CAAAc,YAAA,EAAiB;QAsBrBd,EAAA,CAAAC,cAAA,eAA0D;QACZD,EAAA,CAAAa,MAAA,kBAAS;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAC3Dd,EAAA,CAAAC,cAAA,gBAAmB;QAI0BD,EAAA,CAAAa,MAAA,eAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAIjDd,EAAA,CAAAkC,SAAA,kBAAuG;QAGzGlC,EAAA,CAAAc,YAAA,EAAM;QAKRd,EAAA,CAAAC,cAAA,gBAAmB;QAEfD,EAAA,CAAAkC,SAAA,kBAAuG;QACzGlC,EAAA,CAAAc,YAAA,EAAiB;QAEnBd,EAAA,CAAAC,cAAA,gBAAmB;QAEfD,EAAA,CAAAkC,SAAA,kBAAwF;QAC1FlC,EAAA,CAAAc,YAAA,EAAiB;QAGrBd,EAAA,CAAAC,cAAA,gBAAkC;QAEhCD,EAAA,CAAA6C,UAAA,MAAAkb,uCAAA,mBAmLM;QACR/d,EAAA,CAAAc,YAAA,EAAM;QAENd,EAAA,CAAA6C,UAAA,MAAAmb,gDAAA,2BAiEe;QAGfhe,EAAA,CAAAC,cAAA,gBAA+D;QAC7BD,EAAA,CAAAE,UAAA,mBAAA+d,uDAAA;UAAA,OAASd,GAAA,CAAAhL,UAAA,CAAWgL,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,CAAmB,qBAAqB,CAAC,CAAA5C,KAAA,CAAO;QAAA,EAAC;QAAC9B,EAAA,CAAAa,MAAA,6BACxF;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAGtBd,EAAA,CAAA6C,UAAA,MAAAqb,uCAAA,mBA6CM;QAGNle,EAAA,CAAAC,cAAA,gBAAoE;QAClCD,EAAA,CAAAE,UAAA,mBAAAie,uDAAA;UAAA,OAAShB,GAAA,CAAA/K,UAAA,CAAW+K,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,CAAmB,qBAAqB,CAAC,CAAA5C,KAAA,CAAO;QAAA,EAAC;QAAC9B,EAAA,CAAAa,MAAA,8BACxF;QAAAb,EAAA,CAAAc,YAAA,EAAM;QAGtBd,EAAA,CAAA6C,UAAA,MAAAub,uCAAA,mBAwCM;QAENpe,EAAA,CAAA6C,UAAA,MAAAwb,uCAAA,mBA6CM;QAGNre,EAAA,CAAAC,cAAA,gBAA+D;QAEZD,EAAA,CAAAE,UAAA,mBAAAoe,0DAAA;UAAA,OAASnB,GAAA,CAAA/C,UAAA,EAAY;QAAA,EAAC;QAC9Cpa,EAAA,CAAAa,MAAA,gBAAO;QAAAb,EAAA,CAAAc,YAAA,EAAS;QACzCd,EAAA,CAAAC,cAAA,mBAEsD;QADLD,EAAA,CAAAE,UAAA,mBAAAqe,0DAAA;UAAA,OAASpB,GAAA,CAAAlG,cAAA,EAAgB;QAAA,EAAC;QACrBjX,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAS;QACrEd,EAAA,CAAAC,cAAA,mBACoE;QAAnBD,EAAA,CAAAE,UAAA,mBAAAse,0DAAA;UAAA,OAASrB,GAAA,CAAA1D,MAAA,EAAQ;QAAA,EAAC;QAACzZ,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAS;QAS7Fd,EAAA,CAAAC,cAAA,gBACmC;QAIoBD,EAAA,CAAAa,MAAA,+BAAsB;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAE1Ed,EAAA,CAAAC,cAAA,mBAA+E;QACpDD,EAAA,CAAAa,MAAA,eAAO;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAG3Cd,EAAA,CAAAC,cAAA,gBAAwB;QAWZD,EAAA,CAAAkC,SAAA,WAAI;QAEJlC,EAAA,CAAAC,cAAA,gBAAoC;QAK5BD,EAAA,CAAAa,MAAA,uBAAa;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAGtBd,EAAA,CAAAC,cAAA,WAAI;QAEsCD,EAAA,CAAAa,MAAA,oBAAW;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACxDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,qBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACzDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,qBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAE3Dd,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAa,MAAA,iBAAQ;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACrDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,gBAAO;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACpDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAIrDd,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAa,MAAA,kBAAS;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACtDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACvBd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QA4BzBd,EAAA,CAAA6C,UAAA,MAAA4b,gDAAA,6BAgBe;QAEfze,EAAA,CAAAC,cAAA,eAAoD;QAEhDD,EAAA,CAAAa,MAAA,+BACF;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAIPd,EAAA,CAAA6C,UAAA,MAAA6b,sCAAA,iBAIK;QACL1e,EAAA,CAAAC,cAAA,eAAoD;QAClDD,EAAA,CAAAkC,SAAA,eAAkB;QAClBlC,EAAA,CAAAC,cAAA,eAAa;QAAAD,EAAA,CAAAa,MAAA,KAAiC;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACnDd,EAAA,CAAAC,cAAA,eAAa;QAAAD,EAAA,CAAAa,MAAA,KAAuC;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAI3Dd,EAAA,CAAAC,cAAA,eAAoD;QAEhDD,EAAA,CAAAa,MAAA,gCACF;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAIPd,EAAA,CAAA6C,UAAA,MAAA8b,sCAAA,iBAIK;QACL3e,EAAA,CAAAC,cAAA,eAAoD;QAClDD,EAAA,CAAAkC,SAAA,eAAkB;QAClBlC,EAAA,CAAAC,cAAA,eAAa;QAAAD,EAAA,CAAAa,MAAA,KAAkC;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACpDd,EAAA,CAAAC,cAAA,eAAa;QAAAD,EAAA,CAAAa,MAAA,KAAwC;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAI5Dd,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAa,MAAA,kBAAS;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACtDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACvBd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAGzBd,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAa,MAAA,0CAAiC;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAC9Ed,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACvBd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAGzBd,EAAA,CAAAC,cAAA,WAAI;QACsCD,EAAA,CAAAa,MAAA,YAAG;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAChDd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QACvBd,EAAA,CAAAC,cAAA,eAAwC;QAAAD,EAAA,CAAAa,MAAA,KACtB;;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAgB7Bd,EAAA,CAAAkC,SAAA,WAAI;QAGNlC,EAAA,CAAAc,YAAA,EAAU;QASpBd,EAAA,CAAAC,cAAA,gBAA0B;QACgDD,EAAA,CAAAa,MAAA,cAAK;QAAAb,EAAA,CAAAc,YAAA,EAAS;QAM9Fd,EAAA,CAAAC,cAAA,gBACwC;QAI6CD,EAAA,CAAAa,MAAA,yCAC7E;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAELd,EAAA,CAAAC,cAAA,mBAA+E;QACpDD,EAAA,CAAAa,MAAA,eAAO;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAG3Cd,EAAA,CAAAC,cAAA,gBAAwB;QAG6BD,EAAA,CAAAE,UAAA,2BAAA0e,2EAAArc,MAAA;UAAA,OAAA4a,GAAA,CAAAvO,cAAA,GAAArM,MAAA;QAAA,EAA4B,oBAAAsc,oEAAA;UAAA,OAAW1B,GAAA,CAAAnC,iBAAA,EAAmB;QAAA,EAA9B;QACzEhb,EAAA,CAAAC,cAAA,6BAA0C;QAAqCD,EAAA,CAAAa,MAAA,kCACjE;QAAAb,EAAA,CAAAc,YAAA,EAAO;QACrBd,EAAA,CAAAC,cAAA,6BAA0C;QAAqCD,EAAA,CAAAa,MAAA,0CACtE;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAGpBd,EAAA,CAAAC,cAAA,gBAAsB;QAKiCD,EAAA,CAAAE,UAAA,mBAAA4e,yDAAA;UAAA,OAAS3B,GAAA,CAAAlC,YAAA,EAAc;QAAA,EAAC;QAAvEjb,EAAA,CAAAc,YAAA,EAAyE;QAE3Ed,EAAA,CAAA6C,UAAA,MAAAkc,wCAAA,mBAEO;QACP/e,EAAA,CAAA6C,UAAA,MAAAmc,wCAAA,mBAEO;QACThf,EAAA,CAAAc,YAAA,EAAM;QAQZd,EAAA,CAAAC,cAAA,gBAA6D;QAC3DD,EAAA,CAAAa,MAAA,sCAA4B;QAAAb,EAAA,CAAAC,cAAA,iBACT;QAAMD,EAAA,CAAAa,MAAA,eAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAAAd,EAAA,CAAAa,MAAA,KAAmB;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAE7Dd,EAAA,CAAAC,cAAA,gBAAiE;QAC/DD,EAAA,CAAAa,MAAA,qCAA4B;QAAAb,EAAA,CAAAC,cAAA,iBACT;QAAMD,EAAA,CAAAa,MAAA,eAAC;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAAAd,EAAA,CAAAa,MAAA,KAAqB;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAE/Dd,EAAA,CAAAkC,SAAA,WAAI;QA4CJlC,EAAA,CAAAC,cAAA,gBAAiB;QACfD,EAAA,CAAAkC,SAAA,gBAA4B;QAC5BlC,EAAA,CAAAC,cAAA,gBAAsB;QACwBD,EAAA,CAAAE,UAAA,mBAAA+e,0DAAA;UAAA,OAAS9B,GAAA,CAAA1B,aAAA,EAAe;QAAA,EAAC;QAAEzb,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAS;QAExFd,EAAA,CAAAC,cAAA,gBAAsB;QAC6CD,EAAA,CAAAa,MAAA,eAAM;QAAAb,EAAA,CAAAc,YAAA,EAAS;;;;QAt8B/Dd,EAAA,CAAAiB,SAAA,GAA4B;QAA5BjB,EAAA,CAAA8F,iBAAA,CAAAqX,GAAA,CAAA9R,aAAA,kBAAA8R,GAAA,CAAA9R,aAAA,CAAA6T,SAAA,CAA4B;QAMZlf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAnR,GAAA,CAAiB;QAQjBhM,EAAA,CAAAiB,SAAA,GAAoB;QAApBjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAApR,MAAA,CAAoB;QASpB/L,EAAA,CAAAiB,SAAA,GAAoB;QAApBjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAArR,MAAA,CAAoB;QAgDM9L,EAAA,CAAAiB,SAAA,GAAyB;QAAzBjB,EAAA,CAAAe,UAAA,gBAAAoc,GAAA,CAAAzS,SAAA,CAAyB,oBAAAyU,GAAA;QAGvDnf,EAAA,CAAAiB,SAAA,GAAY;QAAZjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAA7R,SAAA,CAAY;QAmBZtL,EAAA,CAAAiB,SAAA,GAAe;QAAfjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAA7O,YAAA,CAAe;QAY3BtO,EAAA,CAAAiB,SAAA,GAAyB;QAAzBjB,EAAA,CAAAe,UAAA,aAAAoc,GAAA,CAAAtO,YAAA,CAAyB;QAS1C7O,EAAA,CAAAiB,SAAA,GAA4B;QAA5BjB,EAAA,CAAAe,UAAA,cAAAoc,GAAA,CAAAtb,cAAA,CAA4B;QA4B0D7B,EAAA,CAAAiB,SAAA,IAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAKhCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAkBwBf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAOxCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAKhCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAgBpCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAQSf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAKhCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAiCIf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAUjBf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAKhCf,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,kBAAiB;QAMrEf,EAAA,CAAAiB,SAAA,GAAmD;QAAnDjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,6BAAmD;QAsL5D1E,EAAA,CAAAiB,SAAA,GAAoB;QAApBjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAxP,cAAA,CAAoB;QAyE7B3N,EAAA,CAAAiB,SAAA,GAAgB;QAAhBjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAnS,UAAA,CAAgB;QAqDhBhL,EAAA,CAAAiB,SAAA,GAAW;QAAXjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAzR,KAAA,CAAW;QA0CX1L,EAAA,CAAAiB,SAAA,GAAoB;QAApBjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAhO,cAAA,CAAoB;QAsDtBnP,EAAA,CAAAiB,SAAA,GAAmD;QAAnDjB,EAAA,CAAAe,UAAA,cAAAoc,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,cAAA0a,KAAA,CAAmD;QA0DCpf,EAAA,CAAAiB,SAAA,IACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,sBAAA5C,KAAA,SACtB;QACsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,qBAAA5C,KAAA,SACtB;QA4BW9B,EAAA,CAAAiB,SAAA,GAAmD;QAAnDjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,6BAAmD;QAyBhE1E,EAAA,CAAAiB,SAAA,GAA0D;QAA1DjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,oCAA0D;QAO7D1E,EAAA,CAAAiB,SAAA,GAAiC;QAAjCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAA9U,YAAA,SAAiC;QACjCrI,EAAA,CAAAiB,SAAA,GAAuC;QAAvCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAA7U,kBAAA,SAAuC;QAWpCtI,EAAA,CAAAiB,SAAA,GAA4D;QAA5DjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,qCAA4D;QAO/D1E,EAAA,CAAAiB,SAAA,GAAkC;QAAlCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAxU,aAAA,SAAkC;QAClC3I,EAAA,CAAAiB,SAAA,GAAwC;QAAxCjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAvU,mBAAA,SAAwC;QAMb5I,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,qBAAA5C,KAAA,SACtB;QACsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,oBAAA5C,KAAA,SACtB;QAKsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,wBAAA5C,KAAA,SACtB;QACsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,uBAAA5C,KAAA,SACtB;QAKsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,gBAAA5C,KAAA,SACtB;QACsB9B,EAAA,CAAAiB,SAAA,GACtB;QADsBjB,EAAA,CAAA8F,iBAAA,CAAA9F,EAAA,CAAA2J,WAAA,UAAAwT,GAAA,CAAAtb,cAAA,CAAA6C,GAAA,eAAA5C,KAAA,SACtB;QAkDiB9B,EAAA,CAAAiB,SAAA,IAA4B;QAA5BjB,EAAA,CAAAe,UAAA,YAAAoc,GAAA,CAAAvO,cAAA,CAA4B;QAQrE5O,EAAA,CAAAiB,SAAA,GAAuB;QAAvBjB,EAAA,CAAAe,UAAA,cAAAoc,GAAA,CAAA5T,SAAA,CAAuB;QAMlBvJ,EAAA,CAAAiB,SAAA,GAAiB;QAAjBjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAnO,WAAA,CAAiB;QAGjBhP,EAAA,CAAAiB,SAAA,GAAe;QAAfjB,EAAA,CAAAe,UAAA,SAAAoc,GAAA,CAAAlO,SAAA,CAAe;QAaKjP,EAAA,CAAAiB,SAAA,GAAmB;QAAnBjB,EAAA,CAAA8F,iBAAA,CAAAqX,GAAA,CAAApO,UAAA,CAAmB;QAInB/O,EAAA,CAAAiB,SAAA,GAAqB;QAArBjB,EAAA,CAAA8F,iBAAA,CAAAqX,GAAA,CAAAjO,YAAA,CAAqB;;;;;;;ADi0B9D,OAAO,MAAMmQ,aAAa,GAAG;EAC3BC,KAAK,EAAE;IACLC,SAAS,EAAE;GACZ;EACDC,OAAO,EAAE;IACPD,SAAS,EAAE,UAAU;IACrBE,cAAc,EAAE,UAAU;IAC1BC,aAAa,EAAE,IAAI;IACnBC,kBAAkB,EAAE;;CAEvB;AAeD,OAAM,MAAOC,qBAAqB;;qBAArBA,qBAAqB;EAAA;;UAArBA,qBAAqB;IAAAlD,SAAA;IAAAC,QAAA,GAAA3c,EAAA,CAAA6f,kBAAA,CATrB,CACT;MACEC,OAAO,EAAEpgB,WAAW;MACpBqgB,QAAQ,EAAEjgB,iBAAiB;MAC3BkgB,IAAI,EAAE,CAACpgB,eAAe,EAAEC,+BAA+B;KACxD,EACD;MAAEigB,OAAO,EAAEngB,gBAAgB;MAAEsgB,QAAQ,EAAEZ;IAAa,CAAE,CACvD;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}